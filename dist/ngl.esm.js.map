{"version":3,"file":"ngl.esm.js","sources":["../src/polyfills.js","../src/utils.ts","../src/utils/registry.ts","../src/math/math-utils.ts","../src/color/colormaker.ts","../src/selection/selection-constants.ts","../src/selection/selection-test.ts","../src/selection/selection.ts","../src/selection/selection-parser.ts","../src/color/selection-colormaker.ts","../src/color/colormaker-registry.ts","../src/parser/parser-registry.ts","../src/worker/worker-utils.ts","../src/worker/worker-registry.ts","../src/globals.ts","../src/streamer/streamer.ts","../src/streamer/file-streamer.ts","../src/streamer/network-streamer.ts","../src/loader/loader.ts","../src/loader/parser-loader.ts","../src/script.ts","../src/loader/script-loader.ts","../src/loader/loader-utils.ts","../src/writer/writer.ts","../src/writer/pdb-writer.ts","../src/writer/sdf-writer.ts","../src/utils/io-buffer.ts","../src/writer/stl-writer.ts","../src/utils/counter.ts","../src/viewer/stats.ts","../src/shader/shader-utils.ts","../src/viewer/viewer-constants.ts","../src/viewer/tiled-renderer.ts","../src/math/math-constants.ts","../src/math/array-utils.ts","../src/viewer/viewer-utils.ts","../src/viewer/gl-utils.ts","../src/viewer/viewer.ts","../src/constants.ts","../src/stage/mouse-observer.ts","../src/controls/trackball-controls.ts","../src/controls/picking-proxy.ts","../src/controls/picking-controls.ts","../src/controls/viewer-controls.ts","../src/animation/animation.ts","../src/controls/animation-controls.ts","../src/utils/queue.ts","../src/representation/representation.ts","../src/worker/worker.ts","../src/worker/worker-pool.ts","../src/math/vector-utils.ts","../src/geometry/dash.ts","../src/geometry/primitive.ts","../src/geometry/spatial-hash.ts","../src/store/store.ts","../src/store/contact-store.ts","../src/utils/bitarray.ts","../src/utils/adjacency-list.ts","../src/chemistry/interactions/features.ts","../src/structure/structure-constants.ts","../src/chemistry/geometry.ts","../src/chemistry/valence-model.ts","../src/structure/data.ts","../src/chemistry/functional-groups.ts","../src/chemistry/interactions/charged.ts","../src/chemistry/interactions/hydrogen-bonds.ts","../src/chemistry/interactions/metal-binding.ts","../src/chemistry/interactions/halogen-bonds.ts","../src/chemistry/interactions/refine-contacts.ts","../src/chemistry/interactions/contact.ts","../src/chemistry/interactions/hydrophobic.ts","../src/utils/picker.ts","../src/surface/marching-cubes.ts","../src/math/matrix-utils.ts","../src/surface/surface-utils.ts","../src/surface/surface.ts","../src/surface/volume.ts","../src/buffer/buffer.ts","../src/buffer/mesh-buffer.ts","../src/buffer/surface-buffer.ts","../src/buffer/doublesided-buffer.ts","../src/buffer/contour-buffer.ts","../src/representation/surface-representation.ts","../src/controls/mouse-actions.ts","../src/controls/mouse-controls.ts","../src/controls/key-actions.ts","../src/controls/key-controls.ts","../src/stage/picking-behavior.ts","../src/stage/mouse-behavior.ts","../src/stage/animation-behavior.ts","../src/stage/key-behavior.ts","../src/component/annotation.ts","../src/controls/component-controls.ts","../src/utils/radius-factory.ts","../src/math/principal-axes.ts","../src/surface/filtered-volume.ts","../src/store/bond-hash.ts","../src/store/bond-store.ts","../src/store/atom-store.ts","../src/store/residue-store.ts","../src/store/chain-store.ts","../src/store/model-store.ts","../src/geometry/helixorient.ts","../src/geometry/helixbundle.ts","../src/utils/binary-heap.ts","../src/utils/kdtree.ts","../src/proxy/atom-proxy.ts","../src/geometry/kdtree.ts","../src/symmetry/symmetry-constants.ts","../src/symmetry/symmetry-utils.ts","../src/symmetry/assembly.ts","../src/structure/structure-builder.ts","../src/structure/structure-utils.ts","../src/store/atom-type.ts","../src/store/atom-map.ts","../src/store/residue-type.ts","../src/store/residue-map.ts","../src/proxy/bond-proxy.ts","../src/proxy/residue-proxy.ts","../src/proxy/polymer.ts","../src/proxy/chain-proxy.ts","../src/proxy/model-proxy.ts","../src/structure/structure.ts","../src/geometry/shape.ts","../src/representation/buffer-representation.ts","../src/buffer/geometry-buffer.ts","../src/buffer/spheregeometry-buffer.ts","../src/buffer/mapped-buffer.ts","../src/buffer/mappedquad-buffer.ts","../src/buffer/sphereimpostor-buffer.ts","../src/buffer/sphere-buffer.ts","../src/buffer/point-buffer.ts","../src/representation/dot-representation.ts","../src/buffer/image-buffer.ts","../src/surface/volume-slice.ts","../src/representation/slice-representation.ts","../src/representation/representation-utils.ts","../src/component/element.ts","../src/component/representation-element.ts","../src/component/component.ts","../src/component/collection.ts","../src/component/representation-collection.ts","../src/component/trajectory-element.ts","../src/trajectory/frames.ts","../src/align/superposition.ts","../src/trajectory/trajectory-player.ts","../src/trajectory/trajectory.ts","../src/trajectory/frames-trajectory.ts","../src/trajectory/structure-trajectory.ts","../src/trajectory/remote-trajectory.ts","../src/trajectory/callback-trajectory.ts","../src/structure/structure-view.ts","../src/align/alignment.ts","../src/align/align-utils.ts","../src/component/structure-component.ts","../src/trajectory/trajectory-utils.ts","../src/component/surface-component.ts","../src/component/volume-component.ts","../src/component/component-collection.ts","../src/stage/stage.ts","../src/component/shape-component.ts","../node_modules/tslib/tslib.es6.js","../src/color/atomindex-colormaker.ts","../src/color/bfactor-colormaker.ts","../src/color/chainid-colormaker.ts","../src/color/chainindex-colormaker.ts","../src/color/chainname-colormaker.ts","../src/color/densityfit-colormaker.ts","../src/color/electrostatic-colormaker.ts","../src/color/element-colormaker.ts","../src/color/entityindex-colormaker.ts","../src/color/entitytype-colormaker.ts","../src/color/geoquality-colormaker.ts","../src/color/hydrophobicity-colormaker.ts","../src/color/modelindex-colormaker.ts","../src/color/moleculetype-colormaker.ts","../src/color/occupancy-colormaker.ts","../src/color/partialcharge-colormaker.ts","../src/color/random-colormaker.ts","../src/color/randomcoilindex-colormaker.ts","../src/color/residueindex-colormaker.ts","../src/color/resname-colormaker.ts","../src/color/sstruc-colormaker.ts","../src/color/structuredata-colormaker.ts","../src/color/uniform-colormaker.ts","../src/color/value-colormaker.ts","../src/color/volume-colormaker.ts","../src/representation/structure-representation.ts","../src/representation/measurement-representation.ts","../src/utils/edt.ts","../src/buffer/text-buffer.ts","../src/buffer/wideline-buffer.ts","../src/representation/angle-representation.ts","../src/buffer/cylindergeometry-buffer.ts","../src/buffer/mappedalignedbox-buffer.ts","../src/buffer/cylinderimpostor-buffer.ts","../src/buffer/cylinder-buffer.ts","../src/representation/axes-representation.ts","../src/representation/ballandstick-representation.ts","../src/representation/backbone-representation.ts","../src/representation/base-representation.ts","../src/geometry/spline.ts","../src/buffer/tubemesh-buffer.ts","../src/representation/cartoon-representation.ts","../src/representation/contact-representation.ts","../src/representation/dihedral-representation.ts","../src/representation/dihedral-histogram-representation.ts","../src/representation/distance-representation.ts","../src/buffer/vector-buffer.ts","../src/representation/helixorient-representation.ts","../src/representation/licorice-representation.ts","../src/buffer/mappedbox-buffer.ts","../src/buffer/hyperballstickimpostor-buffer.ts","../src/buffer/hyperballstick-buffer.ts","../src/representation/hyperball-representation.ts","../src/utils/label-factory.ts","../src/representation/label-representation.ts","../src/representation/line-representation.ts","../src/geometry/grid.ts","../src/surface/edt-surface.ts","../src/surface/av-surface.ts","../src/surface/molecular-surface.ts","../src/representation/molecularsurface-representation.ts","../src/representation/point-representation.ts","../src/buffer/ribbon-buffer.ts","../src/representation/ribbon-representation.ts","../src/representation/rocket-representation.ts","../src/representation/rope-representation.ts","../src/representation/spacefill-representation.ts","../src/buffer/trace-buffer.ts","../src/representation/trace-representation.ts","../src/representation/tube-representation.ts","../src/representation/unitcell-representation.ts","../src/representation/validation-representation.ts","../src/buffer/cone-buffer.ts","../src/viewer/geometry-group.ts","../src/buffer/arrow-buffer.ts","../src/buffer/box-buffer.ts","../src/buffer/ellipsoid-buffer.ts","../src/buffer/octahedron-buffer.ts","../src/buffer/tetrahedron-buffer.ts","../src/buffer/torus-buffer.ts","../src/parser/parser.ts","../src/parser/structure-parser.ts","../src/structure/entity.ts","../src/symmetry/unitcell.ts","../src/parser/pdb-parser.ts","../src/parser/cif-parser.ts","../src/parser/gro-parser.ts","../lib/mmtf.es6.js","../src/parser/mmtf-parser.ts","../src/parser/mol2-parser.ts","../src/parser/pdbqt-parser.ts","../src/parser/pqr-parser.ts","../src/parser/sdf-parser.ts","../src/parser/prmtop-parser.ts","../src/parser/psf-parser.ts","../src/parser/top-parser.ts","../src/parser/trajectory-parser.ts","../src/parser/dcd-parser.ts","../src/utils/netcdf-reader.ts","../src/parser/nctraj-parser.ts","../src/parser/trr-parser.ts","../src/parser/xtc-parser.ts","../src/parser/volume-parser.ts","../src/parser/cube-parser.ts","../src/parser/dsn6-parser.ts","../src/parser/dx-parser.ts","../src/parser/dxbin-parser.ts","../src/parser/mrc-parser.ts","../src/parser/xplor-parser.ts","../src/parser/kin-parser.ts","../src/parser/surface-parser.ts","../src/parser/obj-parser.ts","../src/parser/ply-parser.ts","../src/parser/csv-parser.ts","../src/parser/json-parser.ts","../src/parser/msgpack-parser.ts","../src/parser/netcdf-parser.ts","../src/parser/text-parser.ts","../src/utils/parse-xml.ts","../src/parser/xml-parser.ts","../src/structure/validation.ts","../src/parser/validation-parser.ts","../lib/pako_inflate.es6.js","../src/utils/gzip-decompressor.ts","../src/datasource/datasource.ts","../src/datasource/rcsb-datasource.ts","../src/datasource/pubchem-datasource.ts","../src/datasource/passthrough-datasource.ts","../src/datasource/static-datasource.ts","../src/datasource/mdsrv-datasource.ts","../src/ui/parameters.ts","../src/version.ts","../src/ngl.ts"],"sourcesContent":["/**\n * @file shims\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n/// ///////////\n// Polyfills\n\nif (typeof window !== 'undefined') {\n  (function () {\n    'use strict'\n    // Console-polyfill. MIT license.\n    // https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n\n    window.console = window.console || {}\n    var con = window.console\n    var prop, method\n    var empty = {}\n    var dummy = function () {}\n    var properties = 'memory'.split(',')\n    var methods = (\n      'assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n      'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n      'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn'\n    ).split(',')\n\n    while ((prop = properties.pop())) if (!con[prop]) con[prop] = empty\n    while ((method = methods.pop())) if (!con[method]) con[method] = dummy\n  })()\n}\n\nif (typeof window !== 'undefined' && typeof window.HTMLCanvasElement !== 'undefined' && !window.HTMLCanvasElement.prototype.toBlob) {\n  // http://code.google.com/p/chromium/issues/detail?id=67587#57\n  Object.defineProperty(window.HTMLCanvasElement.prototype, 'toBlob', {\n\n    value: function (callback, type, quality) {\n      var bin = window.atob(this.toDataURL(type, quality).split(',')[ 1 ])\n      var len = bin.length\n      var len32 = len >> 2\n      var a8 = new Uint8Array(len)\n      var a32 = new Uint32Array(a8.buffer, 0, len32)\n\n      for (var i = 0, j = 0; i < len32; i++) {\n        a32[i] = (\n          bin.charCodeAt(j++) |\n          bin.charCodeAt(j++) << 8 |\n          bin.charCodeAt(j++) << 16 |\n          bin.charCodeAt(j++) << 24\n        )\n      }\n\n      var tailLength = len & 3\n\n      while (tailLength--) {\n        a8[ j ] = bin.charCodeAt(j++)\n      }\n\n      callback(new window.Blob([ a8 ], { 'type': type || 'image/png' }))\n    }\n\n  })\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\nMath.cbrt = Math.cbrt || function (x) {\n  var y = Math.pow(Math.abs(x), 1 / 3)\n  return x < 0 ? -y : y\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\nif (!Math.sign) {\n  Math.sign = function (x) {\n    // If x is NaN, the result is NaN.\n    // If x is -0, the result is -0.\n    // If x is +0, the result is +0.\n    // If x is negative and not -0, the result is -1.\n    // If x is positive and not +0, the result is +1.\n    x = +x // convert to a number\n    if (x === 0 || isNaN(x)) {\n      return Number(x)\n    }\n    return x > 0 ? 1 : -1\n  }\n}\n\nif (!Number.isInteger) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n  Number.isInteger = function isInteger (nVal) {\n    return typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal\n  }\n}\n\nif (!Number.isNaN) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n  Number.isNaN = function isNaN (value) {\n    return value !== value // eslint-disable-line no-self-compare\n  }\n}\n\nif (!Object.assign) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  Object.defineProperty(Object, 'assign', {\n\n    enumerable: false,\n    configurable: true,\n    writable: true,\n\n    value: function (target/*, firstSource */) {\n      'use strict'\n      if (target === undefined || target === null) { throw new TypeError('Cannot convert first argument to object') }\n\n      var to = Object(target)\n\n      var hasPendingException = false\n      var pendingException\n\n      for (var i = 1; i < arguments.length; i++) {\n        var nextSource = arguments[i]\n        if (nextSource === undefined || nextSource === null) { continue }\n\n        var keysArray = Object.keys(Object(nextSource))\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n          var nextKey = keysArray[nextIndex]\n          try {\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey)\n            if (desc !== undefined && desc.enumerable) { to[nextKey] = nextSource[nextKey] }\n          } catch (e) {\n            if (!hasPendingException) {\n              hasPendingException = true\n              pendingException = e\n            }\n          }\n        }\n\n        if (hasPendingException) { throw pendingException }\n      }\n\n      return to\n    }\n\n  })\n}\n\nif (!String.prototype.startsWith) {\n  /*! https://mths.be/startswith v0.2.0 by @mathias */\n\n  (function () {\n    'use strict' // needed to support `apply`/`call` with `undefined`/`null`\n    var defineProperty = (function () {\n      // IE 8 only supports `Object.defineProperty` on DOM elements\n      var result\n      try {\n        var object = {}\n        var $defineProperty = Object.defineProperty\n        result = $defineProperty(object, object, object) && $defineProperty\n      } catch (error) {} // eslint-disable-line no-empty\n      return result\n    }())\n    var toString = {}.toString\n    var startsWith = function (search) {\n      if (this === null) {\n        throw TypeError()\n      }\n      var string = String(this)\n      if (search && toString.call(search) === '[object RegExp]') {\n        throw TypeError()\n      }\n      var stringLength = string.length\n      var searchString = String(search)\n      var searchLength = searchString.length\n      var position = arguments.length > 1 ? arguments[1] : undefined\n      // `ToInteger`\n      var pos = position ? Number(position) : 0\n      if (Number.isNaN(pos)) {\n        pos = 0\n      }\n      var start = Math.min(Math.max(pos, 0), stringLength)\n      // Avoid the `indexOf` call if no match is possible\n      if (searchLength + start > stringLength) {\n        return false\n      }\n      var index = -1\n      while (++index < searchLength) {\n        if (string.charCodeAt(start + index) !== searchString.charCodeAt(index)) {\n          return false\n        }\n      }\n      return true\n    }\n    if (defineProperty) {\n      defineProperty(String.prototype, 'startsWith', {\n        'value': startsWith,\n        'configurable': true,\n        'writable': true\n      })\n    } else {\n      // eslint-disable-next-line no-extend-native\n      String.prototype.startsWith = startsWith\n    }\n  }())\n}\n\nif (!String.prototype.endsWith) {\n  // eslint-disable-next-line no-extend-native\n  String.prototype.endsWith = function (searchString, position) {\n    var subjectString = this.toString()\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n      position = subjectString.length\n    }\n    position -= searchString.length\n    var lastIndex = subjectString.indexOf(searchString, position)\n    return lastIndex !== -1 && lastIndex === position\n  }\n}\n\nif (!String.prototype.repeat) {\n  // eslint-disable-next-line no-extend-native\n  String.prototype.repeat = function (count) {\n    'use strict'\n    if (this === null) {\n      throw new TypeError('can\\'t convert ' + this + ' to object')\n    }\n    var str = '' + this\n    count = +count\n    if (Number.isNaN(count)) {\n      count = 0\n    }\n    if (count < 0) {\n      throw new RangeError('repeat count must be non-negative')\n    }\n    if (count === Infinity) {\n      throw new RangeError('repeat count must be less than infinity')\n    }\n    count = Math.floor(count)\n    if (str.length === 0 || count === 0) {\n      return ''\n    }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (str.length * count >= 1 << 28) {\n      throw new RangeError('repeat count must not overflow maximum string size')\n    }\n    var rpt = ''\n    for (;;) {\n      if ((count & 1) === 1) {\n        rpt += str\n      }\n      count >>>= 1\n      if (count === 0) {\n        break\n      }\n      str += str\n    }\n    // Could we try:\n    // return Array(count + 1).join(this);\n    return rpt\n  }\n}\n\nif (!String.prototype.includes) {\n  // eslint-disable-next-line no-extend-native\n  String.prototype.includes = function (search, start) {\n    'use strict'\n    if (typeof start !== 'number') {\n      start = 0\n    }\n\n    if (start + search.length > this.length) {\n      return false\n    } else {\n      return this.indexOf(search, start) !== -1\n    }\n  }\n}\n\nif (!Array.prototype.includes) {\n  // eslint-disable-next-line no-extend-native\n  Array.prototype.includes = function (searchElement /*, fromIndex */) {\n    'use strict'\n    if (this == null) {\n      throw new TypeError('Array.prototype.includes called on null or undefined')\n    }\n\n    var O = Object(this)\n    var len = parseInt(O.length, 10) || 0\n    if (len === 0) {\n      return false\n    }\n    var n = parseInt(arguments[1], 10) || 0\n    var k\n    if (n >= 0) {\n      k = n\n    } else {\n      k = len + n\n      if (k < 0) { k = 0 }\n    }\n    var currentElement\n    while (k < len) {\n      currentElement = O[k]\n      if (searchElement === currentElement ||\n          (Number.isNaN(searchElement) && Number.isNaN(currentElement))\n      ) {\n        return true\n      }\n      k++\n    }\n    return false\n  }\n}\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// Reference: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from\nif (!Array.from) {\n  Array.from = (function () {\n    var toStr = Object.prototype.toString\n    var isCallable = function (fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]'\n    }\n    var toInteger = function (value) {\n      var number = Number(value)\n      if (isNaN(number)) { return 0 }\n      if (number === 0 || !isFinite(number)) { return number }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n    }\n    var maxSafeInteger = Math.pow(2, 53) - 1\n    var toLength = function (value) {\n      var len = toInteger(value)\n      return Math.min(Math.max(len, 0), maxSafeInteger)\n    }\n\n    // The length property of the from method is 1.\n    return function from (arrayLike/*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike)\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined')\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined\n      var T\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function')\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2]\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length)\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len)\n\n      // 16. Let k be 0.\n      var k = 0\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue\n      while (k < len) {\n        kValue = items[k]\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\n        } else {\n          A[k] = kValue\n        }\n        k += 1\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len\n      // 20. Return A.\n      return A\n    }\n  }())\n}\n\nif (typeof window !== 'undefined') {\n  (function () {\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n    // MIT license\n\n    var lastTime = 0\n    var vendors = [ 'ms', 'moz', 'webkit', 'o' ]\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = (\n        window[ vendors[ x ] + 'RequestAnimationFrame' ]\n      )\n\n      window.cancelAnimationFrame = (\n        window[ vendors[ x ] + 'CancelAnimationFrame' ] ||\n        window[ vendors[ x ] + 'CancelRequestAnimationFrame' ]\n      )\n    }\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback/*, element */) {\n        var currTime = new Date().getTime()\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime))\n\n        var id = window.setTimeout(function () {\n          var time = currTime + timeToCall\n          callback(time)\n        }, timeToCall)\n\n        lastTime = currTime + timeToCall\n\n        return id\n      }\n    }\n\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id)\n      }\n    }\n  }())\n}\n\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n  // eslint-disable-next-line no-extend-native\n  Object.defineProperty(Function.prototype, 'name', {\n\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[ 1 ]\n    }\n\n  })\n}\n\nif (typeof window !== 'undefined') {\n  if (window.performance === undefined) {\n    /* global self */\n    self.performance = {}\n  }\n\n  if (window.performance.now === undefined) {\n    (function () {\n      var start = Date.now()\n\n      window.performance.now = function () {\n        return Date.now() - start\n      }\n    })()\n  }\n}\n\nif (Object.defineProperty !== undefined) {\n  // Missing in IE < 13\n  // MIT license\n  // Copyright (c) 2016 Financial Times\n  // https://github.com/Financial-Times/polyfill-service\n  if (Number.MAX_SAFE_INTEGER === undefined) {\n    Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: Math.pow(2, 53) - 1\n    })\n  }\n  if (Number.MIN_SAFE_INTEGER === undefined) {\n    Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: -(Math.pow(2, 53) - 1)\n    })\n  }\n}\n","/**\n * @file Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector2, Vector3, Matrix4, Quaternion } from 'three'\n\nexport function getQuery (id: string) {\n  if (typeof window === 'undefined') return undefined\n\n  const a = new RegExp(`${id}=([^&#=]*)`)\n  const m = a.exec(window.location.search)\n\n  if (m) {\n    return decodeURIComponent(m[1])\n  } else {\n    return undefined\n  }\n}\n\nexport function boolean (value: any) {\n  if (!value) {\n    return false\n  }\n\n  if (typeof value === 'string') {\n    return /^1|true|t|yes|y$/i.test(value)\n  }\n\n  return true\n}\n\nexport function defaults (value: any, defaultValue: any) {\n  return value !== undefined ? value : defaultValue\n}\n\nexport function createParams<T> (params: {[k in keyof T]?: any}, defaultParams: T) {\n  const o: any = Object.assign({}, params)\n  for (const k in defaultParams) {\n    const value = params[k]\n    if (value === undefined) o[k] = defaultParams[k]\n  }\n  return o as T\n}\n\nexport function updateParams<T> (params: T, newParams: {[k in keyof T]?: any}) {\n  for (const k in newParams) {\n    const value = newParams[k]\n    if (value !== undefined) params[k] = value\n  }\n  return params as T\n}\n\nexport function pick (object: { [index: string]: any }) {\n  const properties = [].slice.call(arguments, 1)\n  return properties.reduce((a: { [index: string]: any }, e: any) => {\n    a[ e ] = object[ e ]\n    return a\n  }, {})\n}\n\nexport function flatten (array: any[], ret: any[]) {\n  ret = defaults(ret, [])\n  for (let i = 0; i < array.length; i++) {\n    if (Array.isArray(array[i])) {\n      flatten(array[i], ret)\n    } else {\n      ret.push(array[i])\n    }\n  }\n  return ret\n}\n\nexport function getProtocol () {\n  const protocol = window.location.protocol\n  return protocol.match(/http(s)?:/gi) === null ? 'http:' : protocol\n}\n\nexport function getBrowser () {\n  if (typeof window === 'undefined') return false\n\n  const ua = window.navigator.userAgent\n\n  if (/Opera|OPR/.test(ua)) {\n    return 'Opera'\n  } else if (/Chrome/i.test(ua)) {\n    return 'Chrome'\n  } else if (/Firefox/i.test(ua)) {\n    return 'Firefox'\n  } else if (/Mobile(\\/.*)? Safari/i.test(ua)) {\n    return 'Mobile Safari'\n  } else if (/MSIE/i.test(ua)) {\n    return 'Internet Explorer'\n  } else if (/Safari/i.test(ua)) {\n    return 'Safari'\n  }\n\n  return false\n}\n\nexport function getAbsolutePath (relativePath: string) {\n  const loc = window.location\n  const pn = loc.pathname\n  const basePath = pn.substring(0, pn.lastIndexOf('/') + 1)\n\n  return loc.origin + basePath + relativePath\n}\n\nexport function deepCopy (src: any) {\n  if (typeof src !== 'object') {\n    return src\n  }\n\n  const dst: { [index: string]: any } = Array.isArray(src) ? [] : {}\n\n  for (let key in src) {\n    dst[ key ] = deepCopy(src[ key ])\n  }\n\n  return dst\n}\n\nexport function deepEqual(a: any, b: any) {\n  // from https://github.com/epoberezkin/fast-deep-equal MIT\n  if (a === b) return true;\n\n  const arrA = Array.isArray(a)\n  const arrB = Array.isArray(b)\n\n  if (arrA && arrB) {\n    if (a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) return false\n    }\n    return true\n  }\n\n  if (arrA !== arrB) return false\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const keys = Object.keys(a)\n    if (keys.length !== Object.keys(b).length) return false;\n\n    const dateA = a instanceof Date\n    const dateB = b instanceof Date\n    if (dateA && dateB) return a.getTime() === b.getTime()\n    if (dateA !== dateB) return false\n\n    const regexpA = a instanceof RegExp\n    const regexpB = b instanceof RegExp\n    if (regexpA && regexpB) return a.toString() === b.toString()\n    if (regexpA !== regexpB) return false\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n    }\n\n    for (let i = 0; i < keys.length; i++) {\n      if(!deepEqual(a[keys[i]], b[keys[i]])) return false\n    }\n\n    return true\n  }\n\n  return false\n}\n\nfunction openUrl (url: string) {\n  const opened = window.open(url, '_blank')\n  if (!opened) {\n    window.location.href = url\n  }\n}\n\nexport function download (data: Blob|string, downloadName = 'download') {\n  // using ideas from https://github.com/eligrey/FileSaver.js/blob/master/FileSaver.js\n\n  if (!data) return\n\n  const isSafari = getBrowser() === 'Safari'\n  const isChromeIos = /CriOS\\/[\\d]+/.test(window.navigator.userAgent)\n\n  const a = document.createElement('a')\n\n  function open (str: string) {\n    openUrl(isChromeIos ? str : str.replace(/^data:[^;]*;/, 'data:attachment/file;'))\n  }\n\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\n    // native saveAs in IE 10+\n    navigator.msSaveOrOpenBlob(data, downloadName)\n  } else if ((isSafari || isChromeIos) && FileReader) {\n    if (data instanceof Blob) {\n      // no downloading of blob urls in Safari\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        open(reader.result as string)\n      }\n      reader.readAsDataURL(data)\n    } else {\n      open(data)\n    }\n  } else {\n    let objectUrlCreated = false\n    if (data instanceof Blob) {\n      data = URL.createObjectURL(data)\n      objectUrlCreated = true\n    }\n\n    if ('download' in a) {\n      // download link available\n      a.style.display = 'hidden'\n      document.body.appendChild(a)\n      a.href = data\n      a.download = downloadName\n      a.target = '_blank'\n      a.click()\n      document.body.removeChild(a)\n    } else {\n      openUrl(data)\n    }\n\n    if (objectUrlCreated) {\n      window.URL.revokeObjectURL(data)\n    }\n  }\n}\n\nexport function submit (url: string, data: FormData, callback: Function, onerror: Function) {\n  const xhr = new XMLHttpRequest()\n  xhr.open('POST', url)\n\n  xhr.addEventListener('load', function () {\n    if (xhr.status === 200 || xhr.status === 304) {\n      callback(xhr.response)\n    } else {\n      if (typeof onerror === 'function') {\n        onerror(xhr.status)\n      }\n    }\n  }, false)\n\n  xhr.send(data)\n}\n\ninterface HTMLInputEvent extends Event {\n  target: HTMLInputElement & EventTarget\n}\n\nexport function open (callback: Function, extensionList = ['*']) {\n  const fileInput = document.createElement('input')\n  fileInput.type = 'file'\n  fileInput.multiple = true\n  fileInput.style.display = 'hidden'\n  document.body.appendChild(fileInput)\n  fileInput.accept = '.' + extensionList.join(',.')\n  fileInput.addEventListener('change', function (e: HTMLInputEvent) {\n    callback(e.target.files)\n  }, false)\n\n  fileInput.click()\n}\n\nexport function throttle (func: Function, wait: number, options: { leading?: boolean, trailing?: boolean }) {\n  // from http://underscorejs.org/docs/underscore.html\n\n  let context: any\n  let args: any\n  let result: any\n  let timeout: any = null\n  let previous = 0\n\n  if (!options) options = {}\n\n  function later () {\n    previous = options.leading === false ? 0 : Date.now()\n    timeout = null\n    result = func.apply(context, args)\n    if (!timeout) context = args = null\n  }\n\n  return function throttle (this: any) {\n    var now = Date.now()\n    if (!previous && options.leading === false) previous = now\n    var remaining = wait - (now - previous)\n    context = this\n    args = arguments\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      previous = now\n      result = func.apply(context, args)\n      if (!timeout) context = args = null\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining)\n    }\n\n    return result\n  }\n}\n\nexport function lexicographicCompare<T> (elm1: T, elm2: T) {\n  if (elm1 < elm2) return -1\n  if (elm1 > elm2) return 1\n  return 0\n}\n\n/**\n * Does a binary search to get the index of an element in the input array\n * @function\n * @example\n * var array = [ 1, 2, 3, 4, 5, 6 ];\n * var element = 4;\n * binarySearchIndexOf( array, element );  // returns 3\n *\n * @param {Array} array - sorted array\n * @param {Anything} element - element to search for in the array\n * @param {Function} [compareFunction] - compare function\n * @return {Number} the index of the element or -1 if not in the array\n */\nexport function binarySearchIndexOf<T> (array: T[], element: T, compareFunction = lexicographicCompare) {\n  let low = 0\n  let high = array.length - 1\n  while (low <= high) {\n    const mid = (low + high) >> 1\n    const cmp = compareFunction(element, array[ mid ])\n    if (cmp > 0) {\n      low = mid + 1\n    } else if (cmp < 0) {\n      high = mid - 1\n    } else {\n      return mid\n    }\n  }\n  return -low - 1\n}\n\nexport function binarySearchForLeftRange (array: number[], leftRange: number) {\n  let high = array.length - 1\n  if (array[ high ] < leftRange) return -1\n  let low = 0\n  while (low <= high) {\n    const mid = (low + high) >> 1\n    if (array[ mid ] >= leftRange) {\n      high = mid - 1\n    } else {\n      low = mid + 1\n    }\n  }\n  return high + 1\n}\n\nexport function binarySearchForRightRange (array: number[], rightRange: number) {\n  if (array[ 0 ] > rightRange) return -1\n  let low = 0\n  let high = array.length - 1\n  while (low <= high) {\n    const mid = (low + high) >> 1\n    if (array[ mid ] > rightRange) {\n      high = mid - 1\n    } else {\n      low = mid + 1\n    }\n  }\n  return low - 1\n}\n\nexport function rangeInSortedArray (array: number[], min: number, max: number) {\n  const indexLeft = binarySearchForLeftRange(array, min)\n  const indexRight = binarySearchForRightRange(array, max)\n  if (indexLeft === -1 || indexRight === -1 || indexLeft > indexRight) {\n    return 0\n  } else {\n    return indexRight - indexLeft + 1\n  }\n}\n\nexport function dataURItoImage (dataURI: string) {\n  const img = document.createElement('img')\n  img.src = dataURI\n  return img\n}\n\nexport function uniqueArray (array: any[]) {\n  return array.sort().filter(function (value, index, sorted) {\n    return (index === 0) || (value !== sorted[ index - 1 ])\n  })\n}\n\n// String/arraybuffer conversion\n\nexport function uint8ToString (u8a: Uint8Array) {\n  const chunkSize = 0x7000\n\n  if (u8a.length > chunkSize) {\n    const c = []\n\n    for (let i = 0; i < u8a.length; i += chunkSize) {\n      c.push(String.fromCharCode.apply(\n        null, u8a.subarray(i, i + chunkSize)\n      ))\n    }\n\n    return c.join('')\n  } else {\n    return String.fromCharCode.apply(null, u8a)\n  }\n}\n\nexport function uint8ToLines (u8a: Uint8Array, chunkSize = 1024 * 1024 * 10, newline = '\\n') {\n  let partialLine = ''\n  let lines: string[] = []\n\n  for (let i = 0; i < u8a.length; i += chunkSize) {\n    const str = uint8ToString(u8a.subarray(i, i + chunkSize))\n    const idx = str.lastIndexOf(newline)\n\n    if (idx === -1) {\n      partialLine += str\n    } else {\n      const str2 = partialLine + str.substr(0, idx)\n      lines = lines.concat(str2.split(newline))\n\n      if (idx === str.length - newline.length) {\n        partialLine = ''\n      } else {\n        partialLine = str.substr(idx + newline.length)\n      }\n    }\n  }\n\n  if (partialLine !== '') {\n    lines.push(partialLine)\n  }\n\n  return lines\n}\n\nexport type TypedArrayString = 'int8'|'int16'|'int32'|'uint8'|'uint16'|'uint32'|'float32'\nexport function getTypedArray (arrayType: TypedArrayString, arraySize: number) {\n  switch (arrayType) {\n    case 'int8':\n      return new Int8Array(arraySize)\n    case 'int16':\n      return new Int16Array(arraySize)\n    case 'int32':\n      return new Int32Array(arraySize)\n    case 'uint8':\n      return new Uint8Array(arraySize)\n    case 'uint16':\n      return new Uint16Array(arraySize)\n    case 'uint32':\n      return new Uint32Array(arraySize)\n    case 'float32':\n      return new Float32Array(arraySize)\n    default:\n      throw new Error('arrayType unknown: ' + arrayType)\n  }\n}\n\nexport function getUintArray (sizeOrArray: any, maxUint: number) {  // TODO\n  const TypedArray = maxUint > 65535 ? Uint32Array : Uint16Array\n  return new TypedArray(sizeOrArray)\n}\n\nexport function ensureArray (value: any) {\n  return Array.isArray(value) ? value : [value]\n}\n\nexport function ensureBuffer (a: any) {  // TODO\n  return (a.buffer && a.buffer instanceof ArrayBuffer) ? a.buffer : a\n}\n\nfunction _ensureClassFromArg (arg: any, constructor: { new (arg: any): any }) {\n  return arg instanceof constructor ? arg : new constructor(arg)\n}\n\nfunction _ensureClassFromArray (array: any, constructor: { new (): any }) {\n  if (array === undefined) {\n    array = new constructor()\n  } else if (Array.isArray(array)) {\n    array = new constructor().fromArray(array)\n  }\n  return array\n}\n\nexport function ensureVector2 (v?: number[]|Vector2) {\n  return _ensureClassFromArray(v, Vector2)\n}\n\nexport function ensureVector3 (v?: number[]|Vector3) {\n  return _ensureClassFromArray(v, Vector3)\n}\n\nexport function ensureMatrix4 (m?: number[]|Matrix4) {\n  return _ensureClassFromArray(m, Matrix4)\n}\n\nexport function ensureQuaternion (q?: number[]|Quaternion) {\n  return _ensureClassFromArray(q, Quaternion)\n}\n\nexport function ensureFloat32Array (a?: number[]|Float32Array) {\n  return _ensureClassFromArg(a, Float32Array)\n}\n\nexport interface RingBuffer<T> {\n  has: (value: T) => boolean\n  get: (value: number) => T\n  push: (value: T) => void\n  count: number\n  data: T[]\n  clear: () => void\n}\n\nexport function createRingBuffer<T> (length: number): RingBuffer<T> {\n  let pointer = 0\n  let count = 0\n  const buffer: T[] = []\n\n  return {\n    has: function (value: any) { return buffer.indexOf(value) !== -1 },\n    get: function (idx: number) { return buffer[idx] },\n    push: function (item: any) {\n      buffer[pointer] = item\n      pointer = (length + pointer + 1) % length\n      ++count\n    },\n    get count () { return count },\n    get data () { return buffer.slice(0, Math.min(count, length)) },\n    clear: function () {\n      count = 0\n      pointer = 0\n      buffer.length = 0\n    }\n  }\n}\n\nexport interface SimpleDict<K, V> {\n  has: (k: K) => boolean\n  add: (k: K, v: V) => void\n  del: (k: K) => void\n  values: V[]\n}\n\nexport function createSimpleDict<K, V> (): SimpleDict<K, V> {\n  const set: { [k: string]: V } = {}\n\n  return {\n    has: function (k: K) { return set[JSON.stringify(k)] !== undefined },\n    add: function (k: K, v: V) { set[JSON.stringify(k)] = v },\n    del: function (k: K) { delete set[JSON.stringify(k)] },\n    get values () { return Object.keys(set).map(k => set[k]) }\n  }\n}\n\nexport interface SimpleSet<T> {\n  has: (value: T) => boolean\n  add: (value: T) => void\n  del: (value: T) => void\n  list: T[]\n}\n\nexport function createSimpleSet<T> (): SimpleSet<T> {\n  const set: { [k: string]: T } = {}\n\n  return {\n    has: function (v: T) { return set[JSON.stringify(v)] !== undefined },\n    add: function (v: T) { set[JSON.stringify(v)] = v },\n    del: function (v: T) { delete set[JSON.stringify(v)] },\n    get list () { return Object.keys(set).map(k => set[k]) },\n  }\n}\n","/**\n * @file Registry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\n\nfunction toLowerCaseString (value: string) {\n  return defaults(value, '').toString().toLowerCase()\n}\n\nexport default class Registry {\n  name: string\n  private _dict: {[k: string]: any}\n\n  constructor (name: string) {\n    this.name = name\n    this._dict = {}\n  }\n\n  add (key: string, value: any) {\n    this._dict[ toLowerCaseString(key) ] = value\n  }\n\n  get (key: string) {\n    return this._dict[ toLowerCaseString(key) ]\n  }\n\n  get names () {\n    return Object.keys(this._dict)\n  }\n}","/**\n * @file Math Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport function degToRad (deg: number) {\n  return deg * 0.01745  // deg * Math.PI / 180\n}\n\nexport function radToDeg (rad: number) {\n  return rad * 57.29578  // rad * 180 / Math.PI\n}\n\n// http://www.broofa.com/Tools/Math.uuid.htm\nconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\nconst uuid = new Array(36)\n\nexport function generateUUID () {\n  let rnd = 0\n  let r\n\n  for (let i = 0; i < 36; i++) {\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid[ i ] = '-'\n    } else if (i === 14) {\n      uuid[ i ] = '4'\n    } else {\n      if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0\n      r = rnd & 0xf\n      rnd = rnd >> 4\n      uuid[ i ] = chars[ (i === 19) ? (r & 0x3) | 0x8 : r ]\n    }\n  }\n\n  return uuid.join('')\n}\n\nexport function countSetBits (i: number) {\n  i = i - ((i >> 1) & 0x55555555)\n  i = (i & 0x33333333) + ((i >> 2) & 0x33333333)\n  return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24\n}\n\nexport function normalize (value: number, min: number, max: number) {\n  return (value - min) / (max - min)\n}\n\nexport function clamp (value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function pclamp (value: number) {\n  return clamp(value, 0, 100)\n}\n\nexport function saturate (value: number) {\n  return clamp(value, 0, 1)\n}\n\nexport function lerp (start: number, stop: number, alpha: number) {\n  return start + (stop - start) * alpha\n}\n\nexport function spline (p0: number, p1: number, p2: number, p3: number, t: number, tension: number) {\n  const v0 = (p2 - p0) * tension\n  const v1 = (p3 - p1) * tension\n  const t2 = t * t\n  const t3 = t * t2\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 +\n         (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 +\n         v0 * t + p1\n}\n\nexport function smoothstep (min: number, max: number, x: number) {\n  x = saturate(normalize(x, min, max))\n  return x * x * (3 - 2 * x)\n}\n\nexport function smootherstep (min: number, max: number, x: number) {\n  x = saturate(normalize(x, min, max))\n  return x * x * x * (x * (x * 6 - 15) + 10)\n}\n\nexport function smootheststep (min: number, max: number, x: number) {\n  x = saturate(normalize(x, min, max))\n  return (\n    -20 * Math.pow(x, 7) +\n     70 * Math.pow(x, 6) -\n     84 * Math.pow(x, 5) +\n     35 * Math.pow(x, 4)\n  )\n}\n\nexport function almostIdentity (value: number, start: number, stop: number) {\n  if (value > start) return value\n  const a = 2 * stop - start\n  const b = 2 * start - 3 * stop\n  const t = value / start\n  return (a * t + b) * t * t + stop\n}","/**\n * @file Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Color } from 'three'\nimport * as chroma from 'chroma-js'\n\nimport { createParams } from '../utils'\nimport { NumberArray, Partial } from '../types'\nimport Structure from '../structure/structure'\nimport Surface from '../surface/surface'\nimport Volume from '../surface/volume'\nimport AtomProxy from '../proxy/atom-proxy'\nimport BondProxy from '../proxy/bond-proxy'\n\nexport type ColorMode = 'rgb'|'hsv'|'hsl'|'hsi'|'lab'|'hcl'\nexport type ColorSpace = 'sRGB' | 'linear'\n\n/**\n * Internal color space for all colors (global).\n * Colors are always specified as sRGB; if this is set to\n * 'linear' then colors get linearized when used internally\n * as vertex or texture colors.\n * @see setColorSpace/getColorSpace.\n */\nvar colorSpace: ColorSpace = 'sRGB' // default: don't linearize\n\n/** Set the global internal color space for colormakers */\nexport function setColorSpace(space: ColorSpace) {\n  colorSpace = space\n}\n\n/** Get the global internal color space for colormakers */\nexport function getColorSpace() {\n  return colorSpace\n}\n\nexport const ScaleDefaultParameters = {\n  scale: 'uniform' as string|string[],\n  mode: 'hcl' as ColorMode,\n  domain: [ 0, 1 ] as number[],\n  value: 0xFFFFFF,\n  reverse: false,\n}\nexport type ScaleParameters = typeof ScaleDefaultParameters\n\nexport interface ColorData {\n  atomData?: number[],\n  bondData?: number[]\n}\n\nexport interface ColormakerParameters extends ScaleParameters {\n  structure?: Structure\n  volume?: Volume\n  surface?: Surface\n  data?: ColorData\n}\n\nexport type StuctureColormakerParams = { structure: Structure } & Partial<ColormakerParameters>\nexport type VolumeColormakerParams = { volume: Volume } & Partial<ColormakerParameters>\nexport type ColormakerScale = (v: number) => number\n\nconst tmpColor = new Color()\n\n/** Decorator for optionally linearizing a numeric color */\ntype colorFuncType = (value: any, fromTo?: boolean) => number // decorator applies to functions with this shape\nexport function manageColor<T extends {parameters: ColormakerParameters}>\n  (_target: Object,\n   _name: string | symbol,\n   descriptor: TypedPropertyDescriptor<colorFuncType>): PropertyDescriptor {\n    const originalMethod = descriptor.value\n    const linearize: colorFuncType = function (this: T, value: any, fromTo?: boolean) {\n      let result = originalMethod!.bind(this, value, fromTo)()\n      if (colorSpace == 'linear') {\n        tmpColor.set(result)\n        tmpColor.convertSRGBToLinear()\n        return tmpColor.getHex()\n      } else {\n        return result\n      }\n    }\n    descriptor.value = linearize\n    return descriptor\n  }\n\n/**\n * Class for making colors.\n * @interface\n */\nabstract class Colormaker {\n  parameters: ColormakerParameters\n  atomProxy?: AtomProxy\n\n  /**\n   * Create a colormaker instance\n   * @param  {ColormakerParameters} params - colormaker parameter\n   */\n  constructor (params: Partial<ColormakerParameters> = {}) {\n    this.parameters = createParams(params, ScaleDefaultParameters)\n\n    if (typeof this.parameters.value === 'string') {\n      this.parameters.value = tmpColor.set(this.parameters.value).getHex()\n    }\n\n    if (this.parameters.structure) {\n      this.atomProxy = this.parameters.structure.getAtomProxy()\n    }\n  }\n\n  getScale (params: Partial<ScaleParameters> = {}) {\n    const p = createParams(params, this.parameters)\n\n    if (p.scale === 'rainbow') {\n      p.scale = [ 'red', 'orange', 'yellow', 'green', 'blue' ]\n    } else if (p.scale === 'rwb') {\n      p.scale = [ 'red', 'white', 'blue' ]\n    }\n\n    if (p.reverse) {\n      p.domain = p.domain.slice().reverse()\n    }\n    return chroma\n      .scale(p.scale as any)  // TODO\n      .mode(p.mode)\n      .domain(p.domain)\n      .out('num' as any)  // returns RGB color as numeric (not string \"#ffffff\")\n  }\n\n  /**\n   * save a color to an array\n   * @param  {Integer} color - hex color value\n   * @param  {Array|TypedArray} array - destination\n   * @param  {Integer} offset - index into the array\n   * @return {Array} the destination array\n   */\n  colorToArray (color: number, array: NumberArray = [], offset = 0) {\n    array[ offset ] = (color >> 16 & 255) / 255\n    array[ offset + 1 ] = (color >> 8 & 255) / 255\n    array[ offset + 2 ] = (color & 255) / 255\n\n    return array\n  }\n\n  atomColor? (atom: AtomProxy): number\n\n  /**\n   * save an atom color to an array\n   * @param  {AtomProxy} atom - atom to get color for\n   * @param  {Array|TypedArray} array - destination\n   * @param  {Integer} offset - index into the array\n   * @return {Array} the destination array\n   */\n  atomColorToArray (atom: AtomProxy, array: NumberArray, offset: number) {\n    return this.colorToArray(\n      this.atomColor ? this.atomColor(atom) : 0x000000, array, offset\n    )\n  }\n\n  /**\n   * return the color for an bond\n   * @param  {BondProxy} bond - bond to get color for\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\n   * @return {Integer} hex bond color\n   */\n  bondColor (bond: BondProxy, fromTo: boolean) {\n    if (this.atomProxy && this.atomColor) {\n      this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2\n      return this.atomColor(this.atomProxy)\n    } else {\n      return 0x000000\n    }\n  }\n\n  /**\n   * safe a bond color to an array\n   * @param  {BondProxy} bond - bond to get color for\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\n   * @param  {Array|TypedArray} array - destination\n   * @param  {Integer} offset - index into the array\n   * @return {Array} the destination array\n   */\n  bondColorToArray (bond: BondProxy, fromTo: boolean, array: NumberArray, offset: number) {\n    return this.colorToArray(\n      this.bondColor(bond, fromTo), array, offset\n    )\n  }\n\n  volumeColor? (index: number): number\n\n  /**\n   * safe a volume cell color to an array\n   * @param  {Integer} index - volume cell index\n   * @param  {Array|TypedArray} array - destination\n   * @param  {Integer} offset - index into the array\n   * @return {Array} the destination array\n   */\n  volumeColorToArray (index: number, array: NumberArray, offset: number) {\n    return this.colorToArray(\n      this.volumeColor ? this.volumeColor(index) : 0x000000, array, offset\n    )\n  }\n\n  positionColor? (position: Vector3): number\n\n  /**\n   * safe a color for coordinates in space to an array\n   * @param  {Vector3} coords - xyz coordinates\n   * @param  {Array|TypedArray} array - destination\n   * @param  {Integer} offset - index into the array\n   * @return {Array} the destination array\n   */\n  positionColorToArray (coords: Vector3, array: NumberArray, offset: number) {\n    return this.colorToArray(\n      this.positionColor ? this.positionColor(coords) : 0x000000, array, offset\n    )\n  }\n}\n\nexport default Colormaker\n","/**\n * @file Selection Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport enum kwd {\n  PROTEIN = 1,\n  NUCLEIC = 2,\n  RNA = 3,\n  DNA = 4,\n  POLYMER = 5,\n  WATER = 6,\n  HELIX = 7,\n  SHEET = 8,\n  TURN = 9,\n  BACKBONE = 10,\n  SIDECHAIN = 11,\n  ALL = 12,\n  HETERO = 13,\n  ION = 14,\n  SACCHARIDE = 15,\n  SUGAR = 15,\n  BONDED = 16,\n  RING = 17,\n  AROMATICRING = 18,\n  METAL = 19,\n  POLARH = 20,\n  NONE = 21\n}\n\nexport const SelectAllKeyword = [ '*', '', 'ALL' ]\nexport const SelectNoneKeyword = [ 'NONE' ]\n\nexport const AtomOnlyKeywords = [\n  kwd.BACKBONE, kwd.SIDECHAIN, kwd.BONDED, kwd.RING, kwd.AROMATICRING, kwd.METAL, kwd.POLARH\n]\n\nexport const ChainKeywords = [\n  kwd.POLYMER, kwd.WATER\n]\n\nexport const SmallResname = [ 'ALA', 'GLY', 'SER' ]\nexport const NucleophilicResname = [ 'CYS', 'SER', 'THR' ]\nexport const HydrophobicResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\nexport const AromaticResname = [ 'PHE', 'TRP', 'TYR', 'HIS' ]\nexport const AmideResname = [ 'ASN', 'GLN' ]\nexport const AcidicResname = [ 'ASP', 'GLU' ]\nexport const BasicResname = [ 'ARG', 'HIS', 'LYS' ]\nexport const ChargedResname = [ 'ARG', 'ASP', 'GLU', 'HIS', 'LYS' ]\nexport const PolarResname = [ 'ASN', 'ARG', 'ASP', 'CYS', 'GLY', 'GLN', 'GLU', 'HIS', 'LYS', 'SER', 'THR', 'TYR' ]\nexport const NonpolarResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\nexport const CyclicResname = [ 'HIS', 'PHE', 'PRO', 'TRP', 'TYR' ]\nexport const AliphaticResname = [ 'ALA', 'GLY', 'ILE', 'LEU', 'VAL' ]\n","/**\n * @file Selection Test\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { binarySearchIndexOf, rangeInSortedArray } from '../utils'\nimport { kwd, AtomOnlyKeywords, ChainKeywords } from './selection-constants'\n\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\nexport type ProxyEntity = AtomProxy|ResidueProxy|ChainProxy|ModelProxy\ntype TestEntityFn = (e: ProxyEntity, s: SelectionRule) => boolean|-1\ntype FilterFn = (s: SelectionRule) => boolean\nexport type SelectionTest = false|((e: ProxyEntity) => boolean|-1)\n\nexport type SelectionOperator = 'AND'|'OR'\nexport interface SelectionRule {\n  keyword?: any\n  atomname?: string\n  element?: string\n  atomindex?: number[]\n  altloc?: string\n  inscode?: string\n  resname?: string|string[]\n  sstruc?: string\n  resno?: number|[number, number]\n  chainname?: string\n  model?: number\n\n  error?: string\n  rules?: SelectionRule[]\n  negate?: boolean\n  operator?: SelectionOperator\n}\n\nfunction atomTestFn (a: AtomProxy, s: SelectionRule) {\n  // returning -1 means the rule is not applicable\n  if (s.atomname === undefined && s.element === undefined &&\n    s.altloc === undefined && s.atomindex === undefined &&\n    s.keyword === undefined && s.inscode === undefined &&\n    s.resname === undefined && s.sstruc === undefined &&\n    s.resno === undefined && s.chainname === undefined &&\n    s.model === undefined\n  ) return -1\n\n  if (s.keyword !== undefined) {\n    if (s.keyword === kwd.BACKBONE && !a.isBackbone()) return false\n    if (s.keyword === kwd.SIDECHAIN && !a.isSidechain()) return false\n    if (s.keyword === kwd.BONDED && !a.isBonded()) return false\n    if (s.keyword === kwd.RING && !a.isRing()) return false\n    if (s.keyword === kwd.AROMATICRING && !a.isAromatic()) return false\n\n    if (s.keyword === kwd.HETERO && !a.isHetero()) return false\n    if (s.keyword === kwd.PROTEIN && !a.isProtein()) return false\n    if (s.keyword === kwd.NUCLEIC && !a.isNucleic()) return false\n    if (s.keyword === kwd.RNA && !a.isRna()) return false\n    if (s.keyword === kwd.DNA && !a.isDna()) return false\n    if (s.keyword === kwd.POLYMER && !a.isPolymer()) return false\n    if (s.keyword === kwd.WATER && !a.isWater()) return false\n    if (s.keyword === kwd.HELIX && !a.isHelix()) return false\n    if (s.keyword === kwd.SHEET && !a.isSheet()) return false\n    if (s.keyword === kwd.TURN && !a.isTurn()) return false\n    if (s.keyword === kwd.ION && !a.isIon()) return false\n    if (s.keyword === kwd.SACCHARIDE && !a.isSaccharide()) return false\n    if (s.keyword === kwd.METAL && !a.isMetal()) return false\n    if (s.keyword === kwd.POLARH && !a.isPolarHydrogen()) return false\n  }\n\n  if (s.atomname !== undefined && s.atomname !== a.atomname) return false\n  if (s.element !== undefined && s.element !== a.element) return false\n  if (s.altloc !== undefined && s.altloc !== a.altloc) return false\n\n  if (s.atomindex !== undefined &&\n      binarySearchIndexOf(s.atomindex, a.index) < 0\n  ) return false\n\n  if (s.resname !== undefined) {\n    if (Array.isArray(s.resname)) {\n      if (!s.resname.includes(a.resname)) return false\n    } else {\n      if (s.resname !== a.resname) return false\n    }\n  }\n  if (s.sstruc !== undefined && s.sstruc !== a.sstruc) return false\n  if (s.resno !== undefined) {\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\n      if (s.resno[0] > a.resno || s.resno[1] < a.resno) return false\n    } else {\n      if (s.resno !== a.resno) return false\n    }\n  }\n  if (s.inscode !== undefined && s.inscode !== a.inscode) return false\n\n  if (s.chainname !== undefined && s.chainname !== a.chainname) return false\n  if (s.model !== undefined && s.model !== a.modelIndex) return false\n\n  return true\n}\n\nfunction residueTestFn (r: ResidueProxy, s: SelectionRule) {\n  // returning -1 means the rule is not applicable\n  if (s.resname === undefined && s.resno === undefined && s.inscode === undefined &&\n      s.sstruc === undefined && s.model === undefined && s.chainname === undefined &&\n      s.atomindex === undefined &&\n      (s.keyword === undefined || AtomOnlyKeywords.includes(s.keyword))\n  ) return -1\n\n  if (s.keyword !== undefined) {\n    if (s.keyword === kwd.HETERO && !r.isHetero()) return false\n    if (s.keyword === kwd.PROTEIN && !r.isProtein()) return false\n    if (s.keyword === kwd.NUCLEIC && !r.isNucleic()) return false\n    if (s.keyword === kwd.RNA && !r.isRna()) return false\n    if (s.keyword === kwd.DNA && !r.isDna()) return false\n    if (s.keyword === kwd.POLYMER && !r.isPolymer()) return false\n    if (s.keyword === kwd.WATER && !r.isWater()) return false\n    if (s.keyword === kwd.HELIX && !r.isHelix()) return false\n    if (s.keyword === kwd.SHEET && !r.isSheet()) return false\n    if (s.keyword === kwd.TURN && !r.isTurn()) return false\n    if (s.keyword === kwd.ION && !r.isIon()) return false\n    if (s.keyword === kwd.SACCHARIDE && !r.isSaccharide()) return false\n  }\n\n  if (s.atomindex !== undefined &&\n      rangeInSortedArray(s.atomindex, r.atomOffset, r.atomEnd) === 0\n  ) return false\n\n  if (s.resname !== undefined) {\n    if (Array.isArray(s.resname)) {\n      if (!s.resname.includes(r.resname)) return false\n    } else {\n      if (s.resname !== r.resname) return false\n    }\n  }\n  if (s.sstruc !== undefined && s.sstruc !== r.sstruc) return false\n  if (s.resno !== undefined) {\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\n      if (s.resno[0] > r.resno || s.resno[1] < r.resno) return false\n    } else {\n      if (s.resno !== r.resno) return false\n    }\n  }\n  if (s.inscode !== undefined && s.inscode !== r.inscode) return false\n\n  if (s.chainname !== undefined && s.chainname !== r.chainname) return false\n  if (s.model !== undefined && s.model !== r.modelIndex) return false\n\n  return true\n}\n\nfunction chainTestFn (c: ChainProxy, s: SelectionRule) {\n  // returning -1 means the rule is not applicable\n  if (s.chainname === undefined && s.model === undefined && s.atomindex === undefined &&\n      (s.keyword === undefined || !ChainKeywords.includes(s.keyword) || !c.entity)\n  ) return -1\n\n  if (s.keyword !== undefined) {\n    if (s.keyword === kwd.POLYMER && !c.entity.isPolymer()) return false\n    if (s.keyword === kwd.WATER && !c.entity.isWater()) return false\n  }\n\n  if (s.atomindex !== undefined &&\n      rangeInSortedArray(s.atomindex, c.atomOffset, c.atomEnd) === 0\n  ) return false\n\n  if (s.chainname !== undefined && s.chainname !== c.chainname) return false\n\n  if (s.model !== undefined && s.model !== c.modelIndex) return false\n\n  return true\n}\n\nfunction modelTestFn (m: ModelProxy, s: SelectionRule) {\n  // returning -1 means the rule is not applicable\n  if (s.model === undefined && s.atomindex === undefined) return -1\n\n  if (s.atomindex !== undefined &&\n      rangeInSortedArray(s.atomindex, m.atomOffset, m.atomEnd) === 0\n  ) return false\n\n  if (s.model !== undefined && s.model !== m.index) return false\n\n  return true\n}\n\nfunction makeTest (selection: SelectionRule|null, fn: TestEntityFn) {\n  if (selection === null) return false\n  if (selection.error) return false\n  if (!selection.rules || selection.rules.length === 0) return false\n\n  const n = selection.rules.length\n\n  const t = !selection.negate\n  const f = !!selection.negate\n\n  const subTests: SelectionTest[] = []\n  for (let i = 0; i < n; ++i) {\n    const s = selection.rules[ i ]\n    if (s.hasOwnProperty('operator')) {\n      subTests[ i ] = makeTest(s, fn) as SelectionTest  // TODO\n    }\n  }\n\n  // ( x and y ) can short circuit on false\n  // ( x or y ) can short circuit on true\n  // not ( x and y )\n\n  return function test (entity: ProxyEntity) {\n    const and = selection.operator === 'AND'\n    let na = false\n\n    for (let i = 0; i < n; ++i) {\n      const s = selection.rules![ i ]  // TODO\n      let ret\n\n      if (s.hasOwnProperty('operator')) {\n        const test = subTests[ i ]\n        if (test !== false) {\n          ret = test(entity)\n        } else {\n          ret = -1\n        }\n\n        if (ret === -1) {\n          na = true\n          continue\n        } else if (ret === true) {\n          if (and) { continue } else { return t }\n        } else {\n          if (and) { return f } else { continue }\n        }\n      } else {\n        if (s.keyword === kwd.ALL) {\n          if (and) { continue } else { return t }\n        } else if (s.keyword === kwd.NONE) {\n          if (and) { continue } else { return f }\n        }\n\n        ret = fn(entity, s)\n\n        // console.log( entity.qualifiedName(), ret, s, selection.negate, \"t\", t, \"f\", f )\n\n        if (ret === -1) {\n          na = true\n          continue\n        } else if (ret === true) {\n          if (and) { continue } else { return t }\n        } else {\n          if (and) { return f } else { continue }\n        }\n      }\n    }\n\n    if (na) {\n      return -1\n    } else {\n      if (and) { return t } else { return f }\n    }\n  } as SelectionTest\n}\n\nfunction filter (selection: SelectionRule, fn: FilterFn) {\n  if (selection.error) return selection\n    if (!selection.rules || selection.rules.length === 0) return selection\n\n  const n = selection.rules.length\n\n  const filtered: SelectionRule = {\n    operator: selection.operator,\n    rules: []\n  }\n  if (selection.hasOwnProperty('negate')) {\n    filtered.negate = selection.negate\n  }\n\n  for (let i = 0; i < n; ++i) {\n    const s = selection.rules[ i ]\n    if (s.hasOwnProperty('operator')) {\n      const fs = filter(s, fn)\n      if (fs !== null) filtered.rules!.push(fs)  // TODO\n    } else if (!fn(s)) {\n      filtered.rules!.push(s)  // TODO\n    }\n  }\n\n  if (filtered.rules!.length > 0) {  // TODO\n    // TODO maybe the filtered rules could be returned\n    // in some case, but the way how tests are applied\n    // e.g. when traversing a structure would also need\n    // to change\n    return selection\n    // return filtered;\n  } else {\n    return null\n  }\n}\n\nfunction makeAtomTest (selection: SelectionRule, atomOnly = false) {\n  let filteredSelection: SelectionRule|null = selection\n  if (atomOnly) {\n    filteredSelection = filter(selection, function (s) {\n      if (s.keyword !== undefined && !AtomOnlyKeywords.includes(s.keyword)) return true\n      if (s.model !== undefined) return true\n      if (s.chainname !== undefined) return true\n      if (s.resname !== undefined) return true\n      if (s.resno !== undefined) return true\n      if (s.sstruc !== undefined) return true\n      return false\n    })\n  }\n  return makeTest(filteredSelection, atomTestFn)\n}\n\nfunction makeResidueTest (selection: SelectionRule, residueOnly = false) {\n  let filteredSelection: SelectionRule|null = selection\n  if (residueOnly) {\n    filteredSelection = filter(selection, function (s) {\n      if (s.keyword !== undefined && AtomOnlyKeywords.includes(s.keyword)) return true\n      if (s.model !== undefined) return true\n      if (s.chainname !== undefined) return true\n      if (s.atomname !== undefined) return true\n      if (s.element !== undefined) return true\n      if (s.altloc !== undefined) return true\n      return false\n    })\n  }\n  return makeTest(filteredSelection, residueTestFn)\n}\n\nfunction makeChainTest (selection: SelectionRule, chainOnly = false) {\n  let filteredSelection: SelectionRule|null = selection\n  if (chainOnly) {\n    filteredSelection = filter(selection, function (s) {\n      if (s.keyword !== undefined && !ChainKeywords.includes(s.keyword)) return true\n      // if( s.model!==undefined ) return true;\n      if (s.resname !== undefined) return true\n      if (s.resno !== undefined) return true\n      if (s.atomname !== undefined) return true\n      if (s.element !== undefined) return true\n      if (s.altloc !== undefined) return true\n      if (s.sstruc !== undefined) return true\n      if (s.inscode !== undefined) return true\n      return false\n    })\n  }\n  return makeTest(filteredSelection, chainTestFn)\n}\n\nfunction makeModelTest (selection: SelectionRule, modelOnly = false) {\n  let filteredSelection: SelectionRule|null = selection\n  if (modelOnly) {\n    filteredSelection = filter(selection, function (s) {\n      if (s.keyword !== undefined) return true\n      if (s.chainname !== undefined) return true\n      if (s.resname !== undefined) return true\n      if (s.resno !== undefined) return true\n      if (s.atomname !== undefined) return true\n      if (s.element !== undefined) return true\n      if (s.altloc !== undefined) return true\n      if (s.sstruc !== undefined) return true\n      if (s.inscode !== undefined) return true\n      return false\n    })\n  }\n  return makeTest(filteredSelection, modelTestFn)\n}\n\nexport {\n  makeAtomTest,\n  makeResidueTest,\n  makeChainTest,\n  makeModelTest\n}\n","/**\n * @file Selection\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { parseSele } from './selection-parser'\nimport {\n  SelectionTest, SelectionRule,\n  makeAtomTest, makeResidueTest, makeChainTest, makeModelTest\n} from './selection-test'\nimport { SelectAllKeyword, SelectNoneKeyword } from './selection-constants'\n\nexport type SelectionSignals = {\n  stringChanged: Signal\n}\n\n/**\n * Selection\n */\nclass Selection {\n  signals: SelectionSignals\n  string: string\n  selection: SelectionRule\n\n  test: SelectionTest\n  residueTest: SelectionTest\n  chainTest: SelectionTest\n  modelTest: SelectionTest\n\n  atomOnlyTest: SelectionTest\n  residueOnlyTest: SelectionTest\n  chainOnlyTest: SelectionTest\n  modelOnlyTest: SelectionTest\n\n  /**\n   * Create Selection\n   * @param {String} string - selection string, see {@tutorial selection-language}\n   */\n  constructor (string?: string) {\n    this.signals = {\n      stringChanged: new Signal()\n    }\n\n    this.setString(string)\n  }\n\n  get type () { return 'selection' }\n\n  setString (string?: string, silent?: boolean) {\n    if (string === undefined) string = this.string || ''\n    if (string === this.string) return\n\n    try {\n      this.selection = parseSele(string)\n    } catch (e) {\n      // Log.error( e.stack );\n      this.selection = { 'error': e.message }\n    }\n    const selection = this.selection\n\n    this.string = string\n\n    this.test = makeAtomTest(selection)\n    this.residueTest = makeResidueTest(selection)\n    this.chainTest = makeChainTest(selection)\n    this.modelTest = makeModelTest(selection)\n\n    this.atomOnlyTest = makeAtomTest(selection, true)\n    this.residueOnlyTest = makeResidueTest(selection, true)\n    this.chainOnlyTest = makeChainTest(selection, true)\n    this.modelOnlyTest = makeModelTest(selection, true)\n\n    if (!silent) {\n      this.signals.stringChanged.dispatch(this.string)\n    }\n  }\n\n  isAllSelection () {\n    return SelectAllKeyword.includes(this.string.toUpperCase())\n  }\n\n  isNoneSelection () {\n    return SelectNoneKeyword.includes(this.string.toUpperCase())\n  }\n}\n\nexport default Selection\n","/**\n * @file Selection Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { SelectionRule, SelectionOperator } from './selection-test'\nimport {\n  kwd, SelectAllKeyword,\n  SmallResname, NucleophilicResname, HydrophobicResname, AromaticResname,\n  AmideResname, AcidicResname, BasicResname, ChargedResname,\n  PolarResname, NonpolarResname, CyclicResname, AliphaticResname\n} from './selection-constants'\n\nfunction parseSele (string: string) {\n  let retSelection: SelectionRule = {\n    operator: undefined,\n    rules: []\n  }\n\n  if (!string) {\n    return retSelection\n  }\n\n  let selection = retSelection\n  let newSelection: SelectionRule\n  let oldSelection: SelectionRule\n  const selectionStack: SelectionRule[] = []\n\n  string = string.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').trim()\n  if (string.charAt(0) === '(' && string.substr(-1) === ')') {\n    string = string.slice(1, -1).trim()\n  }\n  const chunks = string.split(/\\s+/)\n\n  // Log.log( string, chunks )\n\n  const createNewContext = (operator?: SelectionOperator) => {\n    newSelection = {\n      operator,\n      rules: []\n    }\n    if (selection === undefined) {\n      selection = newSelection\n      retSelection = newSelection\n    } else {\n      selection.rules!.push(newSelection)\n      selectionStack.push(selection)\n      selection = newSelection\n    }\n  }\n\n  const getPrevContext = function (operator?: SelectionOperator) {\n    oldSelection = selection\n    selection = selectionStack.pop()!\n    if (selection === undefined) {\n      createNewContext(operator)\n      pushRule(oldSelection)\n    }\n  }\n\n  const pushRule = function (rule: SelectionRule) {\n    selection.rules!.push(rule)\n  }\n\n  let not: false|0|1|2 = false\n\n  for (let i = 0; i < chunks.length; ++i) {\n    const c = chunks[ i ]\n    const cu = c.toUpperCase()\n\n    // handle parens\n\n    if (c === '(') {\n      // Log.log( \"(\" );\n      not = false\n      createNewContext()\n      continue\n    } else if (c === ')') {\n      // Log.log( \")\" );\n      getPrevContext()\n      if (selection.negate) {\n        getPrevContext()\n      }\n      continue\n    }\n\n    // leave 'not' context\n\n    if (not > 0) {\n      if (cu === 'NOT') {\n        not = 1\n      } else if (not === 1) {\n        not = 2\n      } else if (not === 2) {\n        not = false\n        getPrevContext()\n      } else {\n        throw new Error(\"something went wrong with 'not'\")\n      }\n    }\n\n    // handle logic operators\n\n    if (cu === 'AND') {\n      // Log.log( \"AND\" );\n      if (selection.operator === 'OR') {\n        const lastRule = selection.rules!.pop()!\n        createNewContext('AND')\n        pushRule(lastRule)\n      } else {\n        selection.operator = 'AND'\n      }\n      continue\n    } else if (cu === 'OR') {\n      // Log.log( \"OR\" );\n      if (selection.operator === 'AND') {\n        getPrevContext('OR')\n      } else {\n        selection.operator = 'OR'\n      }\n      continue\n    } else if (c.toUpperCase() === 'NOT') {\n      // Log.log( \"NOT\", j );\n      not = 1\n      createNewContext()\n      selection.negate = true\n      continue\n    } else {\n      // Log.log( \"chunk\", c, j, selection );\n    }\n\n    // handle keyword attributes\n\n    // ensure `cu` is not a number before testing if it is in the\n    // kwd enum dictionary which includes the enum numbers as well...\n    if (+cu !== +cu) {\n      const keyword = (kwd as any)[ cu ]\n      if (keyword !== undefined) {\n        pushRule({ keyword })\n        continue\n      }\n    }\n\n    if (cu === 'HYDROGEN') {\n      pushRule({\n        operator: 'OR',\n        rules: [\n          { element: 'H' },\n          { element: 'D' }\n        ]\n      })\n      continue\n    }\n\n    if (cu === 'SMALL') {\n      pushRule({ resname: SmallResname })\n      continue\n    }\n\n    if (cu === 'NUCLEOPHILIC') {\n      pushRule({ resname: NucleophilicResname })\n      continue\n    }\n\n    if (cu === 'HYDROPHOBIC') {\n      pushRule({ resname: HydrophobicResname })\n      continue\n    }\n\n    if (cu === 'AROMATIC') {\n      pushRule({ resname: AromaticResname })\n      continue\n    }\n\n    if (cu === 'AMIDE') {\n      pushRule({ resname: AmideResname })\n      continue\n    }\n\n    if (cu === 'ACIDIC') {\n      pushRule({ resname: AcidicResname })\n      continue\n    }\n\n    if (cu === 'BASIC') {\n      pushRule({ resname: BasicResname })\n      continue\n    }\n\n    if (cu === 'CHARGED') {\n      pushRule({ resname: ChargedResname })\n      continue\n    }\n\n    if (cu === 'POLAR') {\n      pushRule({ resname: PolarResname })\n      continue\n    }\n\n    if (cu === 'NONPOLAR') {\n      pushRule({ resname: NonpolarResname })\n      continue\n    }\n\n    if (cu === 'CYCLIC') {\n      pushRule({ resname: CyclicResname })\n      continue\n    }\n\n    if (cu === 'ALIPHATIC') {\n      pushRule({ resname: AliphaticResname })\n      continue\n    }\n\n    if (cu === 'SIDECHAINATTACHED') {\n      pushRule({\n        operator: 'OR',\n        rules: [\n          { keyword: kwd.SIDECHAIN },\n          {\n            operator: 'AND',\n            negate: false,\n            rules: [\n              { keyword: kwd.PROTEIN },\n              {\n                operator: 'OR',\n                negate: false,\n                rules: [\n                  { atomname: 'CA' },\n                  { atomname: 'BB' }\n                ]\n              }\n            ]\n          },\n          {\n            operator: 'AND',\n            negate: false,\n            rules: [\n              { resname: 'PRO' },\n              { atomname: 'N' }\n            ]\n          },\n          {\n            operator: 'AND',\n            negate: false,\n            rules: [\n              { keyword: kwd.NUCLEIC },\n              {\n                operator: 'OR',\n                negate: true,\n                rules: [\n                  { atomname: 'P' },\n                  { atomname: 'OP1' },\n                  { atomname: 'OP2' },\n                  { atomname: \"O3'\" },\n                  { atomname: 'O3*' },\n                  { atomname: \"HO3'\"},\n                  { atomname: \"O5'\" },\n                  { atomname: 'O5*' },\n                  { atomname: \"HO5'\"},\n                  { atomname: \"C5'\" },\n                  { atomname: 'C5*' },\n                  { atomname: \"H5'\" },\n                  { atomname: \"H5''\"}\n                ]\n              }\n            ]\n          }\n        ]\n      })\n      continue\n    }\n\n    if (cu === 'APOLARH') {\n      pushRule({\n        operator: 'AND',\n        negate: false,\n        rules: [\n          { element: 'H' },\n          {\n            negate: true,\n            operator: undefined,\n            rules: [\n              { keyword: kwd.POLARH }\n            ]\n          }\n        ]\n      })\n      continue\n    }\n\n    if (cu === 'LIGAND') {\n      pushRule({\n        operator: 'AND',\n        rules: [\n          {\n            operator: 'OR',\n            rules: [\n              {\n                operator: 'AND',\n                rules: [\n                  { keyword: kwd.HETERO },\n                  {\n                    negate: true,\n                    operator: undefined,\n                    rules: [\n                      { keyword: kwd.POLYMER }\n                    ]\n                  }\n                ]\n              },\n              {\n                negate: true,\n                operator: undefined,\n                rules: [\n                  { keyword: kwd.POLYMER }\n                ]\n              }\n            ]\n          },\n          {\n            negate: true,\n            operator: undefined,\n            rules: [\n              {\n                operator: 'OR',\n                rules: [\n                  { keyword: kwd.WATER },\n                  { keyword: kwd.ION }\n                ]\n              }\n            ]\n          }\n        ]\n      })\n      continue\n    }\n\n    if (SelectAllKeyword.indexOf(cu) !== -1) {\n      pushRule({ keyword: kwd.ALL })\n      continue\n    }\n\n    // handle atom expressions\n\n    if (c.charAt(0) === '@') {\n      const indexList = c.substr(1).split(',').map(x => parseInt(x))\n      indexList.sort(function (a, b) { return a - b })\n      pushRule({ atomindex: indexList })\n      continue\n    }\n\n    if (c.charAt(0) === '#') {\n      console.error('# for element selection deprecated, use _')\n      pushRule({ element: cu.substr(1) })\n      continue\n    }\n    if (c.charAt(0) === '_') {\n      pushRule({ element: cu.substr(1) })\n      continue\n    }\n\n    if (c[0] === '[' && c[c.length - 1] === ']') {\n      const resnameList = cu.substr(1, c.length - 2).split(',')\n      const resname = resnameList.length > 1 ? resnameList : resnameList[ 0 ]\n      pushRule({ resname: resname })\n      continue\n    } else if (\n      (c.length >= 1 && c.length <= 4) &&\n      c[0] !== '^' && c[0] !== ':' && c[0] !== '.' && c[0] !== '%' && c[0] !== '/' &&\n      isNaN(parseInt(c))\n    ) {\n      pushRule({ resname: cu })\n      continue\n    }\n\n    // there must be only one constraint per rule\n    // otherwise a test quickly becomes not applicable\n    // e.g. chainTest for chainname when resno is present too\n\n    const sele: SelectionRule = {\n      operator: 'AND',\n      rules: []\n    }\n\n    const model = c.split('/')\n    if (model.length > 1 && model[1]) {\n      if (isNaN(parseInt(model[1]))) {\n        throw new Error('model must be an integer')\n      }\n      sele.rules!.push({\n        model: parseInt(model[1])\n      })\n    }\n\n    const altloc = model[0].split('%')\n    if (altloc.length > 1) {\n      sele.rules!.push({\n        altloc: altloc[1]\n      })\n    }\n\n    const atomname = altloc[0].split('.')\n    if (atomname.length > 1 && atomname[1]) {\n      if (atomname[1].length > 4) {\n        throw new Error('atomname must be one to four characters')\n      }\n      sele.rules!.push({\n        atomname: atomname[1].substring(0, 4).toUpperCase()\n      })\n    }\n\n    const chain = atomname[0].split(':')\n    if (chain.length > 1 && chain[1]) {\n      sele.rules!.push({\n        chainname: chain[1]\n      })\n    }\n\n    const inscode = chain[0].split('^')\n    if (inscode.length > 1) {\n      sele.rules!.push({\n        inscode: inscode[1]\n      })\n    }\n\n    if (inscode[0]) {\n      let negate, negate2\n      if (inscode[0][0] === '-') {\n        inscode[0] = inscode[0].substr(1)\n        negate = true\n      }\n      if (inscode[0].includes('--')) {\n        inscode[0] = inscode[0].replace('--', '-')\n        negate2 = true\n      }\n      let resi = inscode[0].split('-')\n      if (resi.length === 1) {\n        let resiSingle = parseInt(resi[0])\n        if (isNaN(resiSingle)) {\n          throw new Error('resi must be an integer')\n        }\n        if (negate) resiSingle *= -1\n        sele.rules!.push({\n          resno: resiSingle\n        })\n      } else if (resi.length === 2) {\n        const resiRange = resi.map(x => parseInt(x))\n        if (negate) resiRange[0] *= -1\n        if (negate2) resiRange[1] *= -1\n        sele.rules!.push({\n          resno: [resiRange[0], resiRange[1]]\n        })\n      } else {\n        throw new Error(\"resi range must contain one '-'\")\n      }\n    }\n\n    // round up\n\n    if (sele.rules!.length === 1) {\n      pushRule(sele.rules![ 0 ])\n    } else if (sele.rules!.length > 1) {\n      pushRule(sele)\n    } else {\n      throw new Error('empty selection chunk')\n    }\n  }\n\n  // cleanup\n\n  if (\n    retSelection.operator === undefined &&\n    retSelection.rules!.length === 1 &&\n    retSelection.rules![ 0 ].hasOwnProperty('operator')\n  ) {\n    retSelection = retSelection.rules![ 0 ]\n  }\n\n  return retSelection\n}\n\nexport {\n  parseSele\n}\n","/**\n * @file Selection Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Color } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport Selection from '../selection/selection'\nimport Colormaker, { ColormakerParameters } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport Structure from '../structure/structure'\n\nexport type SelectionSchemeData = [ any, string, ColormakerParameters|undefined ]\n\n/**\n * Color based on {@link Selection}\n */\nclass SelectionColormaker extends Colormaker {\n  colormakerList: any[] = []  // TODO\n  selectionList: Selection[] = []\n\n  constructor (params: { structure: Structure, dataList: SelectionSchemeData[] } & Partial<ColormakerParameters>) {\n    super(params)\n\n    const dataList = params.dataList || []\n\n    dataList.forEach((data: SelectionSchemeData) => {\n      const [ scheme, sele, params = {} ] = data\n\n      if (ColormakerRegistry.hasScheme(scheme)) {\n        Object.assign(params, {\n          scheme: scheme,\n          structure: this.parameters.structure\n        })\n      } else {\n        Object.assign(params, {\n          scheme: 'uniform',\n          value: new Color(scheme).getHex()\n        })\n      }\n\n      this.colormakerList.push(ColormakerRegistry.getScheme(params as { scheme: string } & ColormakerParameters))\n      this.selectionList.push(new Selection(sele))\n    })\n  }\n\n  // NOT NEEDED @manageColor\n  atomColor (a: AtomProxy) {\n    for (let i = 0, n = this.selectionList.length; i < n; ++i) {\n      const test = this.selectionList[ i ].test\n      if (test && test(a)) {\n        return this.colormakerList[ i ].atomColor(a)\n      }\n    }\n\n    return 0xFFFFFF\n  }\n}\n\nexport default SelectionColormaker\n","/**\n * @file Colormaker Registry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { generateUUID } from '../math/math-utils'\nimport Colormaker, { ColormakerParameters } from './colormaker'\nimport SelectionColormaker, { SelectionSchemeData } from './selection-colormaker'\nimport Structure from '../structure/structure'\n\nconst ColormakerScales = {\n  '': '',\n\n    // Sequential\n  OrRd: '[S] Orange-Red',\n  PuBu: '[S] Purple-Blue',\n  BuPu: '[S] Blue-Purple',\n  Oranges: '[S] Oranges',\n  BuGn: '[S] Blue-Green',\n  YlOrBr: '[S] Yellow-Orange-Brown',\n  YlGn: '[S] Yellow-Green',\n  Reds: '[S] Reds',\n  RdPu: '[S] Red-Purple',\n  Greens: '[S] Greens',\n  YlGnBu: '[S] Yellow-Green-Blue',\n  Purples: '[S] Purples',\n  GnBu: '[S] Green-Blue',\n  Greys: '[S] Greys',\n  YlOrRd: '[S] Yellow-Orange-Red',\n  PuRd: '[S] Purple-Red',\n  Blues: '[S] Blues',\n  PuBuGn: '[S] Purple-Blue-Green',\n\n    // Diverging\n  Viridis: '[D] Viridis',\n  Spectral: '[D] Spectral',\n  RdYlGn: '[D] Red-Yellow-Green',\n  RdBu: '[D] Red-Blue',\n  PiYG: '[D] Pink-Yellowgreen',\n  PRGn: '[D] Purplered-Green',\n  RdYlBu: '[D] Red-Yellow-Blue',\n  BrBG: '[D] Brown-Bluegreen',\n  RdGy: '[D] Red-Grey',\n  PuOr: '[D] Purple-Orange',\n\n    // Qualitative\n  Set1: '[Q] Set1',\n  Set2: '[Q] Set2',\n  Set3: '[Q] Set3',\n  Dark2: '[Q] Dark2',\n  Paired: '[Q] Paired',\n  Pastel1: '[Q] Pastel1',\n  Pastel2: '[Q] Pastel2',\n  Accent: '[Q] Accent',\n\n    // Other\n  rainbow: '[?] Rainbow',\n  rwb: '[?] Red-White-Blue'\n}\n\nconst ColormakerModes = {\n  '': '',\n\n  rgb: 'Red Green Blue',\n  hsv: 'Hue Saturation Value',\n  hsl: 'Hue Saturation Lightness',\n  hsi: 'Hue Saturation Intensity',\n  lab: 'CIE L*a*b*',\n  hcl: 'Hue Chroma Lightness'\n}\n\n/**\n * Class for registering {@link Colormaker}s. Generally use the\n * global {@link src/globals.js~ColormakerRegistry} instance.\n */\nclass ColormakerRegistry {\n  schemes: { [k: string]: any }\n  userSchemes: { [k: string]: any }\n\n  constructor () {\n    this.schemes = {}\n    this.userSchemes = {}\n  }\n\n  getScheme (params: Partial<{ scheme: string } & ColormakerParameters>) {\n    const p = params || {}\n    const id = (p.scheme || '').toLowerCase()\n\n    let SchemeClass\n\n    if (id in this.schemes) {\n      SchemeClass = this.schemes[ id ]\n    } else if (id in this.userSchemes) {\n      SchemeClass = this.userSchemes[ id ]\n    } else {\n      SchemeClass = Colormaker\n    }\n\n    return new SchemeClass(params)\n  }\n\n  /**\n   * Get an description of available schemes as an\n   * object with id-label as key-value pairs\n   * @return {Object} available schemes\n   */\n  getSchemes () {\n    const types: { [k: string]: any } = {}\n\n    Object.keys(this.schemes).forEach(function (k) {\n      types[ k ] = k\n    })\n\n    Object.keys(this.userSchemes).forEach(function (k) {\n      types[ k ] = k.split('|')[ 1 ]\n    })\n\n    return types\n  }\n\n  /**\n   * Get an description of available scales as an\n   * object with id-label as key-value pairs\n   * @return {Object} available scales\n   */\n  getScales () {\n    return ColormakerScales\n  }\n\n  getModes () {\n    return ColormakerModes\n  }\n\n  /**\n   * Add a scheme with a hardcoded id\n   * @param {String} id - the id\n   * @param {Colormaker} scheme - the colormaker\n   * @return {undefined}\n   */\n  add (id: string, scheme: Colormaker | typeof Colormaker) {\n    id = id.toLowerCase()\n    this.schemes[ id ] = scheme\n  }\n\n  /**\n   * Register a custom scheme\n   *\n   * @example\n   * // Create a class with a `atomColor` method that returns a hex color.\n   * var schemeId = NGL.ColormakerRegistry.addScheme( function( params ){\n   *     this.atomColor = function( atom ){\n   *         if( atom.serial < 1000 ){\n   *             return 0x0000FF;  // blue\n   *         }else if( atom.serial > 2000 ){\n   *             return 0xFF0000;  // red\n   *         }else{\n   *             return 0x00FF00;  // green\n   *         }\n   *     };\n   * } );\n   *\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\n   *     o.autoView();\n   * } );\n   *\n   * @param {Function|Colormaker} scheme - constructor or {@link Colormaker} instance\n   * @param {String} label - scheme label\n   * @return {String} id to refer to the registered scheme\n   */\n  addScheme (scheme: any, label?: string) {\n    if (!(scheme instanceof Colormaker)) {\n      scheme = this._createScheme(scheme)\n    }\n\n    return this._addUserScheme(scheme, label)\n  }\n\n  /**\n   * Add a user-defined scheme\n   * @param {Colormaker} scheme - the user-defined scheme\n   * @param {String} [label] - scheme label\n   * @return {String} id to refer to the registered scheme\n   */\n  _addUserScheme (scheme: any, label?: string) {\n    label = label || ''\n    const id = `${generateUUID()}|${label}`.toLowerCase()\n    this.userSchemes[ id ] = scheme\n\n    return id\n  }\n\n  /**\n   * Remove the scheme with the given id\n   * @param  {String} id - scheme to remove\n   * @return {undefined}\n   */\n  removeScheme (id: string) {\n    id = id.toLowerCase()\n    delete this.userSchemes[ id ]\n  }\n\n  _createScheme (constructor: any) {\n    const _Colormaker = function (this: any, params: ColormakerParameters) {\n      Colormaker.call(this, params)\n      constructor.call(this, params)\n    }\n\n    _Colormaker.prototype = Colormaker.prototype\n    _Colormaker.prototype.constructor = Colormaker\n\n    return _Colormaker\n  }\n\n  /**\n   * Create and a selection-based coloring scheme. Supply a list with pairs\n   * of colorname and selection for coloring by selections. Use the last\n   * entry as a default (catch all) coloring definition.\n   *\n   * @example\n   * var schemeId = NGL.ColormakerRegistry.addSelectionScheme( [\n   *     [ \"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\" ],\n   *     [ \"green\", \"311-322\" ],\n   *     [ \"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\" ],\n   *     [ \"blue\", \"1-39 or 96-112 or 174-201 or 278-288\" ],\n   *     [ \"white\", \"*\" ]\n   * ], \"Transmembrane 3dqb\" );\n   *\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\n   *     o.autoView();\n   * } );\n   *\n   * @param {Array} dataList - cloror-selection pairs\n   * @param {String} label - scheme name\n   * @return {String} id to refer to the registered scheme\n   */\n  addSelectionScheme (dataList: SelectionSchemeData, label?: string) {\n    class MySelectionColormaker extends SelectionColormaker {\n      constructor (params: { structure: Structure } & ColormakerParameters) {\n        super(Object.assign({ dataList }, params))\n      }\n    }\n\n    return this._addUserScheme(MySelectionColormaker, label)\n  }\n\n  /**\n   * Check if a scheme with the given id exists\n   * @param  {String}  id - the id to check\n   * @return {Boolean} flag indicating if the scheme exists\n   */\n  hasScheme (id: string) {\n    id = id.toLowerCase()\n    return id in this.schemes || id in this.userSchemes\n  }\n}\n\nexport default ColormakerRegistry\n","/**\n * @file Parser Registry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Registry from '../utils/registry'\n\nclass ParserRegistry extends Registry {\n  constructor () {\n    super('parser')\n  }\n\n  __hasObjName (key: string, objName: string) {\n    const parser = this.get(key)\n    return parser && parser.prototype.__objName === objName\n  }\n\n  isTrajectory (key: string) {\n    return this.__hasObjName(key, 'frames')\n  }\n\n  isStructure (key: string) {\n    return this.__hasObjName(key, 'structure')\n  }\n\n  isVolume (key: string) {\n    return this.__hasObjName(key, 'volume')\n  }\n\n  isSurface (key: string) {\n    return this.__hasObjName(key, 'surface')\n  }\n\n  isBinary (key: string) {\n    const parser = this.get(key)\n    return parser && parser.prototype.isBinary\n  }\n\n  isXml (key: string) {\n    const parser = this.get(key)\n    return parser && parser.prototype.isXml\n  }\n\n  isJson (key: string) {\n    const parser = this.get(key)\n    return parser && parser.prototype.isJson\n  }\n\n  getTrajectoryExtensions () {\n    return this.names.filter(name => this.isTrajectory(name))\n  }\n\n  getStructureExtensions () {\n    return this.names.filter(name => this.isStructure(name))\n  }\n\n  getVolumeExtensions () {\n    return this.names.filter(name => this.isVolume(name))\n  }\n\n  getSurfaceExtensions () {\n    return this.names.filter(name => this.isSurface(name))\n  }\n}\n\nexport default ParserRegistry\n","/**\n * @file Worker Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { uniqueArray } from '../utils'\n\nexport type FunctionWithDeps = { __deps?: Function[] } & Function\nexport interface WorkerEvent {\n  data: {\n    __name: string\n    __postId: string\n  }\n}\n\nfunction getWorkerDeps (vars: FunctionWithDeps[]) {\n  const deps = vars\n  vars.forEach(function (sym) {\n    if (sym.__deps) {\n      Array.prototype.push.apply(deps, getWorkerDeps(sym.__deps))\n    }\n  })\n  return deps\n}\n\nfunction makeWorkerString (vars: any) {\n  const deps = uniqueArray(getWorkerDeps(vars))\n  return deps.map(function (sym) {\n    return sym.toString()\n  }).join('\\n\\n\\n')\n}\n\nfunction onmessage (e: WorkerEvent) {\n  const name = e.data.__name\n  const postId = e.data.__postId\n\n  /* global self */\n  if (name === undefined) {\n    console.error('message __name undefined')\n  } else if ((self as any).func === undefined) {\n    console.error('worker func undefined', name)\n  } else {\n    const callback = function (aMessage: any, transferList: any[]) {\n      aMessage = aMessage || {}\n      if (postId !== undefined) aMessage.__postId = postId\n\n      try {\n        (self as any).postMessage(aMessage, transferList)\n      } catch (error) {\n        console.error('self.postMessage:', error);\n        (self as any).postMessage(aMessage)\n      }\n    };\n    (self as any).func(e, callback)\n  }\n}\n\nexport function makeWorkerBlob (func: Function, deps: Function[]) {\n  let str = \"'use strict';\\n\\n\" + makeWorkerString(deps)\n  str += '\\n\\n\\nself.func = ' + func.toString() + ';'\n  str += '\\n\\n\\nself.onmessage = ' + onmessage.toString() + ';'\n    // console.log(str);\n  return new Blob([ str ], { type: 'application/javascript' })\n}\n","/**\n * @file Worker Registry\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { makeWorkerBlob } from './worker-utils'\n\nclass WorkerRegistry {\n  activeWorkerCount = 0\n\n  private _funcDict: { [k: string]: Function } = {}\n  private _depsDict: { [k: string]: Function[] } = {}\n  private _blobDict: { [k: string]: Blob } = {}\n\n  add (name: string, func: Function, deps: Function[]) {\n    this._funcDict[ name ] = func\n    this._depsDict[ name ] = deps\n  }\n\n  get (name: string) {\n    if (!this._blobDict[ name ]) {\n      this._blobDict[ name ] = makeWorkerBlob(\n        this._funcDict[ name ], this._depsDict[ name ]\n      )\n    }\n    return this._blobDict[ name ]\n  }\n}\n\nexport default WorkerRegistry\n","/**\n * @file Globals\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { getBrowser, getQuery, boolean } from './utils'\nimport Registry from './utils/registry'\nimport _ColormakerRegistry from './color/colormaker-registry'\nimport _ParserRegistry from './parser/parser-registry'\nimport _WorkerRegistry from './worker/worker-registry'\nimport { MeasurementRepresentationParameters } from './representation/measurement-representation';\n\n/**\n * The browser name: \"Opera\", \"Chrome\", \"Firefox\", \"Mobile Safari\",\n * \"Internet Explorer\", \"Safari\" or false.\n */\nexport const Browser = getBrowser()\n\n/**\n * Flag indicating support for the 'passive' option for event handler\n */\nexport let SupportsPassiveEventHandler = false\ntry {\n  // Test via a getter in the options object to see if the passive property is accessed\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      SupportsPassiveEventHandler = true\n    }\n  })\n  window.addEventListener('test', e => {}, opts)\n} catch (e) {}\n\n/**\n * Flag indicating a mobile browser\n */\nexport const Mobile = typeof window !== 'undefined' ? typeof window.orientation !== 'undefined' : false\n\nexport let SupportsReadPixelsFloat = false\nexport function setSupportsReadPixelsFloat (value: boolean) {\n  SupportsReadPixelsFloat = value\n}\n\n/**\n * Flag indicating support for the `EXT_frag_depth` WebGL extension\n * (Always present in WebGL2)\n */\nexport let ExtensionFragDepth = false\nexport function setExtensionFragDepth (value: boolean) {\n  ExtensionFragDepth = value\n}\n\nexport const Log = {\n  log: Function.prototype.bind.call(console.log, console),\n  info: Function.prototype.bind.call(console.info, console),\n  warn: Function.prototype.bind.call(console.warn, console),\n  error: Function.prototype.bind.call(console.error, console),\n  time: Function.prototype.bind.call(console.time, console),\n  timeEnd: Function.prototype.bind.call(console.timeEnd, console)\n}\n\nexport let MeasurementDefaultParams: Partial<MeasurementRepresentationParameters> = {\n  color: 'green',\n  labelColor: 0x808080,\n  labelAttachment: 'bottom-center',\n  labelSize: 0.7,\n  labelZOffset: 0.5,\n  labelYOffset: 0.1,\n  labelBorder: true,\n  labelBorderColor: 0xd3d3d3,\n  labelBorderWidth: 0.25,\n  lineOpacity: 0.8,\n  linewidth: 5.0,\n  opacity: 0.6,\n\n  labelUnit: 'angstrom',\n  arcVisible: true,\n  planeVisible: false\n}\nexport function setMeasurementDefaultParams (params = {}) {\n  Object.assign(MeasurementDefaultParams, params)\n}\n\nexport let Debug = boolean(getQuery('debug'))\nexport function setDebug (value: boolean) {\n  Debug = value\n}\n\nexport const WebglErrorMessage = '<div style=\"display:flex;align-items:center;justify-content:center;height:100%;\"><p style=\"padding:15px;text-align:center;\">Your browser/graphics card does not seem to support <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/WebGL\">WebGL</a>.<br/><br/>Find out how to get it <a target=\"_blank\" href=\"http://get.webgl.org/\">here</a>.</p></div>'\n\n/**\n * List of file extensions to be recognized as scripts\n */\nexport const ScriptExtensions = [ 'ngl', 'js' ]\n\nexport const WorkerRegistry = new _WorkerRegistry()\nexport const ColormakerRegistry = new _ColormakerRegistry()\nexport const DatasourceRegistry = new Registry('datasource')\nexport const RepresentationRegistry = new Registry('representatation')\nexport const ParserRegistry = new _ParserRegistry()\nexport const ShaderRegistry = new Registry('shader')\nexport const DecompressorRegistry = new Registry('decompressor')\nexport const ComponentRegistry = new Registry('component')\nexport const BufferRegistry = new Registry('buffer')\nexport const PickerRegistry = new Registry('picker')\n\nexport let ListingDatasource: any\nexport function setListingDatasource (value: boolean) {\n  ListingDatasource = value\n}\n\nexport let TrajectoryDatasource: any\nexport function setTrajectoryDatasource (value: boolean) {\n  TrajectoryDatasource = value\n}\n","/**\n * @file Streamer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { DecompressorRegistry } from '../globals'\nimport { uint8ToString, defaults } from '../utils'\n\nexport interface StreamerParams {\n  compressed?: string|false\n  binary?: boolean\n  json?: boolean\n  xml?: boolean\n}\n\nabstract class Streamer {\n  src: any\n  data: any\n\n  compressed: string|false\n  binary: boolean\n  json: boolean\n  xml: boolean\n\n  chunkSize = 1024 * 1024 * 10\n  newline = '\\n'\n\n  protected __pointer = 0\n  protected __partialLine = ''\n\n  constructor (src: any, params: StreamerParams = {}) {\n    this.compressed = defaults(params.compressed, false)\n    this.binary = defaults(params.binary, false)\n    this.json = defaults(params.json, false)\n    this.xml = defaults(params.xml, false)\n\n    this.src = src\n  }\n\n  isBinary () {\n    return this.binary || this.compressed\n  }\n\n  read () {\n    return this._read().then(data => {\n      const decompressFn = this.compressed ? DecompressorRegistry.get(this.compressed) : undefined\n\n      if (this.compressed && decompressFn) {\n        this.data = decompressFn(data)\n      } else {\n        if ((this.binary || this.compressed) && data instanceof ArrayBuffer) {\n          data = new Uint8Array(data)\n        }\n        this.data = data\n      }\n\n      return this.data\n    })\n  }\n\n  protected abstract _read (): Promise<any>\n\n  protected _chunk (start: number, end: number) {\n    end = Math.min(this.data.length, end)\n\n    if (start === 0 && this.data.length === end) {\n      return this.data\n    } else {\n      if (this.isBinary()) {\n        return this.data.subarray(start, end)\n      } else {\n        return this.data.substring(start, end)\n      }\n    }\n  }\n\n  chunk (start: number) {\n    const end = start + this.chunkSize\n\n    return this._chunk(start, end)\n  }\n\n  peekLines (m: number) {\n    const data = this.data\n    const n = data.length\n\n    // FIXME does not work for multi-char newline\n    const newline = this.isBinary() ? this.newline.charCodeAt(0) : this.newline\n\n    let i\n    let count = 0\n    for (i = 0; i < n; ++i) {\n      if (data[ i ] === newline) ++count\n      if (count === m) break\n    }\n\n    const chunk = this._chunk(0, i + 1)\n    const d = this.chunkToLines(chunk, '', i > n)\n\n    return d.lines\n  }\n\n  chunkCount () {\n    return Math.floor(this.data.length / this.chunkSize) + 1\n  }\n\n  asText () {\n    return this.isBinary() ? uint8ToString(this.data) : this.data\n  }\n\n  chunkToLines (chunk: string|Uint8Array, partialLine: string, isLast: boolean) {\n    const newline = this.newline\n\n    if (!this.isBinary() && chunk.length === this.data.length) {\n      return {\n        lines: (chunk as string).split(newline),\n        partialLine: ''\n      }\n    }\n\n    let lines: string[] = []\n    const str = this.isBinary() ? uint8ToString(chunk as Uint8Array) : chunk\n    const idx = str.lastIndexOf(newline)\n\n    if (idx === -1) {\n      partialLine += str\n    } else {\n      const str2 = partialLine + str.substr(0, idx)\n      lines = lines.concat(str2.split(newline))\n\n      if (idx === str.length - newline.length) {\n        partialLine = ''\n      } else {\n        partialLine = str.substr(idx + newline.length)\n      }\n    }\n\n    if (isLast && partialLine !== '') {\n      lines.push(partialLine)\n    }\n\n    return {\n      lines: lines,\n      partialLine: partialLine\n    }\n  }\n\n  nextChunk () {\n    const start = this.__pointer\n\n    if (start > this.data.length) {\n      return undefined\n    }\n\n    this.__pointer += this.chunkSize\n    return this.chunk(start)\n  }\n\n  nextChunkOfLines () {\n    const chunk = this.nextChunk()\n\n    if (chunk === undefined) {\n      return undefined\n    }\n\n    const isLast = this.__pointer > this.data.length\n    const d = this.chunkToLines(chunk, this.__partialLine, isLast)\n\n    this.__partialLine = d.partialLine\n\n    return d.lines\n  }\n\n  eachChunk (callback: (chunk: string|Uint8Array, chunkNo: number, chunkCount: number) => void) {\n    const chunkSize = this.chunkSize\n    const n = this.data.length\n    const chunkCount = this.chunkCount()\n\n    for (let i = 0; i < n; i += chunkSize) {\n      const chunk = this.chunk(i)\n      const chunkNo = Math.round(i / chunkSize)\n\n      callback(chunk, chunkNo, chunkCount)\n    }\n  }\n\n  eachChunkOfLines (callback: (chunk: string[], chunkNo: number, chunkCount: number) => void) {\n    this.eachChunk((chunk, chunkNo, chunkCount) => {\n      const isLast = chunkNo === chunkCount + 1\n      const d = this.chunkToLines(chunk, this.__partialLine, isLast)\n\n      this.__partialLine = d.partialLine\n\n      callback(d.lines, chunkNo, chunkCount)\n    })\n  }\n\n  dispose () {\n    delete this.src\n  }\n}\n\nexport default Streamer\n","/**\n * @file File Streamer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Streamer from './streamer'\n\ninterface FileReaderEventTarget extends EventTarget {\n    result:string | ArrayBuffer | null\n}\n\ninterface FileReaderEvent extends ProgressEvent {\n    target: FileReaderEventTarget | null;\n}\n\nclass FileStreamer extends Streamer {\n  _read () {\n    return new Promise((resolve, reject) => {\n      const file = this.src\n      const reader = new FileReader()\n\n      reader.onload = (event: FileReaderEvent) => {\n        if(event.target) resolve(event.target.result)\n      }\n\n      // if (typeof this.onprogress === 'function') {\n      //   reader.onprogress = event => this.onprogress(event)\n      // }\n\n      reader.onerror = event => reject(event)\n\n      if (this.binary || this.compressed) {\n        reader.readAsArrayBuffer(file)\n      } else {\n        reader.readAsText(file)\n      }\n    })\n  }\n}\n\nexport default FileStreamer\n","/**\n * @file Network Streamer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Streamer from './streamer'\n\nclass NetworkStreamer extends Streamer {\n  _read () {\n    return new Promise((resolve, reject) => {\n      const url = this.src\n      const xhr = new XMLHttpRequest()\n\n      xhr.open('GET', url, true)\n\n      xhr.addEventListener('load', () => {\n        if (xhr.status === 200 || xhr.status === 304 ||\n            // when requesting from local file system\n            // the status in Google Chrome/Chromium is 0\n            xhr.status === 0\n        ) {\n          try {\n            resolve(xhr.response)\n          } catch (e) {\n            reject(e)\n          }\n        } else {\n          reject(xhr.statusText)\n        }\n      }, false)\n\n      // if (typeof this.onprogress === 'function') {\n      //   xhr.addEventListener('progress', event => this.onprogress(event), false);\n      // }\n\n      xhr.addEventListener('error', event => reject('network error'), false)\n\n      if (this.isBinary()) {\n        xhr.responseType = 'arraybuffer'\n      } else if (this.json) {\n        xhr.responseType = 'json'\n      } else if (this.xml) {\n        xhr.responseType = 'document'\n      } else {\n        xhr.responseType = 'text'\n      }\n      // xhr.crossOrigin = true;\n\n      xhr.send()\n    })\n  }\n}\n\nexport default NetworkStreamer\n","/**\n * @file Loader\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport { createParams } from '../utils'\nimport { Partial } from '../types'\nimport FileStreamer from '../streamer/file-streamer'\nimport NetworkStreamer from '../streamer/network-streamer'\nimport { LoaderParameters, LoaderInput } from './loader-utils'\n\n/**\n * Loader parameter object.\n * @typedef {Object} LoaderParameters - loader parameters\n * @property {String} ext - file extension, determines file type\n * @property {Boolean} compressed - flag data as compressed\n * @property {Boolean} binary - flag data as binary\n * @property {String} name - set data name\n */\n\n/**\n * Loader base class\n */\nabstract class Loader {\n  parameters: LoaderParameters\n  streamer: FileStreamer | NetworkStreamer\n\n  /**\n   * Construct a loader object\n   * @param  {String|File|Blob} src - data source, string is interpreted as an URL\n   * @param  {LoaderParameters} params - parameters object\n   */\n  constructor (src: LoaderInput, params: Partial<LoaderParameters> = {}) {\n    this.parameters = createParams(params, {\n      ext: '',\n      compressed: false,\n      binary: ParserRegistry.isBinary(params.ext || ''),\n      name: '',\n\n      dir: '',\n      path: '',\n      protocol: ''\n    } as LoaderParameters)\n\n    const streamerParams = {\n      compressed: this.parameters.compressed as string|false,\n      binary: this.parameters.binary,\n      json: ParserRegistry.isJson(this.parameters.ext),\n      xml: ParserRegistry.isXml(this.parameters.ext)\n    }\n\n    if ((typeof File !== 'undefined' && src instanceof File) ||\n        (typeof Blob !== 'undefined' && src instanceof Blob)\n    ) {\n      this.streamer = new FileStreamer(src, streamerParams)\n    } else {\n      this.streamer = new NetworkStreamer(src, streamerParams)\n    }\n  }\n\n  /**\n   * Load data\n   * @abstract\n   * @return {Promise} resolves to the loaded data {@link Object}\n   */\n  abstract load (): Promise<any>\n}\n\nexport default Loader\n","/**\n * @file Parser Loader\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport Loader from './loader'\nimport { LoaderParameters, LoaderInput } from './loader-utils'\n\nexport interface ParserParams {\n  voxelSize?: number\n  firstModelOnly?: boolean\n  asTrajectory?: boolean\n  cAlphaOnly?: boolean\n  name?: string\n  path?: string\n  delimiter?: string\n  comment?: string\n  columnNames?: string\n}\n\n/**\n * Parser loader class\n * @extends Loader\n */\nclass ParserLoader extends Loader {\n  parserParams: ParserParams\n\n  constructor (src: LoaderInput, params: Partial<LoaderParameters> & ParserParams = {}) {\n    super(src, params)\n    this.parserParams = {\n      voxelSize: params.voxelSize,\n      firstModelOnly: params.firstModelOnly,\n      asTrajectory: params.asTrajectory,\n      cAlphaOnly: params.cAlphaOnly,\n      delimiter: params.delimiter,\n      comment: params.comment,\n      columnNames: params.columnNames,\n      name: this.parameters.name,\n      path: this.parameters.path\n    }\n  }\n\n  /**\n   * Load parsed object\n   * @return {Promise} resolves to the loaded & parsed {@link Structure},\n   *                   {@link Volume}, {@link Surface} or data object\n   */\n  load () {\n    var ParserClass = ParserRegistry.get(this.parameters.ext)\n    var parser = new ParserClass(this.streamer, this.parserParams)\n\n    return parser.parse()\n  }\n}\n\nexport default ParserLoader\n","/**\n * @file Script\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { Log } from './globals'\nimport Stage from './stage/stage'\n\nexport interface ScriptSignals {\n  elementAdded: Signal\n  elementRemoved: Signal\n  nameChanged: Signal\n}\n\n/**\n * Script class\n */\nclass Script {\n  readonly signals: ScriptSignals = {\n    elementAdded: new Signal(),\n    elementRemoved: new Signal(),\n    nameChanged: new Signal()\n  }\n\n  readonly dir: string\n  readonly fn: Function\n\n  readonly type = 'Script'\n\n  /**\n   * Create a script instance\n   * @param {String} functionBody - the function source\n   * @param {String} name - name of the script\n   * @param {String} path - path of the script\n   */\n  constructor (functionBody: string, readonly name: string, readonly path: string) {\n    this.dir = path.substring(0, path.lastIndexOf('/') + 1)\n\n    try {\n      /* eslint-disable no-new-func */\n      this.fn = new Function('stage', '__name', '__path', '__dir', functionBody)\n    } catch (e) {\n      Log.error('Script compilation failed', e)\n      this.fn = function () {}\n    }\n  }\n\n  /**\n   * Execute the script\n   * @param  {Stage} stage - the stage context\n   * @return {Promise} - resolve when script finished running\n   */\n  run (stage: Stage) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.fn.apply(null, [ stage, this.name, this.path, this.dir ])\n        resolve()\n      } catch (e) {\n        Log.error('Script.fn', e)\n        reject(e)\n      }\n    })\n  }\n}\n\nexport default Script\n","/**\n * @file Script Loader\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Loader from './loader'\nimport Script from '../script'\n\n/**\n * Script loader class\n * @extends Loader\n */\nclass ScriptLoader extends Loader {\n  /**\n   * Load script\n   * @return {Promise} resolves to the loaded {@link Script}\n   */\n  load () {\n    return this.streamer.read().then(() => {\n      return new Script(\n        this.streamer.asText(), this.parameters.name, this.parameters.path\n      )\n    })\n  }\n}\n\nexport default ScriptLoader\n","/**\n * @file Loader Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport {\n  DatasourceRegistry, DecompressorRegistry, ParserRegistry, ScriptExtensions\n} from '../globals'\nimport { Partial } from '../types'\nimport ParserLoader from './parser-loader'\nimport ScriptLoader from './script-loader'\n\nexport interface LoaderParameters {\n ext: string  // file extension, determines file type\n compressed: string|false  // flag data as compressed\n binary: boolean  // flag data as binary\n name: string  // set data name\n\n dir: string\n path: string\n protocol: string\n}\n\nexport type LoaderInput = File|Blob|string\n\nexport function getFileInfo (file: LoaderInput) {\n  const compressedExtList = DecompressorRegistry.names\n\n  let path: string\n  let compressed: string|false\n  let protocol = ''\n\n  if (file instanceof File) {\n    path = file.name\n  } else if (file instanceof Blob) {\n    path = ''\n  } else {\n    path = file\n  }\n  const queryIndex = path.lastIndexOf('?')\n  const query = queryIndex !== -1 ? path.substring(queryIndex) : ''\n  path = path.substring(0, queryIndex === -1 ? path.length : queryIndex)\n\n  const name = path.replace(/^.*[\\\\/]/, '')\n  let base = name.substring(0, name.lastIndexOf('.'))\n\n  const nameSplit = name.split('.')\n  let ext = nameSplit.length > 1 ? (nameSplit.pop() || '').toLowerCase() : ''\n\n  const protocolMatch = path.match(/^(.+):\\/\\/(.+)$/)\n  if (protocolMatch) {\n    protocol = protocolMatch[ 1 ].toLowerCase()\n    path = protocolMatch[ 2 ] || ''\n  }\n\n  const dir = path.substring(0, path.lastIndexOf('/') + 1)\n\n  if (compressedExtList.includes(ext)) {\n    compressed = ext\n    const n = path.length - ext.length - 1\n    ext = (path.substr(0, n).split('.').pop() || '').toLowerCase()\n    const m = base.length - ext.length - 1\n    base = base.substr(0, m)\n  } else {\n    compressed = false\n  }\n\n  return { path, name, ext, base, dir, compressed, protocol, query, 'src': file }\n}\n\nexport function getDataInfo (src: LoaderInput) {\n  let info = getFileInfo(src)\n  const datasource = DatasourceRegistry.get(info.protocol)\n  if (datasource) {\n    info = getFileInfo(datasource.getUrl(info.src))\n    if (!info.ext && datasource.getExt) {\n      info.ext = datasource.getExt(src)\n    }\n  }\n  return info\n}\n\n/**\n * Load a file\n *\n * @example\n * // load from URL\n * NGL.autoLoad( \"http://files.rcsb.org/download/5IOS.cif\" );\n *\n * @example\n * // load binary data in CCP4 format via a Blob\n * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\n * NGL.autoLoad( binaryBlob, { ext: \"ccp4\" } );\n *\n * @example\n * // load string data in PDB format via a Blob\n * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\n * NGL.autoLoad( stringBlob, { ext: \"pdb\" } );\n *\n * @example\n * // load a File object\n * NGL.autoLoad( file );\n *\n * @param  {String|File|Blob} file - either a URL or an object containing the file data\n * @param  {LoaderParameters} params - loading parameters\n * @return {Promise} Promise resolves to the loaded data\n */\nexport function autoLoad (file: LoaderInput, params: Partial<LoaderParameters> = {}) {\n  const p = Object.assign(getDataInfo(file), params)\n\n  let loader\n  if (ParserRegistry.names.includes(p.ext)) {\n    loader = new ParserLoader(p.src, p)\n  } else if (ScriptExtensions.includes(p.ext)) {\n    loader = new ScriptLoader(p.src, p)\n  }\n\n  if (loader) {\n    return loader.load()\n  } else {\n    return Promise.reject(new Error(`autoLoad: ext '${p.ext}' unknown`))\n  }\n}\n","/**\n * @file Writer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults, download } from '../utils'\n\n/**\n * Base class for writers\n * @interface\n */\nabstract class Writer {\n  readonly mimeType: string\n  readonly defaultName: string\n  readonly defaultExt: string\n\n  /**\n   * @abstract\n   * @return {Anything} the data to be written\n   */\n  abstract getData (): any\n\n  /**\n   * Get a blob with the written data\n   * @return {Blob} the blob\n   */\n  getBlob () {\n    return new Blob([ this.getData() ], { type: this.mimeType })\n  }\n\n  /**\n   * Trigger a download of the\n   * @param  {[type]} name [description]\n   * @param  {[type]} ext  [description]\n   * @return {[type]}      [description]\n   */\n  download (name?: string, ext?: string) {\n    name = defaults(name, this.defaultName)\n    ext = defaults(ext, this.defaultExt)\n\n    download(this.getBlob(), `${name}.${ext}`)\n  }\n}\n\nexport default Writer","/**\n * @file Pdb Writer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { sprintf } from 'sprintf-js'\n\nimport Writer from './writer'\nimport { defaults, ensureArray } from '../utils'\nimport Structure from '../structure/structure'\nimport AtomProxy from '../proxy/atom-proxy'\n\n// http://www.wwpdb.org/documentation/file-format\n\n// Sample PDB line, the coords X,Y,Z are fields 5,6,7 on each line.\n// ATOM      1  N   ARG     1      29.292  13.212 -12.751  1.00 33.78      1BPT 108\n\nconst AtomFormat =\n  'ATOM  %5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s%1s%1s'\n\nconst HetatmFormat =\n  'HETATM%5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s%1s%1s'\n\nexport interface PdbWriterParams {\n  renumberSerial: boolean\n  remarks: string[]\n}\n\n/**\n * Create a PDB file from a Structure object\n */\nexport default class PdbWriter extends Writer {\n  readonly mimeType = 'text/plain'\n  readonly defaultName = 'structure'\n  readonly defaultExt = 'pdb'\n\n  renumberSerial: boolean\n  remarks: string[]\n\n  structure: Structure\n  private _records: string[]\n\n  /**\n   * @param  {Structure} structure - the structure object\n   * @param  {Object} params - parameters]\n   */\n  constructor (structure: Structure, params?: PdbWriterParams) {\n    super()\n\n    const p = Object.assign({}, params)\n\n    this.renumberSerial = defaults(p.renumberSerial, true)\n    this.remarks = ensureArray(defaults(p.remarks, []))\n\n    this.structure = structure\n    this._records = []\n  }\n\n  private _writeRecords () {\n    this._records.length = 0\n\n    this._writeTitle()\n    this._writeRemarks()\n    this._writeAtoms()\n  }\n\n  private _writeTitle () {\n    // FIXME multiline if title line longer than 80 chars\n    this._records.push(sprintf('TITLE %-74s', this.structure.name))\n  }\n\n  private _writeRemarks () {\n    this.remarks.forEach(str => {\n      this._records.push(sprintf('REMARK %-73s', str))\n    })\n\n    if (this.structure.trajectory) {\n      this._records.push(sprintf(\n        'REMARK %-73s',\n        \"Trajectory '\" + this.structure.trajectory.name + \"'\"\n      ))\n      this._records.push(sprintf(\n        'REMARK %-73s',\n        `Frame ${(this.structure.trajectory as any).frame}`  // TODO\n      ))\n    }\n  }\n\n  private _writeAtoms () {\n    let ia = 1\n    let im = 1\n    let charge = \" \"\n    let chargeSign = \" \"\n\n    this.structure.eachModel(m => {\n      this._records.push(sprintf('MODEL %-74d', im++))\n\n      m.eachAtom((a: AtomProxy) => {\n        const formatString = a.hetero ? HetatmFormat : AtomFormat\n        const serial = this.renumberSerial ? ia : a.serial\n\n        // Alignment of one-letter atom name such as C starts at column 14,\n        // while two-letter atom name such as FE starts at column 13.\n        let atomname = a.atomname\n        if (atomname.length === 1) atomname = ' ' + atomname\n\n        if (a.formalCharge) { // Skip nulls and zeros\n          charge = Math.abs(a.formalCharge).toPrecision(1)\n          chargeSign = (a.formalCharge > 0) ? \"+\" : \"-\"\n        } else {\n          charge = \" \"\n          chargeSign = \" \"\n        }\n\n        this._records.push(sprintf(\n          formatString,\n\n          serial,\n          atomname,\n          a.resname,\n          defaults(a.chainname, ' '),\n          a.resno,\n          a.x, a.y, a.z,\n          defaults(a.occupancy, 1.0),\n          defaults(a.bfactor, 0.0),\n          '',  // segid\n          defaults(a.element, ''),\n          charge,\n          chargeSign\n        ))\n        ia += 1\n      }, this.structure.getSelection())\n\n      this._records.push(sprintf('%-80s', 'ENDMDL'))\n      im += 1\n    })\n\n    this._records.push(sprintf('%-80s', 'END'))\n  }\n\n  getString () {\n    console.warn('PdbWriter.getString() is deprecated, use .getData instead')\n    return this.getData()\n  }\n\n  /**\n   * Get string containing the PDB file data\n   * @return {String} PDB file\n   */\n  getData () {\n    this._writeRecords()\n    return this._records.join('\\n')\n  }\n}\n","/**\n * Writer class for sdf/mol files.\n */\n\nimport { sprintf } from 'sprintf-js'\n\nimport Writer from './writer'\nimport Structure from '../structure/structure'\nimport AtomProxy from '../proxy/atom-proxy'\nimport BondProxy from '../proxy/bond-proxy'\n\n// Hard-coded chiral as false as we don't specify it any atoms\nconst CountFormat = '%3i%3i  0  0  0  0  0  0  0  0999 V2000'\nconst AtomLine = '%10.4f%10.4f%10.4f %-3s 0%3i  0  0  0'\nconst BondFormat = '%3i%3i%3i  0  0  0'\n\nclass SdfWriter extends Writer {\n  readonly mimeType = 'text/plain'\n  readonly defaultName = 'structure'\n  readonly defaultExt = 'sdf'\n\n  structure: Structure\n  private _records: string[]\n\n  /**\n   * @param {Structure} structure - structure to write\n   * @param {Object} params - parameters\n   */\n  constructor (structure: Structure) {\n    super()\n\n    this.structure = structure\n    // Follow the pdb-writer example:\n    this._records = []\n  }\n\n  get idString () {\n    return this.structure.id\n  }\n\n  get titleString () {\n    return '  ' + this.structure.title\n  }\n\n  get countsString () {\n    return sprintf(\n      CountFormat,\n      this.structure.atomCount,\n      this.structure.bondCount\n      )\n  }\n\n  get chargeLines () {\n    const pairs: [number, number][] = []\n    this.structure.eachAtom(ap => {\n      if (ap.formalCharge != null && ap.formalCharge !== 0) {\n        pairs.push([ap.index, ap.formalCharge])\n      }\n    })\n    const lines = []\n    for (let i = 0; i < pairs.length; i += 8) {\n      const nCharges = Math.min(8, pairs.length - i)\n      let s = sprintf('M  CHG%3i', nCharges)\n      for (let j = i; j < i + nCharges; j++) {\n        s += sprintf(' %3i %3i', pairs[j][0] + 1, pairs[j][1])\n      }\n      lines.push(s)\n    }\n    return lines\n  }\n\n  formatAtom (ap: AtomProxy) {\n    let charge = 0\n    if (ap.formalCharge != null && ap.formalCharge !== 0) {\n      charge = 4 - ap.formalCharge\n    }\n    const line = sprintf(\n      AtomLine, ap.x, ap.y, ap.z, ap.element, charge\n    )\n    if (line.length !== 48) { throw new Error('Incompatible atom for sdf format') }\n\n    return line\n  }\n\n  formatBond (bp: BondProxy) {\n    return sprintf(\n      BondFormat,\n      bp.atomIndex1 + 1,\n      bp.atomIndex2 + 1,\n      bp.bondOrder)\n  }\n\n  _writeRecords () {\n    this._records.length = 0\n    this._writeHeader()\n    this._writeCTab()\n    this._writeFooter()\n  }\n\n  _writeHeader () {\n    this._records.push(this.idString, this.titleString, '')\n  }\n\n  _writeCTab () {\n    this._records.push(this.countsString)\n    this.structure.eachAtom(ap => {\n      this._records.push(this.formatAtom(ap))\n    })\n    this.structure.eachBond(bp => {\n      this._records.push(this.formatBond(bp))\n    })\n    this.chargeLines.forEach(line => {\n      this._records.push(line)\n    })\n    this._records.push('M  END')\n  }\n\n  _writeFooter () {\n    this._records.push('$$$$')\n  }\n\n  getData () {\n    this._writeRecords()\n    return this._records.join('\\n')\n  }\n}\n\nexport default SdfWriter\n","/**\n * @file IO Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n *\n * Adapted and converted to TypeScript from https://github.com/image-js/iobuffer\n * MIT License, Copyright (c) 2015 Michaël Zasso\n */\n\nimport { TypedArray } from '../types'\n\nconst defaultByteLength = 1024 * 8\nconst charArray: string[] = []\n\nexport interface IOBufferParameters {\n  offset?: number  // Ignore the first n bytes of the ArrayBuffer\n}\n\n/**\n * Class for writing and reading binary data\n */\nclass IOBuffer {\n  private _lastWrittenByte: number\n  private _mark = 0\n  private _marks: number[] = []\n  private _data: DataView\n\n  offset = 0  // The current offset of the buffer's pointer\n  littleEndian = true\n  buffer: ArrayBuffer  // Reference to the internal ArrayBuffer object\n  length: number  // Byte length of the internal ArrayBuffer\n  byteLength: number  // Byte length of the internal ArrayBuffer\n  byteOffset: number  // Byte offset of the internal ArrayBuffer\n\n  /**\n   * If it's a number, it will initialize the buffer with the number as\n   * the buffer's length. If it's undefined, it will initialize the buffer\n   * with a default length of 8 Kb. If its an ArrayBuffer, a TypedArray,\n   * it will create a view over the underlying ArrayBuffer.\n   */\n  constructor (data: number|ArrayBuffer|TypedArray, params: IOBufferParameters = {}) {\n    let dataIsGiven = false\n    if (data === undefined) {\n      data = defaultByteLength\n    }\n    if (typeof data === 'number') {\n      data = new ArrayBuffer(data)\n    } else {\n      dataIsGiven = true\n    }\n\n    const offset = params.offset ? params.offset >>> 0 : 0\n    let byteLength = data.byteLength - offset\n    let dvOffset = offset\n    if (!(data instanceof ArrayBuffer)) {\n      if (data.byteLength !== data.buffer.byteLength) {\n        dvOffset = data.byteOffset + offset\n      }\n      data = data.buffer\n    }\n    if (dataIsGiven) {\n      this._lastWrittenByte = byteLength\n    } else {\n      this._lastWrittenByte = 0\n    }\n\n    this.buffer = data\n    this.length = byteLength\n    this.byteLength = byteLength\n    this.byteOffset = dvOffset\n\n    this._data = new DataView(this.buffer, dvOffset, byteLength)\n  }\n\n  /**\n   * Checks if the memory allocated to the buffer is sufficient to store more bytes after the offset\n   * @param {number} [byteLength=1] The needed memory in bytes\n   * @return {boolean} Returns true if there is sufficient space and false otherwise\n   */\n  available (byteLength: number) {\n    if (byteLength === undefined) byteLength = 1\n    return (this.offset + byteLength) <= this.length\n  }\n\n  /**\n   * Check if little-endian mode is used for reading and writing multi-byte values\n   * @return {boolean} Returns true if little-endian mode is used, false otherwise\n   */\n  isLittleEndian () {\n    return this.littleEndian\n  }\n\n  /**\n   * Set little-endian mode for reading and writing multi-byte values\n   * @return {IOBuffer}\n   */\n  setLittleEndian () {\n    this.littleEndian = true\n    return this\n  }\n\n  /**\n   * Check if big-endian mode is used for reading and writing multi-byte values\n   * @return {boolean} Returns true if big-endian mode is used, false otherwise\n   */\n  isBigEndian () {\n    return !this.littleEndian\n  }\n\n  /**\n   * Switches to big-endian mode for reading and writing multi-byte values\n   * @return {IOBuffer}\n   */\n  setBigEndian () {\n    this.littleEndian = false\n    return this\n  }\n\n  /**\n   * Move the pointer n bytes forward\n   * @param {number} n\n   * @return {IOBuffer}\n   */\n  skip (n: number) {\n    if (n === undefined) n = 1\n    this.offset += n\n    return this\n  }\n\n  /**\n   * Move the pointer to the given offset\n   * @param {number} offset\n   * @return {IOBuffer}\n   */\n  seek (offset: number) {\n    this.offset = offset\n    return this\n  }\n\n  /**\n   * Store the current pointer offset.\n   * @see {@link IOBuffer#reset}\n   * @return {IOBuffer}\n   */\n  mark () {\n    this._mark = this.offset\n    return this\n  }\n\n  /**\n   * Move the pointer back to the last pointer offset set by mark\n   * @see {@link IOBuffer#mark}\n   * @return {IOBuffer}\n   */\n  reset () {\n    this.offset = this._mark\n    return this\n  }\n\n  /**\n   * Push the current pointer offset to the mark stack\n   * @see {@link IOBuffer#popMark}\n   * @return {IOBuffer}\n   */\n  pushMark () {\n    this._marks.push(this.offset)\n    return this\n  }\n\n  /**\n   * Pop the last pointer offset from the mark stack, and set the current pointer offset to the popped value\n   * @see {@link IOBuffer#pushMark}\n   * @return {IOBuffer}\n   */\n  popMark () {\n    const offset = this._marks.pop()\n    if (offset === undefined) throw new Error('Mark stack empty')\n    this.seek(offset)\n    return this\n  }\n\n  /**\n   * Move the pointer offset back to 0\n   * @return {IOBuffer}\n   */\n  rewind () {\n    this.offset = 0\n    return this\n  }\n\n  /**\n   * Make sure the buffer has sufficient memory to write a given byteLength at the current pointer offset\n   * If the buffer's memory is insufficient, this method will create a new buffer (a copy) with a length\n   * that is twice (byteLength + current offset)\n   * @param {number} [byteLength = 1]\n   * @return {IOBuffer}\n   */\n  ensureAvailable (byteLength: number) {\n    if (byteLength === undefined) byteLength = 1\n    if (!this.available(byteLength)) {\n      const lengthNeeded = this.offset + byteLength\n      const newLength = lengthNeeded * 2\n      const newArray = new Uint8Array(newLength)\n      newArray.set(new Uint8Array(this.buffer))\n      this.buffer = newArray.buffer\n      this.length = this.byteLength = newLength\n      this._data = new DataView(this.buffer)\n    }\n    return this\n  }\n\n  /**\n   * Read a byte and return false if the byte's value is 0, or true otherwise\n   * Moves pointer forward\n   * @return {boolean}\n   */\n  readBoolean () {\n    return this.readUint8() !== 0\n  }\n\n  /**\n   * Read a signed 8-bit integer and move pointer forward\n   * @return {number}\n   */\n  readInt8 () {\n    return this._data.getInt8(this.offset++)\n  }\n\n  /**\n   * Read an unsigned 8-bit integer and move pointer forward\n   * @return {number}\n   */\n  readUint8 () {\n    return this._data.getUint8(this.offset++)\n  }\n\n  /**\n   * Alias for {@link IOBuffer#readUint8}\n   * @return {number}\n   */\n  readByte () {\n    return this.readUint8()\n  }\n\n  /**\n   * Read n bytes and move pointer forward.\n   * @param {number} n\n   * @return {Uint8Array}\n   */\n  readBytes (n: number) {\n    if (n === undefined) n = 1\n    var bytes = new Uint8Array(n)\n    for (var i = 0; i < n; i++) {\n      bytes[i] = this.readByte()\n    }\n    return bytes\n  }\n\n  /**\n   * Read a 16-bit signed integer and move pointer forward\n   * @return {number}\n   */\n  readInt16 () {\n    var value = this._data.getInt16(this.offset, this.littleEndian)\n    this.offset += 2\n    return value\n  }\n\n  /**\n   * Read a 16-bit unsigned integer and move pointer forward\n   * @return {number}\n   */\n  readUint16 () {\n    var value = this._data.getUint16(this.offset, this.littleEndian)\n    this.offset += 2\n    return value\n  }\n\n  /**\n   * Read a 32-bit signed integer and move pointer forward\n   * @return {number}\n   */\n  readInt32 () {\n    var value = this._data.getInt32(this.offset, this.littleEndian)\n    this.offset += 4\n    return value\n  }\n\n  /**\n   * Read a 32-bit unsigned integer and move pointer forward\n   * @return {number}\n   */\n  readUint32 () {\n    var value = this._data.getUint32(this.offset, this.littleEndian)\n    this.offset += 4\n    return value\n  }\n\n  /**\n   * Read a 32-bit floating number and move pointer forward\n   * @return {number}\n   */\n  readFloat32 () {\n    var value = this._data.getFloat32(this.offset, this.littleEndian)\n    this.offset += 4\n    return value\n  }\n\n  /**\n   * Read a 64-bit floating number and move pointer forward\n   * @return {number}\n   */\n  readFloat64 () {\n    var value = this._data.getFloat64(this.offset, this.littleEndian)\n    this.offset += 8\n    return value\n  }\n\n  /**\n   * Read 1-byte ascii character and move pointer forward\n   * @return {string}\n   */\n  readChar () {\n    return String.fromCharCode(this.readInt8())\n  }\n\n  /**\n   * Read n 1-byte ascii characters and move pointer forward\n   * @param {number} n\n   * @return {string}\n   */\n  readChars (n = 1) {\n    charArray.length = n\n    for (var i = 0; i < n; i++) {\n      charArray[i] = this.readChar()\n    }\n    return charArray.join('')\n  }\n\n  /**\n   * Write 0xff if the passed value is truthy, 0x00 otherwise\n   * @param {any} value\n   * @return {IOBuffer}\n   */\n  writeBoolean (value = false) {\n    this.writeUint8(value ? 0xff : 0x00)\n    return this\n  }\n\n  /**\n   * Write value as an 8-bit signed integer\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeInt8 (value: number) {\n    this.ensureAvailable(1)\n    this._data.setInt8(this.offset++, value)\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write value as a 8-bit unsigned integer\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeUint8 (value: number) {\n    this.ensureAvailable(1)\n    this._data.setUint8(this.offset++, value)\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * An alias for {@link IOBuffer#writeUint8}\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeByte (value: number) {\n    return this.writeUint8(value)\n  }\n\n  /**\n   * Write bytes\n   * @param {Array|Uint8Array} bytes\n   * @return {IOBuffer}\n   */\n  writeBytes (bytes: number[]|Uint8Array) {\n    this.ensureAvailable(bytes.length)\n    for (var i = 0; i < bytes.length; i++) {\n      this._data.setUint8(this.offset++, bytes[i])\n    }\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write value as an 16-bit signed integer\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeInt16 (value: number) {\n    this.ensureAvailable(2)\n    this._data.setInt16(this.offset, value, this.littleEndian)\n    this.offset += 2\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write value as a 16-bit unsigned integer\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeUint16 (value: number) {\n    this.ensureAvailable(2)\n    this._data.setUint16(this.offset, value, this.littleEndian)\n    this.offset += 2\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write a 32-bit signed integer at the current pointer offset\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeInt32 (value: number) {\n    this.ensureAvailable(4)\n    this._data.setInt32(this.offset, value, this.littleEndian)\n    this.offset += 4\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write a 32-bit unsigned integer at the current pointer offset\n   * @param {number} value - The value to set\n   * @return {IOBuffer}\n   */\n  writeUint32 (value: number) {\n    this.ensureAvailable(4)\n    this._data.setUint32(this.offset, value, this.littleEndian)\n    this.offset += 4\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write a 32-bit floating number at the current pointer offset\n   * @param {number} value - The value to set\n   * @return {IOBuffer}\n   */\n  writeFloat32 (value: number) {\n    this.ensureAvailable(4)\n    this._data.setFloat32(this.offset, value, this.littleEndian)\n    this.offset += 4\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write a 64-bit floating number at the current pointer offset\n   * @param {number} value\n   * @return {IOBuffer}\n   */\n  writeFloat64 (value: number) {\n    this.ensureAvailable(8)\n    this._data.setFloat64(this.offset, value, this.littleEndian)\n    this.offset += 8\n    this._updateLastWrittenByte()\n    return this\n  }\n\n  /**\n   * Write the charCode of the passed string's first character to the current pointer offset\n   * @param {string} str - The character to set\n   * @return {IOBuffer}\n   */\n  writeChar (str: string) {\n    return this.writeUint8(str.charCodeAt(0))\n  }\n\n  /**\n   * Write the charCodes of the passed string's characters to the current pointer offset\n   * @param {string} str\n   * @return {IOBuffer}\n   */\n  writeChars (str: string) {\n    for (var i = 0; i < str.length; i++) {\n      this.writeUint8(str.charCodeAt(i))\n    }\n    return this\n  }\n\n  /**\n   * Export a Uint8Array view of the internal buffer.\n   * The view starts at the byte offset and its length\n   * is calculated to stop at the last written byte or the original length.\n   * @return {Uint8Array}\n   */\n  toArray () {\n    return new Uint8Array(this.buffer, this.byteOffset, this._lastWrittenByte)\n  }\n\n  /**\n   * Update the last written byte offset\n   * @private\n   */\n  _updateLastWrittenByte () {\n    if (this.offset > this._lastWrittenByte) {\n      this._lastWrittenByte = this.offset\n    }\n  }\n}\n\nexport default IOBuffer\n","/**\n * @file STL Writer\n * @author Paul Pillot <paul.pillot@cimf.ca>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport Writer from './writer'\nimport IOBuffer from '../utils/io-buffer'\nimport Surface from '../surface/surface'\n\n// https://en.wikipedia.org/wiki/STL_(file_format)#ASCII_STL\n\n/**\n * Create an STL File from a surface Object (e.g. for 3D printing)\n *\n * @example\n * molsurf = new MolecularSurface(structure)\n * surf = molsurf.getSurface({type: 'av', probeRadius: 1.4})\n * stl = new StlWriter(surf)\n * stl.download('myFileName')\n */\nexport default class StlWriter extends Writer {\n  readonly mimeType = 'application/vnd.ms-pki.stl'\n  readonly defaultName = 'surface'\n  readonly defaultExt = 'stl'\n\n  surface: any  // TODO\n\n  /**\n   * @param {Surface} surface - the surface to write out\n   */\n  constructor (surface: Surface) {\n    super()\n\n    this.surface = surface\n  }\n\n  /*\n   * Get STL Binary data\n   *\n   * Adapted from: https://github.com/mrdoob/three.js/blob/master/examples/js/exporters/STLBinaryExporter.js\n   * see https://en.wikipedia.org/wiki/STL_(file_format)#Binary_STL for the file format description\n   *\n   * @return {DataView} the data\n   */\n  getData () {\n    const triangles = this.surface.index.length / 3\n    const bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4\n    const output = new IOBuffer(bufferLength)\n\n    output.skip(80)  // skip header\n    output.writeUint32(triangles)\n\n    const vector = new Vector3()\n    const vectorNorm1 = new Vector3()\n    const vectorNorm2 = new Vector3()\n    const vectorNorm3 = new Vector3()\n\n    // traversing vertices\n    for (let i = 0; i < triangles; i++) {\n      const indices = [\n        this.surface.index[i * 3],\n        this.surface.index[i * 3 + 1],\n        this.surface.index[i * 3 + 2]\n      ]\n\n      vectorNorm1.fromArray(this.surface.normal, indices[0] * 3)\n      vectorNorm2.fromArray(this.surface.normal, indices[1] * 3)\n      vectorNorm3.fromArray(this.surface.normal, indices[2] * 3)\n\n      vector.addVectors(vectorNorm1, vectorNorm2).add(vectorNorm3).normalize()\n\n      output.writeFloat32(vector.x)\n      output.writeFloat32(vector.y)\n      output.writeFloat32(vector.z)\n\n      for (let j = 0; j < 3; j++) {\n        vector.fromArray(this.surface.position, indices[j] * 3)\n\n        output.writeFloat32(vector.x)  // vertices\n        output.writeFloat32(vector.y)\n        output.writeFloat32(vector.z)\n      }\n\n      output.writeUint16(0)  // attribute byte count\n    }\n\n    return new DataView(output.buffer)\n  }\n}","/**\n * @file Counter\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log } from '../globals'\n\nimport * as signalsWrapper from 'signals'\n\n/**\n * {@link Signal}, dispatched when the `count` changes\n * @example\n * counter.signals.countChanged.add( function( delta ){ ... } );\n * @event Counter#countChanged\n * @type {Integer}\n */\n\nexport interface CounterSignals {\n  countChanged: signalsWrapper.Signal\n}\n\n/**\n * Counter class for keeping track of counts\n */\nclass Counter {\n  count = 0\n\n  signals: CounterSignals = {\n    countChanged: new signalsWrapper.Signal()\n  }\n\n  /**\n   * Set the `count` to zero\n   * @return {undefined}\n   */\n  clear () {\n    this.change(-this.count)\n  }\n\n  /**\n   * Change the `count`\n   * @fires Counter#countChanged\n   * @param {Integer} delta - count change\n   * @return {undefined}\n   */\n  change (delta: number) {\n    this.count += delta\n    this.signals.countChanged.dispatch(delta, this.count)\n\n    if (this.count < 0) {\n      Log.warn('Counter.count below zero', this.count)\n    }\n  }\n\n  /**\n   * Increments the `count` by one.\n   * @return {undefined}\n   */\n  increment () {\n    this.change(1)\n  }\n\n  /**\n   * Decrements the `count` by one.\n   * @return {undefined}\n   */\n  decrement () {\n    this.change(-1)\n  }\n\n  /**\n   * Listen to another counter object and change this `count` by the\n   * same amount\n   * @param  {Counter} counter - the counter object to listen to\n   * @return {undefined}\n   */\n  listen (counter: Counter) {\n    this.change(counter.count)\n    counter.signals.countChanged.add(this.change, this)\n  }\n\n  /**\n   * Stop listening to the other counter object\n   * @param  {Counter} counter - the counter object to stop listening to\n   * @return {undefined}\n   */\n  unlisten (counter: Counter) {\n    const countChanged = counter.signals.countChanged\n    if (countChanged.has(this.change, this)) {\n      countChanged.remove(this.change, this)\n    }\n  }\n\n  /**\n   * Invole the callback function once, when the `count` becomes zero\n   * @param  {Function} callback - the callback function\n   * @param  {Object}   context - the context for the callback function\n   * @return {undefined}\n   */\n  onZeroOnce (callback: () => void, context?: any) {\n    if (this.count === 0) {\n      callback.call(context)\n    } else {\n      const fn = () => {\n        if (this.count === 0) {\n          this.signals.countChanged.remove(fn, this)\n          callback.call(context)\n        }\n      }\n      this.signals.countChanged.add(fn, this)\n    }\n  }\n\n  dispose () {\n    this.clear()\n    this.signals.countChanged.dispose()\n  }\n}\n\nexport default Counter\n","/**\n * @file Stats\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport * as signalsWrapper from 'signals'\n\nexport default class Stats {\n  signals = {\n    updated: new signalsWrapper.Signal()\n  }\n\n  maxDuration = -Infinity\n  minDuration = Infinity\n  avgDuration = 14\n  lastDuration = Infinity\n\n  prevFpsTime = 0\n  lastFps = Infinity\n  lastFrames = 1\n  frames = 0\n  count = 0\n\n  startTime: number\n  currentTime: number\n\n  constructor () {\n    this.begin()\n  }\n\n  update () {\n    this.startTime = this.end()\n    this.currentTime = this.startTime\n    this.signals.updated.dispatch()\n  }\n\n  begin () {\n    this.startTime = window.performance.now()\n    this.lastFrames = this.frames\n  }\n\n  end () {\n    const time = window.performance.now()\n\n    this.count += 1\n    this.frames += 1\n\n    this.lastDuration = time - this.startTime\n    this.minDuration = Math.min(this.minDuration, this.lastDuration)\n    this.maxDuration = Math.max(this.maxDuration, this.lastDuration)\n    this.avgDuration -= this.avgDuration / 30\n    this.avgDuration += this.lastDuration / 30\n\n    if (time > this.prevFpsTime + 1000) {\n      this.lastFps = this.frames\n      this.prevFpsTime = time\n      this.frames = 0\n    }\n\n    return time\n  }\n}","/**\n * @file Shader Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ShaderChunk } from 'three'\n\nimport './chunk/fog_fragment.glsl'\nimport './chunk/interior_fragment.glsl'\nimport './chunk/matrix_scale.glsl'\nimport './chunk/nearclip_vertex.glsl'\nimport './chunk/nearclip_fragment.glsl'\nimport './chunk/opaque_back_fragment.glsl'\nimport './chunk/radiusclip_vertex.glsl'\nimport './chunk/radiusclip_fragment.glsl'\nimport './chunk/unpack_color.glsl'\n\nimport { ShaderRegistry } from '../globals'\n\nexport type ShaderDefine = (\n  'NEAR_CLIP'|'RADIUS_CLIP'|'PICKING'|'NOLIGHT'|'FLAT_SHADED'|'OPAQUE_BACK'|\n  'DIFFUSE_INTERIOR'|'USE_INTERIOR_COLOR'|\n  'USE_SIZEATTENUATION'|'USE_MAP'|'ALPHATEST'|'SDF'|'FIXED_SIZE'|\n  'CUBIC_INTERPOLATION'|'BSPLINE_FILTER'|'CATMULROM_FILTER'|'MITCHELL_FILTER'\n)\nexport type ShaderDefines = {\n  [k in ShaderDefine]?: number|string\n}\n\nfunction getDefines (defines: ShaderDefines) {\n  if (defines === undefined) return ''\n\n  const lines = []\n\n  for (const name in defines) {\n    const value = defines[ name as keyof ShaderDefines ]\n\n    if (!value) continue\n\n    lines.push(`#define ${name} ${value}`)\n  }\n\n  return lines.join('\\n') + '\\n'\n}\n\nconst reInclude = /^(?!\\/\\/)\\s*#include\\s+(\\S+)/gmi\nconst shaderCache: { [k: string]: string } = {}\n\nexport function getShader (name: string, defines: ShaderDefines = {}) {\n  let hash = name + '|'\n  for (const key in defines) {\n    hash += key + ':' + defines[ key as keyof ShaderDefines ]\n  }\n\n  if (!shaderCache[ hash ]) {\n    const definesText = getDefines(defines)\n\n    let shaderText = ShaderRegistry.get(`shader/${name}`) as string\n    if (!shaderText) {\n      throw new Error(`empty shader, '${name}'`)\n    }\n    shaderText = shaderText.replace(reInclude, function (match, p1) {\n      const path = `shader/chunk/${p1}.glsl`\n      const chunk = ShaderRegistry.get(path) || ShaderChunk[ p1 ]\n      if (!chunk) {\n        throw new Error(`empty chunk, '${p1}'`)\n      }\n      return chunk\n    })\n\n    shaderCache[ hash ] = definesText + shaderText\n  }\n\n  return shaderCache[ hash ]\n}\n","/**\n * @file Viewer Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug } from '../globals'\n\nif (typeof WebGLRenderingContext !== 'undefined') {\n  const wrcp = WebGLRenderingContext.prototype\n\n  // wrap WebGL debug function used by three.js and\n  // ignore calls to them when the debug flag is not set\n\n  const _getShaderParameter = wrcp.getShaderParameter\n  wrcp.getShaderParameter = function getShaderParameter (this: WebGLRenderingContext) {\n    if (Debug) {\n      return _getShaderParameter.apply(this, arguments)\n    } else {\n      return true\n    }\n  }\n\n  const _getShaderInfoLog = wrcp.getShaderInfoLog\n  wrcp.getShaderInfoLog = function getShaderInfoLog (this: WebGLRenderingContext) {\n    if (Debug) {\n      return _getShaderInfoLog.apply(this, arguments)\n    } else {\n      return ''\n    }\n  }\n\n  const _getProgramParameter = wrcp.getProgramParameter\n  wrcp.getProgramParameter = function getProgramParameter (this: WebGLRenderingContext, program, pname) {\n    if (Debug || pname !== wrcp.LINK_STATUS) {\n      return _getProgramParameter.apply(this, arguments)\n    } else {\n      return true\n    }\n  }\n\n  const _getProgramInfoLog = wrcp.getProgramInfoLog\n  wrcp.getProgramInfoLog = function getProgramInfoLog (this: WebGLRenderingContext) {\n    if (Debug) {\n      return _getProgramInfoLog.apply(this, arguments)\n    } else {\n      return ''\n    }\n  }\n}\n\nexport const JitterVectors = [\n  [\n    [ 0, 0 ]\n  ],\n  [\n    [ 4, 4 ], [ -4, -4 ]\n  ],\n  [\n    [ -2, -6 ], [ 6, -2 ], [ -6, 2 ], [ 2, 6 ]\n  ],\n  [\n    [ 1, -3 ], [ -1, 3 ], [ 5, 1 ], [ -3, -5 ],\n    [ -5, 5 ], [ -7, -1 ], [ 3, 7 ], [ 7, -7 ]\n  ],\n  [\n    [ 1, 1 ], [ -1, -3 ], [ -3, 2 ], [ 4, -1 ],\n    [ -5, -2 ], [ 2, 5 ], [ 5, 3 ], [ 3, -5 ],\n    [ -2, 6 ], [ 0, -7 ], [ -4, -6 ], [ -6, 4 ],\n    [ -8, 0 ], [ 7, -4 ], [ 6, 7 ], [ -7, -8 ]\n  ],\n  [\n    [ -4, -7 ], [ -7, -5 ], [ -3, -5 ], [ -5, -4 ],\n    [ -1, -4 ], [ -2, -2 ], [ -6, -1 ], [ -4, 0 ],\n    [ -7, 1 ], [ -1, 2 ], [ -6, 3 ], [ -3, 3 ],\n    [ -7, 6 ], [ -3, 6 ], [ -5, 7 ], [ -1, 7 ],\n    [ 5, -7 ], [ 1, -6 ], [ 6, -5 ], [ 4, -4 ],\n    [ 2, -3 ], [ 7, -2 ], [ 1, -1 ], [ 4, -1 ],\n    [ 2, 1 ], [ 6, 2 ], [ 0, 4 ], [ 4, 4 ],\n    [ 2, 5 ], [ 7, 5 ], [ 5, 6 ], [ 3, 7 ]\n  ]\n]\n\nJitterVectors.forEach(offsetList => {\n  offsetList.forEach(offset => {\n    // 0.0625 = 1 / 16\n    offset[ 0 ] *= 0.0625\n    offset[ 1 ] *= 0.0625\n  })\n})\n","/**\n * @file Tiled Renderer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { Camera, WebGLRenderer } from 'three'\nimport Viewer from './viewer'\n\nexport interface TiledRendererParams {\n  factor?: number\n  antialias?: boolean\n  onProgress?: Function\n  onFinish?: Function\n}\n\nclass TiledRenderer {\n  canvas = document.createElement('canvas')\n\n  private _width: number\n  private _height: number\n  private _n: number\n  private _factor: number\n  private _antialias: boolean\n  private _viewerSampleLevel: number\n\n  private _viewer: Viewer\n  private _onProgress?: Function\n  private _onFinish?: Function\n  private _ctx: CanvasRenderingContext2D\n\n  constructor(renderer: WebGLRenderer, camera: Camera, viewer: Viewer, params: TiledRendererParams) {\n    this._viewer = viewer\n\n    this._factor = defaults(params.factor, 2)\n    this._antialias = defaults(params.antialias, false)\n\n    this._onProgress = params.onProgress\n    this._onFinish = params.onFinish\n\n    if (this._antialias) this._factor *= 2\n    this._n = this._factor * this._factor\n\n    // canvas\n\n    this._width = this._viewer.width\n    this._height = this._viewer.height\n\n    if (this._antialias) {\n      this.canvas.width = this._width * this._factor / 2\n      this.canvas.height = this._height * this._factor / 2\n    } else {\n      this.canvas.width = this._width * this._factor\n      this.canvas.height = this._height * this._factor\n    }\n\n    this._ctx = this.canvas.getContext('2d')!\n\n    this._viewerSampleLevel = viewer.sampleLevel\n    this._viewer.setSampling(-1)\n  }\n\n  private _renderTile (i: number) {\n    const viewer = this._viewer\n    const width = this._width\n    const height = this._height\n    const factor = this._factor\n\n    const x = i % factor\n    const y = Math.floor(i / factor)\n\n    const offsetX = x * width\n    const offsetY = y * height\n\n    viewer.camera.setViewOffset(\n      width * factor,\n      height * factor,\n      offsetX,\n      offsetY,\n      width,\n      height\n    )\n\n    viewer.render()\n\n    if (this._antialias) {\n        const w = Math.round((offsetX + width) / 2) - Math.round (offsetX / 2);\n        const h = Math.round((offsetY + height) / 2) - Math.round (offsetY / 2);\n      this._ctx.drawImage(\n        viewer.renderer.domElement,\n        Math.round(offsetX / 2),\n        Math.round(offsetY / 2),\n        w,\n        h\n      )\n    } else {\n      this._ctx.drawImage(\n        viewer.renderer.domElement,\n        Math.floor(offsetX),\n        Math.floor(offsetY),\n        Math.ceil(width),\n        Math.ceil(height)\n      )\n    }\n\n    if (typeof this._onProgress === 'function') {\n      this._onProgress(i + 1, this._n, false)\n    }\n  }\n\n  private _finalize () {\n    this._viewer.setSampling(this._viewerSampleLevel)\n    this._viewer.camera.view = null!  // TODO\n\n    if (typeof this._onFinish === 'function') {\n      this._onFinish(this._n + 1, this._n, false)\n    }\n  }\n\n  render () {\n    for (let i = 0; i <= this._n; ++i) {\n      if (i === this._n) {\n        this._finalize()\n      } else {\n        this._renderTile(i)\n      }\n    }\n  }\n\n  renderAsync () {\n    let count = 0\n    const n = this._n\n\n    const fn = () => {\n      if (count === n) {\n        this._finalize()\n      } else {\n        this._renderTile(count)\n      }\n      count += 1\n    }\n\n    for (let i = 0; i <= n; ++i) {\n      setTimeout(fn, 0)\n    }\n  }\n}\n\nexport default TiledRenderer\n","/**\n * @file Math Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport const EPS = 0.0000001\nexport const TwoPI = 2 * Math.PI\n\nexport const DEG2RAD = Math.PI / 180\nexport const RAD2DEG = 180 / Math.PI\n","/**\n * @file Array Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { NumberArray } from '../types'\nimport { TwoPI } from './math-constants'\n\nexport function circularMean (array: NumberArray, max: number, stride = 1, offset = 0, indices?: NumberArray) {\n  // http://en.wikipedia.org/wiki/Center_of_mass#Systems_with_periodic_boundary_conditions\n\n  // Bai, Linge; Breen, David (2008). Calculating Center of Mass in an Unbounded 2D Environment. Journal of Graphics, GPU, and Game Tools 13 (4): 53–60.\n\n  // http://stackoverflow.com/questions/18166507/using-fft-to-find-the-center-of-mass-under-periodic-boundary-conditions\n\n  const n = indices ? indices.length : array.length / stride\n\n  let cosMean = 0\n  let sinMean = 0\n\n  if (indices) {\n    for (let i = 0; i < n; ++i) {\n      const c = (array[ indices[ i ] * stride + offset ] + max) % max\n      const angle = (c / max) * TwoPI - Math.PI\n\n      cosMean += Math.cos(angle)\n      sinMean += Math.sin(angle)\n    }\n  } else {\n    for (let i = offset; i < n; i += stride) {\n      const c = (array[ i ] + max) % max\n      const angle = (c / max) * TwoPI - Math.PI\n\n      cosMean += Math.cos(angle)\n      sinMean += Math.sin(angle)\n    }\n  }\n\n  cosMean /= n\n  sinMean /= n\n\n  const meanAngle = Math.atan2(sinMean, cosMean)\n  const mean = (meanAngle + Math.PI) / TwoPI * max\n\n  return mean\n}\n\nexport function calculateCenterArray <T extends NumberArray = Float32Array>(array1: NumberArray, array2: NumberArray, center?: T, offset = 0): T {\n  const n = array1.length\n  const c = center || new Float32Array(n)\n\n  for (let i = 0; i < n; i += 3) {\n    c[ offset + i + 0 ] = (array1[ i + 0 ] + array2[ i + 0 ]) / 2.0\n    c[ offset + i + 1 ] = (array1[ i + 1 ] + array2[ i + 1 ]) / 2.0\n    c[ offset + i + 2 ] = (array1[ i + 2 ] + array2[ i + 2 ]) / 2.0\n  }\n\n  return c as T\n}\n\nexport function calculateDirectionArray (array1: NumberArray, array2: NumberArray) {\n  const n = array1.length\n  const direction = new Float32Array(n)\n\n  for (let i = 0; i < n; i += 3) {\n    direction[ i + 0 ] = array2[ i + 0 ] - array1[ i + 0 ]\n    direction[ i + 1 ] = array2[ i + 1 ] - array1[ i + 1 ]\n    direction[ i + 2 ] = array2[ i + 2 ] - array1[ i + 2 ]\n  }\n\n  return direction\n}\n\nexport function uniformArray <T extends NumberArray = Float32Array>(n: number, a: number, optionalTarget?: T): T {\n  const array = optionalTarget || new Float32Array(n)\n\n  for (let i = 0; i < n; ++i) {\n    array[ i ] = a\n  }\n\n  return array as T\n}\n\nexport function uniformArray3 (n: number, a: number, b: number, c: number, optionalTarget?: NumberArray) {\n  const array = optionalTarget || new Float32Array(n * 3)\n\n  for (let i = 0; i < n; ++i) {\n    const j = i * 3\n\n    array[ j + 0 ] = a\n    array[ j + 1 ] = b\n    array[ j + 2 ] = c\n  }\n\n  return array\n}\n\nexport function centerArray3 (array: NumberArray, center = new Vector3()) {\n  const n = array.length\n\n  for (let i = 0; i < n; i += 3) {\n    center.x += array[ i ]\n    center.y += array[ i + 1 ]\n    center.z += array[ i + 2 ]\n  }\n\n  center.divideScalar(n / 3)\n\n  return center\n}\n\nexport function serialArray (n: number) {\n  const array = new Float32Array(n)\n\n  for (let i = 0; i < n; ++i) {\n    array[ i ] = i\n  }\n\n  return array\n}\n\nexport function serialBlockArray (n: number, b: number, offset = 0, optionalTarget?: NumberArray) {\n  const array = optionalTarget || new Float32Array(n * b)\n\n  for (let i = 0; i < n; ++i) {\n    const k = offset + i * b\n\n    for (let j = 0; j < b; ++j) {\n      array[ k + j ] = i\n    }\n  }\n\n  return array\n}\n\nexport function randomColorArray (n: number) {\n  const array = new Float32Array(n * 3)\n\n  for (let i = 0; i < n; ++i) {\n    const j = i * 3\n\n    array[ j + 0 ] = Math.random()\n    array[ j + 1 ] = Math.random()\n    array[ j + 2 ] = Math.random()\n  }\n\n  return array\n}\n\nexport function replicateArrayEntries (array: NumberArray, m: number) {\n  const n = array.length\n  const repArr = new Float32Array(n * m)\n\n  for (let i = 0; i < n; ++i) {\n    const k = i * m\n    const a = array[ i ]\n\n    for (let j = 0; j < m; ++j) {\n      repArr[ k + j ] = a\n    }\n  }\n\n  return repArr\n}\n\nexport function replicateArray3Entries (array: NumberArray, m: number) {\n  const n = array.length / 3\n  const repArr = new Float32Array(n * m * 3)\n\n  for (let i = 0; i < n; ++i) {\n    const v = i * 3\n    const k = i * m * 3\n\n    const a = array[ v + 0 ]\n    const b = array[ v + 1 ]\n    const c = array[ v + 2 ]\n\n    for (let j = 0; j < m; ++j) {\n      const l = k + j * 3\n\n      repArr[ l + 0 ] = a\n      repArr[ l + 1 ] = b\n      repArr[ l + 2 ] = c\n    }\n  }\n\n  return repArr\n}\n\nexport function calculateMeanArray (array1: NumberArray, array2: NumberArray) {\n  const n = array1.length\n  const mean = new Float32Array(n)\n\n  for (let i = 0; i < n; i++) {\n    mean[ i ] = (array1[ i ] + array2[ i ]) / 2.0\n  }\n\n  return mean\n}\n\nexport function calculateMinArray (array1: NumberArray, array2: NumberArray) {\n  const n = array1.length\n  const min = new Float32Array(n)\n\n  for (let i = 0; i < n; i++) {\n    min[ i ] = Math.min(array1[ i ], array2[ i ])\n  }\n\n  return min\n}\n\nexport function copyArray<T extends any[]|NumberArray> (src: T, dst: T, srcOffset: number, dstOffset: number, length: number) {\n  for (let i = 0; i < length; ++i) {\n    dst[ dstOffset + i ] = src[ srcOffset + i ]\n  }\n}\n\nexport function copyWithin (array: NumberArray|any[], srcOffset: number, dstOffset: number, length: number) {\n  copyArray(array, array, srcOffset, dstOffset, length)\n}\n\nconst swap = new Float32Array(4)\nconst temp = new Float32Array(4)\n/**\n * quicksortIP\n * @function\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n * @description\n * In-place quicksort for typed arrays (e.g. for Float32Array)\n * provides fast sorting\n * useful e.g. for a custom shader and/or BufferGeometry\n * Complexity: http://bigocheatsheet.com/ see Quicksort\n *\n * @example\n * points: [x, y, z, x, y, z, x, y, z, ...]\n * eleSize: 3 //because of (x, y, z)\n * orderElement: 0 //order according to x\n *\n * @param {TypedArray} arr - array to be sorted\n * @param {Integer} eleSize - element size\n * @param {Integer} orderElement - index of element used for sorting, < eleSize\n * @param {Integer} [begin] - start index for range to be sorted\n * @param {Integer} [end] - end index for range to be sorted\n * @return {TypedArray} the input array\n */\nexport function quicksortIP (arr: NumberArray, eleSize: number, orderElement: number, begin = 0, end?: number) {\n  end = (end || (arr.length / eleSize)) - 1\n\n  const stack = []\n  let sp = -1\n  let left = begin\n  let right = end\n  let tmp = 0.0\n  let x = 0\n  let y = 0\n\n  const swapF = function (a: number, b: number) {\n    a *= eleSize; b *= eleSize\n    for (y = 0; y < eleSize; y++) {\n      tmp = arr[ a + y ]\n      arr[ a + y ] = arr[ b + y ]\n      arr[ b + y ] = tmp\n    }\n  }\n\n  let i, j\n\n  while (true) {\n    if (right - left <= 25) {\n      for (j = left + 1; j <= right; j++) {\n        for (x = 0; x < eleSize; x++) {\n          swap[ x ] = arr[ j * eleSize + x ]\n        }\n\n        i = j - 1\n\n        while (i >= left && arr[ i * eleSize + orderElement ] > swap[ orderElement ]) {\n          for (x = 0; x < eleSize; x++) {\n            arr[ (i + 1) * eleSize + x ] = arr[ i * eleSize + x ]\n          }\n          i--\n        }\n\n        for (x = 0; x < eleSize; x++) {\n          arr[ (i + 1) * eleSize + x ] = swap[ x ]\n        }\n      }\n\n      if (sp === -1) break\n\n      right = stack[ sp-- ] // ?\n      left = stack[ sp-- ]\n    } else {\n      const median = (left + right) >> 1\n\n      i = left + 1\n      j = right\n\n      swapF(median, i)\n\n      if (arr[ left * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\n        swapF(left, right)\n      }\n\n      if (arr[ i * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\n        swapF(i, right)\n      }\n\n      if (arr[ left * eleSize + orderElement ] > arr[ i * eleSize + orderElement ]) {\n        swapF(left, i)\n      }\n\n      for (x = 0; x < eleSize; x++) {\n        temp[ x ] = arr[ i * eleSize + x ]\n      }\n\n      while (true) {\n        do i++; while (arr[ i * eleSize + orderElement ] < temp[ orderElement ])\n        do j--; while (arr[ j * eleSize + orderElement ] > temp[ orderElement ])\n        if (j < i) break\n        swapF(i, j)\n      }\n\n      for (x = 0; x < eleSize; x++) {\n        arr[ (left + 1) * eleSize + x ] = arr[ j * eleSize + x ]\n        arr[ j * eleSize + x ] = temp[ x ]\n      }\n\n      if (right - i + 1 >= j - left) {\n        stack[ ++sp ] = i\n        stack[ ++sp ] = right\n        right = j - 1\n      } else {\n        stack[ ++sp ] = left\n        stack[ ++sp ] = j - 1\n        left = i\n      }\n    }\n  }\n\n  return arr\n}\n\nexport function quicksortCmp<T> (arr: NumberArray|T[], cmp?: (a: number|T, b: number|T) => number, begin = 0, end?: number) {\n  cmp = cmp || function cmp (a, b) {\n    if (a > b) return 1\n    if (a < b) return -1\n    return 0\n  }\n  end = (end || arr.length) - 1\n\n  const stack = []\n  let sp = -1\n  let left = begin\n  let right = end\n  let tmp: number|T\n\n  function swap (a: number, b: number) {\n    const tmp2 = arr[ a ]\n    arr[ a ] = arr[ b ]\n    arr[ b ] = tmp2\n  }\n\n  let i, j\n\n  while (true) {\n    if (right - left <= 25) {\n      for (let k = left + 1; k <= right; ++k) {\n        tmp = arr[ k ]\n        i = k - 1\n\n        while (i >= left && cmp(arr[ i ], tmp) > 0) {\n          arr[ i + 1 ] = arr[ i ]\n          --i\n        }\n\n        arr[ i + 1 ] = tmp\n      }\n\n      if (sp === -1) break\n\n      right = stack[ sp-- ] // ?\n      left = stack[ sp-- ]\n    } else {\n      const median = (left + right) >> 1\n\n      i = left + 1\n      j = right\n\n      swap(median, i)\n\n      if (cmp(arr[ left ], arr[ right ]) > 0) {\n        swap(left, right)\n      }\n\n      if (cmp(arr[ i ], arr[ right ]) > 0) {\n        swap(i, right)\n      }\n\n      if (cmp(arr[ left ], arr[ i ]) > 0) {\n        swap(left, i)\n      }\n\n      tmp = arr[ i ]\n\n      while (true) {\n        do i++; while (cmp(arr[ i ], tmp) < 0)\n        do j--; while (cmp(arr[ j ], tmp) > 0)\n        if (j < i) break\n        swap(i, j)\n      }\n\n      arr[ left + 1 ] = arr[ j ]\n      arr[ j ] = tmp\n\n      if (right - i + 1 >= j - left) {\n        stack[ ++sp ] = i\n        stack[ ++sp ] = right\n        right = j - 1\n      } else {\n        stack[ ++sp ] = left\n        stack[ ++sp ] = j - 1\n        left = i\n      }\n    }\n  }\n\n  return arr\n}\n\nexport function quickselectCmp<T> (arr: NumberArray|T[], n: number, cmp?: (a: number|T, b: number|T) => number, left = 0, right?: number) {\n  cmp = cmp || function cmp (a, b) {\n    if (a > b) return 1\n    if (a < b) return -1\n    return 0\n  }\n  right = (right || arr.length) - 1\n\n  let pivotIndex, pivotValue, storeIndex\n\n  function swap (a: number, b: number) {\n    const tmp = arr[ a ]\n    arr[ a ] = arr[ b ]\n    arr[ b ] = tmp\n  }\n\n  while (true) {\n    if (left === right) {\n      return arr[ left ]\n    }\n    pivotIndex = (left + right) >> 1\n    pivotValue = arr[ pivotIndex ]\n    swap(pivotIndex, right)\n    storeIndex = left\n    for (let i = left; i < right; ++i) {\n      if (cmp(arr[ i ], pivotValue) < 0) {\n        swap(storeIndex, i)\n        ++storeIndex\n      }\n    }\n    swap(right, storeIndex)\n    pivotIndex = storeIndex\n    if (n === pivotIndex) {\n      return arr[ n ]\n    } else if (n < pivotIndex) {\n      right = pivotIndex - 1\n    } else {\n      left = pivotIndex + 1\n    }\n  }\n}\n\nexport function arrayMax (array: NumberArray) {\n  let max = -Infinity\n  for (let i = 0, il = array.length; i < il; ++i) {\n    if (array[ i ] > max) max = array[ i ]\n  }\n  return max\n}\n\nexport function arrayMin (array: NumberArray) {\n  let min = Infinity\n  for (let i = 0, il = array.length; i < il; ++i) {\n    if (array[ i ] < min) min = array[ i ]\n  }\n  return min\n}\n\nexport function arraySum (array: NumberArray, stride = 1, offset = 0) {\n  const n = array.length\n  let sum = 0\n  for (let i = offset; i < n; i += stride) {\n    sum += array[ i ]\n  }\n  return sum\n}\n\nexport function arrayMean (array: NumberArray, stride = 1, offset = 0) {\n  return arraySum(array, stride, offset) / (array.length / stride)\n}\n\nexport function arrayRms (array: NumberArray) {\n  const n = array.length\n  let sumSq = 0\n  for (let i = 0; i < n; ++i) {\n    const di = array[ i ]\n    sumSq += di * di\n  }\n  return Math.sqrt(sumSq / n)\n}\n\nexport function arraySorted (array: NumberArray) {\n  for (let i = 1, il = array.length; i < il; ++i) {\n    if (array[ i - 1 ] > array[ i ]) return false\n  }\n  return true\n}\n\nexport function arraySortedCmp<T> (array: NumberArray|T[], cmp: (a: number|T, b: number|T) => number) {\n  for (let i = 1, il = array.length; i < il; ++i) {\n    if (cmp(array[ i - 1 ], array[ i ]) > 0) return false\n  }\n  return true\n}\n","/**\n * @file Viewer Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport {\n  Vector2, Vector3, Matrix4, Points, Scene, Camera,\n  Object3D, WebGLRenderer\n} from 'three'\n\nimport { createParams } from '../utils'\nimport TiledRenderer from './tiled-renderer'\nimport { quicksortCmp } from '../math/array-utils'\nimport Viewer from './viewer'\n\nfunction _trimCanvas (canvas: HTMLCanvasElement, r: number, g: number, b: number, a: number) {\n  const canvasHeight = canvas.height\n  const canvasWidth = canvas.width\n\n  const ctx = canvas.getContext('2d')!\n  const pixels = ctx.getImageData(0, 0, canvasWidth, canvasHeight).data\n\n  let x, y, doBreak, off\n\n  doBreak = false\n  for (y = 0; y < canvasHeight; y++) {\n    for (x = 0; x < canvasWidth; x++) {\n      off = (y * canvasWidth + x) * 4\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\n      ) {\n        doBreak = true\n        break\n      }\n    }\n    if (doBreak) {\n      break\n    }\n  }\n  const topY = y\n\n  doBreak = false\n  for (x = 0; x < canvasWidth; x++) {\n    for (y = 0; y < canvasHeight; y++) {\n      off = (y * canvasWidth + x) * 4\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\n      ) {\n        doBreak = true\n        break\n      }\n    }\n    if (doBreak) {\n      break\n    }\n  }\n  const topX = x\n\n  doBreak = false\n  for (y = canvasHeight - 1; y >= 0; y--) {\n    for (x = canvasWidth - 1; x >= 0; x--) {\n      off = (y * canvasWidth + x) * 4\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\n      ) {\n        doBreak = true\n        break\n      }\n    }\n    if (doBreak) {\n      break\n    }\n  }\n  const bottomY = y\n\n  doBreak = false\n  for (x = canvasWidth - 1; x >= 0; x--) {\n    for (y = canvasHeight - 1; y >= 0; y--) {\n      off = (y * canvasWidth + x) * 4\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\n      ) {\n        doBreak = true\n        break\n      }\n    }\n    if (doBreak) {\n      break\n    }\n  }\n  const bottomX = x\n\n  const trimedCanvas = document.createElement('canvas')\n  trimedCanvas.width = bottomX - topX\n  trimedCanvas.height = bottomY - topY\n\n  const trimedCtx = trimedCanvas.getContext('2d')!\n  trimedCtx.drawImage(\n    canvas,\n    topX, topY,\n    trimedCanvas.width, trimedCanvas.height,\n    0, 0,\n    trimedCanvas.width, trimedCanvas.height\n  )\n\n  return trimedCanvas\n}\n\n/**\n * Image parameter object.\n * @typedef {Object} ImageParameters - image generation parameters\n * @property {Boolean} trim - trim the image\n * @property {Integer} factor - scaling factor to apply to the viewer canvas\n * @property {Boolean} antialias - antialias the image\n * @property {Boolean} transparent - transparent image background\n */\n\nexport const ImageDefaultParameters = {\n  trim: false,\n  factor: 1,\n  antialias: false,\n  transparent: false,\n  onProgress: undefined as Function|undefined\n}\nexport type ImageParameters = typeof ImageDefaultParameters\n\n/**\n * Make image from what is shown in a viewer canvas\n * @param  {Viewer} viewer - the viewer\n * @param  {ImageParameters} params - parameters object\n * @return {Promise} A Promise object that resolves to an image {@link Blob}.\n */\nexport function makeImage (viewer: Viewer, params: Partial<ImageParameters> = {}) {\n  const {trim, factor, antialias, transparent} = createParams(params, ImageDefaultParameters)\n\n  const renderer = viewer.renderer\n  const camera = viewer.camera\n\n  const originalClearAlpha = renderer.getClearAlpha()\n  const backgroundColor = renderer.getClearColor()\n\n  function setLineWidthAndPixelSize (invert = false) {\n    let _factor = factor\n    if (antialias) _factor *= 2\n    if (invert) _factor = 1 / _factor\n    viewer.scene.traverse(function (o: any) {  // TODO\n      const m = o.material\n      if (m && m.linewidth) {\n        m.linewidth *= _factor\n      }\n      if (m && m.uniforms && m.uniforms.size) {\n        if (m.uniforms.size.__seen === undefined) {\n          m.uniforms.size.value *= _factor\n          m.uniforms.size.__seen = true\n        }\n      }\n      if (m && m.uniforms && m.uniforms.linewidth) {\n        if (m.uniforms.linewidth.__seen === undefined) {\n          m.uniforms.linewidth.value *= _factor\n          m.uniforms.linewidth.__seen = true\n        }\n      }\n    })\n    viewer.scene.traverse(function (o: any) {  // TODO\n      const m = o.material\n      if (m && m.uniforms && m.uniforms.size) {\n        delete m.uniforms.size.__seen\n      }\n      if (m && m.uniforms && m.uniforms.linewidth) {\n        delete m.uniforms.linewidth.__seen\n      }\n    })\n  }\n\n  function trimCanvas (canvas: HTMLCanvasElement) {\n    if (trim) {\n      const bg = backgroundColor\n      const r = transparent ? 0 : bg.r * 255\n      const g = transparent ? 0 : bg.g * 255\n      const b = transparent ? 0 : bg.b * 255\n      const a = transparent ? 0 : 255\n      return _trimCanvas(canvas, r, g, b, a)\n    } else {\n      return canvas\n    }\n  }\n\n  function onProgress (i: number, n: number, finished: boolean) {\n    if (typeof params.onProgress === 'function') {\n      params.onProgress(i, n, finished)\n    }\n  }\n\n  return new Promise<Blob>(function (resolve, reject) {\n    const tiledRenderer = new TiledRenderer(\n      renderer, camera, viewer,\n      { factor, antialias, onProgress, onFinish }\n    )\n\n    renderer.setClearAlpha(transparent ? 0 : 1)\n    setLineWidthAndPixelSize()\n    tiledRenderer.renderAsync()\n\n    function onFinish (i: number, n: number) {\n      const canvas = trimCanvas(tiledRenderer.canvas)\n      canvas.toBlob(\n        function (blob) {\n          renderer.setClearAlpha(originalClearAlpha)\n          setLineWidthAndPixelSize(true)\n          viewer.requestRender()\n          onProgress(n, n, true)\n          if (blob) {\n            resolve(blob)\n          } else {\n            reject('error creating image')\n          }\n        },\n        'image/png'\n      )\n    }\n  })\n}\n\nconst vertex = new Vector3()\nconst matrix = new Matrix4()\nconst modelViewProjectionMatrix = new Matrix4()\n\nexport function sortProjectedPosition (scene: Scene, camera: Camera) {\n  // console.time( \"sort\" );\n\n  scene.traverseVisible(function (o) {\n    if (!(o instanceof Points) || !o.userData.buffer.parameters.sortParticles) {\n      return\n    }\n\n    const attributes = (o.geometry as any).attributes  // TODO\n    const n = attributes.position.count\n\n    if (n === 0) return\n\n    matrix.multiplyMatrices(\n      camera.matrixWorldInverse, o.matrixWorld\n    )\n    modelViewProjectionMatrix.multiplyMatrices(\n      camera.projectionMatrix, matrix\n    )\n\n    let sortData, sortArray, zArray: Float32Array, cmpFn\n\n    if (!o.userData.sortData) {\n      zArray = new Float32Array(n)\n      sortArray = new Uint32Array(n)\n      cmpFn = function (ai: number, bi: number) {\n        const a = zArray[ ai ]\n        const b = zArray[ bi ]\n        if (a > b) return 1\n        if (a < b) return -1\n        return 0\n      }\n\n      sortData = {\n        __zArray: zArray,\n        __sortArray: sortArray,\n        __cmpFn: cmpFn\n      }\n\n      o.userData.sortData = sortData\n    } else {\n      sortData = o.userData.sortData\n      zArray = sortData.__zArray\n      sortArray = sortData.__sortArray\n      cmpFn = sortData.__cmpFn\n    }\n\n    for (let i = 0; i < n; ++i) {\n      vertex.fromArray(attributes.position.array, i * 3)\n      vertex.applyMatrix4(modelViewProjectionMatrix)\n\n      // negate, so that sorting order is reversed\n      zArray[ i ] = -vertex.z\n      sortArray[ i ] = i\n    }\n\n    quicksortCmp(sortArray, cmpFn)\n\n    let index, indexSrc, indexDst, tmpTab\n\n    for (let name in attributes) {\n      const attr = attributes[ name ]\n      const array = attr.array\n      const itemSize = attr.itemSize\n\n      if (!sortData[ name ]) {\n        sortData[ name ] = new Float32Array(itemSize * n)\n      }\n\n      tmpTab = sortData[ name ]\n      sortData[ name ] = array\n\n      for (let i = 0; i < n; ++i) {\n        index = sortArray[ i ]\n\n        for (let j = 0; j < itemSize; ++j) {\n          indexSrc = index * itemSize + j\n          indexDst = i * itemSize + j\n          tmpTab[ indexDst ] = array[ indexSrc ]\n        }\n      }\n\n      attributes[ name ].array = tmpTab\n      attributes[ name ].needsUpdate = true\n    }\n  })\n\n    // console.timeEnd( \"sort\" );\n}\n\nconst resolution = new Vector2()\nconst projectionMatrixInverse = new Matrix4()\nconst projectionMatrixTranspose = new Matrix4()\n\nexport function updateMaterialUniforms (group: Object3D, camera: Camera, renderer: WebGLRenderer, cDist: number, bRadius: number) {\n  let size = new Vector2()\n  renderer.getSize(size)\n  const canvasHeight = size.height\n  const pixelRatio = renderer.getPixelRatio()\n  const ortho = camera.type === 'OrthographicCamera'\n\n  resolution.set(size.width, size.height)\n  projectionMatrixInverse.getInverse(camera.projectionMatrix)\n  projectionMatrixTranspose.copy(camera.projectionMatrix).transpose()\n\n  group.traverse(function (o: any) {\n    const m = o.material\n    if (!m) return\n\n    const u = m.uniforms\n    if (!u) return\n\n    if (m.clipNear) {\n      const nearFactor = (50 - m.clipNear) / 50\n      const nearClip = cDist - (bRadius * nearFactor)\n      u.clipNear.value = nearClip\n    }\n\n    if (u.canvasHeight) {\n      u.canvasHeight.value = canvasHeight\n    }\n\n    if (u.resolution) {\n      u.resolution.value.copy(resolution)\n    }\n\n    if (u.pixelRatio) {\n      u.pixelRatio.value = pixelRatio\n    }\n\n    if (u.projectionMatrixInverse) {\n      u.projectionMatrixInverse.value.copy(projectionMatrixInverse)\n    }\n\n    if (u.projectionMatrixTranspose) {\n      u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose)\n    }\n\n    if (u.ortho) {\n      u.ortho.value = ortho\n    }\n  })\n}\n\nexport function updateCameraUniforms (group: Object3D, camera: Camera) {\n  projectionMatrixInverse.getInverse(camera.projectionMatrix)\n  projectionMatrixTranspose.copy(camera.projectionMatrix).transpose()\n\n  group.traverse(function (o: any) {\n    const m = o.material\n    if (!m) return\n\n    const u = m.uniforms\n    if (!u) return\n\n    if (u.projectionMatrixInverse) {\n      u.projectionMatrixInverse.value.copy(projectionMatrixInverse)\n    }\n\n    if (u.projectionMatrixTranspose) {\n      u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose)\n    }\n  })\n}\n","/**\n * @file Viewer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// adapted from https://webglfundamentals.org/webgl/resources/webgl-utils.js\n// Copyright 2012, Gregg Tavares. Modified BSD License\n\nexport function createProgram(gl: WebGLRenderingContext, shaders: WebGLShader[], attribs?: string[], locations?: number[]) {\n  const program = gl.createProgram()\n  if (!program) {\n    console.log(`error creating WebGL program`)\n    return\n  }\n  shaders.forEach(shader => gl.attachShader(program, shader))\n  if (attribs) {\n    attribs.forEach((attrib, i) => {\n      gl.bindAttribLocation(program, locations ? locations[i] : i, attrib)\n    })\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS)\n  if (!linked) {\n      console.log(`error linking program: ${gl.getProgramInfoLog(program)}`)\n      gl.deleteProgram(program)\n      return null\n  }\n  return program\n}\n\nexport function loadShader(gl: WebGLRenderingContext, shaderSource: string, shaderType: number) {\n  const shader = gl.createShader(shaderType)\n  if (!shader) {\n    console.log(`error creating WebGL shader ${shaderType}`)\n    return                      // can't create shader\n  }\n  gl.shaderSource(shader, shaderSource)\n  gl.compileShader(shader)\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n  if (!compiled) {\n    console.log(`error compiling shader ${shader}: ${gl.getShaderInfoLog(shader)}`)\n    gl.deleteShader(shader)\n    return null\n  }\n\n  return shader\n}\n\n//\n\nexport function getErrorDescription(gl: WebGLRenderingContext, error: number) {\n  switch (error) {\n    case gl.NO_ERROR: return 'no error'\n    case gl.INVALID_ENUM: return 'invalid enum'\n    case gl.INVALID_VALUE: return 'invalid value'\n    case gl.INVALID_OPERATION: return 'invalid operation'\n    case gl.INVALID_FRAMEBUFFER_OPERATION: return 'invalid framebuffer operation'\n    case gl.OUT_OF_MEMORY: return 'out of memory'\n    case gl.CONTEXT_LOST_WEBGL: return 'context lost'\n  }\n  return 'unknown error'\n}\n\nexport function getExtension (gl: WebGLRenderingContext, name: string) {\n   const ext = gl.getExtension(name)\n   if (!ext) console.log(`extension '${name}' not available`)\n   return ext\n}\n\nconst TextureTestVertShader = `\nattribute vec4 a_position;\n\nvoid main() {\n  gl_Position = a_position;\n}`\n\nconst TextureTestFragShader = `\nprecision mediump float;\nuniform vec4 u_color;\nuniform sampler2D u_texture;\n\nvoid main() {\n  gl_FragColor = texture2D(u_texture, vec2(0.5, 0.5)) * u_color;\n}`\n\nconst TextureTestTexCoords = new Float32Array([\n  -1.0, -1.0, 1.0, -1.0, -1.0,  1.0, -1.0,  1.0, 1.0, -1.0, 1.0,  1.0\n])\n\nexport function testTextureSupport (type: number) {\n  // adapted from\n  // https://stackoverflow.com/questions/28827511/webgl-ios-render-to-floating-point-texture\n\n  // Get A WebGL context\n  const canvas = document.createElement('canvas')\n  canvas.width = 16\n  canvas.height = 16\n  canvas.style.width = 16 + 'px'\n  canvas.style.height = 16 + 'px'\n  const gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n  if (!gl) {\n    console.log(`error creating webgl context for ${type}`)\n    return false\n  }\n  if (!(gl instanceof WebGLRenderingContext)) {\n    console.log(`Got unexpected type for WebGL rendering context`)\n    return false\n  }\n\n  getExtension(gl, 'OES_texture_float')\n  getExtension(gl, 'OES_texture_half_float')\n  getExtension(gl, 'WEBGL_color_buffer_float')\n\n  // setup shaders\n  const vertShader = loadShader(gl, TextureTestVertShader, gl.VERTEX_SHADER)\n  const fragShader = loadShader(gl, TextureTestFragShader, gl.FRAGMENT_SHADER)\n  if (!vertShader || !fragShader) return false\n\n  // setup program\n  const program = createProgram(gl, [ vertShader, fragShader ])\n  if (!program) {\n    console.log(`error creating WebGL program`)\n    return false\n  }\n  gl.useProgram(program);\n\n  // look up where the vertex data needs to go.\n  const positionLocation = gl.getAttribLocation(program, \"a_position\");\n  const colorLoc = gl.getUniformLocation(program, \"u_color\");\n  if (!colorLoc) {\n    console.log(`error getting 'u_color' uniform location`)\n    return false\n  }\n\n  // provide texture coordinates for the rectangle.\n  const positionBuffer = gl.createBuffer()\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n  gl.bufferData(gl.ARRAY_BUFFER, TextureTestTexCoords, gl.STATIC_DRAW)\n  gl.enableVertexAttribArray(positionLocation)\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0)\n\n  const whiteTex = gl.createTexture()\n  const whiteData = new Uint8Array([255, 255, 255, 255])\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex)\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, whiteData)\n\n  const tex = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, tex)\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n\n  const fb = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0)\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    console.log(`error creating framebuffer for ${type}`)\n    return false\n  }\n\n  // Draw the rectangle.\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex)\n  gl.uniform4fv(colorLoc, [0, 10, 20, 1])\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n  gl.bindTexture(gl.TEXTURE_2D, tex)\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  gl.clearColor(1, 0, 0, 1)\n  gl.clear(gl.COLOR_BUFFER_BIT)\n  gl.uniform4fv(colorLoc, [0, 1/10, 1/20, 1])\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n  // Check if rendered correctly\n  const pixel = new Uint8Array(4)\n  gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel)\n  if (pixel[0] !== 0 || pixel[1] < 248 || pixel[2] < 248 || pixel[3] < 254) {\n    console.log(`not able to actually render to ${type} texture`)\n    return false\n  }\n\n  // Check reading from float texture\n  if (type === gl.FLOAT) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\n    const floatPixel = new Float32Array(4)\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, floatPixel)\n    const error = gl.getError()\n    if (error) {\n      console.log(`error reading pixels as float: '${getErrorDescription(gl, error)}'`)\n      return false\n    }\n  }\n\n  return true\n}\n","/**\n * @file Viewer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\nimport {\n  PerspectiveCamera, OrthographicCamera, StereoCamera,\n  Vector2, Box3, Vector3, Matrix4, Color,\n  WebGLRenderer, WebGLRenderTarget,\n  NearestFilter, LinearFilter, AdditiveBlending,\n  RGBAFormat, FloatType, /*HalfFloatType, */UnsignedByteType,\n  ShaderMaterial,\n  PlaneGeometry, Geometry,\n  Scene, Mesh, Group, Object3D, Uniform,\n  Fog, SpotLight, AmbientLight,\n  BufferGeometry, BufferAttribute,\n  LineSegments,\n  LinearEncoding, sRGBEncoding, TextureEncoding\n} from 'three'\nimport '../shader/BasicLine.vert'\nimport '../shader/BasicLine.frag'\nimport '../shader/Quad.vert'\nimport '../shader/Quad.frag'\n\nimport {\n  Debug, Log, WebglErrorMessage, Browser,\n  setExtensionFragDepth, SupportsReadPixelsFloat, setSupportsReadPixelsFloat\n} from '../globals'\nimport { degToRad } from '../math/math-utils'\nimport Stats from './stats'\nimport { getShader } from '../shader/shader-utils'\nimport { setColorSpace } from '../color/colormaker'\nimport { JitterVectors } from './viewer-constants'\nimport {\n  makeImage, ImageParameters,\n  sortProjectedPosition, updateMaterialUniforms, updateCameraUniforms\n} from './viewer-utils'\nimport { testTextureSupport } from './gl-utils'\n\nimport Buffer from '../buffer/buffer'\n\nconst pixelBufferFloat = new Float32Array(4 * 25)\nconst pixelBufferUint = new Uint8Array(4 * 25)\n\n// When picking, we read a 25 pixel (5x5) array (readRenderTargetPixels)\n// We read the pixels in the order below to find what was picked.\n// This starts at the center and tries successively further points.\n// (Many points will be at equal distance to the center, their order\n// is arbitrary).\nconst pixelOrder = [12,7,13,17,11,6,8,18,16,2,14,22,10,1,3,9,19,23,21,15,5,0,4,24,20]\n\n\nconst tmpMatrix = new Matrix4()\n\nfunction onBeforeRender (this: Object3D, renderer: WebGLRenderer, scene: Scene, camera: PerspectiveCamera|OrthographicCamera, geometry: Geometry, material: ShaderMaterial/*, group */) {\n  const u = material.uniforms\n  const updateList = []\n\n  if (!u) return;\n\n  if (u.objectId) {\n    u.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255\n    updateList.push('objectId')\n  }\n\n  if (u.modelViewMatrixInverse || u.modelViewMatrixInverseTranspose ||\n      u.modelViewProjectionMatrix || u.modelViewProjectionMatrixInverse\n  ) {\n    this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld)\n  }\n\n  if (u.modelViewMatrixInverse) {\n    u.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix)\n    updateList.push('modelViewMatrixInverse')\n  }\n\n  if (u.modelViewMatrixInverseTranspose) {\n    if (u.modelViewMatrixInverse) {\n      u.modelViewMatrixInverseTranspose.value.copy(\n        u.modelViewMatrixInverse.value\n      ).transpose()\n    } else {\n      u.modelViewMatrixInverseTranspose.value\n        .getInverse(this.modelViewMatrix)\n        .transpose()\n    }\n    updateList.push('modelViewMatrixInverseTranspose')\n  }\n\n  if (u.modelViewProjectionMatrix) {\n    u.modelViewProjectionMatrix.value.multiplyMatrices(\n      camera.projectionMatrix, this.modelViewMatrix\n    )\n    updateList.push('modelViewProjectionMatrix')\n  }\n\n  if (u.modelViewProjectionMatrixInverse) {\n    if (u.modelViewProjectionMatrix) {\n      tmpMatrix.copy(\n        u.modelViewProjectionMatrix.value\n      )\n      u.modelViewProjectionMatrixInverse.value.getInverse(\n        tmpMatrix\n      )\n    } else {\n      tmpMatrix.multiplyMatrices(\n        camera.projectionMatrix, this.modelViewMatrix\n      )\n      u.modelViewProjectionMatrixInverse.value.getInverse(\n        tmpMatrix\n      )\n    }\n    updateList.push('modelViewProjectionMatrixInverse')\n  }\n\n  if (updateList.length) {\n    const materialProperties = renderer.properties.get(material)\n\n    if (materialProperties.program) {\n      const gl = renderer.getContext()\n      const p = materialProperties.program\n      gl.useProgram(p.program)\n      const pu = p.getUniforms()\n\n      updateList.forEach(function (name) {\n        pu.setValue(gl, name, u[ name ].value)\n      })\n    }\n  }\n}\n\nexport type CameraType = 'perspective'|'orthographic'|'stereo'\nexport type ColorWorkflow = 'linear' | 'sRGB'\n\nexport interface ViewerSignals {\n  ticked: Signal,\n  rendered: Signal\n}\n\nexport interface ViewerParameters {\n  fogColor: Color\n  fogNear: number\n  fogFar: number\n\n  backgroundColor: Color\n\n  cameraType: CameraType\n  cameraFov: number\n  cameraEyeSep: number\n  cameraZ: number\n\n  clipNear: number\n  clipFar: number\n  clipDist: number\n  clipMode: string               // \"scene\" or \"camera\"\n  clipScale: string              // \"relative\" or \"absolute\"\n\n  lightColor: Color\n  lightIntensity: number\n  ambientColor: Color\n  ambientIntensity: number\n\n  sampleLevel: number\n\n  rendererEncoding: TextureEncoding // default is three.LinearEncoding; three.sRGBEncoding gives more correct results\n}\n\nexport interface BufferInstance {\n  matrix: Matrix4\n}\n\n/**\n * Viewer class\n * @class\n * @param {String|Element} [idOrElement] - dom id or element\n */\nexport default class Viewer {\n  signals: ViewerSignals\n\n  container: HTMLElement\n  wrapper: HTMLElement\n\n  private rendering: boolean\n  private renderPending: boolean\n  private lastRenderedPicking: boolean\n  private isStill: boolean\n  private frameRequest: number\n\n  sampleLevel: number\n  private cDist: number\n  private bRadius: number\n\n  private parameters: ViewerParameters\n  stats: Stats\n\n  perspectiveCamera: PerspectiveCamera\n  private orthographicCamera: OrthographicCamera\n  private stereoCamera: StereoCamera\n  camera: PerspectiveCamera|OrthographicCamera\n\n  width: number\n  height: number\n\n  scene: Scene\n  private spotLight: SpotLight\n  private ambientLight: AmbientLight\n  rotationGroup: Group\n  translationGroup: Group\n  private modelGroup: Group\n  private pickingGroup: Group\n  private backgroundGroup: Group\n  private helperGroup: Group\n\n  renderer: WebGLRenderer\n  private supportsHalfFloat: boolean\n\n  private pickingTarget: WebGLRenderTarget\n  private sampleTarget: WebGLRenderTarget\n  private holdTarget: WebGLRenderTarget\n\n  private compositeUniforms: {\n    tForeground: Uniform\n    scale: Uniform\n  }\n  private compositeMaterial: ShaderMaterial\n  private compositeCamera: OrthographicCamera\n  private compositeScene: Scene\n\n  private boundingBoxMesh: LineSegments\n  boundingBox = new Box3()\n  private boundingBoxSize = new Vector3()\n  private boundingBoxLength = 0\n\n  private info = {\n    memory: {\n      programs: 0,\n      geometries: 0,\n      textures: 0\n    },\n    render: {\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n    }\n  }\n\n  private distVector = new Vector3()\n\n  constructor (idOrElement: string|HTMLElement) {\n    this.signals = {\n      ticked: new Signal(),\n      rendered: new Signal()\n    }\n\n    if (typeof idOrElement === 'string') {\n      const elm = document.getElementById(idOrElement)\n      if (elm === null) {\n        this.container = document.createElement('div')\n      }else {\n        this.container = elm\n      }\n    } else if (idOrElement instanceof HTMLElement) {\n      this.container = idOrElement\n    } else {\n      this.container = document.createElement('div')\n    }\n\n    if (this.container === document.body) {\n      this.width = window.innerWidth || 1\n      this.height = window.innerHeight || 1\n    } else {\n      const box = this.container.getBoundingClientRect()\n      this.width = box.width || 1\n      this.height = box.height || 1\n      this.container.style.overflow = 'hidden'\n    }\n\n    this.wrapper = document.createElement('div')\n    this.wrapper.style.position = 'relative'\n    this.container.appendChild(this.wrapper)\n\n    this._initParams()\n    this._initStats()\n    this._initCamera()\n    this._initScene()\n\n    if (this._initRenderer() === false) {\n      Log.error('Viewer: could not initialize renderer')\n      return\n    }\n\n    this._initHelper()\n\n    // fog & background\n    this.setBackground()\n    this.setFog()\n\n    this.animate = this.animate.bind(this)\n  }\n\n  private _initParams () {\n    this.parameters = {\n      fogColor: new Color(0x000000),\n      fogNear: 50,\n      fogFar: 100,\n\n      backgroundColor: new Color(0x000000),\n\n      cameraType: 'perspective',\n      cameraFov: 40,\n      cameraEyeSep: 0.3,\n      cameraZ: -80, // FIXME initial value should be automatically determined\n\n      clipNear: 0,\n      clipFar: 100,\n      clipDist: 10,\n      clipMode: 'scene',\n      clipScale: 'relative',\n\n      lightColor: new Color(0xdddddd),\n      lightIntensity: 1.0,\n      ambientColor: new Color(0xdddddd),\n      ambientIntensity: 0.2,\n\n      sampleLevel: 0,\n\n      // output encoding: use sRGB for a linear internal workflow, linear for traditional sRGB workflow.\n      rendererEncoding: LinearEncoding,\n    }\n  }\n\n  private _initCamera () {\n    const lookAt = new Vector3(0, 0, 0)\n    const {width, height} = this\n\n    this.perspectiveCamera = new PerspectiveCamera(\n      this.parameters.cameraFov, width / height\n    )\n    this.perspectiveCamera.position.z = this.parameters.cameraZ\n    this.perspectiveCamera.lookAt(lookAt)\n\n    this.orthographicCamera = new OrthographicCamera(\n      width / -2, width / 2, height / 2, height / -2\n    )\n    this.orthographicCamera.position.z = this.parameters.cameraZ\n    this.orthographicCamera.lookAt(lookAt)\n\n    this.stereoCamera = new StereoCamera()\n    this.stereoCamera.aspect = 0.5\n    this.stereoCamera.eyeSep = this.parameters.cameraEyeSep\n\n    const cameraType = this.parameters.cameraType\n    if (cameraType === 'orthographic') {\n      this.camera = this.orthographicCamera\n    } else if(cameraType === 'perspective' || cameraType === 'stereo') {\n      this.camera = this.perspectiveCamera\n    } else {\n      throw new Error(`Unknown cameraType '${cameraType}'`)\n    }\n    this.camera.updateProjectionMatrix()\n  }\n\n  private _initStats () {\n    this.stats = new Stats()\n  }\n\n  private _initScene () {\n    if (!this.scene) {\n      this.scene = new Scene()\n      this.scene.name = 'scene'\n    }\n\n    this.rotationGroup = new Group()\n    this.rotationGroup.name = 'rotationGroup'\n    this.scene.add(this.rotationGroup)\n\n    this.translationGroup = new Group()\n    this.translationGroup.name = 'translationGroup'\n    this.rotationGroup.add(this.translationGroup)\n\n    this.modelGroup = new Group()\n    this.modelGroup.name = 'modelGroup'\n    this.translationGroup.add(this.modelGroup)\n\n    this.pickingGroup = new Group()\n    this.pickingGroup.name = 'pickingGroup'\n    this.translationGroup.add(this.pickingGroup)\n\n    this.backgroundGroup = new Group()\n    this.backgroundGroup.name = 'backgroundGroup'\n    this.translationGroup.add(this.backgroundGroup)\n\n    this.helperGroup = new Group()\n    this.helperGroup.name = 'helperGroup'\n    this.translationGroup.add(this.helperGroup)\n\n    // fog\n\n    this.scene.fog = new Fog(this.parameters.fogColor.getHex())\n\n    // light\n\n    this.spotLight = new SpotLight(\n      this.parameters.lightColor.getHex(), this.parameters.lightIntensity\n    )\n    this.scene.add(this.spotLight)\n\n    this.ambientLight = new AmbientLight(\n      this.parameters.ambientColor.getHex(), this.parameters.ambientIntensity\n    )\n    this.scene.add(this.ambientLight)\n  }\n\n  private _initRenderer () {\n    const dpr = window.devicePixelRatio\n    const {width, height} = this\n\n    try {\n      this.renderer = new WebGLRenderer({\n        preserveDrawingBuffer: true,\n        alpha: true,\n        antialias: true\n      })\n    } catch (e) {\n      this.wrapper.innerHTML = WebglErrorMessage\n      return false\n    }\n    this.renderer.setPixelRatio(dpr)\n    this.renderer.setSize(width, height)\n    this.renderer.autoClear = false\n    this.renderer.sortObjects = true\n    this.renderer.outputEncoding = this.parameters.rendererEncoding\n\n    const gl = this.renderer.getContext()\n    // console.log(gl.getContextAttributes().antialias)\n    // console.log(gl.getParameter(gl.SAMPLES))\n\n    // For WebGL1, extensions must be explicitly enabled.\n    // The following are builtin to WebGL2 (and don't appear as\n    // extensions)\n    // EXT_frag_depth, OES_element_index_uint, OES_texture_float\n    // OES_texture_half_float\n\n    // The WEBGL_color_buffer_float extension is replaced by\n    // EXT_color_buffer_float\n\n    // If not webgl2 context, explicitly check for these\n    if (!this.renderer.capabilities.isWebGL2) {\n      setExtensionFragDepth(this.renderer.extensions.get('EXT_frag_depth'))\n      this.renderer.extensions.get('OES_element_index_uint')\n\n      setSupportsReadPixelsFloat(\n        (this.renderer.extensions.get('OES_texture_float') &&\n          this.renderer.extensions.get('WEBGL_color_buffer_float')) ||\n        (this.renderer.extensions.get('OES_texture_float') &&\n          testTextureSupport(gl.FLOAT))\n      )\n      // picking texture\n\n      this.renderer.extensions.get('OES_texture_float')\n\n      this.supportsHalfFloat = (\n        this.renderer.extensions.get('OES_texture_half_float') &&\n        testTextureSupport(0x8D61)\n      )\n\n    } else {\n      setExtensionFragDepth(true)\n      setSupportsReadPixelsFloat(\n        this.renderer.extensions.get('EXT_color_buffer_float')\n      )\n      this.supportsHalfFloat = true\n    }\n\n    this.wrapper.appendChild(this.renderer.domElement)\n\n    const dprWidth = width * dpr\n    const dprHeight = height * dpr\n\n\n    if (Debug) {\n      console.log(JSON.stringify({\n        'Browser': Browser,\n        'OES_texture_float': !!this.renderer.extensions.get('OES_texture_float'),\n        'OES_texture_half_float': !!this.renderer.extensions.get('OES_texture_half_float'),\n        'WEBGL_color_buffer_float': !!this.renderer.extensions.get('WEBGL_color_buffer_float'),\n        'testTextureSupport Float': testTextureSupport(gl.FLOAT),\n        'testTextureSupport HalfFloat': testTextureSupport(0x8D61),\n        'this.supportsHalfFloat': this.supportsHalfFloat,\n        'SupportsReadPixelsFloat': SupportsReadPixelsFloat\n      }, null, 2))\n    }\n\n    this.pickingTarget = new WebGLRenderTarget(\n      dprWidth, dprHeight,\n      {\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        stencilBuffer: false,\n        format: RGBAFormat,\n        type: SupportsReadPixelsFloat ? FloatType : UnsignedByteType\n      }\n    )\n    this.pickingTarget.texture.generateMipmaps = false\n    this.pickingTarget.texture.encoding = this.parameters.rendererEncoding\n\n    // workaround to reset the gl state after using testTextureSupport\n    // fixes some bug where nothing is rendered to the canvas\n    // when animations are started on page load\n    this.renderer.setRenderTarget(this.pickingTarget)\n    this.renderer.clear()\n    this.renderer.setRenderTarget(null!)\n\n    // ssaa textures\n\n    this.sampleTarget = new WebGLRenderTarget(\n      dprWidth, dprHeight,\n      {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter,\n        format: RGBAFormat\n      }\n    )\n    this.sampleTarget.texture.encoding = this.parameters.rendererEncoding\n\n    this.holdTarget = new WebGLRenderTarget(\n      dprWidth, dprHeight,\n      {\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        format: RGBAFormat,\n        type: UnsignedByteType\n        // using HalfFloatType or FloatType does not work on some Chrome 61 installations\n        // type: this.supportsHalfFloat ? HalfFloatType : (\n        //   SupportsReadPixelsFloat ? FloatType : UnsignedByteType\n        // )\n      }\n    )\n    this.holdTarget.texture.encoding = this.parameters.rendererEncoding\n\n    this.compositeUniforms = {\n      'tForeground': new Uniform(this.sampleTarget.texture),\n      'scale': new Uniform(1.0)\n    }\n\n    this.compositeMaterial = new ShaderMaterial({\n      uniforms: this.compositeUniforms,\n      vertexShader: getShader('Quad.vert'),\n      fragmentShader: getShader('Quad.frag'),\n      premultipliedAlpha: true,\n      transparent: true,\n      blending: AdditiveBlending,\n      depthTest: false,\n      depthWrite: false\n    })\n\n    this.compositeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n    this.compositeScene = new Scene()\n    this.compositeScene.name = 'compositeScene'\n    this.compositeScene.add(new Mesh(\n      new PlaneGeometry(2, 2), this.compositeMaterial\n    ))\n  }\n\n  private _initHelper () {\n    const indices = new Uint16Array([\n      0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6,\n      6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7\n    ])\n    const positions = new Float32Array(8 * 3)\n\n    const bbGeometry = new BufferGeometry()\n    bbGeometry.setIndex(new BufferAttribute(indices, 1))\n    bbGeometry.setAttribute('position', new BufferAttribute(positions, 3))\n    const bbMaterial = new ShaderMaterial({\n      uniforms: { 'uColor': { value: new Color('skyblue') } },\n      vertexShader: getShader('BasicLine.vert'),\n      fragmentShader: getShader('BasicLine.frag')\n    })\n\n    this.boundingBoxMesh = new LineSegments(bbGeometry, bbMaterial)\n    this.helperGroup.add(this.boundingBoxMesh)\n  }\n\n  updateHelper () {\n    const position = ((this.boundingBoxMesh.geometry as BufferGeometry).attributes as any).position  // TODO\n    const array = position.array\n    const {min, max} = this.boundingBox\n\n    array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z\n    array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z\n    array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z\n    array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z\n    array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z\n    array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z\n    array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z\n    array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z\n\n    position.needsUpdate = true\n\n    if (!this.boundingBox.isEmpty()) {\n      this.boundingBoxMesh.geometry.computeBoundingSphere()\n    }\n  }\n\n  /** Distance from origin (lookAt point) */\n  get cameraDistance(): number {\n    return Math.abs(this.camera.position.z)\n  }\n\n  /** Set distance from origin (lookAt point); along the -z axis */\n  set cameraDistance(d: number) {\n    this.camera.position.z = -d\n  }\n\n  add (buffer: Buffer, instanceList?: BufferInstance[]) {\n    // Log.time( \"Viewer.add\" );\n\n    if (instanceList) {\n      instanceList.forEach(instance => this.addBuffer(buffer, instance))\n    } else {\n      this.addBuffer(buffer)\n    }\n\n    buffer.group.name = 'meshGroup'\n    buffer.wireframeGroup.name = 'wireframeGroup'\n    if (buffer.parameters.background) {\n      this.backgroundGroup.add(buffer.group)\n      this.backgroundGroup.add(buffer.wireframeGroup)\n    } else {\n      this.modelGroup.add(buffer.group)\n      this.modelGroup.add(buffer.wireframeGroup)\n    }\n\n    if (buffer.pickable) {\n      this.pickingGroup.add(buffer.pickingGroup)\n    }\n\n    if (Debug) this.updateHelper()\n\n    // Log.timeEnd( \"Viewer.add\" );\n  }\n\n  addBuffer (buffer: Buffer, instance?: BufferInstance) {\n    // Log.time( \"Viewer.addBuffer\" );\n\n    function setUserData (object: Object3D) {\n      if (object instanceof Group) {\n        object.children.forEach(setUserData)\n      } else {\n        object.userData.buffer = buffer\n        object.userData.instance = instance\n        object.onBeforeRender = onBeforeRender\n      }\n    }\n\n    const mesh = buffer.getMesh()\n    if (instance) {\n      mesh.applyMatrix4(instance.matrix)\n    }\n    setUserData(mesh)\n    buffer.group.add(mesh)\n\n    const wireframeMesh = buffer.getWireframeMesh()\n    if (instance) {\n      // wireframeMesh.applyMatrix( instance.matrix );\n      wireframeMesh.matrix.copy(mesh.matrix)\n      wireframeMesh.position.copy(mesh.position)\n      wireframeMesh.quaternion.copy(mesh.quaternion)\n      wireframeMesh.scale.copy(mesh.scale)\n    }\n    setUserData(wireframeMesh)\n    buffer.wireframeGroup.add(wireframeMesh)\n\n    if (buffer.pickable) {\n      const pickingMesh = buffer.getPickingMesh()\n      if (instance) {\n        // pickingMesh.applyMatrix( instance.matrix );\n        pickingMesh.matrix.copy(mesh.matrix)\n        pickingMesh.position.copy(mesh.position)\n        pickingMesh.quaternion.copy(mesh.quaternion)\n        pickingMesh.scale.copy(mesh.scale)\n      }\n      setUserData(pickingMesh)\n      buffer.pickingGroup.add(pickingMesh)\n    }\n\n    if (instance) {\n      this._updateBoundingBox(buffer.geometry, buffer.matrix, instance.matrix)\n    } else {\n      this._updateBoundingBox(buffer.geometry, buffer.matrix)\n    }\n\n    // Log.timeEnd( \"Viewer.addBuffer\" );\n  }\n\n  remove (buffer: Buffer) {\n    this.translationGroup.children.forEach(function (group) {\n      group.remove(buffer.group)\n      group.remove(buffer.wireframeGroup)\n    })\n\n    if (buffer.pickable) {\n      this.pickingGroup.remove(buffer.pickingGroup)\n    }\n\n    this.updateBoundingBox()\n    if (Debug) this.updateHelper()\n\n    // this.requestRender();\n  }\n\n  private _updateBoundingBox (geometry?: BufferGeometry, matrix?: Matrix4, instanceMatrix?: Matrix4) {\n    const boundingBox = this.boundingBox\n\n    function updateGeometry (geometry: BufferGeometry, matrix?: Matrix4, instanceMatrix?: Matrix4) {\n      if (geometry.boundingBox == null) {\n        geometry.computeBoundingBox()\n      }\n\n      const geoBoundingBox = (geometry.boundingBox as Box3).clone()\n\n      if (matrix) {\n        geoBoundingBox.applyMatrix4(matrix)\n      }\n      if (instanceMatrix) {\n        geoBoundingBox.applyMatrix4(instanceMatrix)\n      }\n\n      if (geoBoundingBox.min.equals(geoBoundingBox.max)) {\n        // mainly to give a single impostor geometry some volume\n        // as it is only expanded in the shader on the GPU\n        geoBoundingBox.expandByScalar(5)\n      }\n\n      boundingBox.union(geoBoundingBox)\n    }\n\n    function updateNode (node: Mesh) {\n      if (node.geometry !== undefined) {\n        let matrix, instanceMatrix\n        if (node.userData.buffer) {\n          matrix = node.userData.buffer.matrix\n        }\n        if (node.userData.instance) {\n          instanceMatrix = node.userData.instance.matrix\n        }\n        updateGeometry(node.geometry as BufferGeometry, matrix, instanceMatrix)  // TODO\n      }\n    }\n\n    if (geometry) {\n      updateGeometry(geometry, matrix, instanceMatrix)\n    } else {\n      boundingBox.makeEmpty()\n      this.modelGroup.traverse(updateNode)\n      this.backgroundGroup.traverse(updateNode)\n    }\n\n    boundingBox.getSize(this.boundingBoxSize)\n    this.boundingBoxLength = this.boundingBoxSize.length()\n  }\n\n  updateBoundingBox () {\n    this._updateBoundingBox()\n    if (Debug) this.updateHelper()\n  }\n\n  getPickingPixels () {\n    const {width, height} = this\n\n    const n = width * height * 4\n    const imgBuffer = SupportsReadPixelsFloat ? new Float32Array(n) : new Uint8Array(n)\n\n    this.render(true)\n    this.renderer.readRenderTargetPixels(\n      this.pickingTarget, 0, 0, width, height, imgBuffer\n    )\n\n    return imgBuffer\n  }\n\n  getImage (picking: boolean) {\n    return new Promise(resolve => {\n      if (picking) {\n        const {width, height} = this\n        const n = width * height * 4\n        let imgBuffer = this.getPickingPixels()\n\n        if (SupportsReadPixelsFloat) {\n          const imgBuffer2 = new Uint8Array(n)\n          for (let i = 0; i < n; ++i) {\n            imgBuffer2[ i ] = Math.round(imgBuffer[ i ] * 255)\n          }\n          imgBuffer = imgBuffer2\n        }\n\n        const canvas = document.createElement('canvas')\n        canvas.width = width\n        canvas.height = height\n        const ctx = canvas.getContext('2d')!  // TODO\n        const imgData = ctx.getImageData(0, 0, width, height)\n        imgData.data.set(imgBuffer as any)  // TODO\n        ctx.putImageData(imgData, 0, 0)\n        canvas.toBlob(resolve as any, 'image/png')  // TODO\n      } else {\n        this.renderer.domElement.toBlob(resolve as any, 'image/png')  // TODO\n      }\n    })\n  }\n\n  makeImage (params: Partial<ImageParameters> = {}) {\n    return makeImage(this, params)\n  }\n\n  setLight (color: Color|number|string, intensity: number, ambientColor: Color|number|string, ambientIntensity: number) {\n    const p = this.parameters\n\n    if (color !== undefined) p.lightColor.set(color as string)  // TODO\n    if (intensity !== undefined) p.lightIntensity = intensity\n    if (ambientColor !== undefined) p.ambientColor.set(ambientColor as string)  // TODO\n    if (ambientIntensity !== undefined) p.ambientIntensity = ambientIntensity\n\n    this.requestRender()\n  }\n\n  setFog (color?: Color|number|string, near?: number, far?: number) {\n    const p = this.parameters\n\n    if (color !== undefined) p.fogColor.set(color as string)  // TODO\n    if (near !== undefined) p.fogNear = near\n    if (far !== undefined) p.fogFar = far\n\n    this.requestRender()\n  }\n\n  setBackground (color?: Color|number|string) {\n    const p = this.parameters\n\n    if (color) p.backgroundColor.set(color as string)  // TODO\n\n    this.setFog(p.backgroundColor)\n    this.renderer.setClearColor(p.backgroundColor, 0)\n    this.renderer.domElement.style.backgroundColor = p.backgroundColor.getStyle()\n\n    this.requestRender()\n  }\n\n  setSampling (level: number) {\n    if (level !== undefined) {\n      this.parameters.sampleLevel = level\n      this.sampleLevel = level\n    }\n\n    this.requestRender()\n  }\n\n  /**\n   * Set the output color encoding, i.e. how the renderer translates\n   * colorspaces as it renders to the screen.\n\n   * The default is LinearEncoding, because the internals of NGL are\n   * already sRGB so no translation is needed to show sRGB colors.\n   * Set to sRGBEncoding to create a linear workflow, and also call\n   * `setColorEncoding(LinearEncoding)` to linearize colors on input.\n   * @see setColorEncoding\n   */\n  private setOutputEncoding (encoding: TextureEncoding) {\n    this.parameters.rendererEncoding = encoding\n    this.renderer.outputEncoding = encoding\n    this.pickingTarget.texture.encoding = encoding\n    this.sampleTarget.texture.encoding = encoding\n    this.holdTarget.texture.encoding = encoding\n  }\n\n  /**\n   * Set the internal color workflow, linear or sRGB.\n   * sRGB, the default, is more \"vibrant\" at the cost of accuracy.\n   * Linear gives more accurate results, especially for transparent objects.\n   * In all cases, the output is always sRGB; this just affects how colors are computed internally.\n   * Call this just after creating the viewer, before loading any models.\n   */\n  setColorWorkflow (encoding: ColorWorkflow) {\n    if (encoding != 'linear' && encoding != 'sRGB')\n      throw new Error(`setColorWorkflow: invalid color workflow ${encoding}`)\n    setColorSpace(encoding == 'linear' ? 'linear' : 'sRGB')\n    this.setOutputEncoding(encoding == 'linear' ? sRGBEncoding : LinearEncoding)\n    // Note: this doesn't rebuild models, so existing geometry will have\n    // the old color encoding.\n    this.requestRender()\n  }\n\n  setCamera (type: CameraType, fov?: number, eyeSep?: number) {\n    const p = this.parameters\n\n    if (type) p.cameraType = type\n    if (fov) p.cameraFov = fov\n    if (eyeSep) p.cameraEyeSep = eyeSep\n\n    if (p.cameraType === 'orthographic') {\n      if (this.camera !== this.orthographicCamera) {\n        this.camera = this.orthographicCamera\n        this.camera.position.copy(this.perspectiveCamera.position)\n        this.camera.up.copy(this.perspectiveCamera.up)\n        this.updateZoom()\n      }\n    } else if (p.cameraType === 'perspective' || p.cameraType === 'stereo') {\n      if (this.camera !== this.perspectiveCamera) {\n        this.camera = this.perspectiveCamera\n        this.camera.position.copy(this.orthographicCamera.position)\n        this.camera.up.copy(this.orthographicCamera.up)\n      }\n    } else {\n      throw new Error(`Unknown cameraType '${p.cameraType}'`)\n    }\n\n    this.perspectiveCamera.fov = p.cameraFov\n    this.stereoCamera.eyeSep = p.cameraEyeSep\n    this.camera.updateProjectionMatrix()\n\n    this.requestRender()\n  }\n\n  setClip (near: number, far: number, dist: number, clipMode?: string, clipScale?: string) {\n    const p = this.parameters\n\n    if (near !== undefined) p.clipNear = near\n    if (far !== undefined) p.clipFar = far\n    if (dist !== undefined) p.clipDist = dist\n    if (clipMode !== undefined) p.clipMode = clipMode\n    if (clipScale !== undefined) p.clipScale = clipScale\n\n    this.requestRender()\n  }\n\n  setSize (width: number, height: number) {\n    this.width = width || 1\n    this.height = height || 1\n\n    this.perspectiveCamera.aspect = this.width / this.height\n    this.orthographicCamera.left = -this.width / 2\n    this.orthographicCamera.right = this.width / 2\n    this.orthographicCamera.top = this.height / 2\n    this.orthographicCamera.bottom = -this.height / 2\n    this.camera.updateProjectionMatrix()\n\n    const dpr = window.devicePixelRatio\n\n    this.renderer.setPixelRatio(dpr)\n    this.renderer.setSize(width, height)\n\n    const dprWidth = this.width * dpr\n    const dprHeight = this.height * dpr\n\n    this.pickingTarget.setSize(dprWidth, dprHeight)\n    this.sampleTarget.setSize(dprWidth, dprHeight)\n    this.holdTarget.setSize(dprWidth, dprHeight)\n\n    this.requestRender()\n  }\n\n  handleResize () {\n    if (this.container === document.body) {\n      this.setSize(window.innerWidth, window.innerHeight)\n    } else {\n      const box = this.container.getBoundingClientRect()\n      this.setSize(box.width, box.height)\n    }\n  }\n\n  updateInfo (reset?: boolean) {\n    const { memory, render } = this.info\n\n    if (reset) {\n      memory.programs = 0\n      memory.geometries = 0\n      memory.textures = 0\n\n      render.calls = 0\n      render.vertices = 0\n      render.points = 0\n    } else {\n      const rInfo = this.renderer.info\n      const rMemory = rInfo.memory\n      const rRender = rInfo.render\n\n      memory.geometries = rMemory.geometries\n      memory.textures = rMemory.textures\n\n      render.calls += rRender.calls\n      render.faces += rRender.triangles\n      render.points += rRender.points\n    }\n  }\n\n  animate () {\n    this.signals.ticked.dispatch(this.stats)\n    const delta = window.performance.now() - this.stats.startTime\n\n    if (delta > 500 && !this.isStill && this.sampleLevel < 3 && this.sampleLevel !== -1) {\n      const currentSampleLevel = this.sampleLevel\n      this.sampleLevel = 3\n      this.renderPending = true\n      this.render()\n      this.isStill = true\n      this.sampleLevel = currentSampleLevel\n      if (Debug) Log.log('rendered still frame')\n    }\n\n    this.frameRequest = window.requestAnimationFrame(this.animate)\n  }\n\n  pick (x: number, y: number) {\n    if (this.parameters.cameraType === 'stereo') {\n      // TODO picking broken for stereo camera\n      return {\n        'pid': 0,\n        'instance': undefined,\n        'picker': undefined\n      }\n    }\n\n    x *= window.devicePixelRatio\n    y *= window.devicePixelRatio\n\n    x = Math.max(x - 2, 0)\n    y = Math.max(y - 2, 0)\n\n    let pid = 0, instance, picker\n    const pixelBuffer = SupportsReadPixelsFloat ? pixelBufferFloat : pixelBufferUint\n\n    this.render(true)\n    this.renderer.readRenderTargetPixels(\n      this.pickingTarget, x, y, 5, 5, pixelBuffer\n    )\n\n    for (let i = 0; i < pixelOrder.length; i++) {\n\n      const offset = pixelOrder[i] * 4\n\n      const oid = Math.round(pixelBuffer[ offset + 3 ])\n      const object = this.pickingGroup.getObjectById(oid)\n      if (object) {\n        instance = object.userData.instance\n        picker = object.userData.buffer.picking\n      } else {\n        continue\n      }\n\n      if (SupportsReadPixelsFloat) {\n        pid =\n          ((Math.round(pixelBuffer[offset] * 255) << 16) & 0xFF0000) |\n          ((Math.round(pixelBuffer[offset + 1] * 255) << 8) & 0x00FF00) |\n          ((Math.round(pixelBuffer[offset + 2] * 255)) & 0x0000FF)\n      } else {\n        pid =\n          (pixelBuffer[offset] << 16) |\n          (pixelBuffer[offset + 1] << 8) |\n          (pixelBuffer[offset + 2])\n      }\n    }\n    // if( Debug ){\n    //   const rgba = Array.apply( [], pixelBuffer );\n    //   Log.log( pixelBuffer );\n    //   Log.log(\n    //     \"picked color\",\n    //     rgba.map( c => { return c.toPrecision( 2 ) } )\n    //   );\n    //   Log.log( \"picked pid\", pid );\n    //   Log.log( \"picked oid\", oid );\n    //   Log.log( \"picked object\", object );\n    //   Log.log( \"picked instance\", instance );\n    //   Log.log( \"picked position\", x, y );\n    //   Log.log( \"devicePixelRatio\", window.devicePixelRatio );\n    // }\n\n    return { pid, instance, picker }\n  }\n\n  requestRender () {\n    if (this.renderPending) {\n      // Log.info(\"there is still a 'render' call pending\")\n      return\n    }\n\n    // start gathering stats anew after inactivity\n    if (window.performance.now() - this.stats.startTime > 22) {\n      this.stats.begin()\n      this.isStill = false\n    }\n\n    this.renderPending = true\n\n    window.requestAnimationFrame(() => {\n      this.render()\n      this.stats.update()\n    })\n  }\n\n  updateZoom () {\n    const fov = degToRad(this.perspectiveCamera.fov)\n    const height = 2 * Math.tan(fov / 2) * this.cameraDistance\n    this.orthographicCamera.zoom = this.height / height\n  }\n\n  /**\n   * Convert an absolute clip value to a relative one using bRadius.\n   *\n   * 0.0 -> 50.0\n   * bRadius -> 0.0\n   */\n  absoluteToRelative (d: number) :number {\n    return 50 * (1 - d / this.bRadius)\n  }\n\n  /**\n   * Convert a relative clip value to an absolute one using bRadius\n   *\n   * 0.0 -> bRadius\n   * 50.0 -> 0.0\n   */\n  relativeToAbsolute (d: number) : number {\n    return this.bRadius * (1 - d / 50)\n  }\n\n  /**\n   * Intepret clipMode, clipScale and set the camera and fog clipping.\n   * Also ensures bRadius and cDist are valid\n   */\n  private __updateClipping () {\n    const p = this.parameters\n\n    // bRadius must always be updated for material-based clipping\n    // and for focus calculations\n    this.bRadius = Math.max(10, this.boundingBoxLength * 0.5)\n\n    // FL: Removed below, but leaving commented as I don't understand intention\n    // this.bRadius += this.boundingBox.getCenter(this.distVector).length()\n\n    if (!isFinite(this.bRadius)) {\n      this.bRadius = 50\n    }\n\n    this.camera.getWorldPosition(this.distVector)\n    this.cDist = this.distVector.length()\n    if (!this.cDist) {\n      // recover from a broken (NaN) camera position\n      this.cameraDistance = Math.abs(p.cameraZ)\n      this.cDist = Math.abs(p.cameraZ)\n    }\n\n    // fog\n    const fog = this.scene.fog as Fog\n    fog.color.set(p.fogColor)\n\n    if (p.clipMode === 'camera') {\n      // Always interpret clipScale as absolute for clipMode camera\n\n      this.camera.near = p.clipNear\n      this.camera.far = p.clipFar\n      fog.near = p.fogNear\n      fog.far = p.fogFar\n\n    } else {\n      // scene mode\n\n      if (p.clipScale === 'absolute') {\n        // absolute scene mode; offset clip planes from scene center\n        // (note: positive values move near plane towards camera and rear plane away)\n\n        this.camera.near = this.cDist - p.clipNear\n        this.camera.far = this.cDist + p.clipFar\n        fog.near = this.cDist - p.fogNear\n        fog.far = this.cDist + p.fogFar\n\n      } else {\n        // relative scene mode (default): convert pecentages to Angstroms\n\n        const nearFactor = (50 - p.clipNear) / 50\n        const farFactor = -(50 - p.clipFar) / 50\n        this.camera.near = this.cDist - (this.bRadius * nearFactor)\n        this.camera.far = this.cDist + (this.bRadius * farFactor)\n\n        const fogNearFactor = (50 - p.fogNear) / 50\n        const fogFarFactor = -(50 - p.fogFar) / 50\n        fog.near = this.cDist - (this.bRadius * fogNearFactor)\n        fog.far = this.cDist + (this.bRadius * fogFarFactor)\n      }\n    }\n\n    if (p.clipMode !== 'camera') {\n\n      if (this.camera.type === 'PerspectiveCamera') {\n\n        this.camera.near = Math.max(0.1, p.clipDist, this.camera.near)\n        this.camera.far = Math.max(1, this.camera.far)\n        fog.near = Math.max(0.1, fog.near)\n        fog.far = Math.max(1, fog.far)\n      } else if (this.camera.type === 'OrthographicCamera') {\n\n        if (p.clipDist > 0) {\n          this.camera.near = Math.max(p.clipDist, this.camera.near)\n        }\n      }\n    }\n  }\n\n  private __updateCamera () {\n    const camera = this.camera\n    camera.updateMatrix()\n    camera.updateMatrixWorld(true)\n    camera.updateProjectionMatrix()\n\n    updateMaterialUniforms(this.scene, camera, this.renderer, this.cDist, this.bRadius)\n    sortProjectedPosition(this.scene, camera)\n  }\n\n  private __setVisibility (model: boolean, picking: boolean, background: boolean, helper: boolean) {\n    this.modelGroup.visible = model\n    this.pickingGroup.visible = picking\n    this.backgroundGroup.visible = background\n    this.helperGroup.visible = helper\n  }\n\n  private __updateLights () {\n    this.spotLight.color.set(this.parameters.lightColor)\n    this.spotLight.intensity = this.parameters.lightIntensity\n\n    this.distVector.copy(this.camera.position).setLength(this.boundingBoxLength * 100)\n    this.spotLight.position.copy(this.camera.position).add(this.distVector)\n\n    this.ambientLight.color.set(this.parameters.ambientColor)\n    this.ambientLight.intensity = this.parameters.ambientIntensity\n  }\n\n  private __renderPickingGroup (camera: PerspectiveCamera|OrthographicCamera) {\n    this.renderer.setRenderTarget(this.pickingTarget || null)\n    this.renderer.clear()\n    this.__setVisibility(false, true, false, false)\n    this.renderer.render(this.scene, camera)\n    //  back to standard render target\n    this.renderer.setRenderTarget(null)\n    this.updateInfo()\n\n    // if (Debug) {\n    //   this.__setVisibility(false, true, false, true);\n\n    //   this.renderer.clear();\n    //   this.renderer.render(this.scene, camera);\n    // }\n  }\n\n  private __renderModelGroup (camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\n    this.renderer.setRenderTarget(renderTarget || null)\n    this.renderer.clear()\n    this.__setVisibility(false, false, true, false)\n    this.renderer.render(this.scene, camera)\n    this.renderer.clear(false, true, true)\n    this.updateInfo()\n\n    this.__setVisibility(true, false, false, Debug)\n    this.renderer.render(this.scene, camera)\n    this.renderer.setRenderTarget(null) // set back to default canvas\n    this.updateInfo()\n  }\n\n  private __renderSuperSample (camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\n    // based on the Supersample Anti-Aliasing Render Pass\n    // contributed to three.js by bhouston / http://clara.io/\n    //\n    // This manual approach to SSAA re-renders the scene ones for\n    // each sample with camera jitter and accumulates the results.\n    // References: https://en.wikipedia.org/wiki/Supersampling\n    const offsetList = JitterVectors[ Math.max(0, Math.min(this.sampleLevel, 5)) ]\n\n    const baseSampleWeight = 1.0 / offsetList.length\n    const roundingRange = 1 / 32\n\n    this.compositeUniforms.tForeground.value = this.sampleTarget.texture\n\n    let width = this.sampleTarget.width\n    const height = this.sampleTarget.height\n    if (this.parameters.cameraType === 'stereo') {\n      width /= 2\n    }\n\n    // render the scene multiple times, each slightly jitter offset\n    // from the last and accumulate the results.\n    for (let i = 0; i < offsetList.length; ++i) {\n      const offset = offsetList[ i ]\n      camera.setViewOffset(\n        width, height, offset[ 0 ], offset[ 1 ], width, height\n      )\n      camera.updateProjectionMatrix()\n      updateCameraUniforms(this.scene, camera)\n\n      let sampleWeight = baseSampleWeight\n      // the theory is that equal weights for each sample lead to an\n      // accumulation of rounding errors.\n      // The following equation varies the sampleWeight per sample\n      // so that it is uniformly distributed across a range of values\n      // whose rounding errors cancel each other out.\n      const uniformCenteredDistribution = -0.5 + (i + 0.5) / offsetList.length\n      sampleWeight += roundingRange * uniformCenteredDistribution\n      this.compositeUniforms.scale.value = sampleWeight\n\n      this.__renderModelGroup(camera, this.sampleTarget)\n      this.renderer.setRenderTarget(this.holdTarget)\n      if (i === 0)  {\n        this.renderer.clear()\n      }\n\n      this.renderer.render(this.compositeScene, this.compositeCamera)\n    }\n\n    this.compositeUniforms.scale.value = 1.0\n    this.compositeUniforms.tForeground.value = this.holdTarget.texture\n\n    camera.clearViewOffset()\n    this.renderer.setRenderTarget(renderTarget || null)\n    this.renderer.clear()\n    this.renderer.render(this.compositeScene, this.compositeCamera)\n  }\n\n  private __renderStereo (picking = false, _renderTarget?: WebGLRenderTarget) {\n    const stereoCamera = this.stereoCamera\n    stereoCamera.update(this.perspectiveCamera);\n\n    const renderer = this.renderer\n    let size = new Vector2()\n    renderer.getSize(size)\n\n    renderer.setScissorTest(true)\n\n    renderer.setScissor(0, 0, size.width / 2, size.height)\n    renderer.setViewport(0, 0, size.width / 2, size.height)\n    updateCameraUniforms(this.scene, stereoCamera.cameraL)\n    this.__render(picking, stereoCamera.cameraL)\n\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height)\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height)\n    updateCameraUniforms(this.scene, stereoCamera.cameraR)\n    this.__render(picking, stereoCamera.cameraR)\n\n    renderer.setScissorTest(false)\n    renderer.setViewport(0, 0, size.width, size.height)\n  }\n\n  private __render(picking = false, camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\n    if (picking) {\n      if (!this.lastRenderedPicking) this.__renderPickingGroup(camera)\n    } else if (this.sampleLevel > 0 && this.parameters.cameraType !== 'stereo') {\n      // TODO super sample broken for stereo camera\n      this.__renderSuperSample(camera, renderTarget)\n    } else {\n      this.__renderModelGroup(camera, renderTarget)\n    }\n  }\n\n  render (picking = false, renderTarget?: WebGLRenderTarget) {\n    if (this.rendering) {\n      Log.warn(\"'tried to call 'render' from within 'render'\")\n      return\n    }\n\n    // Log.time('Viewer.render')\n\n    this.rendering = true\n\n    try {\n      this.__updateClipping()\n      this.__updateCamera()\n      this.__updateLights()\n      this.updateInfo(true)\n\n      // render\n      if (this.parameters.cameraType === 'stereo') {\n        this.__renderStereo(picking, renderTarget)\n      } else {\n        this.__render(picking, this.camera, renderTarget)\n      }\n      this.lastRenderedPicking = picking\n    } finally {\n      this.rendering = false\n      this.renderPending = false\n    }\n    this.signals.rendered.dispatch()\n\n    // Log.timeEnd('Viewer.render')\n    // Log.log(this.info.memory, this.info.render)\n  }\n\n  clear () {\n    Log.log('scene cleared')\n    this.scene.remove(this.rotationGroup)\n    this._initScene()\n    this.renderer.clear()\n  }\n\n  dispose () {\n    this.renderer.dispose()\n    window.cancelAnimationFrame(this.frameRequest)\n  }\n}\n","/**\n * @file Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport const LeftMouseButton = 1\nexport const MiddleMouseButton = 2\nexport const RightMouseButton = 3\n","/**\n * @file Mouse Observer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector2 } from 'three'\nimport { Signal } from 'signals'\n\nimport { LeftMouseButton, RightMouseButton } from '../constants'\nimport { defaults } from '../utils'\nimport Viewer from '../viewer/viewer'\nimport MouseControls from '../controls/mouse-controls'\n\n/**\n * @example\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\n *\n * @typedef {Object} MouseSignals\n * @property {Signal<Integer, Integer>} moved - on move: deltaX, deltaY\n * @property {Signal<Number>} scrolled - on scroll: delta\n * @property {Signal<Integer, Integer>} dragged - on drag: deltaX, deltaY\n * @property {Signal} dropped - on drop\n * @property {Signal} clicked - on click\n * @property {Signal} hovered - on hover\n */\n\nfunction getTouchDistance (event: TouchEvent) {\n  const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX\n  const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nfunction getMouseButtons (event: MouseEvent) {\n    if (typeof event === 'object') {\n    if ('buttons' in event) {\n      return event.buttons\n    } else if ('which' in event as any) {\n      const b = (event as any).which\n      if (b === 2) {\n        return 4\n      } else if (b === 3) {\n        return 2\n      } else if (b > 0) {\n        return 1 << (b - 1)\n      }\n    } else if ('button' in event as any) {\n      const b = (event as any).button\n      if (b === 1) {\n        return 4\n      } else if (b === 2) {\n        return 2\n      } else if (b >= 0) {\n        return 1 << b\n      }\n    }\n  }\n  return 0\n}\n\nexport interface MouseSignals {\n  moved: Signal  // on move: deltaX, deltaY\n  scrolled: Signal  // on scroll: delta\n  dragged: Signal  // on drag: deltaX, deltaY\n  dropped: Signal  // on drop\n  clicked: Signal  // on click\n  hovered: Signal  // on hover\n  doubleClicked: Signal\n}\n\nexport interface MouseParams {\n  hoverTimeout?: number\n  handleScroll?:boolean\n  doubleClickSpeed?: number\n}\n\n/**\n * Mouse observer\n *\n * @example\n * // listen to mouse moving (and touch-moving) events\n * mouseObserver.moved.moved.add( function( deltaX, deltaY ){ ... } );\n *\n * @example\n * // listen to scrolling (and pinching) events\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\n *\n * @example\n * // listen to dragging (and touch-dragging) events\n * mouseObserver.signals.dragged.add( function( deltaX, deltaY ){ ... } );\n *\n * @example\n * // listen to clicking (and tapping) events\n * mouseObserver.signals.clicked.add( function(){ ... } );\n *\n * @example\n * // listen to double clicking (and double tapping) events\n * mouseObserver.signals.doubleClicked.add( function(){ ... } );\n *\n * @example\n * // listen to hovering events\n * mouseObserver.signals.hovered.add( function(){ ... } );\n */\nclass MouseObserver {\n  signals: MouseSignals = {\n    moved: new Signal(),\n    scrolled: new Signal(),\n    dragged: new Signal(),\n    dropped: new Signal(),\n    clicked: new Signal(),\n    hovered: new Signal(),\n    doubleClicked: new Signal()\n  }\n\n  hoverTimeout: number\n  handleScroll:boolean\n  doubleClickSpeed: number\n\n  viewer: Viewer\n  mouse: MouseObserver\n  controls: MouseControls\n\n  position = new Vector2()  // Position on page\n  prevPosition = new Vector2()  // Previous position on page\n  down = new Vector2()  // Position on page when clicked\n  canvasPosition = new Vector2()  // Position on dom element\n  prevClickCP = new Vector2()\n\n  moving = false  // Flag indicating if the mouse is moving\n  hovering = true  // Flag indicating if the mouse is hovering\n  scrolled = false  // Flag indicating if there was a scolling event since the last mouse move\n  lastMoved = Infinity  // Timestamp of last mouse move\n  which? = 0  // 0: No button; 1: Left button; 2: Middle button; 3: Right button\n  buttons? = 0  // 0: No button; 1: Left button; 2: Right button; 4: Middle button\n  pressed? = false  // Flag indicating if the mouse is pressed down\n  altKey = false  // Flag indicating if the alt key is pressed\n  ctrlKey = false  // Flag indicating if the ctrl key is pressed\n  metaKey = false  // Flag indicating if the meta key is pressed\n  shiftKey = false  // Flag indicating if the shift key is pressed\n\n  doubleClickPending: boolean\n  lastClicked: number\n  overElement: boolean\n  lastTouchDistance: number\n  private frameRequest: number\n\n  /**\n   * @param  {Element} domElement - the dom element to observe mouse events in\n   * @param  {Object} params - parameters object\n   * @param  {Integer} params.hoverTimeout - timeout in ms until the {@link MouseSignals.hovered}\n   *                                         signal is fired, set to -1 to ignore hovering\n   * @param  {Boolean} params.handleScroll - whether or not to handle scroll events\n   * @param  {Integer} params.doubleClickSpeed - max time in ms to trigger double click\n   */\n  constructor (readonly domElement: HTMLCanvasElement, params: MouseParams = {}) {\n    this.domElement.style.touchAction = 'none'\n\n    this.hoverTimeout = defaults(params.hoverTimeout, 50)\n    this.handleScroll = defaults(params.handleScroll, true)\n    this.doubleClickSpeed = defaults(params.doubleClickSpeed, 500)\n\n    this._listen = this._listen.bind(this)\n    this._onMousewheel = this._onMousewheel.bind(this)\n    this._onMousemove = this._onMousemove.bind(this)\n    this._onMousedown = this._onMousedown.bind(this)\n    this._onMouseup = this._onMouseup.bind(this)\n    this._onContextmenu = this._onContextmenu.bind(this)\n    this._onTouchstart = this._onTouchstart.bind(this)\n    this._onTouchend = this._onTouchend.bind(this)\n    this._onTouchmove = this._onTouchmove.bind(this)\n\n    this._listen()\n\n    const opt = { passive: false } // treat as 'passive' so preventDefault can be called\n    document.addEventListener('mousewheel', this._onMousewheel, opt)\n    document.addEventListener('wheel', this._onMousewheel, opt)\n    document.addEventListener('MozMousePixelScroll', this._onMousewheel, opt)\n    document.addEventListener('mousemove', this._onMousemove, opt)\n    document.addEventListener('mousedown', this._onMousedown, opt)\n    document.addEventListener('mouseup', this._onMouseup, opt)\n    document.addEventListener('contextmenu', this._onContextmenu, opt)\n    document.addEventListener('touchstart', this._onTouchstart, opt)\n    document.addEventListener('touchend', this._onTouchend, opt)\n    document.addEventListener('touchmove', this._onTouchmove, opt)\n  }\n\n  get key () {\n    let key = 0\n    if (this.altKey) key += 1\n    if (this.ctrlKey) key += 2\n    if (this.metaKey) key += 4\n    if (this.shiftKey) key += 8\n    return key\n  }\n\n  setParameters (params: MouseParams = {}) {\n    this.hoverTimeout = defaults(params.hoverTimeout, this.hoverTimeout)\n  }\n\n  /**\n   * listen to mouse actions\n   * @emits {MouseSignals.clicked} when clicked\n   * @emits {MouseSignals.hovered} when hovered\n   * @return {undefined}\n   */\n  _listen () {\n    const now = window.performance.now()\n    const cp = this.canvasPosition\n    if (this.doubleClickPending && now - this.lastClicked > this.doubleClickSpeed) {\n      this.doubleClickPending = false\n    }\n    if (now - this.lastMoved > this.hoverTimeout) {\n      this.moving = false\n    }\n    if (this.scrolled || (!this.moving && !this.hovering)) {\n      this.scrolled = false\n      if (this.hoverTimeout !== -1 && this.overElement) {\n        this.hovering = true\n        this.signals.hovered.dispatch(cp.x, cp.y)\n      }\n    }\n    this.frameRequest = window.requestAnimationFrame(this._listen)\n  }\n\n  /**\n   * handle mouse scroll\n   * @emits {MouseSignals.scrolled} when scrolled\n   * @param  {Event} event - mouse event\n   * @return {undefined}\n   */\n  _onMousewheel(event: WheelEvent & { wheelDelta?: number, wheelDeltaY?: number }) {\n    if (event.target !== this.domElement || !this.handleScroll) {\n      return\n    }\n    event.preventDefault()\n    this._setKeys(event)\n\n    let delta = 0\n    if ('deltaY' in event && 'deltaMode' in event) {\n      // all modern browsers, using WheelEvent; deltaY + down (toward user)\n      if (event.deltaMode === WheelEvent.DOM_DELTA_PIXEL)\n        // everything except Firefox: normally 100 per wheel click\n        delta = -event.deltaY * (2.5 / 100.0)\n      else if (event.deltaMode === WheelEvent.DOM_DELTA_LINE)\n        // Firefox in line mode, normally 3 per wheel click\n        delta = -event.deltaY * (2.5 / 3.0)\n      else                      // page mode: 1 per wheel click\n        delta = -event.deltaY * 2.5\n    } else if ('deltaY' in event && !('detail' in event))  {\n      // Old Firefox or IE 11: deltaY but no deltaMode; treat as pixels\n      delta = -event.deltaY * (2.5 / 100.0)\n    } else if (event.wheelDelta !== undefined) {\n      delta = -event.wheelDelta * (2.5 / 100)\n    } else if (event.wheelDeltaY !== undefined) {\n      delta = -event.wheelDeltaY * (2.5 / 100)\n    } else {\n      // Old Firefox, MouseWheelEvent\n      delta = -event.detail / 3\n    }\n    this.signals.scrolled.dispatch(delta)\n\n    setTimeout(() => {\n      this.scrolled = true\n    }, this.hoverTimeout)\n  }\n\n  /**\n   * handle mouse move\n   * @emits {MouseSignals.moved} when moved\n   * @emits {MouseSignals.dragged} when dragged\n   * @param  {Event} event - mouse event\n   * @return {undefined}\n   */\n  _onMousemove (event: MouseEvent) {\n    if (event.target === this.domElement) {\n      event.preventDefault()\n      this.overElement = true\n    } else {\n      this.overElement = false\n    }\n    this._setKeys(event)\n    this.moving = true\n    this.hovering = false\n    this.lastMoved = window.performance.now()\n    this.prevPosition.copy(this.position)\n    this.position.set(event.clientX, event.clientY)\n    this._setCanvasPosition(event)\n    const dx = this.prevPosition.x - this.position.x\n    const dy = this.prevPosition.y - this.position.y\n    this.signals.moved.dispatch(dx, dy)\n    if (this.pressed) {\n      this.signals.dragged.dispatch(dx, dy)\n    }\n  }\n\n  _onMousedown (event: MouseEvent) {\n    if (event.target !== this.domElement) {\n      return\n    }\n    event.preventDefault()\n    this._setKeys(event)\n    this.moving = false\n    this.hovering = false\n    this.down.set(event.clientX, event.clientY)\n    this.position.set(event.clientX, event.clientY)\n    this.which = event.which\n    this.buttons = getMouseButtons(event)\n    this.pressed = true\n    this._setCanvasPosition(event)\n  }\n\n  /**\n   * handle mouse up\n   * @emits {MouseSignals.doubleClicked} when double clicked\n   * @emits {MouseSignals.dropped} when dropped\n   * @param  {Event} event - mouse event\n   * @return {undefined}\n   */\n  _onMouseup (event: MouseEvent) {\n    if (event.target === this.domElement) {\n      event.preventDefault()\n    }\n    this._setKeys(event)\n    const cp = this.canvasPosition\n    if (this._distance() < 4) {\n      this.lastClicked = window.performance.now()\n      if (this.doubleClickPending && this.prevClickCP.distanceTo(cp) < 4) {\n        this.signals.doubleClicked.dispatch(cp.x, cp.y)\n        this.doubleClickPending = false\n      }\n      this.signals.clicked.dispatch(cp.x, cp.y)\n      this.doubleClickPending = true\n      this.prevClickCP.copy(cp)\n    }\n    this.which = undefined\n    this.buttons = undefined\n    this.pressed = undefined\n    // if (this._distance() > 3 || event.which === RightMouseButton) {\n    //   this.signals.dropped.dispatch();\n    // }\n  }\n\n  _onContextmenu (event: MouseEvent) {\n    if (event.target === this.domElement) {\n      event.preventDefault()\n    }\n  }\n\n  _onTouchstart (event: TouchEvent) {\n    if (event.target !== this.domElement) {\n      return\n    }\n    event.preventDefault()\n    this.pressed = true\n    switch (event.touches.length) {\n      case 1: {\n        this.moving = false\n        this.hovering = false\n        this.down.set(\n          event.touches[ 0 ].pageX,\n          event.touches[ 0 ].pageY\n        )\n        this.position.set(\n          event.touches[ 0 ].pageX,\n          event.touches[ 0 ].pageY\n        )\n        this._setCanvasPosition(event.touches[ 0 ])\n        break\n      }\n\n      case 2: {\n        this.down.set(\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\n        )\n        this.position.set(\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\n        )\n        this.lastTouchDistance = getTouchDistance(event)\n      }\n    }\n  }\n\n  _onTouchend (event: TouchEvent) {\n    if (event.target === this.domElement) {\n      event.preventDefault()\n    }\n    this.which = undefined\n    this.buttons = undefined\n    this.pressed = undefined\n  }\n\n  _onTouchmove (event: TouchEvent) {\n    if (event.target === this.domElement) {\n      event.preventDefault()\n      this.overElement = true\n    } else {\n      this.overElement = false\n    }\n    switch (event.touches.length) {\n      case 1: {\n        this._setKeys(event)\n        this.which = LeftMouseButton\n        this.buttons = 1\n        this.moving = true\n        this.hovering = false\n        this.lastMoved = window.performance.now()\n        this.prevPosition.copy(this.position)\n        this.position.set(\n          event.touches[ 0 ].pageX,\n          event.touches[ 0 ].pageY\n        )\n        this._setCanvasPosition(event.touches[ 0 ])\n        const dx = this.prevPosition.x - this.position.x\n        const dy = this.prevPosition.y - this.position.y\n        this.signals.moved.dispatch(dx, dy)\n        if (this.pressed) {\n          this.signals.dragged.dispatch(dx, dy)\n        }\n        break\n      }\n\n      case 2: {\n        const touchDistance = getTouchDistance(event)\n        const delta = touchDistance - this.lastTouchDistance\n        this.lastTouchDistance = touchDistance\n        this.prevPosition.copy(this.position)\n        this.position.set(\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\n        )\n        if (Math.abs(delta) > 2 && this.handleScroll &&\n            this.position.distanceTo(this.prevPosition) < 2\n        ) {\n          this.which = 0\n          this.buttons = 0\n          this.signals.scrolled.dispatch(delta / 2)\n        } else {\n          this.which = RightMouseButton\n          this.buttons = 2\n          const dx = this.prevPosition.x - this.position.x\n          const dy = this.prevPosition.y - this.position.y\n          this.signals.moved.dispatch(dx, dy)\n          if (this.pressed) {\n            this.signals.dragged.dispatch(dx, dy)\n          }\n        }\n      }\n    }\n  }\n\n  _distance () {\n    return this.position.distanceTo(this.down)\n  }\n\n  _setCanvasPosition (event: any) {  // TODO\n    const box = this.domElement.getBoundingClientRect()\n    let offsetX, offsetY;\n    if ('clientX' in event && 'clientY' in event) {\n      offsetX = event.clientX - box.left\n      offsetY = event.clientY - box.top\n    } else {\n      offsetX = event.offsetX\n      offsetY = event.offsetY\n    }\n    this.canvasPosition.set(offsetX, box.height - offsetY)\n  }\n\n  _setKeys (event: MouseEvent|TouchEvent) {\n    this.altKey = event.altKey\n    this.ctrlKey = event.ctrlKey\n    this.metaKey = event.metaKey\n    this.shiftKey = event.shiftKey\n  }\n\n  dispose () {\n    document.removeEventListener('mousewheel', this._onMousewheel)\n    document.removeEventListener('wheel', this._onMousewheel)\n    document.removeEventListener('MozMousePixelScroll', this._onMousewheel)\n    document.removeEventListener('mousemove', this._onMousemove)\n    document.removeEventListener('mousedown', this._onMousedown)\n    document.removeEventListener('mouseup', this._onMouseup)\n    document.removeEventListener('contextmenu', this._onContextmenu)\n    document.removeEventListener('touchstart', this._onTouchstart)\n    document.removeEventListener('touchend', this._onTouchend)\n    document.removeEventListener('touchmove', this._onTouchmove)\n    window.cancelAnimationFrame(this.frameRequest)\n  }\n}\n\nexport default MouseObserver\n","/**\n * @file Trackball Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4, Quaternion } from 'three'\n\nimport { defaults } from '../utils'\nimport Stage from '../stage/stage'\nimport MouseObserver from '../stage/mouse-observer'\nimport Viewer from '../viewer/viewer'\nimport ViewerControls from './viewer-controls'\nimport AtomProxy from '../proxy/atom-proxy';\nimport Component from '../component/component';\n\nconst tmpRotateXMatrix = new Matrix4()\nconst tmpRotateYMatrix = new Matrix4()\nconst tmpRotateZMatrix = new Matrix4()\nconst tmpRotateMatrix = new Matrix4()\nconst tmpRotateCameraMatrix = new Matrix4()\nconst tmpRotateVector = new Vector3()\nconst tmpRotateQuaternion = new Quaternion()\nconst tmpRotateQuaternion2 = new Quaternion()\nconst tmpPanMatrix = new Matrix4()\nconst tmpPanVector = new Vector3()\nconst tmpAtomVector = new Vector3()\n\nexport interface TrackballControlsParams {\n  rotateSpeed?: number\n  zoomSpeed?: number\n  panSpeed?: number\n}\n\n/**\n * Trackball controls\n */\nclass TrackballControls {\n  viewer: Viewer\n  mouse: MouseObserver\n  controls: ViewerControls\n\n  rotateSpeed: number\n  zoomSpeed: number\n  panSpeed: number\n\n  constructor (readonly stage: Stage, params: TrackballControlsParams = {}) {\n    this.rotateSpeed = defaults(params.rotateSpeed, 2.0)\n    this.zoomSpeed = defaults(params.zoomSpeed, 1.2)\n    this.panSpeed = defaults(params.panSpeed, 1.0)\n\n    this.viewer = stage.viewer\n    this.mouse = stage.mouseObserver\n    this.controls = stage.viewerControls\n  }\n\n  get component (): Component|undefined {\n    return this.stage.transformComponent\n  }\n\n  get atom (): AtomProxy|undefined {\n    return this.stage.transformAtom\n  }\n\n  private _setPanVector (x: number, y: number, z = 0) {\n    const scaleFactor = this.controls.getCanvasScaleFactor(z)\n    tmpPanVector.set(x, y, 0)\n    tmpPanVector.multiplyScalar(this.panSpeed * scaleFactor)\n  }\n\n  private _getRotateXY (x: number, y: number) {\n    return [\n      this.rotateSpeed * -x * 0.01,\n      this.rotateSpeed * y * 0.01\n    ]\n  }\n\n  private _getCameraRotation(m: Matrix4) {\n    m.extractRotation(this.viewer.camera.matrixWorld)\n    m.multiply(tmpRotateYMatrix.makeRotationY(Math.PI))\n\n    return m\n  }\n\n  private _transformPanVector () {\n    if (!this.component) return\n\n    // Adjust for component and scene rotation\n    tmpPanMatrix.extractRotation(this.component.transform)\n    tmpPanMatrix.premultiply(this.viewer.rotationGroup.matrix)\n    tmpPanMatrix.getInverse(tmpPanMatrix)\n\n    // Adjust for camera rotation\n    tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix))\n\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\n  }\n\n  zoom (delta: number) {\n    this.controls.zoom(this.zoomSpeed * delta * 0.02)\n  }\n\n  pan (x: number, y: number) {\n    this._setPanVector(x, y)\n\n    // Adjust for scene rotation\n    tmpPanMatrix.getInverse(this.viewer.rotationGroup.matrix)\n\n    // Adjust for camera rotation\n    tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix))\n\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\n    this.controls.translate(tmpPanVector)\n  }\n\n  panComponent (x: number, y: number) {\n    if (!this.component) return\n\n    this._setPanVector(x, y)\n    this._transformPanVector()\n\n    this.component.position.add(tmpPanVector)\n    this.component.updateMatrix()\n  }\n\n  panAtom (x: number, y: number) {\n    if (!this.atom || !this.component) return\n\n    this.atom.positionToVector3(tmpAtomVector)\n    tmpAtomVector.add(this.viewer.translationGroup.position)\n    tmpAtomVector.applyMatrix4(this.viewer.rotationGroup.matrix)\n\n    this._setPanVector(x, y, tmpAtomVector.z)\n    this._transformPanVector()\n\n    this.atom.positionAdd(tmpPanVector)\n    this.component.updateRepresentations({ 'position': true })\n  }\n\n  rotate (x: number, y: number) {\n    const [ dx, dy ] = this._getRotateXY(x, y)\n\n    // rotate around screen X then screen Y\n    this._getCameraRotation(tmpRotateMatrix)\n    tmpRotateVector.set(1, 0, 0) // X axis\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix) // screen X\n    tmpRotateQuaternion.setFromAxisAngle(tmpRotateVector, dy)\n\n    tmpRotateVector.set(0, 1, 0) // Y axis\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix) // screen Y\n    tmpRotateQuaternion2.setFromAxisAngle(tmpRotateVector, dx)\n\n    tmpRotateQuaternion.multiply(tmpRotateQuaternion2)\n    tmpRotateMatrix.makeRotationFromQuaternion(tmpRotateQuaternion)\n    this.controls.applyMatrix(tmpRotateMatrix)\n  }\n\n  zRotate (x: number, y: number) {\n    const dz = this.rotateSpeed * ((-x + y) / -2) * 0.01\n\n    tmpRotateZMatrix.makeRotationZ(dz)\n    this.controls.applyMatrix(tmpRotateZMatrix)\n  }\n\n  rotateComponent (x: number, y: number) {\n    if (!this.component) return\n\n    const [ dx, dy ] = this._getRotateXY(x, y)\n\n    this._getCameraRotation(tmpRotateCameraMatrix)\n\n    tmpRotateMatrix.extractRotation(this.component.transform)\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\n    tmpRotateMatrix.premultiply(tmpRotateCameraMatrix)\n\n    tmpRotateVector.set(1, 0, 0)\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\n    tmpRotateXMatrix.makeRotationAxis(tmpRotateVector, dy)\n\n    tmpRotateVector.set(0, 1, 0)\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\n    tmpRotateYMatrix.makeRotationAxis(tmpRotateVector, dx)\n\n    tmpRotateXMatrix.multiply(tmpRotateYMatrix)\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateXMatrix)\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\n    this.component.quaternion.normalize()\n    this.component.updateMatrix()\n  }\n}\n\nexport default TrackballControls\n","/**\n * @file Picking Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4, Vector2 } from 'three'\n\nimport Stage from '../stage/stage'\nimport StructureComponent from '../component/structure-component'\nimport MouseObserver from '../stage/mouse-observer'\nimport { Picker } from '../utils/picker'\nimport ViewerControls from './viewer-controls'\nimport Shape from '../geometry/shape'\nimport Structure from '../structure/structure'\nimport BondProxy from '../proxy/bond-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\nimport Surface from '../surface/surface'\nimport Volume from '../surface/volume'\nimport Unitcell from '../symmetry/unitcell'\nimport Component from '../component/component';\n\nconst tmpVec = new Vector3()\n\nexport interface ShapePrimitive {\n  name: string\n  shape: Shape\n}\n\nfunction closer (x: Vector3, a: Vector3, b: Vector3) {\n  return x.distanceTo(a) < x.distanceTo(b)\n}\n\n/**\n * Picking data object.\n * @typedef {Object} PickingData - picking data\n * @property {Number} [pid] - picking id\n * @property {Object} [instance] - instance data\n * @property {Integer} instance.id - instance id\n * @property {String|Integer} instance.name - instance name\n * @property {Matrix4} instance.matrix - transformation matrix of the instance\n * @property {Picker} [picker] - picker object\n */\n\nexport interface InstanceData {\n  id: number\n  name: number|string\n  matrix: Matrix4\n}\n\nexport interface PickingData {\n  pid: number\n  instance: InstanceData\n  picker: Picker\n}\n\n/**\n * Picking proxy class.\n */\nclass PickingProxy {\n  pid: number\n  picker: Picker\n  instance: InstanceData\n  controls: ViewerControls\n  mouse: MouseObserver\n\n  /**\n   * Create picking proxy object\n   * @param  {PickingData} pickingData - picking data\n   * @param  {Stage} stage - stage object\n   */\n  constructor (pickingData: PickingData, readonly stage: Stage) {\n    this.pid = pickingData.pid\n    this.picker = pickingData.picker\n\n    /**\n     * @type {Object}\n     */\n    this.instance = pickingData.instance\n\n    /**\n     * @type {Stage}\n     */\n    this.stage = stage\n    /**\n     * @type {ViewerControls}\n     */\n    this.controls = stage.viewerControls\n    /**\n     * @type {MouseObserver}\n     */\n    this.mouse = stage.mouseObserver\n  }\n\n  /**\n   * Kind of the picked data\n   * @type {String}\n   */\n  get type () { return this.picker.type }\n\n  /**\n   * If the `alt` key was pressed\n   * @type {Boolean}\n   */\n  get altKey () { return this.mouse.altKey }\n  /**\n   * If the `ctrl` key was pressed\n   * @type {Boolean}\n   */\n  get ctrlKey () { return this.mouse.ctrlKey }\n  /**\n   * If the `meta` key was pressed\n   * @type {Boolean}\n   */\n  get metaKey () { return this.mouse.metaKey }\n  /**\n   * If the `shift` key was pressed\n   * @type {Boolean}\n   */\n  get shiftKey () { return this.mouse.shiftKey }\n\n  /**\n   * Position of the mouse on the canvas\n   * @type {Vector2}\n   */\n  get canvasPosition (): Vector2 { return this.mouse.canvasPosition }\n\n  /**\n   * The component the picked data is part of\n   * @type {Component}\n   */\n  get component (): Component {\n    return this.stage.getComponentsByObject(this.picker.data as any).list[ 0 ]  // TODO\n  }\n\n  /**\n   * The picked object data\n   * @type {Object}\n   */\n  get object () {\n    return this.picker.getObject(this.pid)\n  }\n\n  /**\n   * The 3d position in the scene of the picked object\n   * @type {Vector3}\n   */\n  get position () {\n    return this.picker.getPosition(this.pid, this.instance, this.component)\n  }\n\n  /**\n   * The atom of a picked bond that is closest to the mouse\n   * @type {AtomProxy}\n   */\n  get closestBondAtom (): AtomProxy|undefined {\n    if (this.type !== 'bond' || !this.bond) return undefined\n\n    const bond = this.bond\n    const controls = this.controls\n    const cp = this.canvasPosition\n\n    const v1 = bond.atom1.positionToVector3()\n    const v2 = bond.atom2.positionToVector3()\n\n    v1.applyMatrix4(this.component.matrix)\n    v2.applyMatrix4(this.component.matrix)\n\n    const acp1 = controls.getPositionOnCanvas(v1)\n    const acp2 = controls.getPositionOnCanvas(v2)\n\n    return closer(cp as any, acp1, acp2) ? bond.atom1 : bond.atom2\n  }\n\n  /**\n   * Close-by atom\n   * @type {AtomProxy}\n   */\n  get closeAtom (): AtomProxy|undefined {\n    const cp = this.canvasPosition\n    const ca = this.closestBondAtom\n    if (!ca) return undefined\n\n    const v = ca.positionToVector3().applyMatrix4(this.component.matrix)\n\n    const acp = this.controls.getPositionOnCanvas(v)\n\n    ca.positionToVector3(tmpVec)\n    if (this.instance) tmpVec.applyMatrix4(this.instance.matrix)\n    tmpVec.applyMatrix4(this.component.matrix)\n    const viewer = this.controls.viewer\n    tmpVec.add(viewer.translationGroup.position)\n    tmpVec.applyMatrix4(viewer.rotationGroup.matrix)\n\n    const scaleFactor = this.controls.getCanvasScaleFactor(tmpVec.z)\n    const sc = this.component as StructureComponent\n    const radius = sc.getMaxRepresentationRadius(ca.index)\n    //console.log(scaleFactor, cp.distanceTo(acp), radius/scaleFactor, radius)\n\n    if (cp.distanceTo(acp) <= radius/scaleFactor) {\n      return ca\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n   * @type {Object}\n   */\n  get arrow () { return this._objectIfType('arrow') as ShapePrimitive }\n  /**\n   * @type {AtomProxy}\n   */\n  get atom () { return this._objectIfType('atom') as AtomProxy }\n  /**\n   * @type {Object}\n   */\n  get axes () { return this._objectIfType('axes') }\n  /**\n   * @type {BondProxy}\n   */\n  get bond () { return this._objectIfType('bond') as BondProxy }\n  /**\n   * @type {Object}\n   */\n  get box () { return this._objectIfType('box') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get cone () { return this._objectIfType('cone') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get clash () { return this._objectIfType('clash') as { clash: { sele1: string, sele2: string } } }\n  /**\n   * @type {BondProxy}\n   */\n  get contact () { return this._objectIfType('contact') as { type: string, atom1: AtomProxy, atom2: AtomProxy } }\n  /**\n   * @type {Object}\n   */\n  get cylinder () { return this._objectIfType('cylinder') as ShapePrimitive }\n  /**\n   * @type {BondProxy}\n   */\n  get distance () { return this._objectIfType('distance') as BondProxy }\n  /**\n   * @type {Object}\n   */\n  get ellipsoid () { return this._objectIfType('ellipsoid') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get octahedron () { return this._objectIfType('octahedron') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get point () { return this._objectIfType('point') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get mesh () { return this._objectIfType('mesh') as { name: string, shape: Shape, serial: number } }\n  /**\n   * @type {Object}\n   */\n  get slice () { return this._objectIfType('slice') as { volume: Volume, value: number } }\n  /**\n   * @type {Object}\n   */\n  get sphere () { return this._objectIfType('sphere') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get tetrahedron () { return this._objectIfType('tetrahedron') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get torus () { return this._objectIfType('torus') as ShapePrimitive }\n  /**\n   * @type {Object}\n   */\n  get surface () { return this._objectIfType('surface') as { surface: Surface, index: number } }\n  /**\n   * @type {Object}\n   */\n  get unitcell () { return this._objectIfType('unitcell') as { unitcell: Unitcell, structure: Structure } }\n  /**\n   * @type {Object}\n   */\n  get unknown () { return this._objectIfType('unknown') }\n  /**\n   * @type {Object}\n   */\n  get volume () { return this._objectIfType('volume') as { volume: Volume, value: number } }\n  /**\n   * @type {Object}\n   */\n  get wideline () { return this._objectIfType('wideline') as ShapePrimitive }\n\n  _objectIfType (type: string) {\n    return this.type === type ? this.object : undefined\n  }\n\n  getLabel () {\n    const atom = this.atom || this.closeAtom\n    let msg = 'nothing'\n    if (this.arrow) {\n      msg = this.arrow.name\n    } else if (atom) {\n      msg = `atom: ${atom.qualifiedName()} (${atom.structure.name})`\n    } else if (this.axes) {\n      msg = 'axes'\n    } else if (this.bond) {\n      msg = `bond: ${this.bond.atom1.qualifiedName()} - ${this.bond.atom2.qualifiedName()} (${this.bond.structure.name})`\n    } else if (this.box) {\n      msg = this.box.name\n    } else if (this.cone) {\n      msg = this.cone.name\n    } else if (this.clash) {\n      msg = `clash: ${this.clash.clash.sele1} - ${this.clash.clash.sele2}`\n    } else if (this.contact) {\n      msg = `${this.contact.type}: ${this.contact.atom1.qualifiedName()} - ${this.contact.atom2.qualifiedName()} (${this.contact.atom1.structure.name})`\n    } else if (this.cylinder) {\n      msg = this.cylinder.name\n    } else if (this.distance) {\n      msg = `distance: ${this.distance.atom1.qualifiedName()} - ${this.distance.atom2.qualifiedName()} (${this.distance.structure.name})`\n    } else if (this.ellipsoid) {\n      msg = this.ellipsoid.name\n    } else if (this.octahedron) {\n      msg = this.octahedron.name\n    } else if (this.point) {\n      msg = this.point.name\n    } else if (this.mesh) {\n      msg = `mesh: ${this.mesh.name || this.mesh.serial} (${this.mesh.shape.name})`\n    } else if (this.slice) {\n      msg = `slice: ${this.slice.value.toPrecision(3)} (${this.slice.volume.name})`\n    } else if (this.sphere) {\n      msg = this.sphere.name\n    } else if (this.surface) {\n      msg = `surface: ${this.surface.surface.name}`\n    } else if (this.tetrahedron) {\n      msg = this.tetrahedron.name\n    } else if (this.torus) {\n      msg = this.torus.name\n    } else if (this.unitcell) {\n      msg = `unitcell: ${this.unitcell.unitcell.spacegroup} (${this.unitcell.structure.name})`\n    } else if (this.unknown) {\n      msg = 'unknown'\n    } else if (this.volume) {\n      msg = `volume: ${this.volume.value.toPrecision(3)} (${this.volume.volume.name})`\n    } else if (this.wideline) {\n      msg = this.wideline.name\n    }\n    return msg\n  }\n}\n\nexport default PickingProxy\n","/**\n * @file Picking Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport PickingProxy from './picking-proxy'\nimport Stage from '../stage/stage'\nimport Viewer from '../viewer/viewer'\n\n/**\n * Picking controls\n */\nclass PickingControls {\n  viewer: Viewer\n\n  constructor (readonly stage: Stage) {\n    this.viewer = stage.viewer\n  }\n\n  /**\n   * get picking data\n   * @param {Number} x - canvas x coordinate\n   * @param {Number} y - canvas y coordinate\n   * @return {PickingProxy|undefined} picking proxy\n   */\n  pick (x: number, y: number) {\n    const pickingData = this.viewer.pick(x, y)\n\n    if (pickingData.picker &&\n        pickingData.picker.type !== 'ignore' &&\n        pickingData.pid !== undefined\n    ) {\n      const pickerArray = pickingData.picker.array\n      if (pickerArray && pickingData.pid >= pickerArray.length) {\n        console.error('pid >= picker.array.length')\n      } else {\n        return new PickingProxy(pickingData, this.stage)\n      }\n    }\n  }\n}\n\nexport default PickingControls\n","/**\n * @file Viewer Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector2, Vector3, Matrix4, Quaternion, OrthographicCamera } from 'three'\nimport * as signalsWrapper from 'signals'\n\nimport {\n  ensureVector2, ensureVector3, ensureMatrix4, ensureQuaternion\n} from '../utils'\nimport { degToRad } from '../math/math-utils'\nimport Stage from '../stage/stage'\nimport Viewer from '../viewer/viewer'\n\n/**\n * Orientation matrix, a 4x4 transformation matrix with rotation part\n * used for scene rotation, scale part for scene camera distance and\n * position part for scene translation\n * @typedef {Matrix4} OrientationMatrix - orientation matrix\n */\n\nconst tmpQ = new Quaternion()\nconst tmpP = new Vector3()\nconst tmpS = new Vector3()\n\nconst tmpCanvasVector = new Vector3()\nconst tmpScaleVector = new Vector3()\nconst tmpRotateMatrix = new Matrix4()\nconst tmpRotateVector = new Vector3()\nconst tmpAlignMatrix = new Matrix4()\n\n/**\n * Viewer controls\n */\nclass ViewerControls {\n  signals = {\n    changed: new signalsWrapper.Signal()\n  }\n\n  viewer: Viewer\n\n  /**\n   * @param  {Stage} stage - the stage object\n   */\n  constructor (readonly stage: Stage) {\n    this.viewer = stage.viewer\n  }\n\n  /**\n   * scene center position\n   * @type {Vector3}\n   */\n  get position () {\n    return this.viewer.translationGroup.position\n  }\n\n  /**\n   * scene rotation\n   * @type {Quaternion}\n   */\n  get rotation () {\n    return this.viewer.rotationGroup.quaternion\n  }\n\n  /**\n   * Trigger render and emit changed event\n   * @emits {ViewerControls.signals.changed}\n   * @return {undefined}\n   */\n  changed () {\n    this.viewer.requestRender()\n    this.signals.changed.dispatch()\n  }\n\n  getPositionOnCanvas (position: Vector3, optionalTarget?: Vector2) {\n    const canvasPosition = ensureVector2(optionalTarget)\n    const viewer = this.viewer\n\n    tmpCanvasVector.copy(position)\n      .add(viewer.translationGroup.position)\n      .applyMatrix4(viewer.rotationGroup.matrix)\n      .project(viewer.camera)\n\n    return canvasPosition.set(\n      (tmpCanvasVector.x + 1) * viewer.width / 2,\n      (tmpCanvasVector.y + 1) * viewer.height / 2\n    )\n  }\n\n  getCanvasScaleFactor (z = 0) {\n    const camera = this.viewer.camera\n    if (camera instanceof OrthographicCamera) {\n      return 1 / camera.zoom\n    } else {\n      z = Math.abs(z)\n      z += this.getCameraDistance()\n      const fov = degToRad(camera.fov)\n      const unitHeight = 2.0 * z * Math.tan(fov / 2)\n      return unitHeight / this.viewer.height\n    }\n  }\n\n  /**\n   * get scene orientation\n   * @param {Matrix4} optionalTarget - pre-allocated target matrix\n   * @return {OrientationMatrix} scene orientation\n   */\n  getOrientation (optionalTarget?: Matrix4) {\n    const m = ensureMatrix4(optionalTarget)\n\n    m.copy(this.viewer.rotationGroup.matrix)\n    const z = this.getCameraDistance()\n    m.scale(tmpScaleVector.set(z, z, z))\n    m.setPosition(this.viewer.translationGroup.position)\n\n    return m\n  }\n\n  /**\n   * set scene orientation\n   * @param {OrientationMatrix|Array} orientation - scene orientation\n   * @return {undefined}\n   */\n  orient (orientation?: Matrix4) {\n    ensureMatrix4(orientation).decompose(tmpP, tmpQ, tmpS)\n\n    const v = this.viewer\n    v.rotationGroup.setRotationFromQuaternion(tmpQ)\n    v.translationGroup.position.copy(tmpP)\n    v.cameraDistance = tmpS.z\n    v.updateZoom()\n    this.changed()\n  }\n\n  /**\n   * translate scene\n   * @param  {Vector3|Array} vector - translation vector\n   * @return {undefined}\n   */\n  translate (vector: Vector3|number[]) {\n    this.viewer.translationGroup.position\n      .add(ensureVector3(vector))\n    this.changed()\n  }\n\n  /**\n   * center scene\n   * @param  {Vector3|Array} position - center position\n   * @return {undefined}\n   */\n  center (position: Vector3|number[]) {\n    this.viewer.translationGroup.position\n      .copy(ensureVector3(position)).negate()\n    this.changed()\n  }\n\n  /**\n   * \"zoom\" scene by moving camera closer to origin\n   * @param  {Number} delta - zoom change\n   * @return {undefined}\n   */\n  zoom (delta: number) {\n    this.distance(this.getCameraDistance() * (1 - delta))\n  }\n\n  /**\n   * get camera distance\n   */\n  getCameraDistance(): number {\n    return this.viewer.cameraDistance\n  }\n\n  /**\n   * camera distance\n   * @param  {Number} z - distance\n   * @return {undefined}\n   */\n  distance (distance: number) {\n    // Math.abs because distance used to be \"z\", normally negative.\n    // Math.max to prevent us from getting _too_ close.\n    this.viewer.cameraDistance = Math.max(Math.abs(distance), 0.2)\n    this.viewer.updateZoom()\n    this.changed()\n  }\n\n  /**\n   * spin scene on axis\n   * @param  {Vector3|Array} axis - rotation axis\n   * @param  {Number} angle - amount to spin\n   * @return {undefined}\n   */\n  spin (axis: Vector3|number[], angle: number) {\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\n    tmpRotateVector\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\n\n    this.viewer.rotationGroup.rotateOnAxis(tmpRotateVector, angle)\n    this.changed()\n  }\n\n  /**\n   * rotate scene\n   * @param  {Quaternion|Array} quaternion - rotation quaternion\n   * @return {undefined}\n   */\n  rotate (quaternion: Quaternion|number[]) {\n    this.viewer.rotationGroup\n      .setRotationFromQuaternion(ensureQuaternion(quaternion))\n    this.changed()\n  }\n\n  /**\n   * align scene to basis matrix\n   * @param  {Matrix4|Array} basis - basis matrix\n   * @return {undefined}\n   */\n  align (basis: Matrix4|number[]) {\n    tmpAlignMatrix.getInverse(ensureMatrix4(basis))\n\n    this.viewer.rotationGroup.setRotationFromMatrix(tmpAlignMatrix)\n    this.changed()\n  }\n\n  /**\n   * apply rotation matrix to scene\n   * @param  {Matrix4|Array} matrix - rotation matrix\n   * @return {undefined}\n   */\n  applyMatrix (matrix: Matrix4|number[]) {\n    this.viewer.rotationGroup.applyMatrix4(ensureMatrix4(matrix))\n    this.changed()\n  }\n}\n\nexport default ViewerControls\n","/**\n * @file Animation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Quaternion } from 'three'\n\nimport { defaults, ensureVector3, ensureQuaternion } from '../utils'\nimport { lerp, smoothstep } from '../math/math-utils'\nimport ViewerControls from '../controls/viewer-controls'\nimport Stats from '../viewer/stats'\n\n/**\n * Animation. Base animation class.\n * @interface\n */\nabstract class Animation {\n  duration: number\n  controls: ViewerControls\n\n  alpha: number\n  startTime: number\n\n  pausedTime = -1\n  elapsedDuration = 0\n  pausedDuration = 0\n  ignoreGlobalToggle = false\n\n  private _paused = false\n  private _resolveList: Function[] = []\n  private _hold: boolean\n\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\n    this.duration = defaults(duration, 1000)\n    this.controls = controls\n\n    this.startTime = window.performance.now()\n\n    this._init(...args)\n  }\n\n  /**\n   * True when animation has finished\n   */\n  get done () {\n    return this.alpha === 1\n  }\n\n  /**\n   * True when animation is paused\n   */\n  get paused () {\n    return this._paused\n  }\n\n  /**\n   * init animation\n   */\n  abstract _init (...args: any[]): void\n\n  /**\n   * called on every tick\n   */\n  abstract _tick (stats?: Stats): void\n\n  tick (stats: Stats) {\n    if (this._paused) return\n\n    this.elapsedDuration = stats.currentTime - this.startTime - this.pausedDuration\n\n    if (this.duration === 0) {\n      this.alpha = 1\n    } else {\n      this.alpha = smoothstep(0, 1, this.elapsedDuration / this.duration)\n    }\n\n    this._tick(stats)\n\n    if (this.done) {\n      this._resolveList.forEach(resolve => resolve())\n    }\n\n    return this.done\n  }\n\n  /**\n   * Pause animation\n   * @param {boolean} [hold] - put animation on a hold which\n   *                           must be release before it can be resumed\n   */\n  pause (hold?: boolean) {\n    if (hold) this._hold = true\n\n    if (this.pausedTime === -1) {\n      this.pausedTime = window.performance.now()\n    }\n    this._paused = true\n  }\n\n  /**\n   * Resume animation\n   * @param {Boolean} [releaseHold] - release a hold on the animation\n   */\n  resume (releaseHold?: boolean) {\n    if (!releaseHold && this._hold) return\n\n    this.pausedDuration += window.performance.now() - this.pausedTime\n    this._paused = false\n    this._hold = false\n    this.pausedTime = -1\n  }\n\n  /**\n   * Toggle animation\n   */\n  toggle () {\n    if (this._paused) {\n      this.resume()\n    } else {\n      this.pause()\n    }\n  }\n\n  /**\n   * Promise-like interface\n   */\n  then (callback: Function) {\n    let p: Promise<any>\n\n    if (this.done) {\n      p = Promise.resolve()\n    } else {\n      p = new Promise(resolve => this._resolveList.push(resolve))\n    }\n\n    return p.then(callback as any)\n  }\n}\n\nexport default Animation\n\n/**\n * Spin animation. Spin around an axis.\n */\nexport class SpinAnimation extends Animation {\n  axis: Vector3\n  angle: number\n\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\n    super(defaults(duration, Infinity), controls, ...args)\n  }\n\n  _init (axis: number[]|Vector3, angle: number) {\n    if (Array.isArray(axis)) {\n      this.axis = new Vector3().fromArray(axis)\n    } else {\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\n    }\n    this.angle = defaults(angle, 0.01)\n  }\n\n  _tick (stats: Stats) {\n    if (!this.axis || !this.angle) return\n\n    this.controls.spin(\n      this.axis, this.angle * stats.lastDuration / 16\n    )\n  }\n}\n\n/**\n * Rock animation. Rock around an axis.\n */\nexport class RockAnimation extends Animation {\n  axis: Vector3\n  angleStep: number\n  angleEnd: number\n  angleSum = 0\n  direction = 1\n\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\n    super(defaults(duration, Infinity), controls, ...args)\n  }\n\n  _init (axis: number[]|Vector3, angleStep: number, angleEnd: number) {\n    if (Array.isArray(axis)) {\n      this.axis = new Vector3().fromArray(axis)\n    } else {\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\n    }\n    this.angleStep = defaults(angleStep, 0.01)\n    this.angleEnd = defaults(angleEnd, 0.2)\n  }\n\n  _tick (stats: Stats) {\n    if (!this.axis || !this.angleStep || !this.angleEnd) return\n\n    const alpha = smoothstep(\n      0, 1, Math.abs(this.angleSum) / this.angleEnd\n    )\n    const angle = this.angleStep * this.direction * (1.1 - alpha)\n\n    this.controls.spin(\n      this.axis, angle * stats.lastDuration / 16\n    )\n\n    this.angleSum += this.angleStep\n\n    if (this.angleSum >= this.angleEnd) {\n      this.direction *= -1\n      this.angleSum = -this.angleEnd\n    }\n  }\n}\n\n/**\n * Move animation. Move from one position to another.\n */\nexport class MoveAnimation extends Animation {\n  moveFrom: Vector3\n  moveTo: Vector3\n\n  _init (moveFrom: number[]|Vector3, moveTo: number[]|Vector3) {\n    this.moveFrom = ensureVector3(defaults(moveFrom, new Vector3()))\n    this.moveTo = ensureVector3(defaults(moveTo, new Vector3()))\n  }\n\n  _tick (/* stats */) {\n    this.controls.position.lerpVectors(\n      this.moveFrom, this.moveTo, this.alpha\n    ).negate()\n    this.controls.changed()\n  }\n}\n\n/**\n * Zoom animation. Gradually change the zoom level.\n */\nexport class ZoomAnimation extends Animation {\n  zoomFrom: number\n  zoomTo: number\n\n  _init (zoomFrom: number, zoomTo: number) {\n    this.zoomFrom = zoomFrom\n    this.zoomTo = zoomTo\n  }\n\n  _tick () {\n    this.controls.distance(lerp(this.zoomFrom, this.zoomTo, this.alpha))\n  }\n}\n\n/**\n * Rotate animation. Rotate from one orientation to another.\n */\nexport class RotateAnimation extends Animation {\n  rotateFrom: Quaternion\n  rotateTo: Quaternion\n\n  private _currentRotation = new Quaternion()\n\n  _init (rotateFrom: number[]|Quaternion, rotateTo: number[]|Quaternion) {\n    this.rotateFrom = ensureQuaternion(rotateFrom)\n    this.rotateTo = ensureQuaternion(rotateTo)\n\n    this._currentRotation = new Quaternion()\n  }\n\n  _tick () {\n    this._currentRotation\n      .copy(this.rotateFrom)\n      .slerp(this.rotateTo, this.alpha)\n\n    this.controls.rotate(this._currentRotation)\n  }\n}\n\n/**\n * Value animation. Call callback with interpolated value.\n */\nexport class ValueAnimation extends Animation {\n  valueFrom: number\n  valueTo: number\n  callback: Function\n\n  _init (valueFrom: number, valueTo: number, callback: Function) {\n    this.valueFrom = valueFrom\n    this.valueTo = valueTo\n\n    this.callback = callback\n  }\n\n  _tick (/* stats */) {\n    this.callback(lerp(this.valueFrom, this.valueTo, this.alpha))\n  }\n}\n\n/**\n * Timeout animation. Call callback after duration.\n */\nexport class TimeoutAnimation extends Animation {\n  callback: Function\n\n  _init (callback: Function) {\n    this.callback = callback\n  }\n\n  _tick () {\n    if (this.alpha === 1) this.callback()\n  }\n}\n\n/**\n * Animation list.\n */\nexport class AnimationList {\n  _list: Animation[]\n  _resolveList: Function[] = []\n\n  constructor (list: Animation[] = []) {\n    this._list = list\n  }\n\n  /**\n   * True when all animations have finished\n   */\n  get done () {\n    return this._list.every(animation => {\n      return animation.done\n    })\n  }\n\n  /**\n   * Promise-like interface\n   */\n  then (callback: Function) {\n    let p: Promise<any>\n\n    if (this.done) {\n      p = Promise.resolve()\n    } else {\n      p = new Promise(resolve => {\n        this._resolveList.push(resolve)\n        this._list.forEach(animation => {\n          animation.then(() => {\n            this._resolveList.forEach(callback => {\n              callback()\n            })\n            this._resolveList.length = 0\n          })\n        })\n      })\n    }\n\n    return p.then(callback as any)\n  }\n}\n","/**\n * @file Animation Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Quaternion, Matrix4 } from 'three'\n\nimport { ensureMatrix4 } from '../utils'\nimport Animation, {\n    SpinAnimation, RockAnimation, MoveAnimation, ZoomAnimation,\n    RotateAnimation, ValueAnimation, TimeoutAnimation, AnimationList\n} from '../animation/animation'\nimport Stage from '../stage/stage'\nimport Component from '../component/component'\nimport Viewer from '../viewer/viewer'\nimport Stats from '../viewer/stats'\nimport ViewerControls from './viewer-controls'\n\n/**\n * Animation controls\n */\nclass AnimationControls {\n  viewer: Viewer\n  controls: ViewerControls\n\n  animationList: Animation[] = []\n  finishedList: Animation[] = []\n\n  /**\n   * Create animation controls\n   * @param  {Stage} stage - the stage object\n   */\n  constructor (readonly stage: Stage) {\n    this.viewer = stage.viewer\n    this.controls = stage.viewerControls\n  }\n\n  /**\n   * True when all animations are paused\n   * @type {Boolean}\n   */\n  get paused () {\n    return this.animationList.every((animation: Animation) => animation.paused)\n  }\n\n  /**\n   * Add an animation\n   */\n  add (animation: Animation) {\n    if (animation.duration === 0) {\n      animation.tick(this.viewer.stats)\n    } else {\n      this.animationList.push(animation)\n    }\n\n    return animation\n  }\n\n  /**\n   * Remove an animation\n   */\n  remove (animation: Animation) {\n    const list = this.animationList\n    const index = list.indexOf(animation)\n\n    if (index > -1) {\n      list.splice(index, 1)\n    }\n  }\n\n  /**\n   * Run all animations\n   */\n  run (stats: Stats) {\n    const finishedList = this.finishedList\n    const animationList = this.animationList\n\n    const n = animationList.length\n    for (let i = 0; i < n; ++i) {\n      const animation = animationList[ i ]\n      // tick returns true when finished\n      if (animation.tick(stats)) {\n        finishedList.push(animation)\n      }\n    }\n\n    const m = finishedList.length\n    if (m) {\n      for (let j = 0; j < m; ++j) {\n        this.remove(finishedList[ j ])\n      }\n      finishedList.length = 0\n    }\n  }\n\n  /**\n   * Add a spin animation\n   * @param  {Vector3} axis - axis to spin around\n   * @param  {Number} angle - amount to spin per frame, radians\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {SpinAnimation} the animation\n   */\n  spin (axis: Vector3|number[], angle?: number, duration?: number) {\n    return this.add(\n      new SpinAnimation(duration, this.controls, axis, angle)\n    )\n  }\n\n  /**\n   * Add a rock animation\n   * @param  {Vector3} axis - axis to rock around\n   * @param  {Number} angle - amount to spin per frame, radians\n   * @param  {Number} end - maximum extend of motion, radians\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {SpinAnimation} the animation\n   */\n  rock (axis: Vector3|number[], angle?: number, end?: number, duration?: number) {\n    return this.add(\n      new RockAnimation(duration, this.controls, axis, angle, end)\n    )\n  }\n\n  /**\n   * Add a rotate animation\n   * @param  {Quaternion} rotateTo - target rotation\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {RotateAnimation} the animation\n   */\n  rotate (rotateTo: Quaternion|number[], duration?: number) {\n    const rotateFrom = this.viewer.rotationGroup.quaternion.clone()\n\n    return this.add(\n      new RotateAnimation(duration, this.controls, rotateFrom, rotateTo)\n    )\n  }\n\n  /**\n   * Add a move animation\n   * @param  {Vector3} moveTo - target position\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {MoveAnimation} the animation\n   */\n  move (moveTo: Vector3|number[], duration?: number) {\n    const moveFrom = this.controls.position.clone().negate()\n\n    return this.add(\n      new MoveAnimation(duration, this.controls, moveFrom, moveTo)\n    )\n  }\n\n  /**\n   * Add a zoom animation\n   * @param  {Number} zoomTo - target distance\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {ZoomAnimation} the animation\n   */\n  zoom (zoomTo: number, duration?: number) {\n    const zoomFrom = this.viewer.camera.position.z\n\n    return this.add(\n      new ZoomAnimation(duration, this.controls, zoomFrom, zoomTo)\n    )\n  }\n\n  /**\n   * Add a zoom and a move animation\n   * @param  {Vector3} moveTo - target position\n   * @param  {Number} zoomTo - target distance\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {Array} the animations\n   */\n  zoomMove (moveTo: Vector3, zoomTo: number, duration?: number) {\n    return new AnimationList([\n      this.move(moveTo, duration),\n      this.zoom(zoomTo, duration)\n    ])\n  }\n\n  /**\n   * Add an orient animation\n   * @param  {OrientationMatrix|Array} orientTo - target orientation\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {Array} the animations\n   */\n  orient (orientTo: Matrix4|number[], duration?: number) {\n    const p = new Vector3()\n    const q = new Quaternion()\n    const s = new Vector3()\n\n    ensureMatrix4(orientTo).decompose(p, q, s)\n\n    return new AnimationList([\n      this.move(p.negate(), duration),\n      this.rotate(q, duration),\n      this.zoom(-s.x, duration)\n    ])\n  }\n\n  /**\n   * Add a value animation\n   * @param  {Number} valueFrom - start value\n   * @param  {Number} valueTo - target value\n   * @param  {Function} callback - called on every tick\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {ValueAnimation} the animation\n   */\n  value (valueFrom: number, valueTo: number, callback: Function, duration?: number) {\n    return this.add(\n      new ValueAnimation(duration, this.controls, valueFrom, valueTo, callback)\n    )\n  }\n\n  /**\n   * Add a timeout animation\n   * @param  {Function} callback - called after duration\n   * @param  {Number} duration - timeout in milliseconds\n   * @return {TimeoutAnimation} the animation\n   */\n  timeout (callback: Function, duration?: number) {\n    return this.add(\n      new TimeoutAnimation(duration, this.controls, callback)\n    )\n  }\n\n  /**\n   * Add a component spin animation\n   * @param  {Component} component - object to move\n   * @param  {Vector3} axis - axis to spin around\n   * @param  {Number} angle - amount to spin per frame, radians\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {SpinAnimation} the animation\n   */\n  spinComponent (component: Component, axis?: Vector3|number[], angle?: number, duration?: number) {\n    return this.add(\n      // TODO\n      new SpinAnimation(duration, component.controls as any, axis, angle)\n    )\n  }\n\n  /**\n   * Add a component rock animation\n   * @param  {Component} component - object to move\n   * @param  {Vector3} axis - axis to rock around\n   * @param  {Number} angle - amount to spin per frame, radians\n   * @param  {Number} end - maximum extend of motion, radians\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {SpinAnimation} the animation\n   */\n  rockComponent (component: Component, axis: Vector3|number[], angle?: number, end?: number, duration?: number) {\n    return this.add(\n       // TODO\n      new RockAnimation(duration, component.controls as any, axis, angle, end)\n    )\n  }\n\n  /**\n   * Add a component move animation\n   * @param  {Component} component - object to move\n   * @param  {Vector3} moveTo - target position\n   * @param  {Number} duration - animation time in milliseconds\n   * @return {MoveAnimation} the animation\n   */\n  moveComponent (component: Component, moveTo: Vector3|number[], duration?: number) {\n    const moveFrom = component.controls.position.clone().negate()\n\n    return this.add(\n      // TODO\n      new MoveAnimation(duration, component.controls as any, moveFrom, moveTo)\n    )\n  }\n\n  /**\n   * Pause all animations\n   * @return {undefined}\n   */\n  pause () {\n    this.animationList.forEach(animation => animation.pause())\n  }\n\n  /**\n   * Resume all animations\n   * @return {undefined}\n   */\n  resume () {\n    this.animationList.forEach(animation => animation.resume())\n  }\n\n  /**\n   * Toggle all animations\n   * @return {undefined}\n   */\n  toggle () {\n    if (this.paused) {\n      this.resume()\n    } else {\n      this.pause()\n    }\n  }\n\n  /**\n   * Clear all animations\n   * @return {undefined}\n   */\n  clear () {\n    this.animationList.length = 0\n  }\n\n  dispose () {\n    this.clear()\n  }\n}\n\nexport default AnimationControls\n","/**\n * @file Queue\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nclass Queue<T> {\n  queue: T[] = []\n  pending = false\n\n  constructor(readonly fn: Function, argList?: T[]) {\n    this.next = this.next.bind(this)\n\n    if (argList) {\n      for (let i = 0, il = argList.length; i < il; ++i) {\n        this.queue.push(argList[ i ])\n      }\n      this.next()\n    }\n  }\n\n  private run (arg: any) {\n    this.fn(arg, this.next)\n  }\n\n  private next () {\n    const arg = this.queue.shift()\n    if (arg !== undefined) {\n      this.pending = true\n      setTimeout(() => this.run(arg))\n    } else {\n      this.pending = false\n    }\n  }\n\n  push (arg: T) {\n    this.queue.push(arg)\n    if (!this.pending) this.next()\n  }\n\n  kill () {\n    this.queue.length = 0\n  }\n\n  length () {\n    return this.queue.length\n  }\n}\n\nexport default Queue\n","/**\n * @file Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Color, Vector3, Matrix4 } from 'three'\n\nimport { Debug, Log, ColormakerRegistry, ExtensionFragDepth } from '../globals'\nimport { defaults } from '../utils'\nimport Queue from '../utils/queue'\nimport Counter from '../utils/counter'\nimport Viewer from '../viewer/viewer'\nimport { BufferParameters, BufferSide, default as Buffer } from '../buffer/buffer';\nimport { ColorData, ColormakerParameters, ColorMode } from '../color/colormaker';\n\nexport interface RepresentationParameters {\n  name: string\n  lazy: boolean,\n  clipNear: number,\n  clipRadius: number,\n  clipCenter: Vector3,\n  flatShaded: boolean,\n  opacity: number,\n  depthWrite: boolean,\n  side: BufferSide,\n  wireframe: boolean,\n  colorData: ColorData,\n  colorScheme: string,\n  colorScale: string | number[],\n  colorReverse: boolean,\n  colorValue: number,\n  colorDomain: number[],\n  colorMode: ColorMode,\n  colorSpace: 'sRGB' | 'linear',\n  roughness: number,\n  metalness: number,\n  diffuse: Color,\n  diffuseInterior: boolean,\n  useInteriorColor: boolean,\n  interiorColor: Color,\n  interiorDarkening: number,\n  disablePicking: boolean,\n  matrix: Matrix4\n  quality: string,\n  visible: boolean,\n  color: number | string | Color,\n  sphereDetail: number,\n  radialSegments: number,\n  openEnded: boolean\n  disableImpostor: boolean\n  [key: string]: any//boolean | number | undefined | Color | string | Vector3 | Matrix4 | number[]\n}\n/**\n * Representation parameter object.\n * @typedef {Object} RepresentationParameters - representation parameters\n * @property {Boolean} [lazy] - only build & update the representation when visible\n *                            otherwise defer changes until set visible again\n * @property {Integer} [clipNear] - position of camera near/front clipping plane\n *                                in percent of scene bounding box\n * @property {Integer} [clipRadius] - radius of clipping sphere\n * @property {Vector3} [clipCenter] - position of for spherical clipping\n * @property {Boolean} [flatShaded] - render flat shaded\n * @property {Float} [opacity] - translucency: 1 is fully opaque, 0 is fully transparent\n * @property {Boolean} [depthWrite] - depth write\n * @property {String} [side] - which triangle sides to render, \"front\" front-side,\n *                            \"back\" back-side, \"double\" front- and back-side\n * @property {Boolean} [wireframe] - render as wireframe\n * @property {ColorData} [colorData] - atom or bond indexed data for coloring\n * @property {String} [colorScheme] - color scheme\n * @property {String} [colorScale] - color scale, either a string for a\n *                                 predefined scale or an array of\n *                                 colors to be used as the scale\n * @property {Boolean} [colorReverse] - reverse color scale\n * @property {Color} [colorValue] - color value\n * @property {Integer[]} [colorDomain] - scale value range\n * @property {Integer} colorDomain.0 - min value\n * @property {Integer} colorDomain.1 - max value\n * @property {String} [colorMode] - color mode, one of rgb, hsv, hsl, hsi, lab, hcl\n * @property {Float} [roughness] - how rough the material is, between 0 and 1\n * @property {Float} [metalness] - how metallic the material is, between 0 and 1\n * @property {Color} [diffuse] - diffuse color for lighting\n * @property {Boolean} [diffuseInterior] - diffuse interior, i.e. ignore normal\n * @property {Boolean} [useInteriorColor] - use interior color\n * @property {Color} [interiorColor] - interior color\n * @property {Float} [interiorDarkening] - interior darkening: 0 no darking, 1 fully darkened\n * @property {Boolean} [disablePicking] - disable picking\n */\n\n/**\n * Representation object\n * @interface\n * @param {Object} object - the object to be represented\n * @param {Viewer} viewer - a viewer object\n * @param {RepresentationParameters} [params] - representation parameters\n */\nclass Representation {\n  parameters: any\n  type: string\n  viewer: Viewer\n  tasks: Counter\n  private queue: Queue<any>\n  bufferList: Buffer[]\n\n  lazy: boolean\n  lazyProps: { build: boolean, bufferParams: BufferParameters | {}, what: {}}\n  protected name: string\n  protected clipNear: number\n  protected clipRadius: number\n  protected clipCenter: Vector3\n  protected flatShaded: boolean\n  protected opacity: number\n  protected depthWrite: boolean\n  protected side: BufferSide\n  protected wireframe: boolean\n  protected colorData: ColorData\n  protected colorScheme: string\n  protected colorScale: string | string[]\n  protected colorReverse: boolean\n  protected colorValue: number\n  protected colorDomain: number[]\n  protected colorMode: ColorMode\n  protected roughness: number\n  protected metalness: number\n  protected diffuse: number\n  protected diffuseInterior?: boolean\n  protected useInteriorColor?: boolean\n  protected interiorColor: number\n  protected interiorDarkening: number\n  protected disablePicking: boolean\n  protected sphereDetail: number\n  protected radialSegments: number\n  protected openEnded: boolean\n  protected disableImpostor: boolean\n  protected disposed: boolean\n\n  protected matrix: Matrix4\n\n  private quality: string\n  visible: boolean\n\n  protected manualAttach: ()=> any\n\n  protected toBePrepared: boolean\n\n  [key: string]: any\n\n  constructor (object: any, viewer: Viewer, params: Partial<RepresentationParameters>) {\n    // eslint-disable-next-line no-unused-vars\n    // const p = params || {}\n\n    this.type = ''\n\n    this.parameters = {\n\n      lazy: {\n        type: 'boolean'\n      },\n\n      clipNear: {\n        type: 'range', step: 1, max: 100, min: 0, buffer: true\n      },\n      clipRadius: {\n        type: 'number', precision: 1, max: 1000, min: 0, buffer: true\n      },\n      clipCenter: {\n        type: 'vector3', precision: 1, buffer: true\n      },\n      flatShaded: {\n        type: 'boolean', buffer: true\n      },\n      opacity: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\n      },\n      depthWrite: {\n        type: 'boolean', buffer: true\n      },\n      side: {\n        type: 'select',\n        buffer: true,\n        options: { front: 'front', back: 'back', double: 'double' }\n      },\n      wireframe: {\n        type: 'boolean', buffer: true\n      },\n\n      colorData: {\n        type: 'hidden',\n        update: 'color',\n      },\n\n      colorScheme: {\n        type: 'select',\n        update: 'color',\n        options: {}\n      },\n      colorScale: {\n        type: 'select',\n        update: 'color',\n        options: ColormakerRegistry.getScales()\n      },\n      colorReverse: {\n        type: 'boolean', update: 'color'\n      },\n      colorValue: {\n        type: 'color', update: 'color'\n      },\n      colorDomain: {\n        type: 'hidden', update: 'color'\n      },\n      colorMode: {\n        type: 'select',\n        update: 'color',\n        options: ColormakerRegistry.getModes()\n      },\n\n      roughness: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\n      },\n      metalness: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\n      },\n      diffuse: {\n        type: 'color', buffer: true\n      },\n\n      diffuseInterior: {\n        type: 'boolean', buffer: true\n      },\n      useInteriorColor: {\n        type: 'boolean', buffer: true\n      },\n      interiorColor: {\n        type: 'color', buffer: true\n      },\n      interiorDarkening: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\n      },\n\n      matrix: {\n        type: 'hidden', buffer: true\n      },\n\n      disablePicking: {\n        type: 'boolean', rebuild: true\n      }\n\n    }\n\n    /**\n     * @type {Viewer}\n     */\n    this.viewer = viewer\n\n    /**\n     * Counter that keeps track of tasks related to the creation of\n     * the representation, including surface calculations.\n     * @type {Counter}\n     */\n    this.tasks = new Counter()\n\n    /**\n     * @type {Queue}\n     * @private\n     */\n    this.queue = new Queue(this.make.bind(this))\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.bufferList = []\n\n    if (this.parameters.colorScheme) {\n      this.parameters.colorScheme.options = ColormakerRegistry.getSchemes()\n    }\n\n    this.toBePrepared = false\n  }\n\n  init (params: Partial<RepresentationParameters>) {\n    const p = params || {}\n\n    this.clipNear = defaults(p.clipNear, 0)\n    this.clipRadius = defaults(p.clipRadius, 0)\n    this.clipCenter = defaults(p.clipCenter, new Vector3())\n    this.flatShaded = defaults(p.flatShaded, false)\n    this.side = defaults(p.side, 'double')\n    this.opacity = defaults(p.opacity, 1.0)\n    this.depthWrite = defaults(p.depthWrite, true)\n    this.wireframe = defaults(p.wireframe, false)\n\n    this.setColor(p.color, p)\n\n    this.colorData = defaults(p.colorData, undefined)\n    this.colorScheme = defaults(p.colorScheme, 'uniform')\n    this.colorScale = defaults(p.colorScale, '')\n    this.colorReverse = defaults(p.colorReverse, false)\n    this.colorValue = defaults(p.colorValue, 0x909090)\n    this.colorDomain = defaults(p.colorDomain, undefined)\n    this.colorMode = defaults(p.colorMode, 'hcl')\n\n    this.visible = defaults(p.visible, true)\n    this.quality = defaults(p.quality, undefined)\n\n    this.roughness = defaults(p.roughness, 0.4)\n    this.metalness = defaults(p.metalness, 0.0)\n    this.diffuse = defaults(p.diffuse, 0xffffff)\n\n    this.diffuseInterior = defaults(p.diffuseInterior, false)\n    this.useInteriorColor = defaults(p.useInteriorColor, false)\n    this.interiorColor = defaults(p.interiorColor, 0x222222)\n    this.interiorDarkening = defaults(p.interiorDarkening, 0)\n\n    this.lazy = defaults(p.lazy, false)\n    this.lazyProps = {\n      build: false,\n      bufferParams: {},\n      what: {}\n    }\n\n    this.matrix = defaults(p.matrix, new Matrix4())\n\n    this.disablePicking = defaults(p.disablePicking, false)\n\n    // handle common parameters when applicable\n\n    const tp = this.parameters\n\n    if (tp.sphereDetail === true) {\n      tp.sphereDetail = {\n        type: 'integer', max: 3, min: 0, rebuild: 'impostor'\n      }\n    }\n    if (tp.radialSegments === true) {\n      tp.radialSegments = {\n        type: 'integer', max: 25, min: 5, rebuild: 'impostor'\n      }\n    }\n    if (tp.openEnded === true) {\n      tp.openEnded = {\n        type: 'boolean', rebuild: 'impostor', buffer: true\n      }\n    }\n    if (tp.disableImpostor === true) {\n      tp.disableImpostor = {\n        type: 'boolean', rebuild: true\n      }\n    }\n\n    if (p.quality === 'low') {\n      if (tp.sphereDetail) this.sphereDetail = 0\n      if (tp.radialSegments) this.radialSegments = 5\n    } else if (p.quality === 'medium') {\n      if (tp.sphereDetail) this.sphereDetail = 1\n      if (tp.radialSegments) this.radialSegments = 10\n    } else if (p.quality === 'high') {\n      if (tp.sphereDetail) this.sphereDetail = 2\n      if (tp.radialSegments) this.radialSegments = 20\n    } else {\n      if (tp.sphereDetail) {\n        this.sphereDetail = defaults(p.sphereDetail, 1)\n      }\n      if (tp.radialSegments) {\n        this.radialSegments = defaults(p.radialSegments, 10)\n      }\n    }\n\n    if (tp.openEnded) {\n      this.openEnded = defaults(p.openEnded, true)\n    }\n\n    if (tp.disableImpostor) {\n      this.disableImpostor = defaults(p.disableImpostor, false)\n    }\n\n  }\n\n  getColorParams (p?: {[k: string]: any}): { scheme: string, [k: string]: any } & ColormakerParameters {\n    return Object.assign({\n\n      data: this.colorData,\n      scheme: this.colorScheme,\n      scale: this.colorScale,\n      reverse: this.colorReverse,\n      value: this.colorValue,\n      domain: this.colorDomain,\n      mode: this.colorMode,\n      colorSpace: this.colorSpace,\n\n    }, p)\n  }\n\n  getBufferParams (p: {[k: string]: any} = {}) {\n    return Object.assign({\n\n      clipNear: this.clipNear,\n      clipRadius: this.clipRadius,\n      clipCenter: this.clipCenter,\n      flatShaded: this.flatShaded,\n      opacity: this.opacity,\n      depthWrite: this.depthWrite,\n      side: this.side,\n      wireframe: this.wireframe,\n\n      roughness: this.roughness,\n      metalness: this.metalness,\n      diffuse: this.diffuse,\n\n      diffuseInterior: this.diffuseInterior,\n      useInteriorColor: this.useInteriorColor,\n      interiorColor: this.interiorColor,\n      interiorDarkening: this.interiorDarkening,\n\n      matrix: this.matrix,\n\n      disablePicking: this.disablePicking\n\n    }, p)\n  }\n\n  setColor (value: number | string | Color | undefined , p?: Partial<RepresentationParameters>) {\n    const types = Object.keys(ColormakerRegistry.getSchemes())\n\n    if (typeof value === 'string' && types.includes(value.toLowerCase())) {\n      if (p) {\n        p.colorScheme = value\n      } else {\n        this.setParameters({ colorScheme: value })\n      }\n    } else if (value !== undefined) {\n      let val = new Color(value as string).getHex() //TODO\n      if (p) {\n        p.colorScheme = 'uniform'\n        p.colorValue = val\n      } else {\n        this.setParameters({\n          colorScheme: 'uniform', colorValue: val\n        })\n      }\n    }\n\n    return this\n  }\n\n  // TODO\n  prepare (cb: ()=> void) {\n\n  }\n\n  create () {\n    // this.bufferList.length = 0;\n  }\n\n  update (what?: any) {\n    this.build()\n  }\n\n  build (updateWhat?: {[k: string]: boolean}) {\n    if (this.lazy && (!this.visible || !this.opacity)) {\n      this.lazyProps.build = true\n      return\n    }\n\n    if (!this.toBePrepared) {\n      this.tasks.increment()\n      this.make()\n      return\n    }\n\n    // don't let tasks accumulate\n    if (this.queue.length() > 0) {\n      this.tasks.change(1 - this.queue.length())\n      this.queue.kill()\n    } else {\n      this.tasks.increment()\n    }\n\n    this.queue.push(updateWhat || false)\n  }\n\n  make (updateWhat?: boolean, callback?: () => void) {\n    if (Debug) Log.time('Representation.make ' + this.type)\n\n    const _make = () => {\n      if (updateWhat) {\n        this.update(updateWhat)\n        this.viewer.requestRender()\n        this.tasks.decrement()\n        if (callback) callback()\n      } else {\n        this.clear()\n        this.create()\n        if (!this.manualAttach && !this.disposed) {\n          if (Debug) Log.time('Representation.attach ' + this.type)\n          this.attach(() => {\n            if (Debug) Log.timeEnd('Representation.attach ' + this.type)\n            this.tasks.decrement()\n            if (callback) callback()\n          })\n        }\n      }\n\n      if (Debug) Log.timeEnd('Representation.make ' + this.type)\n    }\n\n    if (this.toBePrepared) {\n      this.prepare(_make)\n    } else {\n      _make()\n    }\n  }\n\n  attach (callback: () => void) {\n    this.setVisibility(this.visible)\n\n    callback()\n  }\n\n  /**\n   * Set the visibility of the representation\n   * @param {Boolean} value - visibility flag\n   * @param {Boolean} [noRenderRequest] - whether or not to request a re-render from the viewer\n   * @return {Representation} this object\n   */\n  setVisibility (value: boolean, noRenderRequest?: boolean): Representation {\n    this.visible = value\n\n    if (this.visible && this.opacity) {\n      const lazyProps = this.lazyProps\n      const bufferParams = lazyProps.bufferParams\n      const what = lazyProps.what\n\n      if (lazyProps.build) {\n        lazyProps.build = false\n        this.build()\n        return this\n      } else if (Object.keys(bufferParams).length || Object.keys(what).length) {\n        lazyProps.bufferParams = {}\n        lazyProps.what = {}\n        this.updateParameters(bufferParams, what)\n      }\n    }\n\n    this.bufferList.forEach(function (buffer) {\n      buffer.setVisibility(value)\n    })\n\n    if (!noRenderRequest) this.viewer.requestRender()\n\n    return this\n  }\n\n  /**\n   * Set the visibility of the representation\n   * @param {RepresentationParameters} params - parameters object\n   * @param {Object} [what] - buffer data attributes to be updated,\n   *                        note that this needs to be implemented in the\n   *                        derived classes. Generally it allows more\n   *                        fine-grained control over updating than\n   *                        forcing a rebuild.\n   * @param {Boolean} what.position - update position data\n   * @param {Boolean} what.color - update color data\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\n   * @return {Representation} this object\n   */\n  setParameters (params: Partial<RepresentationParameters>, what:{[propName: string]: any} = {}, rebuild = false) {\n    const p = params || {}\n    const tp = this.parameters\n    const bufferParams: BufferParameters = <any>{}\n\n    if (!this.opacity && p.opacity !== undefined) {\n      if (this.lazyProps.build) {\n        this.lazyProps.build = false\n        rebuild = true\n      } else {\n        Object.assign(bufferParams, this.lazyProps.bufferParams)\n        Object.assign(what, this.lazyProps.what)\n        this.lazyProps.bufferParams = {}\n        this.lazyProps.what = {}\n      }\n    }\n\n    this.setColor(p.color, p)\n\n    for (let name in p) {\n      if (p[ name ] === undefined) continue\n      if (tp[ name ] === undefined) continue\n\n      if (tp[ name ].int) p[ name ] = parseInt(p[ name ] as string)\n      if (tp[ name ].float) p[ name ] = parseFloat(p[ name ] as string)\n\n      // no value change\n      if (p[ name ] === this[ name ] && (\n        !p[ name ].equals || p[ name ].equals(this[ name ])\n      )) continue\n\n      if (this[ name ] && this[ name ].copy && p[ name ].copy) {\n        this[ name ].copy(p[ name ])\n      } else if (this[ name ] && this[ name ].set) {\n        this[ name ].set(p[ name ])\n      } else {\n        this[ name ] = p[ name ]\n      }\n\n      // buffer param\n      if (tp[ name ].buffer) {\n        if (tp[ name ].buffer === true) {\n          (bufferParams[ name as keyof BufferParameters ] as any) = p[ name ]\n        } else {\n          let key: (keyof BufferParameters) = tp[ name ].buffer;\n          (bufferParams[ key ] as any) = p[ name ]\n        }\n      }\n\n      // mark for update\n      if (tp[ name ].update) {\n        what[ tp[ name ].update ] = true\n      }\n\n      // mark for rebuild\n      if (tp[ name ].rebuild &&\n          !(tp[ name ].rebuild === 'impostor' &&\n            ExtensionFragDepth && !this.disableImpostor)\n      ) {\n        rebuild = true\n      }\n    }\n\n    //\n\n    if (rebuild) {\n      this.build()\n    } else {\n      this.updateParameters(bufferParams, what)\n    }\n\n    return this\n  }\n\n  updateParameters (bufferParams: BufferParameters | {} = {}, what?: any) {\n    if (this.lazy && (!this.visible || !this.opacity) && bufferParams.hasOwnProperty('opacity') === false) {\n      Object.assign(this.lazyProps.bufferParams, bufferParams)\n      Object.assign(this.lazyProps.what, what)\n      return\n    }\n\n    this.bufferList.forEach(function (buffer) {\n      buffer.setParameters(bufferParams)\n    })\n\n    if (Object.keys(what).length) {\n      this.update(what) // update buffer attribute\n    }\n\n    this.viewer.requestRender()\n  }\n\n  getParameters () {\n    const params: Partial<RepresentationParameters> = {\n      lazy: this.lazy,\n      visible: this.visible,\n      quality: this.quality\n    }\n\n    Object.keys(this.parameters).forEach(name => {\n      if (this.parameters[ name ] !== null) {\n        params[ name ] = this[ name ]\n      }\n    })\n\n    return params\n  }\n\n  clear () {\n    this.bufferList.forEach(buffer => {\n      this.viewer.remove(buffer)\n      buffer.dispose()\n    })\n    this.bufferList.length = 0\n\n    this.viewer.requestRender()\n  }\n\n  dispose () {\n    this.disposed = true\n    this.queue.kill()\n    this.tasks.dispose()\n    this.clear()\n  }\n}\n\nexport default Representation\n","/**\n * @file Worker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log, Debug, WorkerRegistry } from '../globals'\n\nexport default class _Worker {\n\n  pending = 0\n  postCount = 0\n  onmessageDict: { [k: number]: Function|undefined } = {}\n  onerrorDict: { [k: number]: Function|undefined } = {}\n\n  name: string\n  blobUrl: string\n  worker: Worker\n\n  constructor (name: string) {\n\n    this.name = name\n    this.blobUrl = window.URL.createObjectURL(WorkerRegistry.get(name))\n    this.worker = new Worker(this.blobUrl)\n\n    WorkerRegistry.activeWorkerCount += 1\n\n    this.worker.onmessage = (event: any) => {\n      this.pending -= 1\n      const postId = event.data.__postId\n\n      if (Debug) Log.timeEnd('Worker.postMessage ' + name + ' #' + postId)\n\n      const onmessage = this.onmessageDict[ postId ]\n      if (onmessage) {\n        onmessage.call(this.worker, event)\n      } else {\n        // Log.debug('No onmessage', postId, name)\n      }\n\n      delete this.onmessageDict[ postId ]\n      delete this.onerrorDict[ postId ]\n    }\n\n    this.worker.onerror = (event: any) => {\n      this.pending -= 1\n      if (event.data) {\n        const postId = event.data.__postId\n\n        const onerror = this.onerrorDict[ postId ]\n        if (onerror) {\n          onerror.call(this.worker, event)\n        } else {\n          Log.error('Worker.onerror', postId, name, event)\n        }\n\n        delete this.onmessageDict[ postId ]\n        delete this.onerrorDict[ postId ]\n      } else {\n        Log.error('Worker.onerror', name, event)\n      }\n    }\n  }\n\n  post (aMessage: any = {}, transferList?: any, onmessage?: Function, onerror?: Function) {\n    this.onmessageDict[ this.postCount ] = onmessage\n    this.onerrorDict[ this.postCount ] = onerror\n\n    aMessage.__name = this.name\n    aMessage.__postId = this.postCount\n    aMessage.__debug = Debug\n\n    if (Debug) Log.time(`Worker.postMessage ${this.name} #${this.postCount}`)\n\n    try {\n      this.worker.postMessage(aMessage, transferList)\n    } catch (error) {\n      Log.error('worker.post:', error)\n      this.worker.postMessage(aMessage)\n    }\n\n    this.pending += 1\n    this.postCount += 1\n\n    return this\n  }\n\n  terminate () {\n    if (this.worker) {\n      this.worker.terminate()\n      window.URL.revokeObjectURL(this.blobUrl)\n      WorkerRegistry.activeWorkerCount -= 1\n    } else {\n      Log.log('no worker to terminate')\n    }\n  }\n}\n","/**\n * @file Worker Pool\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Worker from './worker'\n\nclass WorkerPool {\n  maxCount: number\n  pool: Worker[] = []\n  count = 0\n  name: string\n\n  constructor (name: string, maxCount = 2) {\n    this.maxCount = Math.min(8, maxCount)\n    this.name = name\n  }\n\n  post (aMessage: any = {}, transferList?: any, onmessage?: Function, onerror?: Function) {\n    const worker = this.getNextWorker()\n    if (worker) {\n      worker.post(aMessage, transferList, onmessage, onerror)\n    } else {\n      console.error('unable to get worker from pool')\n    }\n\n    return this\n  }\n\n  terminate () {\n    this.pool.forEach(function (worker) {\n      worker.terminate()\n    })\n  }\n\n  getNextWorker () {\n    let nextWorker\n    let minPending = Infinity\n\n    for (let i = 0; i < this.maxCount; ++i) {\n      if (i >= this.count) {\n        nextWorker = new Worker(this.name)\n        this.pool.push(nextWorker)\n        this.count += 1\n        break\n      }\n\n      const worker = this.pool[ i ]\n\n      if (worker.pending === 0) {\n        nextWorker = worker\n        break\n      } else if (worker.pending < minPending) {\n        minPending = worker.pending\n        nextWorker = worker\n      }\n    }\n\n    return nextWorker\n  }\n}\n\nWorkerPool.prototype.constructor = WorkerPool\n\nexport default WorkerPool\n","/**\n * @file Vector Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { NumberArray } from '../types'\nimport { EPS } from './math-constants'\n\n/**\n * Calculate the two intersection points\n * Converted to JavaScript from\n * {@link http://paulbourke.net/geometry/pointlineplane/lineline.c}\n */\nexport function lineLineIntersect (p1: Vector3, p2: Vector3, p3: Vector3, p4: Vector3) {\n  const p13 = new Vector3()\n  const p43 = new Vector3()\n  const p21 = new Vector3()\n  let d1343, d4321, d1321, d4343, d2121\n  let denom, numer\n\n  p13.x = p1.x - p3.x\n  p13.y = p1.y - p3.y\n  p13.z = p1.z - p3.z\n  p43.x = p4.x - p3.x\n  p43.y = p4.y - p3.y\n  p43.z = p4.z - p3.z\n  if (Math.abs(p43.x) < EPS && Math.abs(p43.y) < EPS && Math.abs(p43.z) < EPS) { return null }\n\n  p21.x = p2.x - p1.x\n  p21.y = p2.y - p1.y\n  p21.z = p2.z - p1.z\n  if (Math.abs(p21.x) < EPS && Math.abs(p21.y) < EPS && Math.abs(p21.z) < EPS) { return null }\n\n  d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z\n  d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z\n  d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z\n  d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z\n  d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z\n\n  denom = d2121 * d4343 - d4321 * d4321\n  if (Math.abs(denom) < EPS) { return null }\n  numer = d1343 * d4321 - d1321 * d4343\n\n  const mua = numer / denom\n  const mub = (d1343 + d4321 * mua) / d4343\n\n  const pa = new Vector3(\n    p1.x + mua * p21.x,\n    p1.y + mua * p21.y,\n    p1.z + mua * p21.z\n  )\n  const pb = new Vector3(\n    p3.x + mub * p43.x,\n    p3.y + mub * p43.y,\n    p3.z + mub * p43.z\n  )\n\n  return [ pa, pb ]\n}\n\nexport function calculateMeanVector3 (array: NumberArray) {\n  const n = array.length\n  const m = n / 3\n\n  let x = 0\n  let y = 0\n  let z = 0\n\n  for (let i = 0; i < n; i += 3) {\n    x += array[ i + 0 ]\n    y += array[ i + 1 ]\n    z += array[ i + 2 ]\n  }\n\n  return new Vector3(x / m, y / m, z / m)\n}\n\nexport function isPointOnSegment (p: Vector3, l1: Vector3, l2: Vector3) {\n  const len = l1.distanceTo(l2)\n\n  return p.distanceTo(l1) <= len && p.distanceTo(l2) <= len\n}\n\nexport function projectPointOnVector (point: Vector3, vector: Vector3, origin?: Vector3) {\n  if (origin) {\n    point.sub(origin).projectOnVector(vector).add(origin)\n  } else {\n    point.projectOnVector(vector)\n  }\n\n  return point\n}\n\nexport function computeBoundingBox (array: NumberArray) {\n  let minX = +Infinity\n  let minY = +Infinity\n  let minZ = +Infinity\n  let maxX = -Infinity\n  let maxY = -Infinity\n  let maxZ = -Infinity\n  for (let i = 0, l = array.length; i < l; i += 3) {\n    const x = array[ i ]\n    const y = array[ i + 1 ]\n    const z = array[ i + 2 ]\n    if (x < minX) minX = x\n    if (y < minY) minY = y\n    if (z < minZ) minZ = z\n    if (x > maxX) maxX = x\n    if (y > maxY) maxY = y\n    if (z > maxZ) maxZ = z\n  }\n  return [\n    v3new([ minX, minY, minZ ]),\n    v3new([ maxX, maxY, maxZ ])\n  ]\n}\n(computeBoundingBox as any).__deps = [ v3new ]\n\nexport function applyMatrix4toVector3array (m: Float32Array, a: Float32Array) {\n  for (let i = 0, il = a.length; i < il; i += 3) {\n    const x = a[ i ]\n    const y = a[ i + 1 ]\n    const z = a[ i + 2 ]\n    a[ i ] = m[ 0 ] * x + m[ 4 ] * y + m[ 8 ] * z + m[ 12 ]\n    a[ i + 1 ] = m[ 1 ] * x + m[ 5 ] * y + m[ 9 ] * z + m[ 13 ]\n    a[ i + 2 ] = m[ 2 ] * x + m[ 6 ] * y + m[ 10 ] * z + m[ 14 ]\n  }\n}\n\nexport function applyMatrix3toVector3array (m: Float32Array, a: Float32Array) {\n  for (let i = 0, il = a.length; i < il; i += 3) {\n    const x = a[ i ]\n    const y = a[ i + 1 ]\n    const z = a[ i + 2 ]\n    a[ i ] = m[ 0 ] * x + m[ 3 ] * y + m[ 6 ] * z\n    a[ i + 1 ] = m[ 1 ] * x + m[ 4 ] * y + m[ 7 ] * z\n    a[ i + 2 ] = m[ 2 ] * x + m[ 5 ] * y + m[ 8 ] * z\n  }\n}\n\nexport function normalizeVector3array (a: Float32Array) {\n  for (let i = 0, il = a.length; i < il; i += 3) {\n    const x = a[ i ]\n    const y = a[ i + 1 ]\n    const z = a[ i + 2 ]\n    const len2 = x * x + y * y + z * z\n    if (len2 > 0) {             // avoid divide by zero\n      const s = 1 / Math.sqrt(len2)\n      a[ i ] = x * s\n      a[ i + 1 ] = y * s\n      a[ i + 2 ] = z * s\n    }\n    // else leave as all zeros\n  }\n}\n\nexport function v3new (array?: NumberArray) {\n  return new Float32Array(array as any || 3)  // TODO\n}\n\nexport function v3cross (out: Float32Array, a: Float32Array, b: Float32Array) {\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n  out[0] = ay * bz - az * by\n  out[1] = az * bx - ax * bz\n  out[2] = ax * by - ay * bx\n}\n\nexport function v3dot (a: Float32Array, b: Float32Array) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}\n\nexport function v3sub (out: Float32Array, a: Float32Array, b: Float32Array) {\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  out[2] = a[2] - b[2]\n}\n\nexport function v3add (out: Float32Array, a: Float32Array, b: Float32Array) {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n}\n\nexport function v3fromArray (out: Float32Array, array: Float32Array, offset = 0) {\n  out[0] = array[offset]\n  out[1] = array[offset + 1]\n  out[2] = array[offset + 2]\n}\n\nexport function v3toArray (input: Float32Array, array: Float32Array, offset = 0) {\n  array[offset] = input[0]\n  array[offset + 1] = input[1]\n  array[offset + 2] = input[2]\n}\n\nexport function v3forEach (array: Float32Array, fn: (i: Float32Array, j: Float32Array, k: Float32Array) => void, b: Float32Array) {\n  const a = v3new()\n  for (let i = 0, n = array.length; i < n; i += 3) {\n    v3fromArray(a, array, i)\n    fn(a, a, b)\n    v3toArray(a, array, i)\n  }\n}\n(v3forEach as any).__deps = [ v3new, v3fromArray, v3toArray ]\n\nexport function v3length2 (a: Float32Array) {\n  return a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\n}\n\nexport function v3length (a: Float32Array) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2])\n}\n\nexport function v3divide (out: Float32Array, a: Float32Array, b: Float32Array) {\n  out[0] = a[0] / b[0]\n  out[1] = a[1] / b[1]\n  out[2] = a[2] / b[2]\n}\n\nexport function v3multiply (out: Float32Array, a: Float32Array, b: Float32Array) {\n  out[0] = a[0] * b[0]\n  out[1] = a[1] * b[1]\n  out[2] = a[2] * b[2]\n}\n\nexport function v3divideScalar (out: Float32Array, a: Float32Array, s: number) {\n  v3multiplyScalar(out, a, 1 / s)\n}\n(v3divideScalar as any).__deps = [ v3multiplyScalar ]\n\nexport function v3multiplyScalar (out: Float32Array, a: Float32Array, s: number) {\n  out[0] = a[0] * s\n  out[1] = a[1] * s\n  out[2] = a[2] * s\n}\n\nexport function v3normalize (out: Float32Array, a: Float32Array) {\n  const length2 = v3length2(a)\n  if (length2 == 0) {\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n  } else {\n    v3multiplyScalar(out, a, 1 / Math.sqrt(length2))\n  }\n}\n(v3normalize as any).__deps = [ v3multiplyScalar, v3length2 ]\n\nexport function v3subScalar (out: Float32Array, a: Float32Array, s: number) {\n  out[0] = a[0] - s\n  out[1] = a[1] - s\n  out[2] = a[2] - s\n}\n\nexport function v3addScalar (out: Float32Array, a: Float32Array, s: number) {\n  out[0] = a[0] + s\n  out[1] = a[1] + s\n  out[2] = a[2] + s\n}\n\nexport function v3floor (out: Float32Array, a: Float32Array) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  out[2] = Math.floor(a[2])\n}\n\nexport function v3ceil (out: Float32Array, a: Float32Array) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  out[2] = Math.ceil(a[2])\n}\n\nexport function v3round (out: Float32Array, a: Float32Array) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  out[2] = Math.round(a[2])\n}\n\nexport function v3negate (out: Float32Array, a: Float32Array) {\n  out[0] = -a[0]\n  out[1] = -a[1]\n  out[2] = -a[2]\n}\n\nexport function v3angle (a: Float32Array, b: Float32Array) {\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n  const cx = ay * bz - az * by\n  const cy = az * bx - ax * bz\n  const cz = ax * by - ay * bx\n  const s = Math.sqrt(cx * cx + cy * cy + cz * cz)\n  const c = ax * bx + ay * by + az * bz\n  return Math.atan2(s, c)\n}\n","/**\n * @file Dash\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { CylinderBufferData } from '../buffer/cylinder-buffer'\nimport { WideLineBufferData } from '../buffer/wideline-buffer'\nimport {\n  calculateDirectionArray, calculateCenterArray,\n  replicateArrayEntries, replicateArray3Entries\n} from '../math/array-utils'\n\nexport function getFixedCountDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentCount: number = 9) {\n\n  const s = Math.floor(segmentCount / 2)\n  const n = data.position1.length / 3\n  const sn = s * n\n  const sn3 = sn * 3\n  const step = 1 / segmentCount\n\n  const direction = calculateDirectionArray(data.position1, data.position2)\n  const position1 = new Float32Array(sn3)\n  const position2 = new Float32Array(sn3)\n\n  const v = new Vector3()\n\n  for (let i = 0; i < n; ++i) {\n    const i3 = i * 3\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\n\n    const x = data.position1[ i3 ]\n    const y = data.position1[ i3 + 1 ]\n    const z = data.position1[ i3 + 2 ]\n\n    for (let j = 0; j < s; ++j) {\n      const j3 = s * i3 + j * 3\n\n      const f1 = step * (j * 2 + 1)\n      const f2 = step * (j * 2 + 2)\n\n      position1[ j3 ] = x + v.x * f1\n      position1[ j3 + 1 ] = y + v.y * f1\n      position1[ j3 + 2 ] = z + v.z * f1\n\n      position2[ j3 ] = x + v.x * f2\n      position2[ j3 + 1 ] = y + v.y * f2\n      position2[ j3 + 2 ] = z + v.z * f2\n    }\n  }\n\n  const position = calculateCenterArray(position1, position2) as Float32Array\n  const color = replicateArray3Entries(data.color!, s)  // TODO\n  const color2 = color\n\n  const d: any = { position, position1, position2, color, color2 }\n\n  if ((data as any).radius) {  // TODO\n    d.radius = replicateArrayEntries((data as any).radius, s)  // TODO\n  }\n\n  if (data.picking && data.picking.array) {\n    data.picking.array = replicateArrayEntries(data.picking.array, s)\n    d.picking = data.picking\n  }\n  if (data.primitiveId) {\n    d.primitiveId = replicateArrayEntries(data.primitiveId, s)\n  }\n\n  return d as T\n}\n\nexport function getFixedLengthDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentLength: number = 0.1) {\n\n  const direction = calculateDirectionArray(data.position1, data.position2)\n  const pos1: number[] = []\n  const pos2: number[] = []\n  const col: number[] = []\n  const rad: number[]|undefined = (data as any).radius ? [] : undefined\n  const pick: number[]|undefined = (data as any).picking ? [] : undefined\n  const id: number[]|undefined = (data as any).primitiveId ? [] : undefined\n\n  const v = new Vector3()\n  const n = data.position1.length / 3\n\n  let k = 0\n\n  for (let i = 0; i < n; ++i) {\n    const i3 = i * 3\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\n\n    const vl = v.length()\n    const segmentCount = vl / segmentLength\n    const s = Math.floor(segmentCount / 2)\n    const step = 1 / segmentCount\n\n    const x = data.position1[ i3 ]\n    const y = data.position1[ i3 + 1 ]\n    const z = data.position1[ i3 + 2 ]\n\n    for (let j = 0; j < s; ++j) {\n      const j3 = k * 3 + j * 3\n\n      const f1 = step * (j * 2 + 1)\n      const f2 = step * (j * 2 + 2)\n\n      pos1[ j3 ] = x + v.x * f1\n      pos1[ j3 + 1 ] = y + v.y * f1\n      pos1[ j3 + 2 ] = z + v.z * f1\n\n      pos2[ j3 ] = x + v.x * f2\n      pos2[ j3 + 1 ] = y + v.y * f2\n      pos2[ j3 + 2 ] = z + v.z * f2\n\n      if (data.color) {\n        col[ j3 ] = data.color[ i3 ]\n        col[ j3 + 1 ] = data.color[ i3 + 1 ]\n        col[ j3 + 2 ] = data.color[ i3 + 2 ]\n      }\n\n      if (rad) rad[ k + j ] = (data as any).radius[ i ]\n      if (pick) {\n        if ((data as any).picking.array) {\n          pick[ k + j ] = (data as any).picking.array[ i ]\n        } else {\n          pick[ k + j ] = i\n        }\n      }\n      if (id) id[ k + j ] = (data as any).primitiveId[ i ]\n    }\n\n    k += s\n  }\n\n  const position1 = new Float32Array(pos1)\n  const position2 = new Float32Array(pos2)\n  const position = calculateCenterArray(position1, position2) as Float32Array\n  const color = new Float32Array(col)\n  const color2 = color\n\n  const d: any = { position, position1, position2, color, color2 }\n\n  if (rad) d.radius = new Float32Array(rad)\n  if (pick && data.picking) {\n    data.picking.array = new Float32Array(pick)\n    d.picking = data.picking\n  }\n  if (id) d.primitiveId = new Float32Array(id)\n\n  return d as T\n}\n\nexport function getFixedLengthWrappedDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentLength: number = 0.1) {\n\n  const direction = calculateDirectionArray(data.position1, data.position2)\n  const pos1: number[] = []\n  const pos2: number[] = []\n  const col: number[] = []\n  const rad: number[]|undefined = (data as any).radius ? [] : undefined\n  const pick: number[]|undefined = (data as any).picking ? [] : undefined\n  const id: number[]|undefined = (data as any).primitiveId ? [] : undefined\n\n  const v = new Vector3()\n  const n = data.position1.length / 3\n\n  let remaining = segmentLength\n  let drawing = true\n\n  let k = 0\n  let k3 = 0\n  let kprev = 0\n\n  for (let i = 0; i < n; ++i) {\n    const i3 = i * 3\n    const x = data.position1[ i3 ]\n    const y = data.position1[ i3 + 1 ]\n    const z = data.position1[ i3 + 2 ]\n\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\n    const vl = v.length()\n\n    if (drawing) {\n      pos1[ k3 ] = x\n      pos1[ k3 + 1 ] = y\n      pos1[ k3 + 2 ] = z\n    }\n\n    let dist = remaining\n    const inv = 1 / vl\n    while (dist < vl) {\n      const a = drawing ? pos2 : pos1\n      a[ k3 ] = x + v.x * dist * inv\n      a[ k3 + 1 ] = y +         v.y * dist * inv\n      a[ k3 + 2 ] = z + v.z * dist * inv\n      if (drawing) {\n        k++\n        k3 = k * 3\n      }\n      drawing = !drawing\n      remaining = segmentLength\n      dist += segmentLength\n    }\n\n    if (drawing) {\n      pos2[ k3 ] = data.position2[ i3 ]\n      pos2[ k3 + 1 ] = data.position2[ i3 + 1 ]\n      pos2[ k3 + 2 ] = data.position2[ i3 + 2 ]\n      k++\n      k3 = k * 3\n    }\n\n    remaining = dist - vl\n\n    for (let j = kprev; j < k ; j++){\n      if (data.color) {\n        const j3 = j * 3\n        col[ j3 ] = data.color[ i3 ]\n        col[ j3 + 1 ] = data.color[ i3 + 1 ]\n        col[ j3 + 2 ] = data.color[ i3 + 2 ]\n      }\n\n      if (rad) rad[ j ] = (data as any).radius[ i ]\n      if (pick) {\n        if ((data as any).picking.array) {\n          pick[ j ] = (data as any).picking.array[ i ]\n        } else {\n          pick[ j ] = i\n        }\n      }\n      if (id) id[ j ] = (data as any).primitiveId[ i ]\n    }\n\n    kprev = k\n\n  }\n\n  if (!drawing && n > 0) {\n    const k3 = k * 3\n    pos2[ k3 ] = data.position2[ 3 * n - 3 ]\n    pos2[ k3 + 1 ] = data.position2[ 3 * n - 2 ]\n    pos2[ k3 + 1 ] = data.position2[ 3 * n - 1 ]\n  }\n\n  const position1 = new Float32Array(pos1)\n  const position2 = new Float32Array(pos2)\n  const position = calculateCenterArray(position1, position2) as Float32Array\n  const color = new Float32Array(col)\n  const color2 = color\n\n  const d: any = { position, position1, position2, color, color2 }\n\n  if (rad) d.radius = new Float32Array(rad)\n  if (pick && data.picking) {\n    data.picking.array = new Float32Array(pick)\n    d.picking = data.picking\n  }\n  if (id) d.primitiveId = new Float32Array(id)\n\n  return d as T\n}\n","/**\n * @file Primitive\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Color, Box3 } from 'three'\n\nimport { BufferRegistry, PickerRegistry } from '../globals'\nimport Shape from './shape'\nimport { getFixedLengthDashData } from './dash'\n\nfunction addElement (elm: any, array: any[]) {\n  if (elm.toArray !== undefined) {\n    elm = elm.toArray()\n  } else if (elm.x !== undefined) {\n    elm = [ elm.x, elm.y, elm.z ]\n  } else if (elm.r !== undefined) {\n    elm = [ elm.r, elm.g, elm.b ]\n  }\n  array.push.apply(array, elm)\n}\n\nconst tmpVec = new Vector3()\n\nexport type PrimitiveFields = { [k: string]: string }\n\n/**\n * Base class for geometry primitives\n * @interface\n */\nexport abstract class Primitive {\n  static type = ''\n  static fields: PrimitiveFields = {}\n\n  static get Picker () { return PickerRegistry.get(this.type) }\n  static get Buffer () { return BufferRegistry.get(this.type) }\n\n  static getShapeKey (name: string) {\n    return this.type + name[0].toUpperCase() + name.substr(1)\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {}\n\n  static valueToShape (shape: Shape, name: string, value: any) {\n    const data = shape._primitiveData[this.getShapeKey(name)]\n    const type = this.fields[name]\n\n    switch (type) {\n      case 'v3':\n      case 'c':\n        addElement(value, data)\n        break\n      default:\n        data.push(value)\n    }\n  }\n\n  static objectToShape (shape: Shape, data: any) {\n    Object.keys(this.fields).forEach(name => {\n      this.valueToShape(shape, name, data[name])\n    })\n    this.valueToShape(shape, 'name', data.name)\n    this.expandBoundingBox(shape.boundingBox, data)\n  }\n\n  static valueFromShape (shape: Shape, pid: number, name: string) {\n    const data = shape._primitiveData[this.getShapeKey(name)]\n    const type = this.fields[name]\n\n    switch (type) {\n      case 'v3':\n        return new Vector3().fromArray(data, 3 * pid)\n      case 'c':\n        return new Color().fromArray(data, 3 * pid)\n      default:\n        return data[pid]\n    }\n  }\n\n  static objectFromShape (shape: Shape, pid: number) {\n    let name = this.valueFromShape(shape, pid, 'name')\n    if (name === undefined) {\n      name = `${this.type}: ${pid} (${shape.name})`\n    }\n    const o: any = { shape, name }\n\n    Object.keys(this.fields).forEach(name => {\n      o[name] = this.valueFromShape(shape, pid, name)\n    })\n\n    return o\n  }\n\n  static arrayFromShape (shape: Shape, name: string) {\n    const data = shape._primitiveData[this.getShapeKey(name)]\n    const type = this.fields[name]\n\n    switch (type) {\n      case 's':\n        return data\n      default:\n        return new Float32Array(data)\n    }\n  }\n\n  static dataFromShape (shape: Shape) {\n    const data: any = {}\n\n    if (this.Picker) {\n      data.picking = new this.Picker(shape)\n    }\n\n    Object.keys(this.fields).forEach(name => {\n      data[name] = this.arrayFromShape(shape, name)\n    })\n\n    return data\n  }\n\n  static bufferFromShape (shape: Shape, params: any) {\n    return new this.Buffer(this.dataFromShape(shape), params)\n  }\n}\n\n/**\n * Sphere geometry primitive\n */\nexport class SpherePrimitive extends Primitive {\n  static type = 'sphere'\n\n  static fields = {\n    position: 'v3',\n    color: 'c',\n    radius: 'f'\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    return this.valueFromShape(shape, pid, 'position')\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position))\n  }\n}\n\n/**\n * Box geometry primitive\n */\nexport class BoxPrimitive extends Primitive {\n  static type = 'box'\n\n  static fields = {\n    position: 'v3',\n    color: 'c',\n    size: 'f',\n    heightAxis: 'v3',\n    depthAxis: 'v3'\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    return this.valueFromShape(shape, pid, 'position')\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position))\n  }\n}\n\n/**\n * Octahedron geometry primitive\n */\nexport class OctahedronPrimitive extends BoxPrimitive {\n  static type = 'octahedron'\n}\n\n/**\n * Tetrahedron geometry primitive\n */\nexport class TetrahedronPrimitive extends BoxPrimitive {\n  static type = 'tetrahedron'\n}\n\n/**\n * Cylinder geometry primitive\n */\nexport class CylinderPrimitive extends Primitive {\n  static type = 'cylinder'\n\n  static fields = {\n    position1: 'v3',\n    position2: 'v3',\n    color: 'c',\n    radius: 'f'\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    const p1 = this.valueFromShape(shape, pid, 'position1')\n    const p2 = this.valueFromShape(shape, pid, 'position2')\n    return p1.add(p2).multiplyScalar(0.5)\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position1))\n    box.expandByPoint(tmpVec.fromArray(data.position2))\n  }\n\n  static bufferFromShape (shape: Shape, params: any = {}) {\n    let data = this.dataFromShape(shape)\n    if (this.type === 'cylinder' && params.dashedCylinder) {\n      data = getFixedLengthDashData(data)\n    }\n    return new this.Buffer(data, params)\n  }\n}\n\n/**\n * Arrow geometry primitive\n */\nexport class ArrowPrimitive extends CylinderPrimitive {\n  static type = 'arrow'\n}\n\n/**\n * Cone geometry primitive\n */\nexport class ConePrimitive extends CylinderPrimitive {\n  static type = 'cone'\n}\n\n/**\n * Ellipsoid geometry primitive\n */\nexport class EllipsoidPrimitive extends SpherePrimitive {\n  static type = 'ellipsoid'\n\n  static fields = {\n    position: 'v3',\n    color: 'c',\n    radius: 'f',\n    majorAxis: 'v3',\n    minorAxis: 'v3'\n  }\n}\n\n/**\n * Torus geometry primitive\n */\nexport class TorusPrimitive extends EllipsoidPrimitive {\n  static type = 'torus'\n}\n\n/**\n * Text geometry primitive\n */\nexport class TextPrimitive extends Primitive {\n  static type = 'text'\n\n  static fields = {\n    position: 'v3',\n    color: 'c',\n    size: 'f',\n    text: 's'\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    return this.valueFromShape(shape, pid, 'position')\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position))\n  }\n}\n\n/**\n * Point primitive\n */\nexport class PointPrimitive extends Primitive {\n  static type = 'point'\n\n  static fields = {\n    position: 'v3',\n    color: 'c',\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    return this.valueFromShape(shape, pid, 'position')\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position))\n  }\n}\n\n/**\n * Wideline geometry primitive\n */\nexport class WidelinePrimitive extends Primitive {\n  static type = 'wideline'\n\n  static fields = {\n    position1: 'v3',\n    position2: 'v3',\n    color: 'c'\n  }\n\n  static positionFromShape (shape: Shape, pid: number) {\n    const p1 = this.valueFromShape(shape, pid, 'position1')\n    const p2 = this.valueFromShape(shape, pid, 'position2')\n    return p1.add(p2).multiplyScalar(0.5)\n  }\n\n  static expandBoundingBox (box: Box3, data: any) {\n    box.expandByPoint(tmpVec.fromArray(data.position1))\n    box.expandByPoint(tmpVec.fromArray(data.position2))\n  }\n}\n","/**\n * @file Spatial Hash\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Box3 } from 'three'\n\nexport type Positions = {\n  x: ArrayLike<number>,\n  y: ArrayLike<number>,\n  z: ArrayLike<number>,\n  count?:number\n}\n\nfunction createBoundingBox(positions: Positions) {\n    const { x, y, z } = positions\n    const boundingBox = new Box3()\n    const count = x.length\n    const { min, max } = boundingBox\n\n    for (let i = 0; i < count; i++) {\n        min.x = Math.min(x[i], min.x)\n        min.y = Math.min(y[i], min.y)\n        min.z = Math.min(z[i], min.z)\n        max.x = Math.max(x[i], max.x)\n        max.y = Math.max(y[i], max.y)\n        max.z = Math.max(z[i], max.z)\n    }\n\n    return boundingBox\n}\n\nexport default class SpatialHash {\n  exp = 3\n\n  minX: number\n  minY: number\n  minZ: number\n\n  boundX: number\n  boundY: number\n  boundZ: number\n\n  grid: Uint32Array\n  bucketCount: Uint16Array\n  bucketOffset: Uint32Array\n  bucketArray: Int32Array\n\n  xArray: ArrayLike<number>\n  yArray: ArrayLike<number>\n  zArray: ArrayLike<number>\n\n  constructor(positions: Positions, boundingBox?: Box3) {\n    const bb = boundingBox || createBoundingBox(positions)\n    this.minX = bb.min.x\n    this.minY = bb.min.y\n    this.minZ = bb.min.z\n    this.boundX = ((bb.max.x - this.minX) >> this.exp) + 1\n    this.boundY = ((bb.max.y - this.minY) >> this.exp) + 1\n    this.boundZ = ((bb.max.z - this.minZ) >> this.exp) + 1\n\n    const n = this.boundX * this.boundY * this.boundZ\n    const an = (positions.count !== undefined) ? positions.count : positions.x.length\n\n    const xArray = positions.x\n    const yArray = positions.y\n    const zArray = positions.z\n\n    let count = 0\n    const grid = new Uint32Array(n)\n    const bucketIndex = new Int32Array(an)\n    for (let i = 0; i < an; ++i) {\n      const x = (xArray[ i ] - this.minX) >> this.exp\n      const y = (yArray[ i ] - this.minY) >> this.exp\n      const z = (zArray[ i ] - this.minZ) >> this.exp\n      const idx = (((x * this.boundY) + y) * this.boundZ) + z\n      if ((grid[ idx ] += 1) === 1) {\n        count += 1\n      }\n      bucketIndex[ i ] = idx\n    }\n\n    const bucketCount = new Uint16Array(count)\n    for (let i = 0, j = 0; i < n; ++i) {\n      const c = grid[ i ]\n      if (c > 0) {\n        grid[ i ] = j + 1\n        bucketCount[ j ] = c\n        j += 1\n      }\n    }\n\n    const bucketOffset = new Uint32Array(count)\n    for (let i = 1; i < count; ++i) {\n      bucketOffset[ i ] += bucketOffset[ i - 1 ] + bucketCount[ i - 1 ]\n    }\n\n    const bucketFill = new Uint16Array(count)\n    const bucketArray = new Int32Array(an)\n    for (let i = 0; i < an; ++i) {\n      const bucketIdx = grid[ bucketIndex[ i ] ]\n      if (bucketIdx > 0) {\n        const k = bucketIdx - 1\n        bucketArray[ bucketOffset[ k ] + bucketFill[ k ] ] = i\n        bucketFill[ k ] += 1\n      }\n    }\n\n    this.grid = grid\n    this.bucketCount = bucketCount\n    this.bucketOffset = bucketOffset\n    this.bucketArray = bucketArray\n\n    this.xArray = xArray\n    this.yArray = yArray\n    this.zArray = zArray\n  }\n\n  within (x: number, y: number, z: number, r: number) {\n    const result: number[] = []\n\n    this.eachWithin(x, y, z, r, atomIndex => result.push(atomIndex))\n\n    return result\n  }\n\n  eachWithin (x: number, y: number, z: number, r: number, callback: (atomIndex: number, dSq: number) => void) {\n    const rSq = r * r\n\n    const loX = Math.max(0, (x - r - this.minX) >> this.exp)\n    const loY = Math.max(0, (y - r - this.minY) >> this.exp)\n    const loZ = Math.max(0, (z - r - this.minZ) >> this.exp)\n\n    const hiX = Math.min(this.boundX, ((x + r - this.minX) >> this.exp) + 1)\n    const hiY = Math.min(this.boundY, ((y + r - this.minY) >> this.exp) + 1)\n    const hiZ = Math.min(this.boundZ, ((z + r - this.minZ) >> this.exp) + 1)\n\n    for (let ix = loX; ix < hiX; ++ix) {\n      for (let iy = loY; iy < hiY; ++iy) {\n        for (let iz = loZ; iz < hiZ; ++iz) {\n          const idx = (((ix * this.boundY) + iy) * this.boundZ) + iz\n          const bucketIdx = this.grid[ idx ]\n\n          if (bucketIdx > 0) {\n            const k = bucketIdx - 1\n            const offset = this.bucketOffset[ k ]\n            const count = this.bucketCount[ k ]\n            const end = offset + count\n\n            for (let i = offset; i < end; ++i) {\n              const atomIndex = this.bucketArray[ i ]\n              const dx = this.xArray[ atomIndex ] - x\n              const dy = this.yArray[ atomIndex ] - y\n              const dz = this.zArray[ atomIndex ] - z\n\n              const dSq = dx * dx + dy * dy + dz * dz\n              if (dSq <= rSq) callback(atomIndex, dSq)\n            }\n          }\n        }\n      }\n    }\n  }\n}","/**\n * @file Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log } from '../globals'\nimport { getTypedArray, TypedArrayString } from '../utils'\n\nexport type StoreField = [string, number, TypedArrayString]\n\n/**\n * Store base class\n * @interface\n */\nexport default class Store {\n  [k: string]: any\n\n  length: number\n  count: number\n\n  _fields: StoreField[]\n  _defaultFields: StoreField[]\n\n  /**\n   * @param {Integer} [size] - initial size\n   */\n  constructor (size = 0) {\n    this._fields = this._defaultFields\n    this._init(0)\n  }\n\n  /**\n   * Initialize the store\n   * @param  {Integer} size - size to initialize\n   * @return {undefined}\n   */\n  _init (size: number) {\n    this.length = size\n    this.count = 0\n\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\n      const [name, size, type]: StoreField = this._fields[ i ]\n      this._initField(name, size, type)\n    }\n  }\n\n  /**\n   * Initialize a field\n   * @param  {String} name - field name\n   * @param  {Integer} size - element size\n   * @param  {String} type - data type, one of int8, int16, int32,\n   *                         uint8, uint16, uint32, float32\n   * @return {undefined}\n   */\n  _initField (name: string, size: number, type: TypedArrayString) {\n    this[ name ] = getTypedArray(type, this.length * size)\n  }\n\n  /**\n   * Add a field\n   * @param  {String} name - field name\n   * @param  {Integer} size - element size\n   * @param  {String} type - data type, one of int8, int16, int32,\n   *                         uint8, uint16, uint32, float32\n   * @return {undefined}\n   */\n  addField (name: string, size: number, type: TypedArrayString) {\n    this._fields.push([name, size, type])\n    this._initField(name, size, type)\n  }\n\n  /**\n   * Resize the store to the new size\n   * @param  {Integer} size - new size\n   * @return {undefined}\n   */\n  resize (size?: number) {\n    // Log.time( \"Store.resize\" );\n\n    this.length = Math.round(size || 0)\n    this.count = Math.min(this.count, this.length)\n\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\n      const name = this._fields[ i ][ 0 ]\n      const itemSize = this._fields[ i ][ 1 ]\n      const arraySize = this.length * itemSize\n      const tmpArray = new this[ name ].constructor(arraySize)\n\n      if (this[ name ].length > arraySize) {\n        tmpArray.set(this[ name ].subarray(0, arraySize))\n      } else {\n        tmpArray.set(this[ name ])\n      }\n      this[ name ] = tmpArray\n    }\n\n    // Log.timeEnd( \"Store.resize\" );\n  }\n\n  /**\n   * Resize the store to 1.5 times its current size if full\n   * @return {undefined}\n   */\n  growIfFull () {\n    if (this.count >= this.length) {\n      const size = Math.round(this.length * 1.5)\n      this.resize(Math.max(256, size))\n    }\n  }\n\n  /**\n   * Copy data from one store to another\n   * @param  {Store} other - store to copy from\n   * @param  {Integer} thisOffset - offset to start copying to\n   * @param  {Integer} otherOffset - offset to start copying from\n   * @param  {Integer} length - number of entries to copy\n   * @return {undefined}\n   */\n  copyFrom (other: Store, thisOffset: number, otherOffset: number, length: number) {\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\n      const name = this._fields[ i ][ 0 ]\n      const itemSize = this._fields[ i ][ 1 ]\n      const thisField = this[ name ]\n      const otherField = other[ name ]\n\n      for (let j = 0; j < length; ++j) {\n        const thisIndex = itemSize * (thisOffset + j)\n        const otherIndex = itemSize * (otherOffset + j)\n        for (let k = 0; k < itemSize; ++k) {\n          thisField[ thisIndex + k ] = otherField[ otherIndex + k ]\n        }\n      }\n    }\n  }\n\n  /**\n   * Copy data within this store\n   * @param  {Integer} thisOffset - offset to start copying to\n   * @param  {Integer} otherOffset - offset to start copying from\n   * @param  {Integer} length - number of entries to copy\n   * @return {undefined}\n   */\n  copyWithin (offsetTarget: number, offsetSource: number, length: number) {\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\n      const name = this._fields[ i ][ 0 ]\n      const itemSize = this._fields[ i ][ 1 ]\n      const thisField = this[ name ]\n\n      for (let j = 0; j < length; ++j) {\n        const targetIndex = itemSize * (offsetTarget + j)\n        const sourceIndex = itemSize * (offsetSource + j)\n        for (let k = 0; k < itemSize; ++k) {\n          thisField[ targetIndex + k ] = thisField[ sourceIndex + k ]\n        }\n      }\n    }\n  }\n\n  /**\n   * Sort entries in the store given the compare function\n   * @param  {[type]} compareFunction - function to sort by\n   * @return {undefined}\n   */\n  sort (compareFunction: (a: any, b: any) => number) {\n    Log.time('Store.sort')\n\n    const thisStore = this\n    const tmpStore = new (this.constructor as any)(1)\n\n    function swap (index1: number, index2: number) {\n      if (index1 === index2) return\n      tmpStore.copyFrom(thisStore, 0, index1, 1)\n      thisStore.copyWithin(index1, index2, 1)\n      thisStore.copyFrom(tmpStore, index2, 0, 1)\n    }\n\n    function quicksort (left: number, right: number) {\n      if (left < right) {\n        let pivot = Math.floor((left + right) / 2)\n        let leftNew = left\n        let rightNew = right\n        do {\n          while (compareFunction(leftNew, pivot) < 0) {\n            leftNew += 1\n          }\n          while (compareFunction(rightNew, pivot) > 0) {\n            rightNew -= 1\n          }\n          if (leftNew <= rightNew) {\n            if (leftNew === pivot) {\n              pivot = rightNew\n            } else if (rightNew === pivot) {\n              pivot = leftNew\n            }\n            swap(leftNew, rightNew)\n            leftNew += 1\n            rightNew -= 1\n          }\n        } while (leftNew <= rightNew)\n        quicksort(left, rightNew)\n        quicksort(leftNew, right)\n      }\n    }\n\n    quicksort(0, this.count - 1)\n\n    Log.timeEnd('Store.sort')\n  }\n\n  /**\n   * Empty the store\n   * @return {undefined}\n   */\n  clear () {\n    this.count = 0\n  }\n\n  /**\n   * Dispose of the store entries and fields\n   * @return {undefined}\n   */\n  dispose () {\n    delete this.length\n    delete this.count\n\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\n      const name = this._fields[ i ][ 0 ]\n      delete this[ name ]\n    }\n  }\n}","/**\n * @file Contact Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\n\n/**\n * Bond store\n */\nexport default class ContactStore extends Store {\n  index1: Uint32Array\n  index2: Uint32Array\n  type: Uint8Array\n\n  get _defaultFields () {\n    return [\n      [ 'index1', 1, 'int32' ],\n      [ 'index2', 1, 'int32' ],\n      [ 'type', 1, 'int8' ]\n    ] as StoreField[]\n  }\n\n  addContact (index1: number, index2: number, type?: number) {\n    this.growIfFull()\n\n    const i = this.count\n\n    if (index1 < index2) {\n      this.index1[ i ] = index1\n      this.index2[ i ] = index2\n    } else {\n      this.index2[ i ] = index1\n      this.index1[ i ] = index2\n    }\n    if (type) this.type[ i ] = type\n\n    this.count += 1\n  }\n}","/**\n * @file Bit array\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Paul Pillot <paulpillot@gmail.com>\n * @private\n */\n\n/**\n * Compute the Hamming weight of a 32-bit unsigned integer\n * @param  {Integer} v - a 32-bit unsigned integer\n * @return {Integer} the Hamming weight\n */\nfunction hammingWeight (v: number) {\n  // works with signed or unsigned shifts\n  v -= ((v >>> 1) & 0x55555555)\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333)\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24\n}\n\n/**\n * Bit array\n *\n * Based heavily on https://github.com/lemire/FastBitSet.js\n * which is licensed under the Apache License, Version 2.0.\n */\nexport default class BitArray {\n  private _words: Uint32Array\n  public length: number\n\n  /**\n   * @param  {Integer} length - array length\n   * @param  {Boolean} [setAll] - initialize with true\n   */\n  constructor (length: number, setAll?: boolean) {\n    this.length = length\n    this._words = new Uint32Array((length + 32) >>> 5)\n    if (setAll === true) {\n      this.setAll()\n    }\n  }\n\n  /**\n   * Get value at index\n   * @param  {Integer} index - the index\n   * @return {Boolean} value\n   */\n  get (index: number) {\n    return (this._words[ index >>> 5 ] & (1 << index)) !== 0\n  }\n\n  /**\n   * Set value at index to true\n   * @param  {Integer} index - the index\n   * @return {undefined}\n   */\n  set (index: number) {\n    this._words[ index >>> 5 ] |= 1 << index\n  }\n\n  /**\n   * Set value at index to false\n   * @param  {Integer} index - the index\n   * @return {undefined}\n   */\n  clear (index: number) {\n    this._words[ index >>> 5 ] &= ~(1 << index)\n  }\n\n  /**\n   * Flip value at index\n   * @param  {Integer} index - the index\n   * @return {undefined}\n   */\n  flip (index: number) {\n    this._words[ index >>> 5 ] ^= 1 << index\n  }\n\n  _assignRange (start: number, end: number, value: boolean) {\n    if (end < start) return\n    const words = this._words\n    const wordValue = value === true ? 0xFFFFFFFF : 0\n    const wordStart = start >>> 5\n    const wordEnd = end >>> 5\n        // set complete words when applicable\n    for (let k = wordStart + 1; k < wordEnd; ++k) {\n      words[ k ] = wordValue\n    }\n        // set parts of the range not spanning complete words\n    const startWord = wordStart << 5\n    const endWord = wordEnd << 5\n    if (value === true) {\n      if (end - start < 32) {\n        for (let i = start, n = end + 1; i < n; ++i) {\n          words[ i >>> 5 ] |= 1 << i\n        }\n      } else {\n        for (let i = start, n = startWord + 32; i < n; ++i) {\n          words[ i >>> 5 ] |= 1 << i\n        }\n        for (let i = endWord, n = end + 1; i < n; ++i) {\n          words[ i >>> 5 ] |= 1 << i\n        }\n      }\n    } else {\n      if (end - start < 32) {\n        for (let i = start, n = end + 1; i < n; ++i) {\n          words[ i >>> 5 ] &= ~(1 << i)\n        }\n      } else {\n        for (let i = start, n = startWord + 32; i < n; ++i) {\n          words[ i >>> 5 ] &= ~(1 << i)\n        }\n        for (let i = endWord, n = end + 1; i < n; ++i) {\n          words[ i >>> 5 ] &= ~(1 << i)\n        }\n      }\n    }\n    return this\n  }\n\n  /**\n   * Set bits of the given range\n   * @param {Integer} start - start index\n   * @param {Integer} end - end index\n   * @return {BitArray} this object\n   */\n  setRange (start: number, end: number) {\n    return this._assignRange(start, end, true)\n  }\n\n  /**\n   * Clear bits of the given range\n   * @param {Integer} start - start index\n   * @param {Integer} end - end index\n   * @return {BitArray} this object\n   */\n  clearRange (start: number, end: number) {\n    return this._assignRange(start, end, false)\n  }\n\n  /**\n   * Set bits at all given indices\n   * @param {...Integer} arguments - indices\n   * @return {Boolean} this object\n   */\n  setBits (...indices: number[]) {\n    const words = this._words\n    const n = indices.length\n    for (let i = 0; i < n; ++i) {\n      const index = indices[ i ]\n      words[ index >>> 5 ] |= 1 << index\n    }\n    return this\n  }\n\n  /**\n   * Clear bits at all given indices\n   * @param {...Integer} arguments - indices\n   * @return {Boolean} this object\n   */\n  clearBits (...indices: number[]) {\n    const words = this._words\n    const n = indices.length\n    for (let i = 0; i < n; ++i) {\n      const index = indices[ i ]\n      words[ index >>> 5 ] &= ~(1 << index)\n    }\n    return this\n  }\n\n  /**\n   * Set all bits of the array\n   * @return {BitArray} this object\n   */\n  setAll () {\n    return this._assignRange(0, this.length - 1, true)\n  }\n\n  /**\n   * Clear all bits of the array\n   * @return {BitArray} this object\n   */\n  clearAll () {\n    return this._assignRange(0, this.length - 1, false)\n  }\n\n  /**\n   * Flip all the values in the array\n   * @return {BitArray} this object\n   */\n  flipAll () {\n    const count = this._words.length\n    const words = this._words\n    const bs = 32 - this.length % 32\n    for (let k = 0; k < count - 1; ++k) {\n      words[k] = ~words[ k ]\n    }\n    words[ count - 1 ] = (~(words[ count - 1 ] << bs)) >>> bs\n    return this\n  }\n\n  _isRangeValue (start: number, end: number, value: boolean) {\n    if (end < start) return\n    const words = this._words\n    const wordValue = value === true ? 0xFFFFFFFF : 0\n    const wordStart = start >>> 5\n    const wordEnd = end >>> 5\n        // set complete words when applicable\n    for (let k = wordStart + 1; k < wordEnd; ++k) {\n      if (words[ k ] !== wordValue) return false\n    }\n        // set parts of the range not spanning complete words\n    if (end - start < 32) {\n      for (let i = start, n = end + 1; i < n; ++i) {\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\n      }\n    } else {\n      const startWord = wordStart << 5\n      const endWord = wordEnd << 5\n      for (let i = start, n = startWord + 32; i < n; ++i) {\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\n      }\n      for (let i = endWord, n = end + 1; i < n; ++i) {\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Test if bits in given range are set\n   * @param {Integer} start - start index\n   * @param {Integer} end - end index\n   * @return {BitArray} this object\n   */\n  isRangeSet (start: number, end: number) {\n    return this._isRangeValue(start, end, true)\n  }\n\n  /**\n   * Test if bits in given range are clear\n   * @param {Integer} start - start index\n   * @param {Integer} end - end index\n   * @return {BitArray} this object\n   */\n  isRangeClear (start: number, end: number) {\n    return this._isRangeValue(start, end, false)\n  }\n\n  /**\n   * Test if all bits in the array are set\n   * @return {Boolean} test result\n   */\n  isAllSet () {\n    return this._isRangeValue(0, this.length - 1, true)\n  }\n\n  /**\n   * Test if all bits in the array are clear\n   * @return {Boolean} test result\n   */\n  isAllClear () {\n    return this._isRangeValue(0, this.length - 1, false)\n  }\n\n  /**\n   * Test if bits at all given indices are set\n   * @param {...Integer} arguments - indices\n   * @return {Boolean} test result\n   */\n  isSet (...indices: number[]) {\n    const words = this._words\n    const n = indices.length\n    for (let i = 0; i < n; ++i) {\n      const index = indices[ i ]\n      if ((words[ index >>> 5 ] & (1 << index)) === 0) return false\n    }\n    return true\n  }\n\n  /**\n   * Test if bits at all given indices are clear\n   * @param {...Integer} arguments - indices\n   * @return {Boolean} test result\n   */\n  isClear (...indices: number[]) {\n    const words = this._words\n    const n = indices.length\n    for (let i = 0; i < n; ++i) {\n      const index = indices[ i ]\n      if ((words[ index >>> 5 ] & (1 << index)) !== 0) return false\n    }\n    return true\n  }\n\n  /**\n   * Test if two BitArrays are identical in all their values\n   * @param {BitArray} otherBitarray - the other BitArray\n   * @return {Boolean} test result\n   */\n  isEqualTo (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    for (let k = 0; k < count; ++k) {\n      if (words1[ k ] !== words2[ k ]) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * How many set bits?\n   * @return {Integer} number of set bits\n   */\n  getSize () {\n    const count = this._words.length\n    const words = this._words\n    let size = 0\n    for (let i = 0; i < count; ++i) {\n      size += hammingWeight(words[ i ])\n    }\n    return size\n  }\n\n  /**\n   * Calculate difference betwen this and another bit array.\n   * Store result in this object.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {BitArray} this object\n   */\n  difference (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    for (let k = 0; k < count; ++k) {\n      words1[ k ] = words1[ k ] & ~words2[ k ]\n    }\n    for (let k = words1.length; k < count; ++k) {\n      words1[ k ] = 0\n    }\n    return this\n  }\n\n  /**\n   * Calculate union betwen this and another bit array.\n   * Store result in this object.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {BitArray} this object\n   */\n  union (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    for (let k = 0; k < count; ++k) {\n      words1[ k ] |= words2[ k ]\n    }\n    for (let k = words1.length; k < count; ++k) {\n      words1[ k ] = 0\n    }\n    return this\n  }\n\n  /**\n   * Calculate intersection betwen this and another bit array.\n   * Store result in this object.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {BitArray} this object\n   */\n  intersection (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    for (let k = 0; k < count; ++k) {\n      words1[ k ] &= words2[ k ]\n    }\n    for (let k = words1.length; k < count; ++k) {\n      words1[ k ] = 0\n    }\n    return this\n  }\n\n  /**\n   * Test if there is any intersection betwen this and another bit array.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {Boolean} test result\n   */\n  intersects (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    for (let k = 0; k < count; ++k) {\n      if ((words1[ k ] & words2[ k ]) !== 0) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Calculate the number of bits in common betwen this and another bit array.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {Integer} size\n   */\n  getIntersectionSize (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    let size = 0\n    for (let k = 0; k < count; ++k) {\n      size += hammingWeight(words1[ k ] & words2[ k ])\n    }\n    return size\n  }\n\n  /**\n   * Calculate intersection betwen this and another bit array.\n   * Store result in a new bit array.\n   * @param  {BitArray} otherBitarray - the other bit array\n   * @return {BitArray} the new bit array\n   */\n  makeIntersection (otherBitarray: BitArray) {\n    const words1 = this._words\n    const words2 = otherBitarray._words\n    const count = Math.min(words1.length, words2.length)\n    const wordsA = new Uint32Array(count)\n    const intersection = Object.create(BitArray.prototype)\n    intersection._words = wordsA\n    intersection.length = Math.min(this.length, otherBitarray.length)\n    for (let k = 0; k < count; ++k) {\n      wordsA[ k ] = words1[ k ] & words2[ k ]\n    }\n    return intersection\n  }\n\n  /**\n   * Iterate over all set bits in the array\n   * @param  {function( index: Integer, i: Integer )} callback - the callback\n   * @return {undefined}\n   */\n  forEach (callback: (index: number, i: number) => any) {\n    const count = this._words.length\n    const words = this._words\n    let i = 0\n    for (let k = 0; k < count; ++k) {\n      let w = words[ k ]\n      while (w !== 0) {\n        const t = w & -w\n        const index = (k << 5) + hammingWeight(t - 1)\n        callback(index, i)\n        w ^= t\n        ++i\n      }\n    }\n  }\n\n  /**\n   * Get an array with the set bits\n   * @return {Array} bit indices\n   */\n  toArray () {\n    const words = this._words\n    const answer = new Array(this.getSize())\n    const count = this._words.length\n    let pos = 0\n    for (let k = 0; k < count; ++k) {\n      let w = words[ k ]\n      while (w !== 0) {\n        const t = w & -w\n        answer[ pos++ ] = (k << 5) + hammingWeight(t - 1)\n        w ^= t\n      }\n    }\n    return answer\n  }\n\n  toString () {\n    return '{' + this.toArray().join(',') + '}'\n  }\n\n  toSeleString () {\n    const sele = this.toArray().join(',')\n    return sele ? '@' + sele : 'NONE'\n  }\n\n  /**\n   * Clone this object\n   * @return {BitArray} the cloned object\n   */\n  clone () {\n    const clone = Object.create(BitArray.prototype)\n    clone.length = this.length\n    clone._words = new Uint32Array(this._words)\n    return clone\n  }\n}","/**\n * @file Adjacency List\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport interface Edges {\n  nodeArray1: ArrayLike<number>\n  nodeArray2: ArrayLike<number>\n  edgeCount: number\n  nodeCount: number\n}\n\nexport interface AdjacencyList {\n  /* number of edges for each node */\n  countArray: Uint8Array\n  /* offset into indexArray for each node */\n  offsetArray: Int32Array\n  /* edge indices, grouped by nodes */\n  indexArray: Int32Array\n}\n\nexport function createAdjacencyList (edges: Edges): AdjacencyList {\n  const { edgeCount, nodeCount, nodeArray1, nodeArray2 } = edges\n\n  const countArray = new Uint8Array(nodeCount)\n  const offsetArray = new Int32Array(nodeCount)\n\n  // count edges per node\n  for (let i = 0; i < edgeCount; ++i) {\n    countArray[ nodeArray1[ i ] ] += 1\n    countArray[ nodeArray2[ i ] ] += 1\n  }\n\n  // get offsets to node edges\n  for (let i = 1; i < nodeCount; ++i) {\n    offsetArray[ i ] += offsetArray[ i - 1 ] + countArray[ i - 1 ]\n  }\n\n  // prepare index array\n  const bondCount2 = edgeCount * 2\n  const indexArray = new Int32Array(bondCount2)\n  for (let j = 0; j < bondCount2; ++j) {\n    indexArray[ j ] = -1\n  }\n\n  // build index array\n  for (let i = 0; i < edgeCount; ++i) {\n    const idx1 = nodeArray1[ i ]\n    const idx2 = nodeArray2[ i ]\n    let j1 = offsetArray[ idx1 ]\n    while (indexArray[ j1 ] !== -1 && j1 < bondCount2) {\n      j1 += 1\n    }\n    indexArray[ j1 ] = i\n    let j2 = offsetArray[ idx2 ]\n    while (indexArray[ j2 ] !== -1 && j2 < bondCount2) {\n      j2 += 1\n    }\n    indexArray[ j2 ] = i\n  }\n\n  return { countArray, offsetArray, indexArray }\n}\n","/**\n * @file Features\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport AtomProxy from '../../proxy/atom-proxy'\n\nexport interface Features {\n  types: FeatureType[]\n  groups: FeatureGroup[]\n  centers: { x: number[], y: number[], z: number[] }\n  atomSets: number[][]\n}\n\nexport const enum FeatureType {\n  Unknown = 0,\n  PositiveCharge = 1,\n  NegativeCharge = 2,\n  AromaticRing = 3,\n  HydrogenDonor = 4,\n  HydrogenAcceptor = 5,\n  HalogenDonor = 6,\n  HalogenAcceptor = 7,\n  Hydrophobic = 8,\n  WeakHydrogenDonor = 9,\n  IonicTypePartner = 10,\n  DativeBondPartner = 11,\n  TransitionMetal = 12,\n  IonicTypeMetal = 13\n}\n\nexport const enum FeatureGroup {\n  Unknown = 0,\n  QuaternaryAmine = 1,\n  TertiaryAmine = 2,\n  Sulfonium = 3,\n  SulfonicAcid = 4,\n  Sulfate = 5,\n  Phosphate = 6,\n  Halocarbon = 7,\n  Guanidine = 8,\n  Acetamidine = 9,\n  Carboxylate = 10\n}\n\nexport function createFeatures (): Features {\n  return {\n    types: [],\n    groups: [],\n    centers: { x: [], y: [], z: [] },\n    atomSets: []\n  }\n}\n\nexport interface FeatureState {\n  type: FeatureType\n  group: FeatureGroup\n  x: number\n  y: number\n  z: number\n  atomSet: number[]\n}\n\nexport function createFeatureState(type = FeatureType.Unknown, group = FeatureGroup.Unknown): FeatureState {\n  return { type, group, x: 0, y: 0, z: 0, atomSet: [] }\n}\n\nexport function addAtom (state: FeatureState, atom: AtomProxy) {\n  state.x += atom.x\n  state.y += atom.y\n  state.z += atom.z\n  state.atomSet.push(atom.index)\n}\n\nexport function addFeature (features: Features, state: FeatureState) {\n  const n = state.atomSet.length\n  if (n > 0) {\n    const { types, groups, centers, atomSets } = features\n    types.push(state.type)\n    groups.push(state.group)\n    centers.x.push(state.x / n)\n    centers.y.push(state.y / n)\n    centers.z.push(state.z / n)\n    atomSets.push(state.atomSet)\n  }\n}\n","/**\n * @file Structure Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// entity types\nexport const UnknownEntity = 0\nexport const PolymerEntity = 1\nexport const NonPolymerEntity = 2\nexport const MacrolideEntity = 3\nexport const WaterEntity = 4\n\n// molecule types\nexport const UnknownType = 0\nexport const WaterType = 1\nexport const IonType = 2\nexport const ProteinType = 3\nexport const RnaType = 4\nexport const DnaType = 5\nexport const SaccharideType = 6\n\n// backbone types\nexport const UnknownBackboneType = 0\nexport const ProteinBackboneType = 1\nexport const RnaBackboneType = 2\nexport const DnaBackboneType = 3\nexport const CgProteinBackboneType = 4\nexport const CgRnaBackboneType = 5\nexport const CgDnaBackboneType = 6\n\n// chemical component types\nexport const ChemCompProtein = [\n  'D-BETA-PEPTIDE, C-GAMMA LINKING', 'D-GAMMA-PEPTIDE, C-DELTA LINKING',\n  'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE LINKING',\n  'L-BETA-PEPTIDE, C-GAMMA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING',\n  'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE LINKING',\n  'PEPTIDE LINKING', 'PEPTIDE-LIKE'\n]\nexport const ChemCompRna = [\n  'RNA OH 3 PRIME TERMINUS', 'RNA OH 5 PRIME TERMINUS', 'RNA LINKING'\n]\nexport const ChemCompDna = [\n  'DNA OH 3 PRIME TERMINUS', 'DNA OH 5 PRIME TERMINUS', 'DNA LINKING',\n  'L-DNA LINKING', 'L-RNA LINKING'\n]\nexport const ChemCompSaccharide = [\n  'D-SACCHARIDE', 'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'D-SACCHARIDE 1,4 AND 1,6 LINKING',\n  'L-SACCHARIDE', 'L-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING',\n  'SACCHARIDE'\n]\nexport const ChemCompOther = [\n  'OTHER'\n]\nexport const ChemCompNonPolymer = [\n  'NON-POLYMER'\n]\nexport const ChemCompHetero = ChemCompNonPolymer.concat(ChemCompOther, ChemCompSaccharide)\n\n// secondary structure\nexport const SecStrucHelix = [ 'h', 'g', 'i' ]\nexport const SecStrucSheet = [ 'e', 'b' ]\nexport const SecStrucTurn = [ 's', 't', 'l', '' ]\n\nexport const AtomicNumbers: { [e: string]: number | undefined } = {\n  'H': 1, 'D': 1, 'T': 1, 'HE': 2, 'LI': 3, 'BE': 4, 'B': 5, 'C': 6, 'N': 7, 'O': 8, 'F': 9, 'NE': 10, 'NA': 11, 'MG': 12, 'AL': 13, 'SI': 14, 'P': 15, 'S': 16, 'CL': 17, 'AR': 18, 'K': 19, 'CA': 20, 'SC': 21, 'TI': 22, 'V': 23, 'CR': 24, 'MN': 25, 'FE': 26, 'CO': 27, 'NI': 28, 'CU': 29, 'ZN': 30, 'GA': 31, 'GE': 32, 'AS': 33, 'SE': 34, 'BR': 35, 'KR': 36, 'RB': 37, 'SR': 38, 'Y': 39, 'ZR': 40, 'NB': 41, 'MO': 42, 'TC': 43, 'RU': 44, 'RH': 45, 'PD': 46, 'AG': 47, 'CD': 48, 'IN': 49, 'SN': 50, 'SB': 51, 'TE': 52, 'I': 53, 'XE': 54, 'CS': 55, 'BA': 56, 'LA': 57, 'CE': 58, 'PR': 59, 'ND': 60, 'PM': 61, 'SM': 62, 'EU': 63, 'GD': 64, 'TB': 65, 'DY': 66, 'HO': 67, 'ER': 68, 'TM': 69, 'YB': 70, 'LU': 71, 'HF': 72, 'TA': 73, 'W': 74, 'RE': 75, 'OS': 76, 'IR': 77, 'PT': 78, 'AU': 79, 'HG': 80, 'TL': 81, 'PB': 82, 'BI': 83, 'PO': 84, 'AT': 85, 'RN': 86, 'FR': 87, 'RA': 88, 'AC': 89, 'TH': 90, 'PA': 91, 'U': 92, 'NP': 93, 'PU': 94, 'AM': 95, 'CM': 96, 'BK': 97, 'CF': 98, 'ES': 99, 'FM': 100, 'MD': 101, 'NO': 102, 'LR': 103, 'RF': 104, 'DB': 105, 'SG': 106, 'BH': 107, 'HS': 108, 'MT': 109, 'DS': 110, 'RG': 111, 'CN': 112, 'NH': 113, 'FL': 114, 'MC': 115, 'LV': 116, 'TS': 117, 'OG': 118\n}\nexport const DefaultAtomicNumber = 0\n\n/**\n * Enum mapping element to atomic number\n */\nexport const enum Elements {\n  H = 1, D = 1, T = 1, HE = 2, LI = 3, BE = 4, B = 5, C = 6, N = 7, O = 8, F = 9, NE = 10, NA = 11, MG = 12, AL = 13, SI = 14, P = 15, S = 16, CL = 17, AR = 18, K = 19, CA = 20, SC = 21, TI = 22, V = 23, CR = 24, MN = 25, FE = 26, CO = 27, NI = 28, CU = 29, ZN = 30, GA = 31, GE = 32, AS = 33, SE = 34, BR = 35, KR = 36, RB = 37, SR = 38, Y = 39, ZR = 40, NB = 41, MO = 42, TC = 43, RU = 44, RH = 45, PD = 46, AG = 47, CD = 48, IN = 49, SN = 50, SB = 51, TE = 52, I = 53, XE = 54, CS = 55, BA = 56, LA = 57, CE = 58, PR = 59, ND = 60, PM = 61, SM = 62, EU = 63, GD = 64, TB = 65, DY = 66, HO = 67, ER = 68, TM = 69, YB = 70, LU = 71, HF = 72, TA = 73, W = 74, RE = 75, OS = 76, IR = 77, PT = 78, AU = 79, HG = 80, TL = 81, PB = 82, BI = 83, PO = 84, AT = 85, RN = 86, FR = 87, RA = 88, AC = 89, TH = 90, PA = 91, U = 92, NP = 93, PU = 94, AM = 95, CM = 96, BK = 97, CF = 98, ES = 99, FM = 100, MD = 101, NO = 102, LR = 103, RF = 104, DB = 105, SG = 106, BH = 107, HS = 108, MT = 109, DS = 110, RG = 111, CN = 112, NH = 113, FL = 114, MC = 115, LV = 116, TS = 117, OG = 118\n}\n\n// https://doi.org/10.1515/pac-2015-0305 (table 2, 3, and 4)\nexport const AtomWeights: { [e: number]: number | undefined } = {\n  1: 1.008, 2: 4.0026, 3: 6.94, 4: 9.0122, 5: 10.81, 6: 10.81, 7: 14.007, 8: 15.999, 9: 18.998, 10: 20.180, 11: 22.990, 12: 24.305, 13: 26.982, 14: 28.085, 15: 30.974, 16: 32.06, 17: 35.45, 18: 39.948, 19: 39.098, 20: 40.078, 21: 44.956, 22: 47.867, 23: 50.942, 24: 51.996, 25: 54.938, 26: 55.845, 27: 58.933, 28: 58.693, 29: 63.546, 30: 65.38, 31: 69.723, 32: 72.630, 33: 74.922, 34: 78.971, 35: 79.904, 36: 83.798, 37: 85.468, 38: 87.62, 39: 88.906, 40: 91.224, 41: 92.906, 42: 95.95, 43: 96.906, 44: 101.07, 45: 102.91, 46: 106.42, 47: 107.87, 48: 112.41, 49: 114.82, 50: 118.71, 51: 121.76, 52: 127.60, 53: 127.60, 54: 131.29, 55: 132.91, 56: 137.33, 57: 138.91, 58: 140.12, 59: 140.91, 60: 144.24, 61: 144.912, 62: 150.36, 63: 151.96, 64: 157.25, 65: 158.93, 66: 162.50, 67: 164.93, 68: 167.26, 69: 168.93, 70: 173.05, 71: 174.97, 72: 178.49, 73: 180.95, 74: 183.84, 75: 186.21, 76: 190.23, 77: 192.22, 78: 195.08, 79: 196.97, 80: 200.59, 81: 204.38, 82: 207.2, 83: 208.98, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 232.04, 91: 231.04, 92: 238.03, 93: 237.048, 94: 244.064, 95: 243.061, 96: 247.070, 97: 247.070, 98: 251.079, 99: 252.083, 100: 257.095, 101: 258.098, 102: 259.101, 103: 262.110, 104: 267.122, 105: 270.131, 106: 271.134, 107: 270.133, 108: 270.134, 109: 278.156, 110: 281.165, 111: 281.166, 112: 285.177, 113: 286.182, 114: 289.190, 115: 289.194, 116: 293.204, 117: 293.208, 118: 294.214\n}\nexport const DefaultAtomWeight = 10.81  // C\n\n// http://dx.doi.org/10.1021/jp8111556 (or 2.0)\nexport const VdwRadii: { [e: number]: number | undefined } = {\n  1: 1.1, 2: 1.4, 3: 1.81, 4: 1.53, 5: 1.92, 6: 1.7, 7: 1.55, 8: 1.52, 9: 1.47, 10: 1.54, 11: 2.27, 12: 1.73, 13: 1.84, 14: 2.1, 15: 1.8, 16: 1.8, 17: 1.75, 18: 1.88, 19: 2.75, 20: 2.31, 21: 2.3, 22: 2.15, 23: 2.05, 24: 2.05, 25: 2.05, 26: 2.05, 27: 2.0, 28: 2.0, 29: 2.0, 30: 2.1, 31: 1.87, 32: 2.11, 33: 1.85, 34: 1.9, 35: 1.83, 36: 2.02, 37: 3.03, 38: 2.49, 39: 2.4, 40: 2.3, 41: 2.15, 42: 2.1, 43: 2.05, 44: 2.05, 45: 2.0, 46: 2.05, 47: 2.1, 48: 2.2, 49: 2.2, 50: 1.93, 51: 2.17, 52: 2.06, 53: 1.98, 54: 2.16, 55: 3.43, 56: 2.68, 57: 2.5, 58: 2.48, 59: 2.47, 60: 2.45, 61: 2.43, 62: 2.42, 63: 2.4, 64: 2.38, 65: 2.37, 66: 2.35, 67: 2.33, 68: 2.32, 69: 2.3, 70: 2.28, 71: 2.27, 72: 2.25, 73: 2.2, 74: 2.1, 75: 2.05, 76: 2.0, 77: 2.0, 78: 2.05, 79: 2.1, 80: 2.05, 81: 1.96, 82: 2.02, 83: 2.07, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 2.4, 91: 2.0, 92: 2.3, 93: 2.0, 94: 2.0, 95: 2.0, 96: 2.0, 97: 2.0, 98: 2.0, 99: 2.0, 100: 2.0, 101: 2.0, 102: 2.0, 103: 2.0, 104: 2.0, 105: 2.0, 106: 2.0, 107: 2.0, 108: 2.0, 109: 2.0, 110: 2.0, 111: 2.0, 112: 2.0, 113: 2.0, 114: 2.0, 115: 2.0, 116: 2.0, 117: 2.0, 118: 2.0\n}\nexport const DefaultVdwRadius = 2.0  // C\n\n// Peter Rose (peter.rose@rcsb.org), private communication, average accross PDB\nexport const ResidueRadii: { [k: string]: number } = {\n  '2QY': 6.58,\n  'CY0': 11.98,\n  '2QZ': 2.52,\n  'CY1': 6.59,\n  'HHK': 5.11,\n  'CXM': 4.69,\n  'HHI': 4.58,\n  'CY4': 4.57,\n  'S12': 18.57,\n  'CY3': 2.79,\n  'C5C': 5.35,\n  'PFX': 11.84,\n  '2R3': 6.94,\n  '2R1': 3.78,\n  'ILX': 4.99,\n  '32S': 5.68,\n  'BTK': 8.59,\n  '32T': 5.72,\n  'FAK': 9.8,\n  'B27': 2.78,\n  'ILM': 3.84,\n  'C4R': 5.63,\n  '32L': 6.75,\n  'SYS': 3.01,\n  '1MH': 5.04,\n  'ILE': 3.65,\n  'YNM': 6.39,\n  '2RX': 4.91,\n  'B3A': 2.48,\n  'GEE': 4.76,\n  '7MN': 7.34,\n  'B3E': 5.4,\n  'ARG': 6.33,\n  '200': 6.89,\n  'HIP': 5.47,\n  'HIA': 4.64,\n  'B3K': 5.89,\n  'HIC': 5.76,\n  'B3L': 4.96,\n  'B3M': 5.07,\n  'ARM': 6.86,\n  'ARO': 7.35,\n  'AR4': 8.42,\n  'PG1': 10.67,\n  'YOF': 6.44,\n  'IML': 3.74,\n  'SXE': 6.65,\n  'HIQ': 7.98,\n  'PFF': 6.31,\n  'HIS': 4.52,\n  '0TD': 3.62,\n  'C3Y': 5.24,\n  '1OP': 11.55,\n  '02Y': 4.77,\n  '02V': 4.83,\n  'ASB': 5.59,\n  '30V': 8.53,\n  'S2P': 4.81,\n  'ASP': 3.55,\n  'ASN': 3.54,\n  '2OR': 6.91,\n  'QMM': 6.13,\n  '2P0': 8.52,\n  'ASL': 5.36,\n  'HFA': 5.14,\n  '5PG': 5.69,\n  'B3X': 4.38,\n  'AS9': 4.1,\n  'ARV': 7.59,\n  'B3U': 6.06,\n  'S2C': 7.54,\n  'B3T': 3.34,\n  '175': 5.64,\n  'GFT': 8.18,\n  'HG7': 6.8,\n  'B3Q': 4.48,\n  'ASA': 3.64,\n  '02K': 2.94,\n  'B3Y': 7.45,\n  'PHD': 5.35,\n  'C6C': 6.42,\n  'BUC': 5.8,\n  'HGL': 8.07,\n  'PHE': 5.06,\n  '03Y': 2.6,\n  'PHA': 5.11,\n  'OCY': 5.0,\n  '4PH': 6.79,\n  '5OH': 4.7,\n  '31Q': 10.46,\n  'BTR': 7.98,\n  '3PX': 4.7,\n  '1PA': 8.07,\n  'ASX': 3.54,\n  'IOR': 7.23,\n  '03E': 3.38,\n  'PHL': 5.17,\n  'KWS': 5.09,\n  'PHI': 7.12,\n  'NAL': 7.22,\n  'S1H': 19.21,\n  '2ML': 3.86,\n  '2MR': 7.35,\n  'GHG': 4.83,\n  'TYY': 6.54,\n  '2MT': 3.67,\n  '56A': 13.01,\n  'SVA': 5.46,\n  'TYX': 8.31,\n  'TYS': 8.59,\n  'TYR': 6.38,\n  'TYQ': 6.43,\n  'HLU': 3.99,\n  'MYK': 19.47,\n  'TYO': 7.71,\n  'HLX': 4.98,\n  'TYN': 9.87,\n  'TYJ': 6.25,\n  'TYI': 6.49,\n  'LYH': 5.13,\n  'LYF': 12.19,\n  'SUN': 6.73,\n  'LYR': 18.28,\n  'TYB': 6.46,\n  '11W': 14.39,\n  'LYS': 5.54,\n  'LYN': 4.8,\n  '11Q': 4.85,\n  'LYO': 4.71,\n  'LYZ': 1.76,\n  'TXY': 6.44,\n  'MYN': 4.71,\n  'TY5': 10.6,\n  'HMR': 5.09,\n  '01W': 8.55,\n  'LYX': 13.36,\n  'TY8': 7.22,\n  'TY2': 6.49,\n  'KYN': 6.18,\n  'KYQ': 9.75,\n  'CZZ': 5.14,\n  'IIL': 3.81,\n  'HNC': 10.41,\n  'OIC': 4.62,\n  'LVN': 2.89,\n  'QIL': 3.84,\n  'JJL': 8.3,\n  'VAH': 3.88,\n  'JJJ': 7.5,\n  'JJK': 7.43,\n  'VAD': 2.56,\n  'CYW': 4.65,\n  '0QL': 5.72,\n  '143': 8.22,\n  'SVX': 7.04,\n  'CYJ': 11.64,\n  'SVY': 7.1,\n  'SVZ': 6.6,\n  'CYG': 8.03,\n  'CYF': 13.54,\n  'SVV': 5.09,\n  'GL3': 2.72,\n  '8SP': 14.26,\n  'CYS': 2.78,\n  '004': 4.33,\n  'CYR': 10.33,\n  'PLJ': 3.71,\n  'EXY': 7.37,\n  'HL2': 3.75,\n  'A5N': 5.21,\n  'CYQ': 5.67,\n  'CZ2': 5.16,\n  'LWY': 4.12,\n  'PM3': 8.78,\n  'OHS': 6.98,\n  'OHI': 5.35,\n  '3TY': 8.42,\n  'CYD': 8.55,\n  'DYS': 7.87,\n  'DAH': 6.47,\n  '4IK': 11.81,\n  '3EG': 3.66,\n  'AYA': 3.65,\n  '4IN': 6.31,\n  'DAB': 3.48,\n  '4HT': 6.03,\n  'RGL': 7.03,\n  'DAM': 2.49,\n  'NFA': 5.04,\n  'WFP': 6.07,\n  '2JC': 2.97,\n  'HAR': 7.55,\n  '2JG': 5.67,\n  'MH6': 1.72,\n  '2JF': 9.13,\n  '3FG': 4.96,\n  'MGN': 4.84,\n  'AZH': 5.36,\n  'AZK': 6.03,\n  'ZBZ': 7.79,\n  'TBG': 2.58,\n  'VAL': 2.51,\n  'MGG': 7.34,\n  'AZS': 5.61,\n  'FHL': 9.75,\n  '2JH': 4.56,\n  'IEL': 7.07,\n  'FHO': 6.75,\n  'DA2': 7.79,\n  'FH7': 6.99,\n  'ME0': 4.52,\n  '3GL': 4.84,\n  'MDO': 5.03,\n  'AZY': 7.37,\n  'A8E': 3.76,\n  'ZCL': 6.71,\n  'MDH': 2.58,\n  'LA2': 14.07,\n  '4FW': 6.1,\n  'YCM': 5.32,\n  'MDF': 4.95,\n  'YCP': 3.01,\n  'TEF': 8.63,\n  'FGP': 4.34,\n  'UF0': 19.72,\n  'XCN': 4.57,\n  'FGL': 2.56,\n  'MF3': 6.37,\n  'MEQ': 5.13,\n  'LAA': 3.23,\n  'IGL': 5.52,\n  'MET': 4.49,\n  'NIY': 6.81,\n  'QCS': 5.18,\n  'TCQ': 8.56,\n  'MEN': 4.33,\n  '4HL': 8.79,\n  'MEA': 4.95,\n  'EFC': 5.28,\n  'LAL': 2.41,\n  '2HF': 5.52,\n  'KBE': 5.64,\n  'OCS': 3.94,\n  'CAF': 5.46,\n  'NC1': 11.4,\n  'NBQ': 9.82,\n  'CAB': 4.19,\n  'MBQ': 9.55,\n  '193': 7.38,\n  '192': 2.44,\n  '0WZ': 7.61,\n  'CAS': 5.35,\n  'NB8': 11.98,\n  'OBS': 11.71,\n  '1AC': 2.42,\n  'PCA': 3.48,\n  'MCL': 9.73,\n  'LBY': 7.75,\n  'GAU': 4.67,\n  'PBF': 9.75,\n  'MCG': 6.46,\n  'DDE': 6.86,\n  '19W': 3.94,\n  'MD5': 9.33,\n  'MD6': 6.44,\n  'MD3': 8.41,\n  'MCS': 7.56,\n  'OBF': 3.64,\n  'UAL': 4.68,\n  'PAT': 6.05,\n  'IAM': 8.88,\n  'PAQ': 8.77,\n  'FDL': 9.49,\n  'NCB': 3.45,\n  'LCK': 9.81,\n  'DDZ': 2.52,\n  '2FM': 5.54,\n  'IAR': 6.77,\n  'OAS': 4.8,\n  'HBN': 8.8,\n  'TA4': 5.55,\n  '1C3': 7.43,\n  'ECX': 5.51,\n  'PF5': 6.28,\n  'RE3': 5.29,\n  'FCL': 6.25,\n  'ECC': 4.79,\n  'LDH': 7.06,\n  'NCY': 2.91,\n  'CCS': 4.58,\n  'PEC': 6.54,\n  '2CO': 4.45,\n  'LE1': 2.72,\n  'HCM': 5.53,\n  '07O': 8.05,\n  'HCL': 4.96,\n  'NEP': 6.94,\n  'PE1': 8.01,\n  'LEF': 4.37,\n  'FC0': 5.18,\n  'LED': 4.34,\n  'HCS': 4.09,\n  'DBU': 2.49,\n  'RE0': 5.53,\n  'LEN': 3.82,\n  '1E3': 8.71,\n  'BB9': 2.56,\n  'BB8': 5.14,\n  'PCS': 5.05,\n  'BB7': 4.56,\n  'BB6': 2.62,\n  'LEU': 3.83,\n  'DBZ': 7.08,\n  'LET': 11.29,\n  'DBY': 6.46,\n  'ICY': 7.76,\n  'MAA': 2.4,\n  'CGA': 7.91,\n  '5CS': 8.34,\n  'UGY': 3.7,\n  'LGY': 11.71,\n  'N10': 8.96,\n  'AAR': 6.39,\n  'FT6': 7.5,\n  'MOD': 12.62,\n  '5CW': 7.21,\n  'PVH': 4.58,\n  'BBC': 6.42,\n  'YYA': 7.3,\n  'O12': 14.08,\n  'NOT': 7.15,\n  'KGC': 9.88,\n  'MP4': 5.86,\n  '0CS': 4.07,\n  'MP8': 3.75,\n  'VLL': 2.54,\n  'VLM': 2.51,\n  'BCS': 8.03,\n  'MNL': 4.9,\n  'AA4': 4.47,\n  'SAC': 3.49,\n  'BCX': 2.99,\n  '3CF': 6.47,\n  'SAH': 11.7,\n  'NNH': 6.86,\n  'CGU': 4.71,\n  'SIB': 12.41,\n  'TLY': 8.78,\n  'SIC': 4.81,\n  'VMS': 8.82,\n  'TMD': 6.76,\n  'MMO': 6.53,\n  'PXU': 2.46,\n  '4AW': 6.22,\n  'OTH': 3.6,\n  'DLS': 6.84,\n  'MME': 4.99,\n  'DM0': 6.99,\n  '0FL': 2.76,\n  'SBL': 8.96,\n  'CDV': 3.72,\n  'OTY': 6.51,\n  'PYA': 7.75,\n  '2AS': 3.57,\n  'DMH': 4.92,\n  'ELY': 7.42,\n  'GVL': 9.6,\n  'FVA': 2.9,\n  'SAR': 2.48,\n  '4BF': 6.92,\n  'EME': 4.69,\n  'CDE': 2.51,\n  '3AR': 7.86,\n  '3AH': 9.11,\n  'AC5': 2.44,\n  'FTR': 6.08,\n  'MLL': 3.76,\n  'NPH': 11.66,\n  'NPI': 6.9,\n  'DMT': 6.67,\n  'PYX': 11.3,\n  'MLE': 3.87,\n  'PYL': 9.67,\n  'ZZU': 6.94,\n  'H5M': 3.61,\n  'SCH': 4.46,\n  'DMK': 3.52,\n  'FTY': 9.07,\n  '2AG': 3.7,\n  'ABA': 2.55,\n  'ZZJ': 2.44,\n  'MLZ': 6.8,\n  'MLY': 6.88,\n  'KCX': 7.28,\n  'ZZD': 8.16,\n  '3A5': 5.37,\n  'LHC': 7.75,\n  '9AT': 2.47,\n  'OZT': 3.4,\n  'THO': 2.62,\n  'THR': 2.5,\n  'DFI': 3.93,\n  'MKD': 6.42,\n  '4CY': 4.6,\n  'SDP': 6.07,\n  'DFO': 3.94,\n  '0A0': 3.45,\n  '4DB': 9.73,\n  'ML3': 6.26,\n  'BG1': 8.02,\n  'SD4': 4.57,\n  'THC': 3.8,\n  'SCS': 5.48,\n  'TH5': 4.65,\n  'BFD': 5.33,\n  'AEI': 6.34,\n  'TH6': 2.85,\n  'SCY': 4.53,\n  'TIS': 4.81,\n  'SEE': 4.53,\n  'BHD': 3.48,\n  'SEB': 8.18,\n  'SEC': 2.96,\n  'SEP': 4.8,\n  'CLH': 7.13,\n  'TIH': 5.02,\n  'CLG': 13.62,\n  'SEN': 6.43,\n  'XXA': 7.34,\n  'SEL': 2.46,\n  'SE7': 4.19,\n  '4CF': 7.72,\n  'G8M': 3.57,\n  'BH2': 3.51,\n  'UN2': 3.22,\n  'VR0': 10.51,\n  'MK8': 4.76,\n  'DHA': 2.32,\n  'LMQ': 4.69,\n  'SFE': 5.01,\n  'AHB': 3.47,\n  'OXX': 7.05,\n  'BIF': 9.63,\n  'IZO': 4.47,\n  'NMM': 8.25,\n  '0BN': 7.0,\n  'HZP': 3.12,\n  'NMC': 4.23,\n  'DHL': 2.69,\n  '9DS': 9.29,\n  'SER': 2.41,\n  'CHG': 4.2,\n  'MIR': 6.54,\n  'AGQ': 7.79,\n  'SET': 2.46,\n  'MIS': 6.32,\n  '4FB': 3.08,\n  '0AR': 8.46,\n  'LME': 3.99,\n  'FZN': 24.42,\n  'AGT': 9.04,\n  'IYR': 6.46,\n  '9DN': 9.31,\n  'CHP': 5.75,\n  'UNK': 1.64,\n  'XX1': 9.92,\n  'AGM': 6.57,\n  '0AH': 5.78,\n  'LLP': 10.22,\n  '0AF': 6.72,\n  '4DP': 9.28,\n  'HYP': 2.25,\n  'DIR': 5.8,\n  'LLY': 8.71,\n  '0AK': 6.11,\n  'NLE': 4.67,\n  'OYL': 6.42,\n  'WVL': 4.69,\n  '0A8': 8.1,\n  'NLY': 6.37,\n  'MHO': 4.89,\n  'VOL': 2.55,\n  '0A1': 7.1,\n  'MHL': 3.92,\n  'NLP': 4.81,\n  'NLQ': 4.65,\n  'MHW': 2.74,\n  'BIL': 4.7,\n  'NLO': 4.8,\n  'MHU': 7.51,\n  'XW1': 9.36,\n  'LLO': 10.13,\n  'SGB': 6.88,\n  'MHV': 3.6,\n  'MHS': 4.51,\n  '0A9': 5.17,\n  '0LF': 9.96,\n  'HT7': 6.82,\n  'X2W': 6.6,\n  'YPZ': 9.38,\n  'I58': 6.73,\n  'FLA': 2.4,\n  'M0H': 4.83,\n  'HSL': 2.46,\n  'FLE': 6.17,\n  'KOR': 10.1,\n  '1VR': 3.89,\n  'HSO': 4.56,\n  'TTS': 9.41,\n  'RVX': 7.01,\n  'TTQ': 7.71,\n  'H14': 5.27,\n  'HTI': 7.8,\n  'ONH': 6.14,\n  'LP6': 8.58,\n  'ONL': 4.83,\n  'AHH': 5.06,\n  'HS8': 7.4,\n  'HS9': 4.71,\n  'BL2': 5.82,\n  'AHP': 5.26,\n  '6HN': 7.34,\n  'HRP': 5.46,\n  'POM': 3.6,\n  'WPA': 5.11,\n  '2ZC': 4.29,\n  'CPC': 2.65,\n  'AIB': 2.4,\n  'XSN': 3.47,\n  'M2S': 5.28,\n  'GND': 6.67,\n  'GNC': 4.6,\n  'MVA': 2.56,\n  'OLZ': 5.32,\n  'M2L': 6.15,\n  'TRF': 6.69,\n  'NZH': 7.66,\n  'SRZ': 5.27,\n  'OLD': 10.47,\n  'CME': 5.86,\n  'CMH': 5.3,\n  'ALA': 2.38,\n  'TRQ': 7.36,\n  'PPN': 7.24,\n  'TRP': 6.07,\n  'TRO': 5.82,\n  'TRN': 5.95,\n  'NYS': 8.1,\n  'ALC': 5.26,\n  'U3X': 11.7,\n  'HVA': 2.58,\n  'TS9': 3.92,\n  'TRX': 7.27,\n  'TRW': 11.8,\n  'LPL': 7.51,\n  'GMA': 4.4,\n  'OMT': 5.07,\n  'CMT': 3.54,\n  'GME': 4.66,\n  'NYB': 6.07,\n  'PR3': 5.12,\n  'LPD': 2.48,\n  'GLU': 4.49,\n  '1X6': 6.84,\n  'LPG': 2.39,\n  'GLX': 4.52,\n  'PR4': 4.52,\n  'CML': 6.16,\n  'FME': 4.52,\n  'HTR': 6.48,\n  'PR7': 4.66,\n  'Z3E': 7.2,\n  'GLZ': 2.39,\n  'BMT': 6.37,\n  'WRP': 8.16,\n  'GLY': 2.37,\n  'OMY': 6.11,\n  'MTY': 5.46,\n  'OMX': 6.15,\n  'GLN': 4.46,\n  '2XA': 8.25,\n  '28X': 7.84,\n  '7JA': 9.46,\n  'FLT': 9.65,\n  'GLJ': 3.7,\n  'OMH': 5.26,\n  'TSY': 4.26,\n  'PRV': 4.28,\n  'CS4': 11.21,\n  'DOA': 12.33,\n  '23P': 5.42,\n  'CS3': 8.24,\n  '6CL': 6.47,\n  'PRR': 5.58,\n  'KST': 11.58,\n  'CS1': 7.23,\n  'PRS': 2.63,\n  'ZYJ': 11.4,\n  'IT1': 9.75,\n  'UU5': 4.98,\n  'ESB': 6.69,\n  'UU4': 2.49,\n  'ESC': 5.65,\n  'LSO': 10.58,\n  'ZYK': 11.45,\n  '9NV': 8.99,\n  '23F': 5.27,\n  'ORN': 4.25,\n  'HOX': 6.61,\n  'CSD': 3.95,\n  'FP9': 3.03,\n  'DO2': 4.44,\n  'SLL': 11.53,\n  'P3Q': 9.54,\n  'ORQ': 6.04,\n  'MSL': 5.21,\n  'DNP': 2.45,\n  'CSB': 3.51,\n  'WLU': 4.24,\n  'CSA': 5.7,\n  'MT2': 5.51,\n  'CSO': 3.53,\n  'TPO': 4.73,\n  'MSP': 13.11,\n  '23S': 6.09,\n  'MSO': 4.96,\n  'PRO': 2.41,\n  'TPL': 5.41,\n  'DNS': 8.79,\n  'CSK': 3.91,\n  'Z70': 7.4,\n  'CSJ': 7.51,\n  'DNW': 7.97,\n  'PRK': 9.15,\n  'GSU': 11.81,\n  'LTA': 6.57,\n  'HPE': 6.63,\n  'TPQ': 6.48,\n  'PRJ': 5.26,\n  'PSW': 4.65,\n  'L3O': 3.89,\n  'CSU': 4.89,\n  'ALY': 7.38,\n  'M3L': 7.12,\n  'CSW': 3.68,\n  'XPR': 7.68,\n  'D4P': 5.66,\n  'FOE': 8.17,\n  'SLZ': 5.69,\n  'CSP': 5.26,\n  'TQI': 7.68,\n  'ALT': 2.72,\n  'CSR': 5.42,\n  'CSS': 3.61,\n  'M3R': 7.18,\n  'ALO': 2.57,\n  'R4K': 4.67,\n  'SMF': 9.0,\n  'MSA': 2.73,\n  'SMC': 3.39,\n  'CSX': 3.47,\n  'SME': 4.8,\n  'ETA': 2.4,\n  'CSZ': 3.6,\n  '22G': 8.8,\n  'MSE': 4.62,\n  'ALN': 6.16,\n  'PSH': 7.26,\n  'CTE': 7.27,\n  'DON': 6.72,\n  'CTH': 3.45,\n  'U2X': 11.54,\n  '6CW': 7.56,\n  'TQZ': 6.97,\n  '3YM': 6.52,\n  'OSE': 4.49,\n  '2VA': 9.82,\n  'TQQ': 7.76,\n  'NRG': 8.35,\n  'BPE': 7.24,\n  'F2F': 6.25,\n  '1TQ': 8.58,\n  'I2M': 3.13,\n  'NVA': 3.76,\n  'R1A': 8.2,\n  'QPA': 6.95,\n  'C1X': 11.63,\n  'FRD': 5.05,\n  'HR7': 6.98,\n  'SNC': 3.93,\n  'QPH': 5.15,\n  '26B': 8.39,\n  'DPQ': 6.54,\n  'DPP': 2.51,\n  '2TY': 8.65,\n  'TNR': 6.88,\n  'PTH': 8.35,\n  'DPL': 3.58,\n  'APK': 8.79,\n  '1TY': 8.84,\n  'HRG': 7.36,\n  'PTM': 8.74,\n  '1U8': 3.62,\n  'PTR': 8.64,\n  'LVG': 3.01,\n  '6FL': 4.85,\n  'SOC': 4.05,\n  'KPI': 9.79,\n  'IPG': 2.91,\n  'P2Y': 2.51,\n  'N2C': 3.55,\n  'T0I': 7.34,\n  'MPH': 5.29,\n  'R2T': 4.71,\n  'TOX': 6.78,\n  'P2Q': 9.8,\n  'GPL': 10.77,\n  'MPJ': 5.07,\n  'F2Y': 6.2,\n  'T11': 8.58,\n  '9NR': 9.33,\n  'FPR': 8.85,\n  '9NF': 8.93,\n  'KPY': 10.17,\n  '9NE': 9.77,\n  'TOQ': 7.5,\n  'MPQ': 4.2,\n  'FPK': 3.08,\n  'HQA': 7.25,\n  'SOY': 10.94\n}\nexport const DefaultResidueRadius = 5.0\n\n// http://dx.doi.org/10.1039/b801115j (or 1.6)\nexport const CovalentRadii: { [e: number]: number | undefined } = {\n  1: 0.31, 2: 0.28, 3: 1.28, 4: 0.96, 5: 0.84, 6: 0.76, 7: 0.71, 8: 0.66, 9: 0.57, 10: 0.58, 11: 1.66, 12: 1.41, 13: 1.21, 14: 1.11, 15: 1.07, 16: 1.05, 17: 1.02, 18: 1.06, 19: 2.03, 20: 1.76, 21: 1.7, 22: 1.6, 23: 1.53, 24: 1.39, 25: 1.39, 26: 1.32, 27: 1.26, 28: 1.24, 29: 1.32, 30: 1.22, 31: 1.22, 32: 1.2, 33: 1.19, 34: 1.2, 35: 1.2, 36: 1.16, 37: 2.2, 38: 1.95, 39: 1.9, 40: 1.75, 41: 1.64, 42: 1.54, 43: 1.47, 44: 1.46, 45: 1.42, 46: 1.39, 47: 1.45, 48: 1.44, 49: 1.42, 50: 1.39, 51: 1.39, 52: 1.38, 53: 1.39, 54: 1.4, 55: 2.44, 56: 2.15, 57: 2.07, 58: 2.04, 59: 2.03, 60: 2.01, 61: 1.99, 62: 1.98, 63: 1.98, 64: 1.96, 65: 1.94, 66: 1.92, 67: 1.92, 68: 1.89, 69: 1.9, 70: 1.87, 71: 1.87, 72: 1.75, 73: 1.7, 74: 1.62, 75: 1.51, 76: 1.44, 77: 1.41, 78: 1.36, 79: 1.36, 80: 1.32, 81: 1.45, 82: 1.46, 83: 1.48, 84: 1.4, 85: 1.5, 86: 1.5, 87: 2.6, 88: 2.21, 89: 2.15, 90: 2.06, 91: 2.0, 92: 1.96, 93: 1.9, 94: 1.87, 95: 1.8, 96: 1.69, 97: 1.6, 98: 1.6, 99: 1.6, 100: 1.6, 101: 1.6, 102: 1.6, 103: 1.6, 104: 1.6, 105: 1.6, 106: 1.6, 107: 1.6, 108: 1.6, 109: 1.6, 110: 1.6, 111: 1.6, 112: 1.6, 113: 1.6, 114: 1.6, 115: 1.6, 116: 1.6, 117: 1.6, 118: 1.6\n}\nexport const DefaultCovalentRadius = 1.6\n\nexport const Valences: { [e: number]: number[] | undefined } = {\n  1: [ 1 ],\n  2: [ 0 ],\n  3: [ 1 ],\n  4: [ 2 ],\n  5: [ 3 ],\n  6: [ 4 ],\n  7: [ 3 ],\n  8: [ 2 ],\n  9: [ 1 ],\n  10: [ 0 ],\n  11: [ 1 ],\n  12: [ 2 ],\n  13: [ 6 ],\n  14: [ 6 ],\n  15: [ 3, 5, 7 ],\n  16: [ 2, 4, 6 ],\n  17: [ 1 ],\n  18: [ 0 ],\n  19: [ 1 ],\n  20: [ 2 ],\n\n  31: [ 3 ],\n  32: [ 4 ],\n  33: [ 3, 5 ],\n  34: [ 2, 4, 6 ],\n  35: [ 1 ],\n  36: [ 0 ],\n  37: [ 1 ],\n  38: [ 2 ],\n\n  49: [ 3 ],\n  50: [ 4 ],\n  51: [ 3, 5 ],\n  52: [ 2 ],\n  53: [ 1, 2, 5 ],\n  54: [ 0, 2 ],\n  55: [ 1 ],\n  56: [ 2 ],\n\n  81: [ 3 ],\n  82: [ 4 ],\n  83: [ 3 ],\n  84: [ 2 ],\n  85: [ 1 ],\n  86: [ 0 ],\n  87: [ 1 ],\n  88: [ 2 ]\n}\nexport const DefaultValence = -1\n\nexport const OuterShellElectronCounts: { [e: number]: number | undefined } = {\n1: 1, 2: 2, 3: 1, 4: 2, 5: 3, 6: 4, 7: 5, 8: 6, 9: 7, 10: 8, 11: 1, 12: 2, 13: 3, 14: 4, 15: 5, 16: 6, 17: 7, 18: 8, 19: 1, 20: 2, 21: 3, 22: 4, 23: 5, 24: 6, 25: 7, 26: 8, 27: 9, 28: 10, 29: 11, 30: 2, 31: 3, 32: 4, 33: 5, 34: 6, 35: 7, 36: 8, 37: 1, 38: 2, 39: 3, 40: 4, 41: 5, 42: 6, 43: 7, 44: 8, 45: 9, 46: 10, 47: 11, 48: 2, 49: 3, 50: 4, 51: 5, 52: 6, 53: 7, 54: 8, 55: 1, 56: 2, 57: 3, 58: 4, 59: 3, 60: 4, 61: 5, 62: 6, 63: 7, 64: 8, 65: 9, 66: 10, 67: 11, 68: 12, 69: 13, 70: 14, 71: 15, 72: 4, 73: 5, 74: 6, 75: 7, 76: 8, 77: 9, 78: 10, 79: 11, 80: 2, 81: 3, 82: 4, 83: 5, 84: 6, 85: 7, 86: 8, 87: 1, 88: 2, 89: 3, 90: 4, 91: 3, 92: 4, 93: 5, 94: 6, 95: 7, 96: 8, 97: 9, 98: 10, 99: 11, 100: 12, 101: 13, 102: 14, 103: 15, 104: 2, 105: 2, 106: 2, 107: 2, 108: 2, 109: 2, 110: 2, 111: 2, 112: 2, 113: 3, 114: 4, 115: 5, 116: 6, 117: 7, 118: 8\n}\nexport const DefaultOuterShellElectronCount = 2\n\n// http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\n// https://www.nature.com/articles/nsb1096-842\nexport const ResidueHydrophobicity: { [k: string]: [number, number, number] } = {\n  // AA  DGwif   DGwoct  Oct-IF\n  'ALA': [ 0.17, 0.50, 0.33 ],\n  'ARG': [ 0.81, 1.81, 1.00 ],\n  'ASN': [ 0.42, 0.85, 0.43 ],\n  'ASP': [ 1.23, 3.64, 2.41 ],\n  'ASH': [ -0.07, 0.43, 0.50 ],\n  'CYS': [ -0.24, -0.02, 0.22 ],\n  'GLN': [ 0.58, 0.77, 0.19 ],\n  'GLU': [ 2.02, 3.63, 1.61 ],\n  'GLH': [ -0.01, 0.11, 0.12 ],\n  'GLY': [ 0.01, 1.15, 1.14 ],\n  // \"His+\": [  0.96,  2.33,  1.37 ],\n  'HIS': [ 0.17, 0.11, -0.06 ],\n  'ILE': [ -0.31, -1.12, -0.81 ],\n  'LEU': [ -0.56, -1.25, -0.69 ],\n  'LYS': [ 0.99, 2.80, 1.81 ],\n  'MET': [ -0.23, -0.67, -0.44 ],\n  'PHE': [ -1.13, -1.71, -0.58 ],\n  'PRO': [ 0.45, 0.14, -0.31 ],\n  'SER': [ 0.13, 0.46, 0.33 ],\n  'THR': [ 0.14, 0.25, 0.11 ],\n  'TRP': [ -1.85, -2.09, -0.24 ],\n  'TYR': [ -0.94, -0.71, 0.23 ],\n  'VAL': [ 0.07, -0.46, -0.53 ]\n}\nexport const DefaultResidueHydrophobicity = [ 0.00, 0.00, 0.00 ]\n\nexport const AA1: { [k: string]: string } = {\n  'HIS': 'H',\n  'ARG': 'R',\n  'LYS': 'K',\n  'ILE': 'I',\n  'PHE': 'F',\n  'LEU': 'L',\n  'TRP': 'W',\n  'ALA': 'A',\n  'MET': 'M',\n  'PRO': 'P',\n  'CYS': 'C',\n  'ASN': 'N',\n  'VAL': 'V',\n  'GLY': 'G',\n  'SER': 'S',\n  'GLN': 'Q',\n  'TYR': 'Y',\n  'ASP': 'D',\n  'GLU': 'E',\n  'THR': 'T',\n\n  'SEC': 'U',  // as per IUPAC definition\n  'PYL': 'O',  // as per IUPAC definition\n}\n\nexport const AA3 = Object.keys(AA1)\n\nexport const RnaBases = [ 'A', 'C', 'T', 'G', 'U', 'I' ]\n\nexport const DnaBases = [ 'DA', 'DC', 'DT', 'DG', 'DU', 'DI' ]\n\nexport const PurinBases = [ 'A', 'G', 'I', 'DA', 'DG', 'DI' ]\n\nexport const Bases = RnaBases.concat(DnaBases)\n\nexport const WaterNames = [\n  'SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP3', 'TIP4', 'SPC'\n]\n\n// all chemical components with the word \"ion\" in their name, Sep 2016\n//\n// SET SESSION group_concat_max_len = 1000000;\n// SELECT GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\n// (\n//     SELECT count(obj_id) as c, id_\n//     FROM pdb.chem_comp WHERE name LIKE \"% ION%\"\n//     GROUP BY id_\n// ) AS t1;\nexport const IonNames = [\n  '118', '119', '1AL', '1CU', '2FK', '2HP', '2OF', '3CO',\n  '3MT', '3NI', '3OF', '3P8', '4MO', '4PU', '543', '6MO', 'ACT', 'AG', 'AL',\n  'ALF', 'AM', 'ATH', 'AU', 'AU3', 'AUC', 'AZI', 'BA', 'BCT', 'BEF', 'BF4', 'BO4',\n  'BR', 'BS3', 'BSY', 'CA', 'CAC', 'CD', 'CD1', 'CD3', 'CD5', 'CE', 'CHT', 'CL',\n  'CO', 'CO3', 'CO5', 'CON', 'CR', 'CS', 'CSB', 'CU', 'CU1', 'CU3', 'CUA', 'CUZ',\n  'CYN', 'DME', 'DMI', 'DSC', 'DTI', 'DY', 'E4N', 'EDR', 'EMC', 'ER3', 'EU',\n  'EU3', 'F', 'FE', 'FE2', 'FPO', 'GA', 'GD3', 'GEP', 'HAI', 'HG', 'HGC', 'IN',\n  'IOD', 'IR', 'IR3', 'IRI', 'IUM', 'K', 'KO4', 'LA', 'LCO', 'LCP', 'LI', 'LU',\n  'MAC', 'MG', 'MH2', 'MH3', 'MLI', 'MLT', 'MMC', 'MN', 'MN3', 'MN5', 'MN6',\n  'MO1', 'MO2', 'MO3', 'MO4', 'MO5', 'MO6', 'MOO', 'MOS', 'MOW', 'MW1', 'MW2',\n  'MW3', 'NA', 'NA2', 'NA5', 'NA6', 'NAO', 'NAW', 'NCO', 'NET', 'NH4', 'NI',\n  'NI1', 'NI2', 'NI3', 'NO2', 'NO3', 'NRU', 'O4M', 'OAA', 'OC1', 'OC2', 'OC3',\n  'OC4', 'OC5', 'OC6', 'OC7', 'OC8', 'OCL', 'OCM', 'OCN', 'OCO', 'OF1', 'OF2',\n  'OF3', 'OH', 'OS', 'OS4', 'OXL', 'PB', 'PBM', 'PD', 'PDV', 'PER', 'PI', 'PO3',\n  'PO4', 'PR', 'PT', 'PT4', 'PTN', 'RB', 'RH3', 'RHD', 'RU', 'SB', 'SCN', 'SE4',\n  'SEK', 'SM', 'SMO', 'SO3', 'SO4', 'SR', 'T1A', 'TB', 'TBA', 'TCN', 'TEA', 'TH',\n  'THE', 'TL', 'TMA', 'TRA', 'UNX', 'V', 'VN3', 'VO4', 'W', 'WO5', 'Y1', 'YB',\n  'YB2', 'YH', 'YT3', 'ZCM', 'ZN', 'ZN2', 'ZN3', 'ZNO', 'ZO3',\n    // additional ion names\n  'OHX'\n]\n\n// all chemical components with the word \"%saccharide%\" in their type, Sep 2016\n//\n// SET SESSION group_concat_max_len = 1000000;\n// select GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\n// (\n//     SELECT count(obj_id), id_\n//     FROM pdb.chem_comp WHERE type like \"%SACCHARIDE%\"\n//     GROUP BY id_\n// ) AS t1;\nexport const SaccharideNames = [\n  '045', '0AT', '0BD', '0MK', '0NZ', '0TS', '0V4', '0XY', '0YT', '10M',\n  '147', '149', '14T', '15L', '16G', '18T', '18Y', '1AR', '1BW', '1GL', '1GN',\n  '1JB', '1LL', '1NA', '1S3', '26M', '26Q', '26R', '26V', '26W', '26Y', '27C',\n  '289', '291', '293', '2DG', '2F8', '2FG', '2FL', '2FP', '2GL', '2M4', '2M5',\n  '32O', '34V', '3CM', '3DO', '3DY', '3FM', '3LR', '3MF', '3MG', '3SA', '3ZW',\n  '46D', '46M', '46Z', '48Z', '4CQ', '4GC', '4NN', '50A', '5DI', '5GF', '5MM',\n  '5RP', '5SA', '5SP', '64K', '6PG', '6SA', '7JZ', '7SA', 'A1Q', 'A2G', 'AAB',\n  'AAL', 'AAO', 'ABC', 'ABD', 'ABE', 'ABF', 'ABL', 'ACG', 'ACI', 'ACR', 'ACX',\n  'ADA', 'ADG', 'ADR', 'AF1', 'AFD', 'AFL', 'AFO', 'AFP', 'AFR', 'AGC', 'AGH',\n  'AGL', 'AHR', 'AIG', 'ALL', 'ALX', 'AMU', 'AOG', 'AOS', 'ARA', 'ARB', 'ARE',\n  'ARI', 'ASG', 'ASO', 'AXP', 'AXR', 'B0D', 'B16', 'B2G', 'B4G', 'B6D', 'B8D',\n  'B9D', 'BBK', 'BCD', 'BDG', 'BDP', 'BDR', 'BEM', 'BFP', 'BGC', 'BGL', 'BGP',\n  'BGS', 'BHG', 'BMA', 'BMX', 'BNG', 'BNX', 'BOG', 'BRI', 'BXF', 'BXP', 'BXX',\n  'BXY', 'C3X', 'C4X', 'C5X', 'CAP', 'CBI', 'CBK', 'CBS', 'CDR', 'CEG', 'CGF',\n  'CHO', 'CR1', 'CR6', 'CRA', 'CT3', 'CTO', 'CTR', 'CTT', 'D6G', 'DAF', 'DAG',\n  'DDA', 'DDB', 'DDL', 'DEL', 'DFR', 'DFX', 'DG0', 'DGC', 'DGD', 'DGM', 'DGS',\n  'DIG', 'DLF', 'DLG', 'DMU', 'DNO', 'DOM', 'DP5', 'DQQ', 'DQR', 'DR2', 'DR3',\n  'DR4', 'DRI', 'DSR', 'DT6', 'DVC', 'E4P', 'E5G', 'EAG', 'EBG', 'EBQ', 'EGA',\n  'EJT', 'EPG', 'ERE', 'ERI', 'F1P', 'F1X', 'F6P', 'FBP', 'FCA', 'FCB', 'FCT',\n  'FDP', 'FDQ', 'FFC', 'FIX', 'FMO', 'FRU', 'FSI', 'FU4', 'FUB', 'FUC', 'FUD',\n  'FUL', 'FXP', 'G16', 'G1P', 'G2F', 'G3I', 'G4D', 'G4S', 'G6D', 'G6P', 'G6S',\n  'GAC', 'GAD', 'GAL', 'GC1', 'GC4', 'GCD', 'GCN', 'GCO', 'GCS', 'GCT', 'GCU',\n  'GCV', 'GCW', 'GCX', 'GE1', 'GFG', 'GFP', 'GIV', 'GL0', 'GL2', 'GL5', 'GL6',\n  'GL7', 'GL9', 'GLA', 'GLB', 'GLC', 'GLD', 'GLF', 'GLG', 'GLO', 'GLP', 'GLS',\n  'GLT', 'GLW', 'GMH', 'GN1', 'GNX', 'GP1', 'GP4', 'GPH', 'GPM', 'GQ1', 'GQ2',\n  'GQ4', 'GS1', 'GS4', 'GSA', 'GSD', 'GTE', 'GTH', 'GTK', 'GTR', 'GTZ', 'GU0',\n  'GU1', 'GU2', 'GU3', 'GU4', 'GU5', 'GU6', 'GU8', 'GU9', 'GUF', 'GUP', 'GUZ',\n  'GYP', 'GYV', 'H2P', 'HDL', 'HMS', 'HS2', 'HSD', 'HSG', 'HSH', 'HSJ', 'HSQ',\n  'HSR', 'HSU', 'HSX', 'HSY', 'HSZ', 'IAB', 'IDG', 'IDR', 'IDS', 'IDT', 'IDU',\n  'IDX', 'IDY', 'IMK', 'IN1', 'IPT', 'ISL', 'KBG', 'KD2', 'KDA', 'KDM', 'KDO',\n  'KFN', 'KO1', 'KO2', 'KTU', 'L6S', 'LAG', 'LAI', 'LAK', 'LAO', 'LAT', 'LB2',\n  'LBT', 'LCN', 'LDY', 'LGC', 'LGU', 'LM2', 'LMT', 'LMU', 'LOG', 'LOX', 'LPK',\n  'LSM', 'LTM', 'LVZ', 'LXB', 'LXZ', 'M1F', 'M3M', 'M6P', 'M8C', 'MA1', 'MA2',\n  'MA3', 'MAB', 'MAG', 'MAL', 'MAN', 'MAT', 'MAV', 'MAW', 'MBG', 'MCU', 'MDA',\n  'MDM', 'MDP', 'MFA', 'MFB', 'MFU', 'MG5', 'MGA', 'MGL', 'MLB', 'MMA', 'MMN',\n  'MN0', 'MRP', 'MTT', 'MUG', 'MVP', 'MXY', 'N1L', 'N9S', 'NAA', 'NAG', 'NBG',\n  'NDG', 'NED', 'NG1', 'NG6', 'NGA', 'NGB', 'NGC', 'NGE', 'NGF', 'NGL', 'NGS',\n  'NGY', 'NHF', 'NM6', 'NM9', 'NTF', 'NTO', 'NTP', 'NXD', 'NYT', 'OPG', 'OPM',\n  'ORP', 'OX2', 'P3M', 'P53', 'P6P', 'PA5', 'PNA', 'PNG', 'PNW', 'PRP', 'PSJ',\n  'PSV', 'PTQ', 'QDK', 'QPS', 'QV4', 'R1P', 'R1X', 'R2B', 'R5P', 'RAA', 'RAE',\n  'RAF', 'RAM', 'RAO', 'RAT', 'RB5', 'RBL', 'RCD', 'RDP', 'REL', 'RER', 'RF5',\n  'RG1', 'RGG', 'RHA', 'RIB', 'RIP', 'RNS', 'RNT', 'ROB', 'ROR', 'RPA', 'RST',\n  'RUB', 'RUU', 'RZM', 'S6P', 'S7P', 'SA0', 'SCR', 'SDD', 'SF6', 'SF9', 'SG4',\n  'SG5', 'SG6', 'SG7', 'SGA', 'SGC', 'SGD', 'SGN', 'SGS', 'SHB', 'SHG', 'SI3',\n  'SIO', 'SOE', 'SOL', 'SSG', 'SUC', 'SUP', 'SUS', 'T6P', 'T6T', 'TAG', 'TCB',\n  'TDG', 'TGK', 'TGY', 'TH1', 'TIA', 'TM5', 'TM6', 'TM9', 'TMR', 'TMX', 'TOA',\n  'TOC', 'TRE', 'TYV', 'UCD', 'UDC', 'VG1', 'X0X', 'X1X', 'X2F', 'X4S', 'X5S',\n  'X6X', 'XBP', 'XDN', 'XDP', 'XIF', 'XIM', 'XLF', 'XLS', 'XMM', 'XUL', 'XXR',\n  'XYP', 'XYS', 'YO5', 'Z3Q', 'Z6J', 'Z9M', 'ZDC', 'ZDM'\n]\n\nexport const ProteinBackboneAtoms = [\n  'CA', 'C', 'N', 'O',\n  'O1', 'O2', 'OC1', 'OC2', 'OX1', 'OXT', 'OT1', 'OT2',\n  'H', 'H1', 'H2', 'H3', 'HA', 'HN',\n  'BB'\n]\n\nexport const NucleicBackboneAtoms = [\n  'P', 'OP1', 'OP2', 'HOP2', 'HOP3',\n  \"O2'\", \"O3'\", \"O4'\", \"O5'\", \"C1'\", \"C2'\", \"C3'\", \"C4'\", \"C5'\",\n  \"H1'\", \"H2'\", \"H2''\", \"HO2'\", \"H3'\", \"H4'\", \"H5'\", \"H5''\", \"HO3'\", \"HO5'\",\n  'O2*', 'O3*', 'O4*', 'O5*', 'C1*', 'C2*', 'C3*', 'C4*', 'C5*'\n]\n\nexport const ResidueTypeAtoms: { [k: number]: { [k: string]: string|string[] } } = {}\n\nResidueTypeAtoms[ ProteinBackboneType ] = {\n  trace: 'CA',\n  direction1: 'C',\n  direction2: [ 'O', 'OC1', 'O1', 'OX1', 'OXT', 'OT1', 'OT2' ],\n  backboneStart: 'N',\n  backboneEnd: 'C'\n}\n\nResidueTypeAtoms[ RnaBackboneType ] = {\n  trace: [ \"C4'\", 'C4*' ],\n  direction1: [ \"C1'\", 'C1*' ],\n  direction2: [ \"C3'\", 'C3*' ],\n  backboneStart: 'P',\n  backboneEnd: [ \"O3'\", 'O3*' ]\n}\n\nResidueTypeAtoms[ DnaBackboneType ] = {\n  trace: [ \"C3'\", 'C3*' ],\n  direction1: [ \"C2'\", 'C2*' ],\n  direction2: [ \"O4'\", 'O4*' ],\n  backboneStart: 'P',\n  backboneEnd: [ \"O3'\", 'O3*' ]\n}\n\nResidueTypeAtoms[ CgProteinBackboneType ] = {\n  trace: [ 'CA', 'BB' ],\n  backboneStart: [ 'CA', 'BB' ],\n  backboneEnd: [ 'CA', 'BB' ]\n}\n\nResidueTypeAtoms[ CgRnaBackboneType ] = {\n  trace: [ \"C4'\", 'C4*', 'P' ],\n  backboneStart: [ \"C4'\", 'C4*', 'P' ],\n  backboneEnd: [ \"C4'\", 'C4*', 'P' ]\n}\n\nResidueTypeAtoms[ CgDnaBackboneType ] = {\n  trace: [ \"C3'\", 'C3*', \"C2'\", 'P' ],  // C2' is used in martini ff\n  backboneStart: [ \"C3'\", 'C3*', \"C2'\", 'P' ],\n  backboneEnd: [ \"C3'\", 'C3*', \"C2'\", 'P' ]\n}\n\nResidueTypeAtoms[ UnknownBackboneType ] = {}\n","/**\n * @file Geometry\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { Vector3 } from 'three'\n\nimport { Elements } from '../structure/structure-constants'\nimport { degToRad } from '../math/math-utils'\nimport AtomProxy from '../proxy/atom-proxy'\n\n// Changed numbering so they're mostly inline with coordination number\n// from VSEPR\nexport const enum AtomGeometry {\n  Spherical = 0,\n  Terminal = 1,\n  Linear = 2,\n  Trigonal = 3,\n  Tetrahedral = 4,\n  TrigonalBiPyramidal = 5,\n  Octahedral = 6,\n  SquarePlanar = 7, // Okay, it breaks down somewhere!\n  Unknown = 8\n}\n\nexport function assignGeometry (totalCoordination: number): AtomGeometry {\n  switch(totalCoordination){\n    case 0:\n      return AtomGeometry.Spherical\n    case 1:\n      return AtomGeometry.Terminal\n    case 2:\n      return AtomGeometry.Linear\n    case 3:\n      return AtomGeometry.Trigonal\n    case 4:\n      return AtomGeometry.Tetrahedral\n    default:\n      return AtomGeometry.Unknown\n  }\n}\n\nexport const Angles = new Map<AtomGeometry, number>([\n  [ AtomGeometry.Linear, degToRad(180) ],\n  [ AtomGeometry.Trigonal, degToRad(120) ],\n  [ AtomGeometry.Tetrahedral, degToRad(109.4721) ],\n  [ AtomGeometry.Octahedral, degToRad(90) ]\n])\n\n/**\n * Calculate the angles x-1-2 for all x where x is a heavy atom bonded to ap1.\n * @param  {AtomProxy} ap1 First atom (angle centre)\n * @param  {AtomProxy} ap2 Second atom\n * @return {number[]}        Angles in radians\n */\nexport function calcAngles (ap1: AtomProxy, ap2: AtomProxy): number[] {\n  let angles: number[] = []\n  const d1 = new Vector3()\n  const d2 = new Vector3()\n  d1.subVectors(ap2 as any, ap1 as any)\n  ap1.eachBondedAtom( x => {\n    if (x.number !== Elements.H) {\n      d2.subVectors(x as any, ap1 as any)\n      angles.push(d1.angleTo(d2))\n    }\n   })\n  return angles\n}\n\n/**\n * Find two neighbours of ap1 to define a plane (if possible) and\n * measure angle out of plane to ap2\n * @param  {AtomProxy} ap1 First atom (angle centre)\n * @param  {AtomProxy} ap2 Second atom (out-of-plane)\n * @return {number}        Angle from plane to second atom\n */\nexport function calcPlaneAngle (ap1: AtomProxy, ap2: AtomProxy): number | undefined {\n  const x1 = ap1.clone()\n\n  const v12 = new Vector3()\n  v12.subVectors(ap2 as any, ap1 as any)\n\n  const neighbours = [new Vector3(), new Vector3()]\n  let ni = 0\n  ap1.eachBondedAtom( x => {\n    if (ni > 1) { return }\n    if (x.number !== Elements.H) {\n      x1.index = x.index\n      neighbours[ni++].subVectors(x as any, ap1 as any)\n    }\n  })\n  if (ni === 1) {\n    x1.eachBondedAtom( x => {\n      if (ni > 1) { return }\n      if (x.number !== Elements.H && x.index !== ap1.index){\n        neighbours[ni++].subVectors(x as any, ap1 as any)\n      }\n    })\n  }\n  if (ni !== 2) {\n    return\n  }\n\n  const cp = neighbours[0].cross(neighbours[1])\n  return Math.abs((Math.PI / 2) - cp.angleTo(v12))\n}\n","/**\n * @file Valence Model\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n/**\n * Reworked ValenceModel\n *\n * TODO:\n *   Ensure proper treatment of disorder/models. e.g. V257 N in 5vim\n *   Formal charge of 255 for SO4 anion (e.g. 5ghl)\n *   Have removed a lot of explicit features (as I think they're more\n *   generally captured by better VM).\n *     Could we instead have a \"delocalised negative/positive\" charge\n *     feature and flag these up?\n *\n */\nimport { Data } from '../structure/data'\nimport AtomProxy from '../proxy/atom-proxy'\nimport { AtomGeometry, assignGeometry } from './geometry'\nimport { Elements } from '../structure/structure-constants'\n\n/**\n * Are we involved in some kind of pi system. Either explicitly forming\n * double bond or N, O next to a double bond, except:\n *\n *   N,O with degree 4 cannot be conjugated.\n *   N,O adjacent to P=O or S=O do not qualify (keeps sulfonamide N sp3 geom)\n */\nfunction isConjugated (a: AtomProxy) {\n  const _bp = a.structure.getBondProxy()\n  const atomicNumber = a.number\n  const hetero = atomicNumber === Elements.O || atomicNumber === Elements.N\n\n  if (hetero && a.bondCount === 4) {\n    return false\n  }\n\n  let flag = false\n\n  a.eachBond(b => {\n    if (b.bondOrder > 1) {\n      flag = true\n      return\n    }\n    if (hetero) {\n      const a2 = b.getOtherAtom(a)\n\n      a2.eachBond(b2 => {\n        if (b2.bondOrder > 1) {\n          const atomicNumber2 = a2.number\n          if (\n            (atomicNumber2 === Elements.P || atomicNumber2 === Elements.S) &&\n            b2.getOtherAtom(a2).number === Elements.O\n          ) {\n            return\n          }\n          flag = true\n        }\n      }, _bp) // Avoid reuse of structure._bp\n    }\n  })\n\n  return flag\n}\n\n/* function hasExplicitCharge(r: ResidueProxy) {\n  let flag = false\n  r.eachAtom(a => {\n    if (a.formalCharge != null && a.formalCharge !== 0) flag = true\n  })\n  return flag\n}\n\nfunction hasExplicitHydrogen(r: ResidueProxy) {\n  let flag = false\n  r.eachAtom(a => {\n    if (a.number === Elements.H) flag = true\n  })\n  return flag\n} */\n\nexport function explicitValence (a: AtomProxy) {\n  let v = 0\n  a.eachBond(b => v += b.bondOrder)\n  return v\n}\n\n/**\n * Attempts to produce a consistent charge and implicit\n * H-count for an atom.\n *\n * If both params.assignCharge and params.assignH, this\n * approximately followsthe rules described in\n * https://docs.eyesopen.com/toolkits/python/oechemtk/valence.html#openeye-hydrogen-count-model\n *\n * If only charge or hydrogens are to be assigned it takes\n * a much simpler view and deduces one from the other\n *\n * @param {AtomProxy}           a      Atom to analyze\n * @param {assignChargeHParams} params What to assign\n */\nexport function calculateHydrogensCharge (a: AtomProxy, params: ValenceModelParams) {\n  const hydrogenCount = a.bondToElementCount(Elements.H)\n  let charge = a.formalCharge || 0\n\n  const assignCharge = (params.assignCharge === 'always' ||\n    (params.assignCharge === 'auto' && charge === 0))\n  const assignH = (params.assignH === 'always' ||\n    (params.assignH === 'auto' && hydrogenCount === 0))\n\n  const degree = a.bondCount\n  const valence = explicitValence(a)\n\n  const conjugated = isConjugated(a)\n  const multiBond = (valence - degree > 0)\n\n\n  let implicitHCount = 0\n  let geom = AtomGeometry.Unknown\n\n  switch (a.number) {\n    case Elements.H:\n      if (assignCharge){\n        if (degree === 0){\n          charge = 1\n          geom = AtomGeometry.Spherical\n        } else if (degree === 1) {\n          charge = 0\n          geom = AtomGeometry.Terminal\n        }\n      }\n      break\n\n    case Elements.C:\n      // TODO: Isocyanide?\n      if (assignCharge) {\n        charge = 0 // Assume carbon always neutral\n      }\n      if (assignH) {\n        // Carbocation/carbanion are 3-valent\n        implicitHCount = Math.max(0, 4 - valence - Math.abs(charge))\n      }\n      // Carbocation is planar, carbanion is tetrahedral\n      geom = assignGeometry(degree + implicitHCount + Math.max(0, -charge))\n      break\n\n    case Elements.N:\n      if (assignCharge) {\n        if (!assignH) { // Trust input H explicitly:\n          charge = valence - 3\n        } else if (conjugated && valence < 4) {\n          // Neutral unless amidine/guanidine double-bonded N:\n          if (degree - hydrogenCount === 1 && valence - hydrogenCount === 2) {\n            charge = 1\n          } else {\n            charge = 0\n          }\n        } else {\n          // Sulfonamide nitrogen and classed as sp3 in conjugation model but\n          // they won't be charged\n          // Don't assign charge to nitrogens bound to metals\n          let flag = false\n          a.eachBondedAtom(ba => {\n            if (ba.number === Elements.S || ba.isMetal()) flag = true\n          })\n          if (flag) charge = 0\n          else charge = 1\n          // TODO: Planarity sanity check?\n        }\n\n      }\n\n      if (assignH) {\n        // NH4+ -> 4, 1' amide -> 2, nitro N/N+ depiction -> 0\n        implicitHCount = Math.max(0, 3 - valence + charge)\n      }\n\n      if (conjugated && !multiBond) {\n        // Amide, anilinic N etc. cannot consider lone-pair for geometry purposes\n        // Anilinic N geometry is depenent on ring electronics, for our purposes we\n        // assume it's trigonal!\n        geom = assignGeometry(degree + implicitHCount - charge)\n      } else {\n        // Everything else, pyridine, amine, nitrile, lp plays normal role:\n        geom = assignGeometry(degree + implicitHCount + 1 - charge)\n      }\n      break\n\n    case Elements.O:\n      if (assignCharge) {\n        if (!assignH) {\n          charge = valence - 2 //\n        }\n        if (valence === 1) {\n          a.eachBondedAtom(ba => {\n            ba.eachBond(b => {\n              const oa = b.getOtherAtom(ba)\n              if (oa.index !== a.index && oa.number === Elements.O && b.bondOrder === 2){\n                charge = -1\n              }\n            })\n          })\n        }\n      }\n      if (assignH) {\n        // ethanol -> 1, carboxylate -> -1\n        implicitHCount = Math.max(0, 2 - valence + charge)\n      }\n      if (conjugated && !multiBond){\n        // carboxylate OH, phenol OH, one lone-pair taken up with conjugation\n        geom = assignGeometry(degree + implicitHCount - charge + 1)\n      } else {\n        // Carbonyl (trigonal)\n        geom = assignGeometry(degree + implicitHCount - charge + 2)\n      }\n      break\n\n    // Only handles thiols/thiolates/thioether/sulfonium. Sulfoxides and higher\n    // oxidiation states are assumed neutral S (charge carried on O if required)\n    case Elements.S:\n      if (assignCharge) {\n        if (!assignH) {\n          if (valence <= 3 && !a.bondToElementCount(Elements.O)) {\n            charge = valence - 2 // e.g. explicitly deprotonated thiol\n          } else {\n            charge = 0\n          }\n        }\n      }\n      if (assignH){\n        if (valence < 2){\n          implicitHCount = Math.max(0, 2 - valence + charge)\n        }\n      }\n      if (valence <= 3){\n        // Thiol, thiolate, tioether -> tetrahedral\n        geom = assignGeometry(degree + implicitHCount - charge + 2)\n      }\n\n      break\n\n    case Elements.F:\n    case Elements.CL:\n    case Elements.BR:\n    case Elements.I:\n    case Elements.AT:\n      // Never implicitly protonate halides\n      if (assignCharge) {\n        charge = valence - 1\n      }\n      break\n\n    case Elements.LI:\n    case Elements.NA:\n    case Elements.K:\n    case Elements.RB:\n    case Elements.CS:\n    case Elements.FR:\n      if (assignCharge) {\n        charge = 1 - valence\n      }\n      break\n\n    case Elements.BE:\n    case Elements.MG:\n    case Elements.CA:\n    case Elements.SR:\n    case Elements.BA:\n    case Elements.RA:\n      if (assignCharge) {\n        charge = 2 - valence\n      }\n      break\n\n    default:\n      console.warn('Requested charge, protonation for an unhandled element', a.element)\n  }\n\n  return [ charge, implicitHCount, implicitHCount + hydrogenCount, geom ]\n}\n\n\nexport interface ValenceModel {\n  charge: Int8Array,\n  implicitH: Int8Array,\n  totalH: Int8Array,\n  idealGeometry: Int8Array\n}\n\nexport interface ValenceModelParams {\n  assignCharge: string,\n  assignH: string\n}\n\nexport function ValenceModel (data: Data, params: ValenceModelParams) {\n  const structure = data.structure\n  const n = structure.atomCount\n\n  const charge = new Int8Array(n)\n  const implicitH = new Int8Array(n)\n  const totalH = new Int8Array(n)\n  const idealGeometry = new Int8Array(n)\n\n  structure.eachAtom(a => {\n    const i = a.index\n    const [ chg, implH, totH, geom ] = calculateHydrogensCharge(a, params)\n    charge[ i ] = chg\n    implicitH[ i ] = implH\n    totalH[ i ] = totH\n    idealGeometry[ i ] = geom\n  })\n\n  return { charge, implicitH, totalH, idealGeometry }\n}","\nimport Structure from './structure'\nimport SpatialHash from '../geometry/spatial-hash'\nimport { ValenceModel } from '../chemistry/valence-model'\n\nexport interface Data {\n  structure: Structure\n  '@spatialLookup': SpatialHash | undefined\n  '@valenceModel': ValenceModel | undefined\n}\n\nexport function createData(structure: Structure): Data {\n  return {\n    structure,\n    '@spatialLookup': undefined,\n    '@valenceModel': undefined\n  }\n}\n\nexport function spatialLookup(data: Data): SpatialHash {\n  if (data['@spatialLookup']) return data['@spatialLookup']!\n  const lookup = new SpatialHash(data.structure.atomStore, data.structure.boundingBox)\n  data['@spatialLookup'] = lookup\n  return lookup\n}\n\nexport function valenceModel(data: Data): ValenceModel {\n  if (data['@valenceModel']) return data['@valenceModel']!\n  const valenceModel = ValenceModel(data, {assignCharge: 'auto', assignH: 'auto'})\n  data['@valenceModel'] = valenceModel\n  return valenceModel\n}\n","/**\n * @file Functional Groups\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport AtomProxy from '../proxy/atom-proxy'\nimport { Elements } from '../structure/structure-constants'\n\n/**\n * Nitrogen in a quaternary amine\n */\nexport function isQuaternaryAmine (a: AtomProxy) {\n  return (\n    a.number === 7 &&\n    a.bondCount === 4 &&\n    a.bondToElementCount(Elements.H) === 0\n  )\n}\n\n/**\n * Nitrogen in a tertiary amine\n */\nexport function isTertiaryAmine (a: AtomProxy, idealValence: number) {\n  return (\n    a.number === 7 &&\n    a.bondCount >= 3 &&\n    idealValence === 3\n  )\n}\n\n/**\n * Nitrogen in an imide\n */\nexport function isImide (a: AtomProxy) {\n  let flag = false\n  if (a.number === Elements.N && (a.bondCount - a.bondToElementCount(Elements.H)) === 2) {\n    let carbonylCount = 0\n    a.eachBondedAtom(ba => {\n      if (isCarbonyl(ba)) ++carbonylCount\n    })\n    flag = carbonylCount === 2\n  }\n  return flag\n}\n\n/**\n * Nitrogen in an amide\n */\nexport function isAmide (a: AtomProxy) {\n  let flag = false\n  if (a.number === Elements.N && (a.bondCount - a.bondToElementCount(Elements.H)) === 2) {\n    let carbonylCount = 0\n    a.eachBondedAtom(ba => {\n      if (isCarbonyl(ba)) ++carbonylCount\n    })\n    flag = carbonylCount === 1\n  }\n  return flag\n}\n\n/**\n * Sulfur in a sulfonium group\n */\nexport function isSulfonium (a: AtomProxy) {\n  return (\n    a.number === 16 &&\n    a.bondCount === 3 &&\n    a.bondToElementCount(Elements.H) === 0\n  )\n}\n\n/**\n * Sulfur in a sulfonic acid or sulfonate group\n */\nexport function isSulfonicAcid (a: AtomProxy) {\n  return (\n    a.number === 16 &&\n    a.bondToElementCount(Elements.O) === 3\n  )\n}\n\n/**\n * Sulfur in a sulfate group\n */\nexport function isSulfate (a: AtomProxy) {\n  return (\n    a.number === 16 &&\n    a.bondToElementCount(Elements.O) === 4\n  )\n}\n\n/**\n * Phosphor in a phosphate group\n */\nexport function isPhosphate (a: AtomProxy) {\n  return (\n    a.number === 15 &&\n    a.bondToElementCount(Elements.O) === a.bondCount\n  )\n}\n\n/**\n * Halogen with one bond to a carbon\n */\nexport function isHalocarbon (a: AtomProxy) {\n  return (\n    a.isHalogen() &&\n    a.bondCount === 1 &&\n    a.bondToElementCount(Elements.C) === 1\n  )\n}\n\n/**\n * Carbon in a carbonyl/acyl group\n */\nexport function isCarbonyl (a: AtomProxy) {\n  let flag = false\n  if (a.number === Elements.C) {\n    a.eachBond(b => {\n      if (b.bondOrder === 2 && b.getOtherAtom(a).number === Elements.O) {\n        flag = true\n      }\n    })\n  }\n  return flag\n}\n\n/**\n * Carbon in a carboxylate group\n */\nexport function isCarboxylate (a: AtomProxy) {\n  let terminalOxygenCount = 0\n  if (\n    a.number === 6 &&\n    a.bondToElementCount(Elements.O) === 2 &&\n    a.bondToElementCount(Elements.C) === 1\n  ) {\n    a.eachBondedAtom(ba => {\n      if (ba.number === 8 && ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\n        ++terminalOxygenCount\n      }\n    })\n  }\n  return terminalOxygenCount === 2\n}\n\n/**\n * Carbon in a guanidine group\n */\nexport function isGuanidine (a: AtomProxy) {\n  let terminalNitrogenCount = 0\n  if (\n    a.number === 6 &&\n    a.bondCount === 3 &&\n    a.bondToElementCount(Elements.N) === 3\n  ) {\n    a.eachBondedAtom(ba => {\n      if (ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\n        ++terminalNitrogenCount\n      }\n    })\n  }\n  return terminalNitrogenCount === 2\n}\n\n/**\n * Carbon in a acetamidine group\n */\nexport function isAcetamidine (a: AtomProxy) {\n  let terminalNitrogenCount = 0\n  if (\n    a.number === 6 &&\n    a.bondCount === 3 &&\n    a.bondToElementCount(Elements.N) === 2 &&\n    a.bondToElementCount(Elements.C) === 1\n  ) {\n    a.eachBondedAtom(ba => {\n      if (ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\n        ++terminalNitrogenCount\n      }\n    })\n  }\n  return terminalNitrogenCount === 2\n}\n\nconst PolarElements = [\n  Elements.N, Elements.O, Elements.S,\n  Elements.F, Elements.CL, Elements.BR, Elements.I\n]\n\nexport function isPolar (a: AtomProxy) {\n  return PolarElements.includes(a.number)\n}\n\nexport function hasPolarNeighbour (a: AtomProxy) {\n  let flag = false\n  a.eachBondedAtom(ba => {\n    if (isPolar(ba)) flag = true\n  })\n  return flag\n}\n\nexport function hasAromaticNeighbour (a: AtomProxy) {\n  let flag = false\n  a.eachBondedAtom(function (bap) {\n    if (bap.aromatic) flag = true\n  })\n  return flag\n}\n","/**\n * @file Charged\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n */\n\nimport { Vector3 } from 'three'\n\nimport { defaults } from '../../utils'\nimport { radToDeg } from '../../math/math-utils'\nimport Structure from '../../structure/structure'\nimport { AA3, Bases, Elements } from '../../structure/structure-constants'\nimport { valenceModel } from '../../structure/data'\nimport {\n  isGuanidine, isAcetamidine, isSulfonicAcid, isPhosphate, isSulfate, isCarboxylate\n} from '../functional-groups'\nimport {\n  Features, FeatureType, FeatureGroup,\n  addAtom, addFeature, createFeatureState,\n} from './features'\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\n\nconst PositvelyCharged = [ 'ARG', 'HIS', 'LYS' ]\nconst NegativelyCharged = [ 'GLU', 'ASP' ]\n\nexport function addPositiveCharges (structure: Structure, features: Features) {\n  const { charge } = valenceModel(structure.data)\n  const atomInGroupDict: { [atomIndex: number]: true } = {}\n\n  structure.eachResidue(r => {\n    if (PositvelyCharged.includes(r.resname)) {\n      const state = createFeatureState(FeatureType.PositiveCharge)\n      r.eachAtom(a => {\n        if (a.number === Elements.N && a.isSidechain()) {\n          addAtom(state, a)\n        }\n      })\n      addFeature(features, state)\n    } else if(!AA3.includes(r.resname) && !r.isNucleic()) {\n      r.eachAtom(a => {\n        let addGroup = false\n        const state = createFeatureState(FeatureType.PositiveCharge)\n        if (isGuanidine(a)) {\n          state.group = FeatureGroup.Guanidine\n          addGroup = true\n        } else if (isAcetamidine(a)) {\n          state.group = FeatureGroup.Acetamidine\n          addGroup = true\n        }\n        if (addGroup) {\n          a.eachBondedAtom(a => {\n            if (a.number === Elements.N) {\n              atomInGroupDict[a.index] = true\n              addAtom(state, a)\n            }\n          })\n          addFeature(features, state)\n        }\n      })\n      r.eachAtom(a => {\n        const state = createFeatureState(FeatureType.PositiveCharge)\n        if (charge[a.index] > 0) {\n          if (!atomInGroupDict[a.index]) {\n            addAtom(state, a)\n            addFeature(features, state)\n          }\n        }\n      })\n    }\n  })\n}\n\nexport function addNegativeCharges (structure: Structure, features: Features) {\n  const { charge } = valenceModel(structure.data)\n  const atomInGroupDict: { [atomIndex: number]: true } = {}\n\n  structure.eachResidue(r => {\n    if (NegativelyCharged.includes(r.resname)) {\n      const state = createFeatureState(FeatureType.NegativeCharge)\n      r.eachAtom(a => {\n        if (a.number === Elements.O && a.isSidechain()) {\n          addAtom(state, a)\n        }\n      })\n      addFeature(features, state)\n    } else if (Bases.includes(r.resname)) {\n      const state = createFeatureState(FeatureType.NegativeCharge)\n      r.eachAtom(a => {\n        if (isPhosphate(a)) {\n          state.group = FeatureGroup.Phosphate\n          a.eachBondedAtom(a => {\n            if (a.number === Elements.O) addAtom(state, a)\n          })\n          addFeature(features, state)\n        }\n      })\n    } else if(!AA3.includes(r.resname) && !Bases.includes(r.resname)) {\n      r.eachAtom(a => {\n        let addGroup = false\n        const state = createFeatureState(FeatureType.NegativeCharge)\n        if (isSulfonicAcid(a)) {\n          state.group = FeatureGroup.SulfonicAcid\n          addGroup = true\n        } else if (isPhosphate(a)) {\n          state.group = FeatureGroup.Phosphate\n          addGroup = true\n        } else if (isSulfate(a)) {\n          state.group = FeatureGroup.Sulfate\n          addGroup = true\n        } else if (isCarboxylate(a)) {\n          state.group = FeatureGroup.Carboxylate\n          addGroup = true\n        }\n        if (addGroup) {\n          a.eachBondedAtom(a => {\n            if (a.number === Elements.O) {\n              atomInGroupDict[a.index] = true\n              addAtom(state, a)\n            }\n          })\n          addFeature(features, state)\n        }\n      })\n      r.eachAtom(a => {\n        const state = createFeatureState(FeatureType.NegativeCharge)\n        if (charge[a.index] < 0) {\n          if (!atomInGroupDict[a.index]) {\n            addAtom(state, a)\n            addFeature(features, state)\n          }\n        }\n      })\n    }\n  })\n}\n\nexport function addAromaticRings (structure: Structure, features: Features) {\n  const a = structure.getAtomProxy()\n  structure.eachResidue(r => {\n    const rings = r.getAromaticRings()\n    if (rings) {\n      const offset = r.atomOffset\n      rings.forEach(ring => {\n        const state = createFeatureState(FeatureType.AromaticRing)\n        ring.forEach(i => {\n          a.index = i + offset\n          addAtom(state, a)\n        })\n        addFeature(features, state)\n      })\n    }\n  })\n}\n\nfunction isIonicInteraction (ti: FeatureType, tj: FeatureType) {\n  return (\n    (ti === FeatureType.NegativeCharge && tj === FeatureType.PositiveCharge) ||\n    (ti === FeatureType.PositiveCharge && tj === FeatureType.NegativeCharge)\n  )\n}\n\nfunction isPiStacking (ti: FeatureType, tj: FeatureType) {\n  return ti === FeatureType.AromaticRing && tj === FeatureType.AromaticRing\n}\n\nfunction isCationPi (ti: FeatureType, tj: FeatureType) {\n  return (\n    (ti === FeatureType.AromaticRing && tj === FeatureType.PositiveCharge) ||\n    (ti === FeatureType.PositiveCharge && tj === FeatureType.AromaticRing)\n  )\n}\n\nexport interface ChargedContactsParams {\n  maxIonicDist?: number\n  maxPiStackingDist?: number\n  maxPiStackingOffset?: number\n  maxPiStackingAngle?: number\n  maxCationPiDist?: number\n  maxCationPiOffset?: number\n  masterModelIndex?: number\n}\n\nexport function addChargedContacts (structure: Structure, contacts: Contacts, params: ChargedContactsParams = {}) {\n  const maxIonicDist = defaults(params.maxIonicDist, ContactDefaultParams.maxIonicDist)\n  const maxPiStackingDist = defaults(params.maxPiStackingDist, ContactDefaultParams.maxPiStackingDist)\n  const maxPiStackingOffset = defaults(params.maxPiStackingOffset, ContactDefaultParams.maxPiStackingOffset)\n  const maxPiStackingAngle = defaults(params.maxPiStackingAngle, ContactDefaultParams.maxPiStackingAngle)\n  const maxCationPiDist = defaults(params.maxCationPiDist, ContactDefaultParams.maxCationPiDist)\n  const maxCationPiOffset = defaults(params.maxCationPiOffset, ContactDefaultParams.maxCationPiOffset)\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const maxDistance = Math.max(maxIonicDist + 2, maxPiStackingDist, maxCationPiDist)\n  // const maxSaltBridgeDistSq = maxSaltBridgeDist * maxSaltBridgeDist\n  const maxPiStackingDistSq = maxPiStackingDist * maxPiStackingDist\n  const maxCationPiDistSq = maxCationPiDist * maxCationPiDist\n\n  const { features, spatialHash, contactStore, featureSet } = contacts\n  const { types, centers, atomSets } = features\n  const { x, y, z } = centers\n  const n = types.length\n\n  const ax = structure.atomStore.x\n  const ay = structure.atomStore.y\n  const az = structure.atomStore.z\n\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  const areAtomSetsWithinDist = function (atomSet1: number[], atomSet2: number[], maxDist: number) {\n    const sn = atomSet1.length\n    const sm = atomSet2.length\n    for (let si = 0; si < sn; ++si) {\n      ap1.index = atomSet1[ si ]\n      for (let sj = 0; sj < sm; ++sj) {\n        ap2.index = atomSet2[ sj ]\n        if (ap1.distanceTo(ap2) <= maxDist) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  const v1 = new Vector3()\n  const v2 = new Vector3()\n  const v3 = new Vector3()\n  const d1 = new Vector3()\n  const d2 = new Vector3()\n  const n1 = new Vector3()\n  const n2 = new Vector3()\n\n  const getNormal = function (atoms: number[], normal: Vector3) {\n    v1.set(ax[ atoms[ 0 ] ], ay[ atoms[ 0 ] ], az[ atoms[ 0 ] ])\n    v2.set(ax[ atoms[ 1 ] ], ay[ atoms[ 1 ] ], az[ atoms[ 1 ] ])\n    v3.set(ax[ atoms[ 2 ] ], ay[ atoms[ 2 ] ], az[ atoms[ 2 ] ])\n    d1.subVectors(v1, v2)\n    d2.subVectors(v1, v3)\n    normal.crossVectors(d1, d2)\n  }\n\n  const getOffset = function (i: number, j: number, normal: Vector3) {\n    v1.set(x[ i ], y[ i ], z[ i ])\n    v2.set(x[ j ], y[ j ], z[ j ])\n    return v1.sub(v2).projectOnPlane(normal).add(v2).distanceTo(v2)\n  }\n\n  const add = function (i: number, j: number, ct: ContactType) {\n    featureSet.setBits(i, j)\n    contactStore.addContact(i, j, ct)\n  }\n\n  for (let i = 0; i < n; ++i) {\n    spatialHash.eachWithin(x[i], y[i], z[i], maxDistance, (j, dSq) => {\n      if (j <= i) return\n\n      ap1.index = atomSets[ i ][ 0 ]\n      ap2.index = atomSets[ j ][ 0 ]\n\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\n\n      const ti = types[ i ]\n      const tj = types[ j ]\n\n      if (isIonicInteraction(ti, tj)) {\n        if (areAtomSetsWithinDist(atomSets[ i ], atomSets[ j ], maxIonicDist)) {\n          add(i, j, ContactType.IonicInteraction)\n        }\n      } else if (isPiStacking(ti, tj)) {\n        if (dSq <= maxPiStackingDistSq) {\n          getNormal(atomSets[ i ], n1)\n          getNormal(atomSets[ j ], n2)\n\n          const angle = radToDeg(n1.angleTo(n2))\n          const offset = Math.min(getOffset(i, j, n2), getOffset(j, i, n1))\n          if (offset <= maxPiStackingOffset) {\n            if (angle <= maxPiStackingAngle || angle >= 180 - maxPiStackingAngle) {\n              add(i, j, ContactType.PiStacking)  // parallel\n            } else if (angle <= maxPiStackingAngle + 90 && angle >= 90 - maxPiStackingAngle) {\n              add(i, j, ContactType.PiStacking)  // t-shaped\n            }\n          }\n        }\n      } else if (isCationPi(ti, tj)) {\n        if (dSq <= maxCationPiDistSq) {\n          const [ l, k ] = ti === FeatureType.AromaticRing ? [ i, j ] : [ j, i ]\n\n          getNormal(atomSets[ l ], n1)\n          const offset = getOffset(k, l, n1)\n          if (offset <= maxCationPiOffset) {\n            add(l, k, ContactType.CationPi)\n          }\n        }\n      }\n    })\n  }\n}\n","/**\n * @file Hydrogen Bonds\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n */\nimport { defaults } from '../../utils'\nimport { degToRad } from '../../math/math-utils'\nimport Structure from '../../structure/structure'\nimport AtomProxy from '../../proxy/atom-proxy'\nimport { valenceModel } from '../../structure/data'\nimport { Elements } from '../../structure/structure-constants'\nimport { Angles, AtomGeometry, calcAngles, calcPlaneAngle } from '../geometry'\nimport {\n  Features, FeatureType,\n  addAtom, addFeature, createFeatureState,\n} from './features'\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\n\n\n// Geometric characteristics of hydrogen bonds involving sulfur atoms in proteins\n// https://doi.org/10.1002/prot.22327\n\n// Satisfying Hydrogen Bonding Potential in Proteins (HBPLUS)\n// https://doi.org/10.1006/jmbi.1994.1334\n// http://www.csb.yale.edu/userguides/datamanip/hbplus/hbplus_descrip.html\n\n/**\n * Potential hydrogen donor\n */\nexport function addHydrogenDonors (structure: Structure, features: Features) {\n  const { totalH } = valenceModel(structure.data)\n\n  structure.eachAtom(a => {\n    const state = createFeatureState(FeatureType.HydrogenDonor)\n\n    const an = a.number\n    if (isHistidineNitrogen(a)) {\n      // include both nitrogen atoms in histidine due to\n      // their often ambiguous protonation assignment\n      addAtom(state, a)\n      addFeature(features, state)\n    } else if (\n      totalH[ a.index ] > 0 &&\n      (an === Elements.N || an === Elements.O || an === Elements.S)\n    ) {\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\n/**\n * Weak hydrogen donor.\n */\nexport function addWeakHydrogenDonors (structure: Structure, features: Features) {\n  const { totalH } = valenceModel(structure.data)\n\n  structure.eachAtom(a => {\n    if (\n      a.number === Elements.C &&\n      totalH[ a.index ] > 0 &&\n      (\n        a.bondToElementCount(Elements.N) > 0 ||\n        a.bondToElementCount(Elements.O) > 0 ||\n        inAromaticRingWithElectronNegativeElement(a)\n      )\n    ) {\n      const state = createFeatureState(FeatureType.WeakHydrogenDonor)\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\nfunction inAromaticRingWithElectronNegativeElement (a: AtomProxy) {\n  if (!a.isAromatic()) return false\n\n  const ringData = a.residueType.getRings()\n  if (!ringData) return false\n\n  let hasElement = false\n  const rings = ringData.rings\n  rings.forEach(ring => {\n    if (hasElement) return  // already found one\n    if (ring.some(idx => (a.index - a.residueAtomOffset) === idx)) {  // in ring\n      hasElement = ring.some(idx => {\n        const atomTypeId = a.residueType.atomTypeIdList[ idx ]\n        const number = a.atomMap.get(atomTypeId).number\n        return number === Elements.N || number === Elements.O\n      })\n    }\n  })\n\n  return hasElement\n}\n\n/**\n * Potential hydrogen acceptor\n */\nexport function addHydrogenAcceptors (structure: Structure, features: Features) {\n  const { charge, implicitH, idealGeometry } = valenceModel(structure.data)\n\n  structure.eachAtom(a => {\n    const state = createFeatureState(FeatureType.HydrogenAcceptor)\n\n    const an = a.number\n    if (an === Elements.O) {\n      // Basically assume all oxygen atoms are acceptors!\n      addAtom(state, a)\n      addFeature(features, state)\n    }else if (an === Elements.N) {\n      if (isHistidineNitrogen(a)) {\n        // include both nitrogen atoms in histidine due to\n        // their often ambiguous protonation assignment\n        addAtom(state, a)\n        addFeature(features, state)\n      } else if (charge[ a.index ] < 1){\n        // Neutral nitrogen might be an acceptor\n        // It must have at least one lone pair not conjugated\n        const totalBonds = a.bondCount + implicitH[ a.index ]\n        const ig = idealGeometry[ a.index ]\n        if (\n          (ig === AtomGeometry.Tetrahedral && totalBonds < 4) ||\n          (ig === AtomGeometry.Trigonal && totalBonds < 3) ||\n          (ig === AtomGeometry.Linear && totalBonds < 2)\n        ) {\n          addAtom(state, a)\n          addFeature(features, state)\n        }\n      }\n    }else if (an === 16) {  // S\n      if (a.resname === 'CYS' || a.resname === 'MET' || a.formalCharge === -1) {\n        addAtom(state, a)\n        addFeature(features, state)\n      }\n    }\n  })\n}\n\n/**\n * Atom that is only bound to carbon or hydrogen\n */\n// function isHydrocarbon (atom: AtomProxy) {\n//   let flag = true\n//   atom.eachBondedAtom(ap => {\n//     const e = ap.element\n//     if (e !== 'C' && e !== 'H') flag = false\n//   })\n//   return flag\n// }\n\nfunction isHistidineNitrogen (ap: AtomProxy) {\n  return ap.resname === 'HIS' && ap.number == Elements.N && ap.isRing()\n}\n\nfunction isBackboneHydrogenBond (ap1: AtomProxy, ap2: AtomProxy) {\n  return ap1.isBackbone() && ap2.isBackbone()\n}\n\nfunction isWaterHydrogenBond (ap1: AtomProxy, ap2: AtomProxy) {\n  return ap1.isWater() && ap2.isWater()\n}\n\nfunction isHydrogenBond (ti: FeatureType, tj: FeatureType) {\n  return (\n    (ti === FeatureType.HydrogenAcceptor && tj === FeatureType.HydrogenDonor) ||\n    (ti === FeatureType.HydrogenDonor && tj === FeatureType.HydrogenAcceptor)\n  )\n}\n\nfunction isWeakHydrogenBond (ti: FeatureType, tj: FeatureType){\n  return (\n    (ti === FeatureType.WeakHydrogenDonor && tj === FeatureType.HydrogenAcceptor) ||\n    (ti === FeatureType.HydrogenAcceptor && tj === FeatureType.WeakHydrogenDonor)\n  )\n}\n\nfunction getHydrogenBondType (ap1: AtomProxy, ap2: AtomProxy) {\n  if (isWaterHydrogenBond(ap1, ap2)) {\n    return ContactType.WaterHydrogenBond\n  } else if (isBackboneHydrogenBond(ap1, ap2)) {\n    return ContactType.BackboneHydrogenBond\n  } else {\n    return ContactType.HydrogenBond\n  }\n}\n\nexport interface HydrogenBondParams {\n  maxHbondDist?: number\n  maxHbondSulfurDist?: number\n  maxHbondAccAngle?: number\n  maxHbondDonAngle?: number\n  maxHbondAccPlaneAngle?: number\n  maxHbondDonPlaneAngle?: number\n  backboneHbond?: boolean\n  waterHbond?: boolean\n  masterModelIndex?: number\n}\n\n/**\n * All pairs of hydrogen donor and acceptor atoms\n */\nexport function addHydrogenBonds (structure: Structure, contacts: Contacts, params: HydrogenBondParams = {}) {\n  const maxHbondDist = defaults(params.maxHbondDist, ContactDefaultParams.maxHbondDist)\n  const maxHbondSulfurDist = defaults(params.maxHbondSulfurDist, ContactDefaultParams.maxHbondSulfurDist)\n  const maxHbondAccAngle = degToRad(defaults(params.maxHbondAccAngle, ContactDefaultParams.maxHbondAccAngle))\n  const maxHbondDonAngle = degToRad(defaults(params.maxHbondDonAngle, ContactDefaultParams.maxHbondDonAngle))\n  const maxHbondAccPlaneAngle = degToRad(defaults(params.maxHbondAccPlaneAngle, ContactDefaultParams.maxHbondAccPlaneAngle))\n  const maxHbondDonPlaneAngle = degToRad(defaults(params.maxHbondDonPlaneAngle, ContactDefaultParams.maxHbondDonPlaneAngle))\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const maxDist = Math.max(maxHbondDist, maxHbondSulfurDist)\n  const maxHbondDistSq = maxHbondDist * maxHbondDist\n\n  const { features, spatialHash, contactStore, featureSet } = contacts\n  const { types, centers, atomSets } = features\n  const { x, y, z } = centers\n  const n = types.length\n\n  const { idealGeometry } = valenceModel(structure.data)\n\n  const donor = structure.getAtomProxy()\n  const acceptor = structure.getAtomProxy()\n\n  for (let i = 0; i < n; ++i) {\n    spatialHash.eachWithin(x[i], y[i], z[i], maxDist, (j, dSq) => {\n      if (j <= i) return\n\n      const ti = types[ i ]\n      const tj = types[ j ]\n\n      const isWeak = isWeakHydrogenBond(ti, tj)\n      if (!isWeak && !isHydrogenBond(ti, tj)) return\n\n      const [ l, k ] = tj === FeatureType.HydrogenAcceptor ? [ i, j ] : [ j, i ]\n\n      donor.index = atomSets[ l ][ 0 ]\n      acceptor.index = atomSets[ k ][ 0 ]\n\n      if (acceptor.index === donor.index) return // DA to self\n\n      if (invalidAtomContact(donor, acceptor, masterIdx)) return\n      if (donor.number !== Elements.S && acceptor.number !== Elements.S && dSq > maxHbondDistSq) return\n      if (donor.connectedTo(acceptor)) return\n\n      const donorAngles = calcAngles(donor, acceptor)\n      const idealDonorAngle = Angles.get(idealGeometry[donor.index]) || degToRad(120)\n      if (donorAngles.some(donorAngle => {\n        return Math.abs(idealDonorAngle - donorAngle) > maxHbondDonAngle\n      })) return\n\n      if (idealGeometry[donor.index] === AtomGeometry.Trigonal){\n        const outOfPlane = calcPlaneAngle(donor, acceptor)\n        if (outOfPlane !== undefined && outOfPlane > maxHbondDonPlaneAngle) return\n      }\n\n      const acceptorAngles = calcAngles(acceptor, donor)\n      const idealAcceptorAngle = Angles.get(idealGeometry[acceptor.index]) || degToRad(120)\n      if (acceptorAngles.some(acceptorAngle => {\n        // Do not limit large acceptor angles\n        return idealAcceptorAngle - acceptorAngle > maxHbondAccAngle\n      })) return\n\n      if (idealGeometry[acceptor.index] === AtomGeometry.Trigonal){\n        const outOfPlane = calcPlaneAngle(acceptor, donor)\n        if (outOfPlane !== undefined && outOfPlane > maxHbondAccPlaneAngle) return\n      }\n\n      featureSet.setBits(l, k)\n      const bondType = isWeak ? ContactType.WeakHydrogenBond : getHydrogenBondType(donor, acceptor)\n      contactStore.addContact(l, k, bondType)\n    })\n  }\n}\n","/**\n * @file Metal Binding\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { defaults } from '../../utils'\nimport Structure from '../../structure/structure'\n// import { valenceModel } from '../../structure/data'\nimport { Elements, AA3, Bases } from '../../structure/structure-constants'\n// import { hasAromaticNeighbour } from '../functional-groups'\nimport {\n  Features, FeatureType,\n  addAtom, addFeature, createFeatureState,\n} from './features'\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\n\nconst IonicTypeMetals = [\n  Elements.LI, Elements.NA, Elements.K, Elements.RB, Elements.CS,\n  Elements.MG, Elements.CA, Elements.SR, Elements.BA, Elements.AL,\n  Elements.GA, Elements.IN, Elements.TL, Elements.SC, Elements.SN,\n  Elements.PB, Elements.BI, Elements.SB, Elements.HG\n]\n\n/**\n * Metal binding partners (dative bond or ionic-type interaction)\n */\nexport function addMetalBinding (structure: Structure, features: Features) {\n  structure.eachAtom(a => {\n    let dative = false\n    let ionic = false\n\n    const isStandardAminoacid = AA3.includes(a.resname)\n    const isStandardBase = Bases.includes(a.resname)\n\n    if (!isStandardAminoacid && !isStandardBase) {\n      if (a.isHalogen() || a.number === Elements.O || a.number === Elements.S) {\n        dative = true\n        ionic = true\n      } else if (a.number === Elements.N) {\n        dative = true\n      }\n    } else if (isStandardAminoacid){\n      // main chain oxygen atom or oxygen, nitrogen and sulfur from specific amino acids\n      if (a.number === Elements.O) {\n        if(['ASP', 'GLU', 'SER', 'THR', 'TYR', 'ASN', 'GLN'].includes(a.resname) && a.isSidechain()) {\n          dative = true\n          ionic = true\n        } else if (a.isBackbone()) {\n          dative = true\n          ionic = true\n        }\n      } else if (a.number === Elements.S && 'CYS' === a.resname) {\n        dative = true\n        ionic = true\n      } else if (a.number === Elements.N) {\n        if(a.resname === 'HIS' && a.isSidechain()) {\n          dative = true\n        }\n      }\n    } else if (isStandardBase){\n      // http://pubs.acs.org/doi/pdf/10.1021/acs.accounts.6b00253\n      // http://onlinelibrary.wiley.com/doi/10.1002/anie.200900399/full\n      if (a.number === Elements.O && a.isBackbone()) {\n        dative = true\n        ionic = true\n      } else if(['N3', 'N4', 'N7'].includes(a.atomname)) {\n        dative = true\n      } else if(['O2', 'O4', 'O6'].includes(a.atomname)) {\n        dative = true\n        ionic = true\n      }\n    }\n    if (dative) {\n      const state = createFeatureState(FeatureType.DativeBondPartner)\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n    if (ionic) {\n      const state = createFeatureState(FeatureType.IonicTypePartner)\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\n/**\n * Metal Pi complexation partner\n */\n// export function addMetalPiPartners (structure: Structure, features: Features) {\n//   const { charge } = valenceModel(structure.data)\n\n//   structure.eachAtom(a => {\n//     const state = createFeatureState(FeatureType.MetalPiPartner)\n\n//     const resname = a.resname\n//     const element = a.element\n//     const atomname = a.atomname\n//     if (!a.isPolymer()) {\n//       // water oxygen, as well as oxygen from carboxylate, phosphoryl, phenolate, alcohol;\n//       // nitrogen from imidazole; sulfur from thiolate\n//       if (element === 'O') {\n//         // Water oxygen\n//         if (a.bondCount === 0 || a.isWater()) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//         // Oxygen in alcohol (R-[O]-H)\n//         if (a.bondCount === 2 && charge[ a.index ] || a.hasBondToElement('H')) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//         // Phenolate oxygen\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//         // Carboxylic acid oxygen\n//         if (a.bondToElementCount('C') === 1) {\n//           let flag = false\n//           a.eachBondedAtom(ba => {\n//             if (ba.element === 'C' && ba.bondToElementCount('O') === 2 && ba.bondToElementCount('C') === 1) {\n//               flag = true\n//             }\n//           })\n//           if (flag) {\n//             addAtom(state, a)\n//             addFeature(features, state)\n//             return\n//           }\n//         }\n//         // Phosphoryl oxygen\n//         if (a.bondToElementCount('P') === 1) {\n//           let flag = false\n//           a.eachBondedAtom(ba => {\n//             if (ba.element === 'P' && ba.bondToElementCount('O') >= 3) {\n//               flag = true\n//             }\n//           })\n//           if (flag) {\n//             addAtom(state, a)\n//             addFeature(features, state)\n//             return\n//           }\n//         }\n//       } else if (element === 'N') {\n//         // Imidazole/pyrrole or similar\n//         if (a.bondToElementCount('C') === 2) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//       } else if (element === 'S') {\n//         // Thiolate\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//         // Sulfur in Iron sulfur cluster\n//         const ironCount = a.bondToElementCount('FE')\n//         if (ironCount > 0 && ironCount === a.bondCount) {\n//           addAtom(state, a)\n//           addFeature(features, state)\n//           return\n//         }\n//       }\n//     }\n//   })\n// }\n\nexport function addMetals (structure: Structure, features: Features) {\n  structure.eachAtom(a => {\n    if (a.isTransitionMetal() || a.number === Elements.ZN || a.number === Elements.CD) {\n      const state = createFeatureState(FeatureType.TransitionMetal)\n      addAtom(state, a)\n      addFeature(features, state)\n    } else if (IonicTypeMetals.includes(a.number)) {\n      const state = createFeatureState(FeatureType.IonicTypeMetal)\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\nfunction isMetalComplex (ti: FeatureType, tj: FeatureType) {\n  if (ti === FeatureType.TransitionMetal) {\n    return (\n      tj === FeatureType.DativeBondPartner ||\n      tj === FeatureType.TransitionMetal\n    )\n  } else if (ti === FeatureType.IonicTypeMetal) {\n    return (\n      tj === FeatureType.IonicTypePartner\n    )\n  }\n}\n\nexport interface MetalComplexationParams {\n  maxMetalDist?: number\n  masterModelIndex?: number\n}\n\n/**\n * Metal complexes of metals and appropriate groups in protein and ligand, including water\n */\nexport function addMetalComplexation (structure: Structure, contacts: Contacts, params: MetalComplexationParams = {}) {\n  const maxMetalDist = defaults(params.maxMetalDist, ContactDefaultParams.maxMetalDist)\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const { features, spatialHash, contactStore, featureSet } = contacts\n  const { types, centers, atomSets } = features\n  const { x, y, z } = centers\n  const n = types.length\n\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  for (let i = 0; i < n; ++i) {\n    spatialHash.eachWithin(x[i], y[i], z[i], maxMetalDist, (j, dSq) => {\n      if (j <= i) return\n\n      ap1.index = atomSets[ i ][ 0 ]\n      ap2.index = atomSets[ j ][ 0 ]\n\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\n\n      const m1 = ap1.isMetal()\n      const m2 = ap2.isMetal()\n      if (!m1 && !m2) return\n\n      const [ ti, tj ] = m1 ? [ types[ i ],types[ j ] ] : [ types[ j ],types[ i ] ]\n\n      if (isMetalComplex(ti, tj)) {\n        featureSet.setBits(i, j)\n        contactStore.addContact(i, j, ContactType.MetalCoordination)\n      }\n    })\n  }\n}\n","/**\n * @file Halogen Bonds\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n */\n\nimport { defaults } from '../../utils'\nimport Structure from '../../structure/structure'\nimport { Elements } from '../../structure/structure-constants'\nimport { degToRad } from '../../math/math-utils'\nimport {\n  Features, FeatureType,\n  addAtom, addFeature, createFeatureState,\n} from './features'\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\nimport { calcAngles } from '../geometry'\n\nconst halBondElements = [17, 35, 53, 85]\n\n/**\n * Halogen bond donors (X-C, with X one of Cl, Br, I or At) not F!\n */\nexport function addHalogenDonors (structure: Structure, features: Features) {\n  structure.eachAtom(a => {\n    if (halBondElements.includes(a.number) && a.bondToElementCount(Elements.C) === 1) {\n      const state = createFeatureState(FeatureType.HalogenDonor)\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\nconst X = [ Elements.N, Elements.O, Elements.S ]\nconst Y = [ Elements.C, Elements.N, Elements.P, Elements.S ]\n\n/**\n * Halogen bond acceptors (Y-{O|N|S}, with Y=C,P,N,S)\n */\nexport function addHalogenAcceptors (structure: Structure, features: Features) {\n  structure.eachAtom(a => {\n    if (X.includes(a.number)) {\n      let flag = false\n      a.eachBondedAtom(ba => {\n        if (Y.includes(ba.number)) {\n          flag = true\n        }\n      })\n      if (flag) {\n        const state = createFeatureState(FeatureType.HalogenAcceptor)\n        addAtom(state, a)\n        addFeature(features, state)\n      }\n    }\n  })\n}\n\nfunction isHalogenBond (ti: FeatureType, tj: FeatureType) {\n  return (\n    (ti === FeatureType.HalogenAcceptor && tj === FeatureType.HalogenDonor) ||\n    (ti === FeatureType.HalogenDonor && tj === FeatureType.HalogenAcceptor)\n  )\n}\n\nexport interface HalogenBondsParams {\n  maxHalogenBondDist?: number\n  maxHalogenBondAngle?: number\n  masterModelIndex?: number\n}\n\n// http://www.pnas.org/content/101/48/16789.full\nconst OptimalHalogenAngle = degToRad(180)  // adjusted from 165 to account for spherical statistics\nconst OptimalAcceptorAngle = degToRad(120)\n\n/**\n * All pairs of halogen donor and acceptor atoms\n */\nexport function addHalogenBonds (structure: Structure, contacts: Contacts, params: HalogenBondsParams = {}) {\n  const maxHalogenBondDist = defaults(params.maxHalogenBondDist, ContactDefaultParams.maxHalogenBondDist)\n  const maxHalogenBondAngle = degToRad(defaults(params.maxHalogenBondAngle, ContactDefaultParams.maxHalogenBondAngle))\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const { features, spatialHash, contactStore, featureSet } = contacts\n  const { types, centers, atomSets } = features\n  const { x, y, z } = centers\n  const n = types.length\n\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  for (let i = 0; i < n; ++i) {\n    spatialHash.eachWithin(x[i], y[i], z[i], maxHalogenBondDist, (j, dSq) => {\n      if (j <= i) return\n\n      ap1.index = atomSets[ i ][ 0 ]\n      ap2.index = atomSets[ j ][ 0 ]\n\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\n      if (!isHalogenBond(types[ i ], types[ j ])) return\n\n      const [ halogen, acceptor ] = types[ i ] === FeatureType.HalogenDonor ? [ ap1, ap2 ] : [ ap2, ap1 ]\n\n      const halogenAngles = calcAngles(halogen, acceptor)\n      // Singly bonded halogen only (not bromide ion for example)\n      if (halogenAngles.length !== 1) return\n      if (OptimalHalogenAngle - halogenAngles[0] > maxHalogenBondAngle) return\n\n      const acceptorAngles = calcAngles(acceptor, halogen)\n      // Angle must be defined. Excludes water as acceptor. Debatable\n      if (acceptorAngles.length === 0) return\n      if (acceptorAngles.some(acceptorAngle => {\n        return (OptimalAcceptorAngle - acceptorAngle > maxHalogenBondAngle)\n      })) return\n\n\n      featureSet.setBits(i, j)\n      contactStore.addContact(i, j, ContactType.HalogenBond)\n\n    })\n  }\n}\n","/**\n * @file Refine Contacts\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { Debug, Log } from '../../globals'\nimport { defaults } from '../../utils'\nimport Structure from '../../structure/structure'\nimport AtomProxy from '../../proxy/atom-proxy'\nimport { Elements } from '../../structure/structure-constants'\nimport { FrozenContacts, ContactType, ContactDefaultParams, isMasterContact } from './contact'\nimport { FeatureType } from './features'\n\nexport interface LineOfSightParams {\n  lineOfSightDistFactor?: number\n  masterModelIndex?: number\n}\n\n// also allows intra-residue contacts\nexport function invalidAtomContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\n  return !isMasterContact(ap1, ap2, masterIdx) && (\n    ap1.modelIndex !== ap2.modelIndex ||\n    (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc)\n  )\n}\n\nexport function refineLineOfSight (structure: Structure, contacts: FrozenContacts, params: LineOfSightParams = {}) {\n  if (Debug) Log.time('refineLineOfSight')\n\n  const lineOfSightDistFactor = defaults(params.lineOfSightDistFactor, ContactDefaultParams.lineOfSightDistFactor)\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const spatialHash = structure.spatialHash!\n  const { contactSet, contactStore, features } = contacts\n  const { index1, index2 } = contactStore\n  const { centers, atomSets } = features\n  const { x, y, z } = centers\n\n  const ac1 = structure.getAtomProxy()\n  const ac2 = structure.getAtomProxy()\n  const aw = structure.getAtomProxy()\n\n  const c1 = new Vector3()\n  const c2 = new Vector3()\n\n  const lineOfSightDist = 3 * lineOfSightDistFactor\n  const lineOfSightDistFactorSq = lineOfSightDistFactor * lineOfSightDistFactor\n\n  contactSet.forEach(i => {\n    c1.set(x[index1[i]], y[index1[i]], z[index1[i]])\n    c2.set(x[index2[i]], y[index2[i]], z[index2[i]])\n\n    const cx = ( c1.x + c2.x ) / 2\n    const cy = ( c1.y + c2.y ) / 2\n    const cz = ( c1.z + c2.z ) / 2\n\n    const as1 = atomSets[ index1[ i ] ]\n    const as2 = atomSets[ index2[ i ] ]\n\n    ac1.index = as1[ 0 ]\n    ac2.index = as2[ 0 ]\n\n    spatialHash.eachWithin(cx, cy, cz, lineOfSightDist, (j, dSq) => {\n      aw.index = j\n      if (\n        aw.number !== Elements.H &&\n        (aw.vdw * aw.vdw * lineOfSightDistFactorSq) > dSq &&\n        !invalidAtomContact(ac1, aw, masterIdx) &&\n        !invalidAtomContact(ac2, aw, masterIdx) &&\n        !as1.includes(j) &&\n        !as2.includes(j) &&\n        // to ignore atoms in the center of functional groups\n        c1.distanceToSquared(aw as any) > 1 &&\n        c2.distanceToSquared(aw as any) > 1\n      ) {\n        contactSet.clear(i)\n        if (Debug) Log.log('removing', ac1.qualifiedName(), ac2.qualifiedName(), 'because', aw.qualifiedName())\n      }\n    })\n  })\n\n  if (Debug) Log.timeEnd('refineLineOfSight')\n}\n\n/**\n * For atoms interacting with several atoms in the same residue\n * only the one with the closest distance is kept.\n */\nexport function refineHydrophobicContacts (structure: Structure, contacts: FrozenContacts) {\n  const { contactSet, contactStore, features } = contacts\n  const { type, index1, index2 } = contactStore\n  const { atomSets } = features\n\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  const residueContactDict: { [k: string]: number[] } = {}\n\n  /* keep only closest contact between residues */\n  const handleResidueContact = function (dist: number, i: number, key: string) {\n    const [ minDist, minIndex ] = residueContactDict[ key ] || [ Infinity, -1 ]\n    if (dist < minDist) {\n      if (minIndex !== -1) contactSet.clear(minIndex)\n      residueContactDict[ key ] = [ dist, i ]\n    } else {\n      contactSet.clear(i)\n    }\n  }\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.Hydrophobic) return\n\n    ap1.index = atomSets[ index1[ i ] ][ 0 ]\n    ap2.index = atomSets[ index2[ i ] ][ 0 ]\n\n    const dist = ap1.distanceTo(ap2)\n    handleResidueContact(dist, i, `${ap1.index}|${ap2.residueIndex}`)\n    handleResidueContact(dist, i, `${ap2.index}|${ap1.residueIndex}`)\n  })\n}\n\nfunction isHydrogenBondType (type: number) {\n  return (\n    type === ContactType.HydrogenBond ||\n    type === ContactType.WaterHydrogenBond ||\n    type === ContactType.BackboneHydrogenBond\n  )\n}\n\n/**\n * Remove weak hydrogen bonds when the acceptor is involved in\n * a normal/strong hydrogen bond\n */\nexport function refineWeakHydrogenBonds (structure: Structure, contacts: FrozenContacts) {\n  const { contactSet, contactStore, features, adjacencyList } = contacts\n  const { type, index1, index2 } = contactStore\n  const { types } = features\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.WeakHydrogenBond) return\n\n    let accFeat: number\n    if (types[ index1[ i ] ] === FeatureType.WeakHydrogenDonor) {\n      accFeat = index2[ i ]\n    } else {\n      accFeat = index1[ i ]\n    }\n\n    const n = adjacencyList.countArray[ accFeat ]\n    const offset = adjacencyList.offsetArray[ accFeat ]\n    for (let j = 0; j < n; ++j) {\n      const ci = adjacencyList.indexArray[ offset + j ]\n      if (isHydrogenBondType(type[ ci ])) {\n        contactSet.clear(i)\n        return\n      }\n    }\n  })\n}\n\n/**\n * Remove hydrogen bonds between groups that also form\n * a salt bridge between each other\n */\nexport function refineSaltBridges (structure: Structure, contacts: FrozenContacts) {\n  const { contactSet, contactStore, features } = contacts\n  const { type, index1, index2 } = contactStore\n  const { atomSets } = features\n\n  const ionicInteractionDict: { [atomIndex: number]: number[] } = {}\n\n  const add = function(idx: number, i: number) {\n    if (!ionicInteractionDict[ idx ]) ionicInteractionDict[ idx ] = []\n    ionicInteractionDict[ idx ].push(i)\n  }\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.IonicInteraction) return\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\n  })\n\n  contactSet.forEach(i => {\n    if (!isHydrogenBondType(type[ i ])) return\n\n    const iil1 = ionicInteractionDict[ atomSets[ index1[ i ] ][ 0 ] ]\n    const iil2 = ionicInteractionDict[ atomSets[ index2[ i ] ][ 0 ] ]\n    if (!iil1 || !iil2) return\n\n    const n = iil1.length\n    for (let j = 0; j < n; ++j) {\n      if (iil2.includes(iil1[j])) {\n        contactSet.clear(i)\n        return\n      }\n    }\n  })\n}\n\n/**\n * Remove hydrophobic and cation-pi interactions between groups that also form\n * a pi-stacking interaction between each other\n */\nexport function refinePiStacking (structure: Structure, contacts: FrozenContacts) {\n  const { contactSet, contactStore, features } = contacts\n  const { type, index1, index2 } = contactStore\n  const { atomSets } = features\n\n  const piStackingDict: { [atomIndex: number]: number[] } = {}\n\n  const add = function(idx: number, i: number) {\n    if (!piStackingDict[ idx ]) piStackingDict[ idx ] = []\n    piStackingDict[ idx ].push(i)\n  }\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.PiStacking) return\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\n  })\n\n  contactSet.forEach(i => {\n    if (\n      type[ i ] !== ContactType.Hydrophobic &&\n      type[ i ] !== ContactType.CationPi\n    ) return\n\n    const pil1 = piStackingDict[ atomSets[ index1[ i ] ][ 0 ] ]\n    const pil2 = piStackingDict[ atomSets[ index2[ i ] ][ 0 ] ]\n    if (!pil1 || !pil2) return\n\n    const n = pil1.length\n    for (let j = 0; j < n; ++j) {\n      if (pil2.includes(pil1[j])) {\n        contactSet.clear(i)\n        return\n      }\n    }\n  })\n}\n\n/**\n * Remove ionic interactions between groups that also form\n * a metal coordination between each other\n */\nexport function refineMetalCoordination (structure: Structure, contacts: FrozenContacts) {\n  const { contactSet, contactStore, features } = contacts\n  const { type, index1, index2 } = contactStore\n  const { atomSets } = features\n\n  const ionicInteractionDict: { [atomIndex: number]: number[] } = {}\n\n  const add = function(idx: number, i: number) {\n    if (!ionicInteractionDict[ idx ]) ionicInteractionDict[ idx ] = []\n    ionicInteractionDict[ idx ].push(i)\n  }\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.IonicInteraction) return\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\n  })\n\n  contactSet.forEach(i => {\n    if (type[ i ] !== ContactType.MetalCoordination) return\n\n    const iil1 = ionicInteractionDict[ atomSets[ index1[ i ] ][ 0 ] ]\n    const iil2 = ionicInteractionDict[ atomSets[ index2[ i ] ][ 0 ] ]\n    if (!iil1 || !iil2) return\n\n    const n = iil1.length\n    for (let j = 0; j < n; ++j) {\n      if (iil2.includes(iil1[j])) {\n        contactSet.clear(iil1[j])\n        return\n      }\n    }\n  })\n}\n\n// TODO: refactor refineSaltBridges, refinePiStacking and refineMetalCoordination to be DRY\n","/**\n * @file Contact\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { Color } from 'three'\n\nimport { Debug, Log } from '../../globals'\nimport { createParams } from '../../utils'\nimport { TextBufferData } from '../../buffer/text-buffer'\nimport Structure from '../../structure/structure'\nimport AtomProxy from '../../proxy/atom-proxy'\nimport SpatialHash from '../../geometry/spatial-hash'\nimport { calculateCenterArray, calculateDirectionArray, uniformArray } from '../../math/array-utils'\nimport ContactStore from '../../store/contact-store'\nimport BitArray from '../../utils/bitarray'\nimport Selection from '../../selection/selection'\nimport { ContactPicker } from '../../utils/picker'\nimport { createAdjacencyList, AdjacencyList } from '../../utils/adjacency-list'\nimport { createFeatures, Features } from './features'\nimport { addAromaticRings, addNegativeCharges, addPositiveCharges, addChargedContacts } from './charged'\nimport { addHydrogenAcceptors, addHydrogenDonors, addHydrogenBonds, addWeakHydrogenDonors } from './hydrogen-bonds'\nimport { addMetalBinding, addMetals, addMetalComplexation } from './metal-binding'\nimport { addHydrophobic, addHydrophobicContacts } from './hydrophobic'\nimport { addHalogenAcceptors, addHalogenDonors, addHalogenBonds } from './halogen-bonds'\nimport {\n  refineLineOfSight,\n  refineHydrophobicContacts, refineSaltBridges, refinePiStacking, refineMetalCoordination\n} from './refine-contacts'\n\nexport interface Contacts {\n  features: Features\n  spatialHash: SpatialHash\n  contactStore: ContactStore\n  featureSet: BitArray\n}\n\nexport interface FrozenContacts extends Contacts {\n  contactSet: BitArray\n  adjacencyList: AdjacencyList\n}\n\nexport const enum ContactType {\n  Unknown = 0,\n  IonicInteraction = 1,\n  CationPi = 2,\n  PiStacking = 3,\n  HydrogenBond = 4,\n  HalogenBond = 5,\n  Hydrophobic = 6,\n  MetalCoordination = 7,\n  WeakHydrogenBond = 8,\n  WaterHydrogenBond = 9,\n  BackboneHydrogenBond = 10\n}\n\nexport const ContactDefaultParams = {\n  maxHydrophobicDist: 4.0,\n  maxHbondDist: 3.5,\n  maxHbondSulfurDist: 4.1,\n  maxHbondAccAngle: 45,\n  maxHbondDonAngle: 45,\n  maxHbondAccPlaneAngle: 90,\n  maxHbondDonPlaneAngle: 30,\n  maxPiStackingDist: 5.5,\n  maxPiStackingOffset: 2.0,\n  maxPiStackingAngle: 30,\n  maxCationPiDist: 6.0,\n  maxCationPiOffset: 2.0,\n  maxIonicDist: 5.0,\n  maxHalogenBondDist: 4.0,\n  maxHalogenBondAngle: 30,\n  maxMetalDist: 3.0,\n  refineSaltBridges: true,\n  masterModelIndex: -1,\n  lineOfSightDistFactor: 1.0\n}\n\nexport function isMasterContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\n  return (\n    (ap1.modelIndex === masterIdx && ap2.modelIndex !== masterIdx) ||\n    (ap2.modelIndex === masterIdx && ap1.modelIndex !== masterIdx)\n  )\n}\n\nexport function invalidAtomContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\n  return !isMasterContact(ap1, ap2, masterIdx) && (\n    ap1.modelIndex !== ap2.modelIndex ||\n    ap1.residueIndex === ap2.residueIndex ||\n    (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc)\n  )\n}\n\nexport function createContacts (features: Features): Contacts {\n  const { types, centers } = features\n\n  const spatialHash = new SpatialHash(centers)\n  const contactStore = new ContactStore()\n  const featureSet = new BitArray(types.length, false)\n\n  return { features, spatialHash, contactStore, featureSet }\n}\n\nexport function createFrozenContacts (contacts: Contacts): FrozenContacts {\n  const { index1, index2, count } = contacts.contactStore\n\n  const adjacencyList = createAdjacencyList({\n    nodeArray1: index1,\n    nodeArray2: index2,\n    edgeCount: count,\n    nodeCount: contacts.featureSet.length\n  })\n  const contactSet = new BitArray(contacts.contactStore.count, true)\n\n  return Object.assign({ adjacencyList, contactSet }, contacts)\n}\n\nfunction calculateFeatures (structure: Structure) {\n  const features = createFeatures()\n\n  if (Debug) Log.time('calculateFeatures')\n\n  addPositiveCharges(structure, features)\n  addNegativeCharges(structure, features)\n  addAromaticRings(structure, features)\n\n  addHydrogenAcceptors(structure, features)\n  addHydrogenDonors(structure, features)\n  addWeakHydrogenDonors(structure, features)\n\n  addMetalBinding(structure, features)\n  addMetals(structure, features)\n\n  addHydrophobic(structure, features)\n\n  addHalogenAcceptors(structure, features)\n  addHalogenDonors(structure, features)\n\n  if (Debug) Log.timeEnd('calculateFeatures')\n\n  return features\n}\n\nexport function calculateContacts (structure: Structure, params = ContactDefaultParams) {\n  const features = calculateFeatures(structure)\n  const contacts = createContacts(features)\n\n  if (Debug) Log.time('calculateContacts')\n\n  addChargedContacts(structure, contacts, params)\n  addHydrogenBonds(structure, contacts, params)\n  addMetalComplexation(structure, contacts, params)\n  addHydrophobicContacts(structure, contacts, params)\n  addHalogenBonds(structure, contacts, params)\n\n  const frozenContacts = createFrozenContacts(contacts)\n\n  refineLineOfSight(structure, frozenContacts, params)\n  refineHydrophobicContacts(structure, frozenContacts)\n  if (params.refineSaltBridges) refineSaltBridges(structure, frozenContacts)\n  refinePiStacking(structure, frozenContacts)\n  refineMetalCoordination(structure, frozenContacts)\n\n  if (Debug) Log.timeEnd('calculateContacts')\n\n  return frozenContacts\n}\n\nexport function contactTypeName (type: ContactType) {\n  switch (type) {\n    case ContactType.HydrogenBond:\n    case ContactType.WaterHydrogenBond:\n    case ContactType.BackboneHydrogenBond:\n      return 'hydrogen bond'\n    case ContactType.Hydrophobic:\n      return 'hydrophobic contact'\n    case ContactType.HalogenBond:\n      return 'halogen bond'\n    case ContactType.IonicInteraction:\n      return 'ionic interaction'\n    case ContactType.MetalCoordination:\n      return 'metal coordination'\n    case ContactType.CationPi:\n      return 'cation-pi interaction'\n    case ContactType.PiStacking:\n      return 'pi-pi stacking'\n    case ContactType.WeakHydrogenBond:\n      return 'weak hydrogen bond'\n    default:\n      return 'unknown contact'\n  }\n}\n\nexport const ContactDataDefaultParams = {\n  hydrogenBond: true,\n  hydrophobic: true,\n  halogenBond: true,\n  ionicInteraction: true,\n  metalCoordination: true,\n  cationPi: true,\n  piStacking: true,\n  weakHydrogenBond: true,\n  waterHydrogenBond: true,\n  backboneHydrogenBond: true,\n  radius: 1,\n  filterSele: ''\n}\nexport type ContactDataParams = typeof ContactDataDefaultParams\n  | { filterSele: string|[string, string] }\n\nexport const ContactLabelDefaultParams = {\n  unit: '',\n  size: 2.0\n}\n\nexport type ContactLabelParams = typeof ContactLabelDefaultParams\n\nconst tmpColor = new Color()\nfunction contactColor (type: ContactType) {\n  switch (type) {\n    case ContactType.HydrogenBond:\n    case ContactType.WaterHydrogenBond:\n    case ContactType.BackboneHydrogenBond:\n      return tmpColor.setHex(0x2B83BA).toArray()\n    case ContactType.Hydrophobic:\n      return tmpColor.setHex(0x808080).toArray()\n    case ContactType.HalogenBond:\n      return tmpColor.setHex(0x40FFBF).toArray()\n    case ContactType.IonicInteraction:\n      return tmpColor.setHex(0xF0C814).toArray()\n    case ContactType.MetalCoordination:\n      return tmpColor.setHex(0x8C4099).toArray()\n    case ContactType.CationPi:\n      return tmpColor.setHex(0xFF8000).toArray()\n    case ContactType.PiStacking:\n      return tmpColor.setHex(0x8CB366).toArray()\n    case ContactType.WeakHydrogenBond:\n      return tmpColor.setHex(0xC5DDEC).toArray()\n    default:\n      return tmpColor.setHex(0xCCCCCC).toArray()\n  }\n}\n\nexport interface ContactData {\n  position1: Float32Array,\n  position2: Float32Array,\n  color: Float32Array,\n  color2: Float32Array,\n  radius: Float32Array,\n  picking: ContactPicker\n}\n\nexport function getContactData (contacts: FrozenContacts, structure: Structure, params: ContactDataParams): ContactData {\n  const p = createParams(params, ContactDataDefaultParams)\n  const types: ContactType[] = []\n  if (p.hydrogenBond) types.push(ContactType.HydrogenBond)\n  if (p.hydrophobic) types.push(ContactType.Hydrophobic)\n  if (p.halogenBond) types.push(ContactType.HalogenBond)\n  if (p.ionicInteraction) types.push(ContactType.IonicInteraction)\n  if (p.metalCoordination) types.push(ContactType.MetalCoordination)\n  if (p.cationPi) types.push(ContactType.CationPi)\n  if (p.piStacking) types.push(ContactType.PiStacking)\n  if (p.weakHydrogenBond) types.push(ContactType.WeakHydrogenBond)\n  if (p.waterHydrogenBond) types.push(ContactType.WaterHydrogenBond)\n  if (p.backboneHydrogenBond) types.push(ContactType.BackboneHydrogenBond)\n\n  const { features, contactSet, contactStore } = contacts\n  const { centers, atomSets } = features\n  const { x, y, z } = centers\n  const { index1, index2, type } = contactStore\n\n  const position1: number[] = []\n  const position2: number[] = []\n  const color: number[] = []\n  const radius: number[] = []\n  const picking: number[] = []\n\n  let filterSet: BitArray | BitArray[] | undefined\n  if (p.filterSele) {\n    if (Array.isArray(p.filterSele)) {\n      filterSet = p.filterSele.map(sele => {\n        return structure.getAtomSet(new Selection(sele))\n      })\n    } else {\n      filterSet = structure.getAtomSet(new Selection(p.filterSele))\n    }\n  }\n\n  contactSet.forEach(i => {\n    const ti = type[ i ]\n    if (!types.includes(ti)) return\n\n    if (filterSet) {\n      const idx1 = atomSets[index1[i]][0]\n      const idx2 = atomSets[index2[i]][0]\n\n      if (Array.isArray(filterSet)) {\n        if (!(filterSet[0].isSet(idx1) && filterSet[1].isSet(idx2) || (filterSet[1].isSet(idx1) && filterSet[0].isSet(idx2)))) return\n      } else {\n        if (!filterSet.isSet(idx1) && !filterSet.isSet(idx2)) return\n      }\n    }\n\n    const k = index1[i]\n    const l = index2[i]\n    position1.push(x[k], y[k], z[k])\n    position2.push(x[l], y[l], z[l])\n    color.push(...contactColor(ti))\n    radius.push(p.radius)\n    picking.push(i)\n  })\n\n  return {\n    position1: new Float32Array(position1),\n    position2: new Float32Array(position2),\n    color: new Float32Array(color),\n    color2: new Float32Array(color),\n    radius: new Float32Array(radius),\n    picking: new ContactPicker(picking, contacts, structure)\n  }\n}\n\nexport function getLabelData (contactData: ContactData, params: ContactLabelParams): TextBufferData {\n\n  const position = calculateCenterArray(contactData.position1, contactData.position2)\n  const text: string[] = []\n\n  const direction = calculateDirectionArray(contactData.position1, contactData.position2)\n\n  const n = direction.length / 3\n  for (let i=0; i<n; i++) {\n    const j = 3 * i\n    const d = Math.sqrt(direction[j]**2 + direction[j+1]**2 + direction[j+2]**2)\n    switch (params.unit) {\n        case 'angstrom':\n          text[ i ] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B)\n          break\n        case 'nm':\n          text[ i ] = (d / 10).toFixed(2) + ' nm'\n          break\n        default:\n          text[ i ] = d.toFixed(2)\n          break\n      }\n  }\n  return {\n    position,\n    size: uniformArray(position.length / 3, params.size),\n    color: contactData.color,\n    text\n  }\n}\n","/**\n * @file Hydrophobic\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { defaults } from '../../utils'\nimport Structure from '../../structure/structure'\nimport { Elements } from '../../structure/structure-constants'\nimport {\n  Features, FeatureType,\n  addAtom, addFeature, createFeatureState,\n} from './features'\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\n\n/**\n * Hydrophobic carbon (only bonded to carbon or hydrogen); fluorine\n */\nexport function addHydrophobic (structure: Structure, features: Features) {\n  structure.eachAtom(a => {\n    const state = createFeatureState(FeatureType.Hydrophobic)\n    let flag = false\n    if (a.number === Elements.C) {\n      flag = true\n      a.eachBondedAtom(ap => {\n        const an = ap.number\n        if (an !== Elements.C && an !== Elements.H) flag = false\n      })\n    } else if (a.number === Elements.F) {\n      flag = true\n    }\n    if (flag) {\n      addAtom(state, a)\n      addFeature(features, state)\n    }\n  })\n}\n\nfunction isHydrophobicContact (ti: FeatureType, tj: FeatureType) {\n  return ti === FeatureType.Hydrophobic && tj === FeatureType.Hydrophobic\n}\n\nexport interface HydrophobicContactsParams {\n  maxHydrophobicDist?: number\n  masterModelIndex?: number\n}\n\n/**\n * All hydrophobic contacts\n */\nexport function addHydrophobicContacts (structure: Structure, contacts: Contacts, params: HydrophobicContactsParams = {}) {\n  const maxHydrophobicDist = defaults(params.maxHydrophobicDist, ContactDefaultParams.maxHydrophobicDist)\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\n\n  const { features, spatialHash, contactStore, featureSet } = contacts\n  const { types, centers, atomSets } = features\n  const { x, y, z } = centers\n  const n = types.length\n\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  for (let i = 0; i < n; ++i) {\n    spatialHash.eachWithin(x[i], y[i], z[i], maxHydrophobicDist, (j, dSq) => {\n      if (j <= i) return\n\n      ap1.index = atomSets[ i ][ 0 ]\n      ap2.index = atomSets[ j ][ 0 ]\n\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\n      if (ap1.number === Elements.F && ap2.number === Elements.F) return\n      if (ap1.connectedTo(ap2)) return\n\n      if (isHydrophobicContact(types[ i ], types[ j ])) {\n        featureSet.setBits(i, j)\n        contactStore.addContact(i, j, ContactType.Hydrophobic)\n      }\n    })\n  }\n}\n","/**\n * @file Picker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { PickerRegistry } from '../globals'\nimport { calculateMeanVector3 } from '../math/vector-utils'\nimport Selection from '../selection/selection'\nimport {\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive,\n  TetrahedronPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive\n} from '../geometry/primitive'\nimport { contactTypeName, Contacts } from '../chemistry/interactions/contact'\nimport { TypedArray } from '../types';\nimport Component from '../component/component';\nimport { Shape, Structure, Volume } from '../ngl';\nimport BondStore from '../store/bond-store';\nimport Validation from '../structure/validation';\nimport PrincipalAxes from '../math/principal-axes';\nimport Surface from '../surface/surface';\nimport Unitcell from '../symmetry/unitcell';\nimport BondProxy from '../proxy/bond-proxy';\nimport AtomProxy from '../proxy/atom-proxy';\n\n/**\n * Picker class\n * @interface\n */\nclass Picker {\n  array: number[]|TypedArray|undefined\n  /**\n   * @param  {Array|TypedArray} [array] - mapping\n   */\n  constructor (array?: number[]|TypedArray) {\n    this.array = array\n  }\n\n  get type () { return '' }\n  get data () { return {} }\n\n  /**\n   * Get the index for the given picking id\n   * @param  {Integer} pid - the picking id\n   * @return {Integer} the index\n   */\n  getIndex (pid: number) {\n    return this.array ? this.array[ pid ] : pid\n  }\n\n  /**\n   * Get object data\n   * @abstract\n   * @param  {Integer} pid - the picking id\n   * @return {Object} the object data\n   */\n  getObject (pid: number) {\n    return {}\n  }\n\n  _applyTransformations (vector: Vector3, instance: any, component: Component) {\n    if (instance) {\n      vector.applyMatrix4(instance.matrix)\n    }\n    if (component) {\n      vector.applyMatrix4(component.matrix)\n    }\n    return vector\n  }\n\n  /**\n   * Get object position\n   * @abstract\n   * @param  {Integer} pid - the picking id\n   * @return {Vector3} the object position\n   */\n  _getPosition (pid: number) {\n    return new Vector3()\n  }\n\n  /**\n   * Get position for the given picking id\n   * @param  {Integer} pid - the picking id\n   * @param  {Object} instance - the instance that should be applied\n   * @param  {Component} component - the component of the picked object\n   * @return {Vector3} the position\n   */\n  getPosition (pid: number, instance: any, component: Component) {\n    return this._applyTransformations(\n      this._getPosition(pid), instance, component\n    )\n  }\n}\n\n/**\n * Shape picker class\n * @interface\n */\nclass ShapePicker extends Picker {\n  shape: Shape\n  /**\n   * @param  {Shape} shape - shape object\n   */\n  constructor (shape: Shape) {\n    super()\n    this.shape = shape\n  }\n\n  get primitive (): any { return }\n\n  get data () { return this.shape }\n  get type () { return this.primitive.type }\n\n  getObject (pid: number) {\n    return this.primitive.objectFromShape(this.shape, this.getIndex(pid))\n  }\n\n  _getPosition (pid: number) {\n    return this.primitive.positionFromShape(this.shape, this.getIndex(pid))\n  }\n}\n\n//\n\nclass CylinderPicker extends ShapePicker {\n  get primitive () { return CylinderPrimitive }\n}\n\nclass ArrowPicker extends ShapePicker {\n  get primitive () { return ArrowPrimitive }\n}\n\nclass AtomPicker extends Picker {\n  structure: Structure\n  constructor (array: Float32Array, structure: Structure) {\n    super(array)\n    this.structure = structure\n  }\n\n  get type () { return 'atom' }\n  get data () { return this.structure }\n\n  getObject (pid: number): AtomProxy {\n    return this.structure.getAtomProxy(this.getIndex(pid))\n  }\n\n  _getPosition (pid: number) {\n    return new Vector3().copy(this.getObject(pid) as any)\n  }\n}\n\nclass AxesPicker extends Picker {\n  axes: PrincipalAxes\n  constructor (axes: PrincipalAxes) {\n    super()\n    this.axes = axes\n  }\n\n  get type () { return 'axes' }\n  get data () { return this.axes }\n\n  getObject (/* pid */) {\n    return {\n      axes: this.axes\n    }\n  }\n\n  _getPosition (/* pid */) {\n    return this.axes.center.clone()\n  }\n}\n\nclass BondPicker extends Picker {\n  structure: Structure\n  bondStore: BondStore\n  constructor (array: number[]|TypedArray|undefined, structure: Structure, bondStore: BondStore) {\n    super(array)\n    this.structure = structure\n    this.bondStore = bondStore || structure.bondStore\n  }\n\n  get type () { return 'bond' }\n  get data () { return this.structure }\n\n  getObject (pid: number): BondProxy {\n    const bp = this.structure.getBondProxy(this.getIndex(pid))\n    bp.bondStore = this.bondStore\n    return bp\n  }\n\n  _getPosition (pid: number) {\n    const b = this.getObject(pid)\n    return new Vector3()\n      .copy(b.atom1 as any)\n      .add(b.atom2 as any)\n      .multiplyScalar(0.5)\n  }\n}\n\nclass ContactPicker extends Picker {\n  contacts: Contacts\n  structure: Structure\n  constructor (array: number[]|TypedArray|undefined, contacts: Contacts, structure: Structure) {\n    super(array)\n    this.contacts = contacts\n    this.structure = structure\n  }\n\n  get type () { return 'contact' }\n  get data () { return this.contacts }\n\n  getObject (pid: number) {\n    const idx = this.getIndex(pid)\n    const { features, contactStore } = this.contacts\n    const { centers, atomSets } = features\n    const { x, y, z } = centers\n    const { index1, index2, type } = contactStore\n    const k = index1[idx]\n    const l = index2[idx]\n    return {\n      center1: new Vector3(x[k], y[k], z[k]),\n      center2: new Vector3(x[l], y[l], z[l]),\n      atom1: this.structure.getAtomProxy(atomSets[k][0]),\n      atom2: this.structure.getAtomProxy(atomSets[l][0]),\n      type: contactTypeName(type[idx])\n    }\n  }\n\n  _getPosition (pid: number) {\n    const { center1, center2 } = this.getObject(pid)\n    return new Vector3().addVectors(center1, center2).multiplyScalar(0.5)\n  }\n}\n\nclass ConePicker extends ShapePicker {\n  get primitive () { return ConePrimitive }\n}\n\nclass ClashPicker extends Picker {\n  validation: Validation\n  structure: Structure\n  constructor (array: number[]|TypedArray|undefined, validation: Validation, structure: Structure) {\n    super(array)\n    this.validation = validation\n    this.structure = structure\n  }\n\n  get type () { return 'clash' }\n  get data () { return this.validation }\n\n  getObject (pid: number) {\n    const val = this.validation\n    const idx = this.getIndex(pid)\n    return {\n      validation: val,\n      index: idx,\n      clash: val.clashArray[ idx ]\n    }\n  }\n\n  _getAtomProxyFromSele (sele: string) {\n    const selection = new Selection(sele)\n    const idx = this.structure.getAtomIndices(selection)![ 0 ]\n    return this.structure.getAtomProxy(idx)\n  }\n\n  _getPosition (pid: number) {\n    const clash = this.getObject(pid).clash\n    const ap1 = this._getAtomProxyFromSele(clash.sele1)\n    const ap2 = this._getAtomProxyFromSele(clash.sele2)\n    return new Vector3().copy(ap1 as any).add(ap2 as any).multiplyScalar(0.5)\n  }\n}\n\nclass DistancePicker extends BondPicker {\n  get type () { return 'distance' }\n}\n\nclass EllipsoidPicker extends ShapePicker {\n  get primitive () { return EllipsoidPrimitive }\n}\n\nclass OctahedronPicker extends ShapePicker {\n  get primitive () { return OctahedronPrimitive }\n}\n\nclass BoxPicker extends ShapePicker {\n  get primitive () { return BoxPrimitive }\n}\n\nclass IgnorePicker extends Picker {\n  get type () { return 'ignore' }\n}\n\nexport interface MeshData {\n  name: string|undefined\n  serial: number\n  index: Uint32Array|Uint16Array|number[]\n  normal?: Float32Array|number[]\n  position: Float32Array|number[]\n  color: Float32Array|number[]\n}\nclass MeshPicker extends ShapePicker {\n  mesh: MeshData\n  __position: Vector3\n\n  constructor (shape: Shape, mesh: MeshData) {\n    super(shape)\n    this.mesh = mesh\n  }\n\n  get type () { return 'mesh' }\n\n  getObject (/* pid */) {\n    const m = this.mesh\n    return {\n      shape: this.shape,\n      name: m.name,\n      serial: m.serial\n    }\n  }\n\n  _getPosition (/* pid */) {\n    if (!this.__position) {\n      this.__position = calculateMeanVector3(this.mesh.position as any)\n    }\n    return this.__position\n  }\n}\n\nclass SpherePicker extends ShapePicker {\n  get primitive () { return SpherePrimitive }\n}\n\nclass SurfacePicker extends Picker {\n  surface: Surface\n  constructor (array: number[]|TypedArray|undefined, surface: Surface) {\n    super(array)\n    this.surface = surface\n  }\n\n  get type () { return 'surface' }\n  get data () { return this.surface }\n\n  getObject (pid: number) {\n    return {\n      surface: this.surface,\n      index: this.getIndex(pid)\n    }\n  }\n\n  _getPosition (/* pid */) {\n    return this.surface.center.clone()\n  }\n}\n\nclass TetrahedronPicker extends ShapePicker {\n  get primitive () { return TetrahedronPrimitive }\n}\n\nclass TorusPicker extends ShapePicker {\n  get primitive () { return TorusPrimitive }\n}\n\nclass UnitcellPicker extends Picker {\n  unitcell: Unitcell\n  structure: Structure\n\n  constructor (unitcell: Unitcell, structure: Structure) {\n    super()\n    this.unitcell = unitcell\n    this.structure = structure\n  }\n\n  get type () { return 'unitcell' }\n  get data () { return this.unitcell }\n\n  getObject (/* pid */) {\n    return {\n      unitcell: this.unitcell,\n      structure: this.structure\n    }\n  }\n\n  _getPosition (/* pid */) {\n    return this.unitcell.getCenter(this.structure)\n  }\n}\n\nclass UnknownPicker extends Picker {\n  get type () { return 'unknown' }\n}\n\nclass VolumePicker extends Picker {\n  volume: Volume\n  constructor (array: TypedArray, volume: Volume) {\n    super(array)\n    this.volume = volume\n  }\n\n  get type () { return 'volume' }\n  get data () { return this.volume }\n\n  getObject (pid: number) {\n    const vol = this.volume\n    const idx = this.getIndex(pid)\n    return {\n      volume: vol,\n      index: idx,\n      value: vol.data[ idx ]\n    }\n  }\n\n  _getPosition (pid: number) {\n    const dp = this.volume.position\n    const idx = this.getIndex(pid)\n    return new Vector3(\n      dp[ idx * 3 ],\n      dp[ idx * 3 + 1 ],\n      dp[ idx * 3 + 2 ]\n    )\n  }\n}\n\nclass SlicePicker extends VolumePicker {\n  get type () { return 'slice' }\n}\n\nclass PointPicker extends ShapePicker {\n  get primitive () { return PointPrimitive }\n}\n\nclass WidelinePicker extends ShapePicker {\n  get primitive () { return WidelinePrimitive }\n}\n\nPickerRegistry.add('arrow', ArrowPicker)\nPickerRegistry.add('box', BoxPicker)\nPickerRegistry.add('cone', ConePicker)\nPickerRegistry.add('cylinder', CylinderPicker)\nPickerRegistry.add('ellipsoid', EllipsoidPicker)\nPickerRegistry.add('octahedron', OctahedronPicker)\nPickerRegistry.add('sphere', SpherePicker)\nPickerRegistry.add('tetrahedron', TetrahedronPicker)\nPickerRegistry.add('torus', TorusPicker)\nPickerRegistry.add('point', PointPicker)\nPickerRegistry.add('wideline', WidelinePicker)\n\nexport {\n  Picker,\n  ShapePicker,\n  ArrowPicker,\n  AtomPicker,\n  AxesPicker,\n  BondPicker,\n  BoxPicker,\n  ConePicker,\n  ContactPicker,\n  CylinderPicker,\n  ClashPicker,\n  DistancePicker,\n  EllipsoidPicker,\n  IgnorePicker,\n  OctahedronPicker,\n  MeshPicker,\n  SlicePicker,\n  SpherePicker,\n  SurfacePicker,\n  TetrahedronPicker,\n  TorusPicker,\n  UnitcellPicker,\n  UnknownPicker,\n  VolumePicker,\n  PointPicker,\n  WidelinePicker\n}\n","/**\n * @file Marching Cubes\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { getUintArray } from '../utils'\n\nfunction getEdgeTable () {\n  return new Uint32Array([\n    0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n    0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n    0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n    0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n    0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n    0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n    0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\n    0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n    0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\n    0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n    0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\n    0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n    0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\n    0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n    0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\n    0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n    0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n    0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n    0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n    0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n    0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n    0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n    0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n    0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\n    0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n    0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\n    0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n    0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\n    0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n    0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\n    0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n    0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\n  ])\n}\n\nfunction getTriTable (): Int32Array {\n  return new Int32Array([\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n    3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n    3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n    3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\n    9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n    2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n    8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n    4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\n    3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\n    1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\n    4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n    4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n    5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n    2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\n    9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n    0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n    2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\n    10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\n    5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n    5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n    9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n    1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\n    10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\n    8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\n    2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n    7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n    2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\n    11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\n    5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\n    11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\n    11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\n    9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\n    2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\n    6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n    3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\n    6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n    10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n    6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\n    8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\n    7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\n    3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n    5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n    0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\n    9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\n    8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n    5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\n    0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\n    6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\n    10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\n    10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n    8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n    1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\n    0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n    10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\n    3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n    6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\n    9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\n    8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\n    3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n    6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n    0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\n    10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\n    10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n    2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\n    7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n    7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n    2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\n    1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\n    11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\n    8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\n    0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\n    7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n    10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n    2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n    6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\n    7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n    2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\n    1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\n    10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n    10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\n    0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\n    7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n    6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n    8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\n    9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\n    6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\n    4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\n    10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\n    8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n    0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\n    1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n    8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\n    10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n    4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\n    10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n    5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n    11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\n    9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n    6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\n    7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\n    3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\n    7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\n    3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\n    6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\n    9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\n    1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\n    4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\n    7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\n    6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n    3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\n    0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\n    6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\n    0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\n    11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\n    6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\n    5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\n    9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n    1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\n    1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\n    10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\n    0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\n    5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\n    10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\n    11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\n    9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\n    7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\n    2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n    8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\n    9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\n    9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\n    1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n    9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n    9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n    5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\n    0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\n    10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\n    2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\n    0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\n    0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\n    9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\n    5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n    3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\n    5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\n    8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n    0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\n    9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n    0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\n    1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\n    3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\n    4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\n    9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\n    11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n    11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\n    2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\n    9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\n    3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\n    1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n    4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\n    4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n    0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n    3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n    3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\n    0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n    9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\n    1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n  ])\n}\n\n// Triangles are constructed between points on cube edges.\n// allowedContours[edge1][edge1] indicates which lines from a given\n// triangle should be shown in line mode.\n\n// Values are bitmasks:\n// In loop over cubes we keep another bitmask indicating whether our current\n// cell is the first x-value (1),\n// first y-value (2) or first z-value (4) of the current loop.\n// We draw all lines on leading faces but only draw trailing face lines the first\n// time through the loop\n// A value of 8 below means the edge is always drawn (leading face)\n\n// E.g. the first row, lines between edge0 and other edges in the bottom\n// x-y plane are only drawn for the first value of z, edges in the\n// x-z plane are only drawn for the first value of y. No other lines\n// are drawn as they're redundant\n// The line between edge 1 and 5 is always drawn as it's on the leading edge\n\nfunction getAllowedContours () {\n  return [\n\n    [ 0, 4, 4, 4, 2, 0, 0, 0, 2, 2, 0, 0 ], // 1 2 3 4 8 9\n    [ 4, 0, 4, 4, 0, 8, 0, 0, 0, 8, 8, 0 ], // 0 2 3 5 9 10\n    [ 4, 4, 0, 4, 0, 0, 8, 0, 0, 0, 8, 8 ], // 0 1 3 6 10 11\n    [ 4, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 1 ], // 0 1 2 7 8 11\n    [ 2, 0, 0, 0, 0, 8, 8, 8, 2, 2, 0, 0 ], // 0 5 6 7 8 9\n    [ 0, 8, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0 ], // And rotate it\n    [ 0, 0, 8, 0, 8, 8, 0, 8, 0, 0, 8, 8 ],\n    [ 0, 0, 0, 1, 8, 8, 8, 0, 1, 0, 0, 1 ],\n    [ 2, 0, 0, 1, 2, 0, 0, 1, 0, 2, 0, 1 ], // 0 3 4 7 9 11\n    [ 2, 8, 0, 0, 2, 8, 0, 0, 2, 0, 8, 0 ], // And rotate some more\n    [ 0, 8, 8, 0, 0, 8, 8, 0, 0, 8, 0, 8 ],\n    [ 0, 0, 8, 1, 0, 0, 8, 1, 1, 0, 8, 0 ]\n\n  ]\n}\ninterface MarchingCubes {\n  new (field: number[], nx: number, ny: number, nz: number, atomindex: number[]): void\n  triangulate: (_isolevel: number, _noNormals: boolean, _box: number[][]|undefined, _contour: boolean, _wrap: boolean) => {\n    position: Float32Array\n    normal: undefined|Float32Array\n    index: Uint32Array|Uint16Array\n    atomindex: Int32Array|undefined\n    contour: boolean\n  }\n}\nfunction MarchingCubes (this: MarchingCubes, field: number[], nx: number, ny: number, nz: number, atomindex: number[]) {\n  // Based on alteredq / http://alteredqualia.com/\n  // port of greggman's ThreeD version of marching cubes to Three.js\n  // http://webglsamples.googlecode.com/hg/blob/blob.html\n  //\n  // Adapted for NGL by Alexander Rose\n\n  var isolevel = 0\n  var noNormals = false\n  var contour = false\n  var wrap = false\n  var isNegativeIso = false\n  var normalFactor = -1\n\n\n  var n = nx * ny * nz\n\n  // deltas\n  var yd = nx\n  var zd = nx * ny\n\n  var normalCache: Float32Array, vertexIndex: Int32Array\n  var count: number, icount: number\n\n  var ilist = new Int32Array(12)\n\n  var positionArray: number[] = []\n  var normalArray: number[] = []\n  var indexArray: number[] = []\n  var atomindexArray: number[] = []\n\n  var edgeTable = getEdgeTable()\n  var triTable = getTriTable()\n  var allowedContours = getAllowedContours()\n\n  var mx: number, my: number, mz: number\n\n  //\n\n  this.triangulate = function (_isolevel: number, _noNormals: boolean, _box: number[][]|undefined, _contour: boolean, _wrap: boolean) {\n    isolevel = _isolevel\n    isNegativeIso = isolevel < 0.0\n    contour = _contour\n    wrap = _wrap\n    // Normals currently disabled in contour mode for performance (unused)\n    noNormals = _noNormals || contour\n\n    if (!noNormals) {\n      normalFactor = isolevel > 0 ? -1.0 : 1.0\n      if (!normalCache) {\n        normalCache = new Float32Array(n * 3)\n      }  \n    }\n\n    var vIndexLength = n * 3\n\n    if (!vertexIndex || vertexIndex.length !== vIndexLength) {\n      vertexIndex = new Int32Array(vIndexLength)\n    }\n\n    count = 0\n    icount = 0\n\n    if (_box !== undefined) {\n      var min = _box[ 0 ].map(Math.round)\n      var max = _box[ 1 ].map(Math.round)\n\n      mx = nx * Math.ceil(Math.abs(min[ 0 ]) / nx)\n      my = ny * Math.ceil(Math.abs(min[ 1 ]) / ny)\n      mz = nz * Math.ceil(Math.abs(min[ 2 ]) / nz)\n\n      triangulate(\n        min[ 0 ], min[ 1 ], min[ 2 ],\n        max[ 0 ], max[ 1 ], max[ 2 ]\n      )\n    } else {\n      mx = my = mz = 0\n\n      triangulate()\n    }\n\n    positionArray.length = count * 3\n    if (!noNormals) normalArray.length = count * 3\n    indexArray.length = icount\n    if (atomindex) atomindexArray.length = count\n\n    return {\n      position: new Float32Array(positionArray),\n      normal: noNormals ? undefined : new Float32Array(normalArray),\n      index: getUintArray(indexArray, positionArray.length / 3),\n      atomindex: atomindex ? new Int32Array(atomindexArray) : undefined,\n      contour: contour\n    }\n  }\n\n  // polygonization\n\n  function lerp (a: number, b: number, t: number) { return a + (b - a) * t }\n\n  function index (x: number, y: number, z: number) {\n    x = (x + mx) % nx\n    y = (y + my) % ny\n    z = (z + mz) % nz\n    return ((zd * z) + yd * y) + x\n  }\n\n  function VIntX (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\n    var _q = 3 * q\n\n    if (vertexIndex[ _q ] < 0) {\n      var mu = (isolevel - valp1) / (valp2 - valp1)\n      var nc = normalCache\n\n      var c = count * 3\n\n      positionArray[ c + 0 ] = x + mu\n      positionArray[ c + 1 ] = y\n      positionArray[ c + 2 ] = z\n\n      if (!noNormals) {\n        var q3 = q * 3\n\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q3 + 3 ], mu)\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q3 + 4 ], mu)\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q3 + 5 ], mu)\n      }\n\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) ]\n\n      vertexIndex[ _q ] = count\n      ilist[ offset ] = count\n\n      count += 1\n    } else {\n      ilist[ offset ] = vertexIndex[ _q ]\n    }\n  }\n\n  function VIntY (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\n    var _q = 3 * q + 1\n\n    if (vertexIndex[ _q ] < 0) {\n      var mu = (isolevel - valp1) / (valp2 - valp1)\n      var nc = normalCache\n\n      var c = count * 3\n\n      positionArray[ c ] = x\n      positionArray[ c + 1 ] = y + mu\n      positionArray[ c + 2 ] = z\n\n      if (!noNormals) {\n        var q3 = q * 3\n        var q6 = q3 + yd * 3\n\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q6 ], mu)\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\n      }\n\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * yd ]\n\n      vertexIndex[ _q ] = count\n      ilist[ offset ] = count\n\n      count += 1\n    } else {\n      ilist[ offset ] = vertexIndex[ _q ]\n    }\n  }\n\n  function VIntZ (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\n    var _q = 3 * q + 2\n\n    if (vertexIndex[ _q ] < 0) {\n      var mu = (isolevel - valp1) / (valp2 - valp1)\n      var nc = normalCache\n\n      var c = count * 3\n\n      positionArray[ c ] = x\n      positionArray[ c + 1 ] = y\n      positionArray[ c + 2 ] = z + mu\n\n      if (!noNormals) {\n        var q3 = q * 3\n        var q6 = q3 + zd * 3\n\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q6 ], mu)\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\n      }\n\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * zd ]\n\n      vertexIndex[ _q ] = count\n      ilist[ offset ] = count\n\n      count += 1\n    } else {\n      ilist[ offset ] = vertexIndex[ _q ]\n    }\n  }\n\n  function compNorm (q: number) {\n    var q3 = q * 3\n\n    if (normalCache[ q3 ] === 0.0) {\n      normalCache[ q3 ] = field[ (q - 1 + n) % n ] - field[ (q + 1) % n ]\n      normalCache[ q3 + 1 ] = field[ (q - yd + n) % n ] - field[ (q + yd) % n ]\n      normalCache[ q3 + 2 ] = field[ (q - zd + n) % n ] - field[ (q + zd) % n ]\n    }\n  }\n\n  function polygonize (fx: number, fy: number, fz: number, q: number, edgeFilter: number) {\n    // cache indices\n    var q1\n    var qy\n    var qz\n    var q1y\n    var q1z\n    var qyz\n    var q1yz\n    if (wrap) {\n      q = index(fx, fy, fz)\n      q1 = index(fx + 1, fy, fz)\n      qy = index(fx, fy + 1, fz)\n      qz = index(fx, fy, fz + 1)\n      q1y = index(fx + 1, fy + 1, fz)\n      q1z = index(fx + 1, fy, fz + 1)\n      qyz = index(fx, fy + 1, fz + 1)\n      q1yz = index(fx + 1, fy + 1, fz + 1)\n    } else {\n      q1 = q + 1\n      qy = q + yd\n      qz = q + zd\n      q1y = qy + 1\n      q1z = qz + 1\n      qyz = qy + zd\n      q1yz = qyz + 1\n    }\n\n    var cubeindex = 0\n    var field0 = field[ q ]\n    var field1 = field[ q1 ]\n    var field2 = field[ qy ]\n    var field3 = field[ q1y ]\n    var field4 = field[ qz ]\n    var field5 = field[ q1z ]\n    var field6 = field[ qyz ]\n    var field7 = field[ q1yz ]\n\n    if (field0 < isolevel) cubeindex |= 1\n    if (field1 < isolevel) cubeindex |= 2\n    if (field2 < isolevel) cubeindex |= 8\n    if (field3 < isolevel) cubeindex |= 4\n    if (field4 < isolevel) cubeindex |= 16\n    if (field5 < isolevel) cubeindex |= 32\n    if (field6 < isolevel) cubeindex |= 128\n    if (field7 < isolevel) cubeindex |= 64\n\n    // if cube is entirely in/out of the surface - bail, nothing to draw\n\n    var bits = edgeTable[ cubeindex ]\n    if (bits === 0) return 0\n\n    var fx2 = fx + 1\n    var fy2 = fy + 1\n    var fz2 = fz + 1\n\n    // top of the cube\n\n    if (bits & 1) {\n      if (!noNormals) {\n        compNorm(q)\n        compNorm(q1)\n      }\n      VIntX(q, 0, fx, fy, fz, field0, field1)\n    }\n\n    if (bits & 2) {\n      if (!noNormals) {\n        compNorm(q1)\n        compNorm(q1y)\n      }\n      VIntY(q1, 1, fx2, fy, fz, field1, field3)\n    }\n\n    if (bits & 4) {\n      if (!noNormals) {\n        compNorm(qy)\n        compNorm(q1y)\n      }\n      VIntX(qy, 2, fx, fy2, fz, field2, field3)\n    }\n\n    if (bits & 8) {\n      if (!noNormals) {\n        compNorm(q)\n        compNorm(qy)\n      }\n      VIntY(q, 3, fx, fy, fz, field0, field2)\n    }\n\n    // bottom of the cube\n\n    if (bits & 16) {\n      if (!noNormals) {\n        compNorm(qz)\n        compNorm(q1z)\n      }\n      VIntX(qz, 4, fx, fy, fz2, field4, field5)\n    }\n\n    if (bits & 32) {\n      if (!noNormals) {\n        compNorm(q1z)\n        compNorm(q1yz)\n      }\n      VIntY(q1z, 5, fx2, fy, fz2, field5, field7)\n    }\n\n    if (bits & 64) {\n      if (!noNormals) {\n        compNorm(qyz)\n        compNorm(q1yz)\n      }\n      VIntX(qyz, 6, fx, fy2, fz2, field6, field7)\n    }\n\n    if (bits & 128) {\n      if (!noNormals) {\n        compNorm(qz)\n        compNorm(qyz)\n      }\n      VIntY(qz, 7, fx, fy, fz2, field4, field6)\n    }\n\n    // vertical lines of the cube\n\n    if (bits & 256) {\n      if (!noNormals) {\n        compNorm(q)\n        compNorm(qz)\n      }\n      VIntZ(q, 8, fx, fy, fz, field0, field4)\n    }\n\n    if (bits & 512) {\n      if (!noNormals) {\n        compNorm(q1)\n        compNorm(q1z)\n      }\n      VIntZ(q1, 9, fx2, fy, fz, field1, field5)\n    }\n\n    if (bits & 1024) {\n      if (!noNormals) {\n        compNorm(q1y)\n        compNorm(q1yz)\n      }\n      VIntZ(q1y, 10, fx2, fy2, fz, field3, field7)\n    }\n\n    if (bits & 2048) {\n      if (!noNormals) {\n        compNorm(qy)\n        compNorm(qyz)\n      }\n      VIntZ(qy, 11, fx, fy2, fz, field2, field6)\n    }\n\n    var triIndex = cubeindex << 4 // re-purpose cubeindex into an offset into triTable\n\n    var e1\n    var e2\n    var e3\n    var i = 0\n\n    // here is where triangles are created\n\n    while (triTable[ triIndex + i ] !== -1) {\n      e1 = triTable[ triIndex + i ]\n      e2 = triTable[ triIndex + i + 1 ]\n      e3 = triTable[ triIndex + i + 2 ]\n\n      if (contour) {\n        if (allowedContours[ e1 ][ e2 ] & edgeFilter) {\n          indexArray[ icount++ ] = ilist[ e1 ]\n          indexArray[ icount++ ] = ilist[ e2 ]\n        }\n        if (allowedContours[ e2 ][ e3 ] & edgeFilter) {\n          indexArray[ icount++ ] = ilist[ e2 ]\n          indexArray[ icount++ ] = ilist[ e3 ]\n        }\n        if (allowedContours[ e1 ][ e3 ] & edgeFilter) {\n          indexArray[ icount++ ] = ilist[ e1 ]\n          indexArray[ icount++ ] = ilist[ e3 ]\n        }\n      } else {\n        indexArray[ icount++ ] = ilist[ isNegativeIso ? e1 : e2 ]\n        indexArray[ icount++ ] = ilist[ isNegativeIso ? e2 : e1 ]\n        indexArray[ icount++ ] = ilist[ e3 ]\n      }\n\n      i += 3\n    }\n  }\n\n  function triangulate (xBeg?: number, yBeg?: number, zBeg?: number, xEnd?: number, yEnd?: number, zEnd?: number) {\n    let q\n    let q3\n    let x\n    let y\n    let z\n    let yOffset\n    let zOffset\n\n    xBeg = xBeg !== undefined ? xBeg : 0\n    yBeg = yBeg !== undefined ? yBeg : 0\n    zBeg = zBeg !== undefined ? zBeg : 0\n\n    xEnd = xEnd !== undefined ? xEnd : nx - 1\n    yEnd = yEnd !== undefined ? yEnd : ny - 1\n    zEnd = zEnd !== undefined ? zEnd : nz - 1\n\n    if (!wrap) {\n      if (noNormals) {\n        xBeg = Math.max(0, xBeg)\n        yBeg = Math.max(0, yBeg)\n        zBeg = Math.max(0, zBeg)\n\n        xEnd = Math.min(nx - 1, xEnd)\n        yEnd = Math.min(ny - 1, yEnd)\n        zEnd = Math.min(nz - 1, zEnd)\n      } else {\n        xBeg = Math.max(1, xBeg)\n        yBeg = Math.max(1, yBeg)\n        zBeg = Math.max(1, zBeg)\n\n        xEnd = Math.min(nx - 2, xEnd)\n        yEnd = Math.min(ny - 2, yEnd)\n        zEnd = Math.min(nz - 2, zEnd)\n      }\n    }\n\n    let xBeg2, yBeg2, zBeg2, xEnd2, yEnd2, zEnd2\n\n    if (!wrap) {\n      // init part of the vertexIndex\n      // (takes a significant amount of time to do for all)\n\n      xBeg2 = Math.max(0, xBeg - 2)\n      yBeg2 = Math.max(0, yBeg - 2)\n      zBeg2 = Math.max(0, zBeg - 2)\n\n      xEnd2 = Math.min(nx, xEnd + 2)\n      yEnd2 = Math.min(ny, yEnd + 2)\n      zEnd2 = Math.min(nz, zEnd + 2)\n\n      for (z = zBeg2; z < zEnd2; ++z) {\n        zOffset = zd * z\n        for (y = yBeg2; y < yEnd2; ++y) {\n          yOffset = zOffset + yd * y\n          for (x = xBeg2; x < xEnd2; ++x) {\n            q = 3 * (yOffset + x)\n            vertexIndex[ q ] = -1\n            vertexIndex[ q + 1 ] = -1\n            vertexIndex[ q + 2 ] = -1\n          }\n        }\n      }\n    } else {\n      xBeg2 = xBeg - 2\n      yBeg2 = yBeg - 2\n      zBeg2 = zBeg - 2\n\n      xEnd2 = xEnd + 2\n      yEnd2 = yEnd + 2\n      zEnd2 = zEnd + 2\n\n      for (z = zBeg2; z < zEnd2; ++z) {\n        for (y = yBeg2; y < yEnd2; ++y) {\n          for (x = xBeg2; x < xEnd2; ++x) {\n            q3 = index(x, y, z) * 3\n            vertexIndex[ q3 ] = -1\n            vertexIndex[ q3 + 1 ] = -1\n            vertexIndex[ q3 + 2 ] = -1\n          }\n        }\n      }\n    }\n\n    if (!wrap) {\n      // clip space where the isovalue is too low\n\n      var __break\n      var __xBeg = xBeg; var __yBeg = yBeg; var __zBeg = zBeg\n      var __xEnd = xEnd; var __yEnd = yEnd; var __zEnd = zEnd\n\n      __break = false\n      for (z = zBeg; z < zEnd; ++z) {\n        for (y = yBeg; y < yEnd; ++y) {\n          for (x = xBeg; x < xEnd; ++x) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __zBeg = z\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      __break = false\n      for (y = yBeg; y < yEnd; ++y) {\n        for (z = __zBeg; z < zEnd; ++z) {\n          for (x = xBeg; x < xEnd; ++x) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __yBeg = y\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      __break = false\n      for (x = xBeg; x < xEnd; ++x) {\n        for (y = __yBeg; y < yEnd; ++y) {\n          for (z = __zBeg; z < zEnd; ++z) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __xBeg = x\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      __break = false\n      for (z = zEnd; z >= zBeg; --z) {\n        for (y = yEnd; y >= yBeg; --y) {\n          for (x = xEnd; x >= xBeg; --x) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __zEnd = z\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      __break = false\n      for (y = yEnd; y >= yBeg; --y) {\n        for (z = __zEnd; z >= zBeg; --z) {\n          for (x = xEnd; x >= xBeg; --x) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __yEnd = y\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      __break = false\n      for (x = xEnd; x >= xBeg; --x) {\n        for (y = __yEnd; y >= yBeg; --y) {\n          for (z = __zEnd; z >= zBeg; --z) {\n            q = ((nx * ny) * z) + (nx * y) + x\n            if (field[ q ] >= isolevel) {\n              __xEnd = x\n              __break = true\n              break\n            }\n          }\n          if (__break) break\n        }\n        if (__break) break\n      }\n\n      //\n\n      if (noNormals) {\n        xBeg = Math.max(0, __xBeg - 1)\n        yBeg = Math.max(0, __yBeg - 1)\n        zBeg = Math.max(0, __zBeg - 1)\n\n        xEnd = Math.min(nx - 1, __xEnd + 1)\n        yEnd = Math.min(ny - 1, __yEnd + 1)\n        zEnd = Math.min(nz - 1, __zEnd + 1)\n      } else {\n        xBeg = Math.max(1, __xBeg - 1)\n        yBeg = Math.max(1, __yBeg - 1)\n        zBeg = Math.max(1, __zBeg - 1)\n\n        xEnd = Math.min(nx - 2, __xEnd + 1)\n        yEnd = Math.min(ny - 2, __yEnd + 1)\n        zEnd = Math.min(nz - 2, __zEnd + 1)\n      }\n    }\n\n    // polygonize part of the grid\n    var edgeFilter = 15\n    for (z = zBeg; z < zEnd; ++z, edgeFilter &= ~4) {\n      zOffset = zd * z\n      edgeFilter |= 2\n      for (y = yBeg; y < yEnd; ++y, edgeFilter &= ~2) {\n        yOffset = zOffset + yd * y\n        edgeFilter |= 1\n        for (x = xBeg; x < xEnd; ++x, edgeFilter &= ~1) {\n          q = yOffset + x\n          polygonize(x, y, z, q, edgeFilter)\n        }\n      }\n    }\n  }\n}\nObject.assign(MarchingCubes, {__deps: [ getEdgeTable, getTriTable, getAllowedContours, getUintArray ]})\n\nexport default MarchingCubes\n","/**\n * @file Matrix Utils\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n *\n * svd methods from Eugene Zatepyakin / http://inspirit.github.io/jsfeat/\n */\n\nimport { NumberArray } from '../types'\nimport { v3new, v3cross } from './vector-utils'\n\nexport class Matrix {\n  size: number\n  data: Float32Array\n\n  constructor (readonly cols: number, readonly rows: number) {\n    this.size = this.cols * this.rows\n    this.data = new Float32Array(this.size)\n  }\n\n  copyTo (matrix: Matrix) {\n    matrix.data.set(this.data)\n  }\n}\n\nexport function transpose (At: Matrix, A: Matrix) {\n  let i = 0\n  let j = 0\n  const nrows = A.rows\n  const ncols = A.cols\n  let Ai = 0\n  let Ati = 0\n  let pAt = 0\n  const ad = A.data\n  const atd = At.data\n\n  for (; i < nrows; Ati += 1, Ai += ncols, i++) {\n    pAt = Ati\n    for (j = 0; j < ncols; pAt += nrows, j++) atd[pAt] = ad[Ai + j]\n  }\n}\n\n// C = A * B\nexport function multiply (C: Matrix, A: Matrix, B: Matrix) {\n  let i = 0\n  let j = 0\n  let k = 0\n  let Ap = 0\n  let pA = 0\n  let pB = 0\n  let _pB = 0\n  let Cp = 0\n  const ncols = A.cols\n  const nrows = A.rows\n  const mcols = B.cols\n  const ad = A.data\n  const bd = B.data\n  const cd = C.data\n  let sum = 0.0\n\n  for (; i < nrows; Ap += ncols, i++) {\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\n      pB = _pB\n      pA = Ap\n      sum = 0.0\n      for (k = 0; k < ncols; pA++, pB += mcols, k++) {\n        sum += ad[pA] * bd[pB]\n      }\n      cd[Cp] = sum\n    }\n  }\n}\n\n// C = A * B'\nexport function multiplyABt (C: Matrix, A: Matrix, B: Matrix) {\n  let i = 0\n  let j = 0\n  let k = 0\n  let Ap = 0\n  let pA = 0\n  let pB = 0\n  let Cp = 0\n  const ncols = A.cols\n  const nrows = A.rows\n  const mrows = B.rows\n  const ad = A.data\n  const bd = B.data\n  const cd = C.data\n  let sum = 0.0\n\n  for (; i < nrows; Ap += ncols, i++) {\n    for (pB = 0, j = 0; j < mrows; Cp++, j++) {\n      pA = Ap\n      sum = 0.0\n      for (k = 0; k < ncols; pA++, pB++, k++) {\n        sum += ad[pA] * bd[pB]\n      }\n      cd[Cp] = sum\n    }\n  }\n}\n\n// C = A' * B\nexport function multiplyAtB (C: Matrix, A: Matrix, B: Matrix) {\n  let i = 0\n  let j = 0\n  let k = 0\n  let Ap = 0\n  let pA = 0\n  let pB = 0\n  let _pB = 0\n  let Cp = 0\n  const ncols = A.cols\n  const nrows = A.rows\n  const mcols = B.cols\n  const ad = A.data\n  const bd = B.data\n  const cd = C.data\n  let sum = 0.0\n\n  for (; i < ncols; Ap++, i++) {\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\n      pB = _pB\n      pA = Ap\n      sum = 0.0\n      for (k = 0; k < nrows; pA += ncols, pB += mcols, k++) {\n        sum += ad[pA] * bd[pB]\n      }\n      cd[Cp] = sum\n    }\n  }\n}\n\nexport function invert3x3 (from: Matrix, to: Matrix) {\n  const A = from.data\n  const invA = to.data\n  const t1 = A[4]\n  const t2 = A[8]\n  const t4 = A[5]\n  const t5 = A[7]\n  const t8 = A[0]\n\n  const t9 = t8 * t1\n  const t11 = t8 * t4\n  const t13 = A[3]\n  const t14 = A[1]\n  const t15 = t13 * t14\n  const t17 = A[2]\n  const t18 = t13 * t17\n  const t20 = A[6]\n  const t21 = t20 * t14\n  const t23 = t20 * t17\n  const t26 = 1.0 / (t9 * t2 - t11 * t5 - t15 * t2 + t18 * t5 + t21 * t4 - t23 * t1)\n  invA[0] = (t1 * t2 - t4 * t5) * t26\n  invA[1] = -(t14 * t2 - t17 * t5) * t26\n  invA[2] = -(-t14 * t4 + t17 * t1) * t26\n  invA[3] = -(t13 * t2 - t4 * t20) * t26\n  invA[4] = (t8 * t2 - t23) * t26\n  invA[5] = -(t11 - t18) * t26\n  invA[6] = -(-t13 * t5 + t1 * t20) * t26\n  invA[7] = -(t8 * t5 - t21) * t26\n  invA[8] = (t9 - t15) * t26\n}\n\nexport function mat3x3determinant (M: Matrix) {\n  const md = M.data\n  return md[0] * md[4] * md[8] -\n    md[0] * md[5] * md[7] -\n    md[3] * md[1] * md[8] +\n    md[3] * md[2] * md[7] +\n    md[6] * md[1] * md[5] -\n    md[6] * md[2] * md[4]\n}\n\n// C = A * B\nexport function multiply3x3 (C: Matrix, A: Matrix, B: Matrix) {\n  const Cd = C.data\n  const Ad = A.data\n  const Bd = B.data\n  const m10 = Ad[0]\n  const m11 = Ad[1]\n  const m12 = Ad[2]\n  const m13 = Ad[3]\n  const m14 = Ad[4]\n  const m15 = Ad[5]\n  const m16 = Ad[6]\n  const m17 = Ad[7]\n  const m18 = Ad[8]\n\n  const m20 = Bd[0]\n  const m21 = Bd[1]\n  const m22 = Bd[2]\n  const m23 = Bd[3]\n  const m24 = Bd[4]\n  const m25 = Bd[5]\n  const m26 = Bd[6]\n  const m27 = Bd[7]\n  const m28 = Bd[8]\n\n  Cd[0] = m10 * m20 + m11 * m23 + m12 * m26\n  Cd[1] = m10 * m21 + m11 * m24 + m12 * m27\n  Cd[2] = m10 * m22 + m11 * m25 + m12 * m28\n  Cd[3] = m13 * m20 + m14 * m23 + m15 * m26\n  Cd[4] = m13 * m21 + m14 * m24 + m15 * m27\n  Cd[5] = m13 * m22 + m14 * m25 + m15 * m28\n  Cd[6] = m16 * m20 + m17 * m23 + m18 * m26\n  Cd[7] = m16 * m21 + m17 * m24 + m18 * m27\n  Cd[8] = m16 * m22 + m17 * m25 + m18 * m28\n}\n\nexport function meanRows (A: Matrix) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n  const mean = new Array(ncols)\n\n  for (let j = 0; j < ncols; ++j) {\n    mean[ j ] = 0.0\n  }\n\n  for (let i = 0, p = 0; i < nrows; ++i) {\n    for (let j = 0; j < ncols; ++j, ++p) {\n      mean[ j ] += Ad[ p ]\n    }\n  }\n\n  for (let j = 0; j < ncols; ++j) {\n    mean[ j ] /= nrows\n  }\n\n  return mean\n}\n\nexport function meanCols (A: Matrix) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n  const mean = new Array(nrows)\n\n  for (let j = 0; j < nrows; ++j) {\n    mean[ j ] = 0.0\n  }\n\n  for (let i = 0, p = 0; i < ncols; ++i) {\n    for (let j = 0; j < nrows; ++j, ++p) {\n      mean[ j ] += Ad[ p ]\n    }\n  }\n\n  for (let j = 0; j < nrows; ++j) {\n    mean[ j ] /= ncols\n  }\n\n  return mean\n}\n\nexport function subRows (A: Matrix, row: number[]) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n\n  for (let i = 0, p = 0; i < nrows; ++i) {\n    for (let j = 0; j < ncols; ++j, ++p) {\n      Ad[ p ] -= row[ j ]\n    }\n  }\n}\n\nexport function subCols (A: Matrix, col: number[]) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n\n  for (let i = 0, p = 0; i < ncols; ++i) {\n    for (let j = 0; j < nrows; ++j, ++p) {\n      Ad[ p ] -= col[ j ]\n    }\n  }\n}\n\nexport function addRows (A: Matrix, row: number[]) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n\n  for (let i = 0, p = 0; i < nrows; ++i) {\n    for (let j = 0; j < ncols; ++j, ++p) {\n      Ad[ p ] += row[ j ]\n    }\n  }\n}\n\nexport function addCols (A: Matrix, col: number[]) {\n  const nrows = A.rows\n  const ncols = A.cols\n  const Ad = A.data\n\n  for (let i = 0, p = 0; i < ncols; ++i) {\n    for (let j = 0; j < nrows; ++j, ++p) {\n      Ad[ p ] += col[ j ]\n    }\n  }\n}\n\nexport function swap (A: NumberArray, i0: number, i1: number, t: number) {\n  t = A[i0]\n  A[i0] = A[i1]\n  A[i1] = t\n}\n\nexport function hypot (a: number, b: number) {\n  a = Math.abs(a)\n  b = Math.abs(b)\n  if (a > b) {\n    b /= a\n    return a * Math.sqrt(1.0 + b * b)\n  }\n  if (b > 0) {\n    a /= b\n    return b * Math.sqrt(1.0 + a * a)\n  }\n  return 0.0\n}\n\nconst EPSILON = 0.0000001192092896\nconst FLT_MIN = 1E-37\n\nexport function JacobiSVDImpl (At: NumberArray, astep: number, _W: NumberArray, Vt: NumberArray, vstep: number, m: number, n: number, n1: number) {\n  const eps = EPSILON * 2.0\n  const minval = FLT_MIN\n  let i = 0\n  let j = 0\n  let k = 0\n  let iter = 0\n  const maxIter = Math.max(m, 30)\n  let Ai = 0\n  let Aj = 0\n  let Vi = 0\n  let Vj = 0\n  let changed = 0\n  let c = 0.0\n  let s = 0.0\n  let t = 0.0\n  let t0 = 0.0\n  let t1 = 0.0\n  let sd = 0.0\n  let beta = 0.0\n  let gamma = 0.0\n  let delta = 0.0\n  let a = 0.0\n  let p = 0.0\n  let b = 0.0\n  let seed = 0x1234\n  let val = 0.0\n  let val0 = 0.0\n  let asum = 0.0\n\n  const W = new Float64Array(n << 3)\n\n  for (; i < n; i++) {\n    for (k = 0, sd = 0; k < m; k++) {\n      t = At[i * astep + k]\n      sd += t * t\n    }\n    W[i] = sd\n\n    if (Vt) {\n      for (k = 0; k < n; k++) {\n        Vt[i * vstep + k] = 0\n      }\n      Vt[i * vstep + i] = 1\n    }\n  }\n\n  for (; iter < maxIter; iter++) {\n    changed = 0\n\n    for (i = 0; i < n - 1; i++) {\n      for (j = i + 1; j < n; j++) {\n        Ai = (i * astep) | 0\n        Aj = (j * astep) | 0\n        a = W[i]\n        p = 0\n        b = W[j]\n\n        k = 2\n        p += At[Ai] * At[Aj]\n        p += At[Ai + 1] * At[Aj + 1]\n\n        for (; k < m; k++) { p += At[Ai + k] * At[Aj + k] }\n\n        if (Math.abs(p) <= eps * Math.sqrt(a * b)) continue\n\n        p *= 2.0\n        beta = a - b\n        gamma = hypot(p, beta)\n        if (beta < 0) {\n          delta = (gamma - beta) * 0.5\n          s = Math.sqrt(delta / gamma)\n          c = (p / (gamma * s * 2.0))\n        } else {\n          c = Math.sqrt((gamma + beta) / (gamma * 2.0))\n          s = (p / (gamma * c * 2.0))\n        }\n\n        a = 0.0\n        b = 0.0\n\n        k = 2 // unroll\n        t0 = c * At[Ai] + s * At[Aj]\n        t1 = -s * At[Ai] + c * At[Aj]\n        At[Ai] = t0; At[Aj] = t1\n        a += t0 * t0; b += t1 * t1\n\n        t0 = c * At[Ai + 1] + s * At[Aj + 1]\n        t1 = -s * At[Ai + 1] + c * At[Aj + 1]\n        At[Ai + 1] = t0; At[Aj + 1] = t1\n        a += t0 * t0; b += t1 * t1\n\n        for (; k < m; k++) {\n          t0 = c * At[Ai + k] + s * At[Aj + k]\n          t1 = -s * At[Ai + k] + c * At[Aj + k]\n          At[Ai + k] = t0; At[Aj + k] = t1\n\n          a += t0 * t0; b += t1 * t1\n        }\n\n        W[i] = a\n        W[j] = b\n\n        changed = 1\n\n        if (Vt) {\n          Vi = (i * vstep) | 0\n          Vj = (j * vstep) | 0\n\n          k = 2\n          t0 = c * Vt[Vi] + s * Vt[Vj]\n          t1 = -s * Vt[Vi] + c * Vt[Vj]\n          Vt[Vi] = t0; Vt[Vj] = t1\n\n          t0 = c * Vt[Vi + 1] + s * Vt[Vj + 1]\n          t1 = -s * Vt[Vi + 1] + c * Vt[Vj + 1]\n          Vt[Vi + 1] = t0; Vt[Vj + 1] = t1\n\n          for (; k < n; k++) {\n            t0 = c * Vt[Vi + k] + s * Vt[Vj + k]\n            t1 = -s * Vt[Vi + k] + c * Vt[Vj + k]\n            Vt[Vi + k] = t0; Vt[Vj + k] = t1\n          }\n        }\n      }\n    }\n    if (changed === 0) break\n  }\n\n  for (i = 0; i < n; i++) {\n    for (k = 0, sd = 0; k < m; k++) {\n      t = At[i * astep + k]\n      sd += t * t\n    }\n    W[i] = Math.sqrt(sd)\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    j = i\n    for (k = i + 1; k < n; k++) {\n      if (W[j] < W[k]) { j = k }\n    }\n    if (i !== j) {\n      swap(W, i, j, sd)\n      if (Vt) {\n        for (k = 0; k < m; k++) {\n          swap(At, i * astep + k, j * astep + k, t)\n        }\n\n        for (k = 0; k < n; k++) {\n          swap(Vt, i * vstep + k, j * vstep + k, t)\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    _W[i] = W[i]\n  }\n\n  if (!Vt) {\n    return\n  }\n\n  for (i = 0; i < n1; i++) {\n    sd = i < n ? W[i] : 0\n\n    while (sd <= minval) {\n      // if we got a zero singular value, then in order to get the corresponding left singular vector\n      // we generate a random vector, project it to the previously computed left singular vectors,\n      // subtract the projection and normalize the difference.\n      val0 = (1.0 / m)\n      for (k = 0; k < m; k++) {\n        seed = (seed * 214013 + 2531011)\n        val = (((seed >> 16) & 0x7fff) & 256) !== 0 ? val0 : -val0\n        At[i * astep + k] = val\n      }\n      for (iter = 0; iter < 2; iter++) {\n        for (j = 0; j < i; j++) {\n          sd = 0\n          for (k = 0; k < m; k++) {\n            sd += At[i * astep + k] * At[j * astep + k]\n          }\n          asum = 0.0\n          for (k = 0; k < m; k++) {\n            t = (At[i * astep + k] - sd * At[j * astep + k])\n            At[i * astep + k] = t\n            asum += Math.abs(t)\n          }\n          asum = asum ? 1.0 / asum : 0\n          for (k = 0; k < m; k++) {\n            At[i * astep + k] *= asum\n          }\n        }\n      }\n      sd = 0\n      for (k = 0; k < m; k++) {\n        t = At[i * astep + k]\n        sd += t * t\n      }\n      sd = Math.sqrt(sd)\n    }\n\n    s = (1.0 / sd)\n    for (k = 0; k < m; k++) {\n      At[i * astep + k] *= s\n    }\n  }\n}\n\nexport function svd (A: Matrix, W: Matrix, U: Matrix, V: Matrix) {\n  let at = 0\n  let i = 0\n  const _m = A.rows\n  const _n = A.cols\n  let m = _m\n  let n = _n\n\n  if (m < n) {\n    at = 1\n    i = m\n    m = n\n    n = i\n  }\n\n  const amt = new Matrix(m, m)\n  const wmt = new Matrix(1, n)\n  const vmt = new Matrix(n, n)\n\n  if (at === 0) {\n    transpose(amt, A)\n  } else {\n    for (i = 0; i < _n * _m; i++) {\n      amt.data[i] = A.data[i]\n    }\n    for (; i < n * m; i++) {\n      amt.data[i] = 0\n    }\n  }\n\n  JacobiSVDImpl(amt.data, m, wmt.data, vmt.data, n, m, n, m)\n\n  if (W) {\n    for (i = 0; i < n; i++) {\n      W.data[i] = wmt.data[i]\n    }\n    for (; i < _n; i++) {\n      W.data[i] = 0\n    }\n  }\n\n  if (at === 0) {\n    if (U) transpose(U, amt)\n    if (V) transpose(V, vmt)\n  } else {\n    if (U) transpose(U, vmt)\n    if (V) transpose(V, amt)\n  }\n}\n\n//\n\nexport function m4new () {\n  return new Float32Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ])\n}\n\nexport function m4set (out: Float32Array, n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number) {\n  out[ 0 ] = n11; out[ 4 ] = n12; out[ 8 ] = n13; out[ 12 ] = n14\n  out[ 1 ] = n21; out[ 5 ] = n22; out[ 9 ] = n23; out[ 13 ] = n24\n  out[ 2 ] = n31; out[ 6 ] = n32; out[ 10 ] = n33; out[ 14 ] = n34\n  out[ 3 ] = n41; out[ 7 ] = n42; out[ 11 ] = n43; out[ 15 ] = n44\n}\n\nexport function m4identity (out: Float32Array) {\n  m4set(out,\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  )\n}\n(m4identity as any).__deps = [ m4set ]\n\nexport function m4multiply (out: Float32Array, a: Float32Array, b: Float32Array) {\n  const a11 = a[ 0 ]\n  const a12 = a[ 4 ]\n  const a13 = a[ 8 ]\n  const a14 = a[ 12 ]\n  const a21 = a[ 1 ]\n  const a22 = a[ 5 ]\n  const a23 = a[ 9 ]\n  const a24 = a[ 13 ]\n  const a31 = a[ 2 ]\n  const a32 = a[ 6 ]\n  const a33 = a[ 10 ]\n  const a34 = a[ 14 ]\n  const a41 = a[ 3 ]\n  const a42 = a[ 7 ]\n  const a43 = a[ 11 ]\n  const a44 = a[ 15 ]\n\n  const b11 = b[ 0 ]\n  const b12 = b[ 4 ]\n  const b13 = b[ 8 ]\n  const b14 = b[ 12 ]\n  const b21 = b[ 1 ]\n  const b22 = b[ 5 ]\n  const b23 = b[ 9 ]\n  const b24 = b[ 13 ]\n  const b31 = b[ 2 ]\n  const b32 = b[ 6 ]\n  const b33 = b[ 10 ]\n  const b34 = b[ 14 ]\n  const b41 = b[ 3 ]\n  const b42 = b[ 7 ]\n  const b43 = b[ 11 ]\n  const b44 = b[ 15 ]\n\n  out[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41\n  out[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42\n  out[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43\n  out[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44\n\n  out[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41\n  out[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42\n  out[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43\n  out[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44\n\n  out[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41\n  out[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42\n  out[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43\n  out[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44\n\n  out[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41\n  out[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42\n  out[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43\n  out[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44\n}\n\nexport function m4makeScale (out: Float32Array, x: number, y: number, z: number) {\n  m4set(out,\n    x, 0, 0, 0,\n    0, y, 0, 0,\n    0, 0, z, 0,\n    0, 0, 0, 1\n  )\n}\n(m4makeScale as any).__deps = [ m4set ]\n\nexport function m4makeTranslation (out: Float32Array, x: number, y: number, z: number) {\n  m4set(out,\n    1, 0, 0, x,\n    0, 1, 0, y,\n    0, 0, 1, z,\n    0, 0, 0, 1\n  )\n}\n(m4makeTranslation as any).__deps = [ m4set ]\n\nexport function m4makeRotationY (out: Float32Array, theta: number) {\n  const c = Math.cos(theta)\n  const s = Math.sin(theta)\n  m4set(out,\n    c, 0, s, 0,\n    0, 1, 0, 0,\n    -s, 0, c, 0,\n    0, 0, 0, 1\n  )\n}\n(m4makeRotationY as any).__deps = [ m4set ]\n\n//\n\nexport function m3new () {\n  return new Float32Array([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ])\n}\n\nexport function m3makeNormal (out: Float32Array, m4: Float32Array) {\n  const r0 = v3new([ m4[0], m4[1], m4[2] ])\n  const r1 = v3new([ m4[4], m4[5], m4[6] ])\n  const r2 = v3new([ m4[8], m4[9], m4[10] ])\n  const cp = v3new()\n  //        [ r0 ]       [ r1 x r2 ]\n  // M3x3 = [ r1 ]   N = [ r2 x r0 ]\n  //        [ r2 ]       [ r0 x r1 ]\n  v3cross(cp, r1, r2)\n  out[ 0 ] = cp[ 0 ]\n  out[ 1 ] = cp[ 1 ]\n  out[ 2 ] = cp[ 2 ]\n  v3cross(cp, r2, r0)\n  out[ 3 ] = cp[ 0 ]\n  out[ 4 ] = cp[ 1 ]\n  out[ 5 ] = cp[ 2 ]\n  v3cross(cp, r0, r1)\n  out[ 6 ] = cp[ 0 ]\n  out[ 7 ] = cp[ 1 ]\n  out[ 8 ] = cp[ 2 ]\n}\n(m3makeNormal as any).__deps = [ v3new, v3cross ]\n","/**\n * @file Surface Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { degToRad } from '../math/math-utils'\nimport {\n  m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\n} from '../math/matrix-utils'\nimport {\n  v3addScalar, v3subScalar, v3divideScalar, v3multiplyScalar,\n  v3floor, v3ceil, v3sub, v3negate,\n  v3cross, v3fromArray, normalizeVector3array\n} from '../math/vector-utils'\nimport { NumberArray } from '../types'\n\nfunction laplacianSmooth (verts: Float32Array, faces: Float32Array, numiter: number, inflate: boolean) {\n  // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\n  // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n  //\n  // Permission to use, copy, modify, and distribute this program for\n  // any purpose, with or without fee, is hereby granted, provided that\n  // the notices on the head, the reference information, and this\n  // copyright notice appear in all copies or substantial portions of\n  // the Software. It is provided \"as is\" without express or implied\n  // warranty.\n  //\n  // ported to JavaScript and adapted to NGL by Alexander Rose\n\n  numiter = numiter || 1\n  inflate = inflate || true\n\n  const nv = verts.length / 3\n  const nf = faces.length / 3\n  let norms: Float32Array | undefined = undefined\n\n  if (inflate) {\n    norms = new Float32Array(nv * 3)\n  }\n\n  const tps = new Float32Array(nv * 3)\n\n  let i\n  const ndeg = 20\n  const vertdeg = new Array(ndeg)\n\n  for (i = 0; i < ndeg; ++i) {\n    vertdeg[ i ] = new Uint32Array(nv)\n  }\n\n  for (i = 0; i < nv; ++i) {\n    vertdeg[ 0 ][ i ] = 0\n  }\n\n  let j, jl\n  let flagvert: boolean\n\n  // for each face\n\n  for (i = 0; i < nf; ++i) {\n    var ao = i * 3\n    var bo = i * 3 + 1\n    var co = i * 3 + 2\n\n    // vertex a\n\n    flagvert = true\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ao] ]; j < jl; ++j) {\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ ao ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ bo ]\n    }\n\n    flagvert = true\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ ao ] ]; j < jl; ++j) {\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ ao ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ co ]\n    }\n\n    // vertex b\n\n    flagvert = true\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ bo ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ ao ]\n    }\n\n    flagvert = true\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ bo ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ co ]\n    }\n\n    // vertex c\n\n    flagvert = true\n    for (j = 0; j < vertdeg[ 0 ][ faces[ co ] ]; ++j) {\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ co ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ ao ]\n    }\n\n    flagvert = true\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ co ] ]; j < jl; ++j) {\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\n        flagvert = false\n        break\n      }\n    }\n    if (flagvert) {\n      vertdeg[ 0 ][ faces[ co ] ]++\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ bo ]\n    }\n  }\n\n  var wt = 1.0\n  var wt2 = 0.5\n  var i3, vi3, vdi, wtvi, wt2vi\n  var ssign = -1\n  var scaleFactor = 1\n  var outwt = 0.75 / (scaleFactor + 3.5) // area-preserving\n\n  // smoothing iterations\n\n  for (var k = 0; k < numiter; ++k) {\n    // for each vertex\n\n    for (i = 0; i < nv; ++i) {\n      i3 = i * 3\n      vdi = vertdeg[ 0 ][ i ]\n\n      if (vdi < 3) {\n        tps[ i3 ] = verts[ i3 ]\n        tps[ i3 + 1 ] = verts[ i3 + 1 ]\n        tps[ i3 + 2 ] = verts[ i3 + 2 ]\n      } else if (vdi === 3 || vdi === 4) {\n        tps[ i3 ] = 0\n        tps[ i3 + 1 ] = 0\n        tps[ i3 + 2 ] = 0\n\n        for (j = 0; j < vdi; ++j) {\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\n          tps[ i3 ] += verts[ vi3 ]\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\n        }\n\n        tps[ i3 ] += wt2 * verts[ i3 ]\n        tps[ i3 + 1 ] += wt2 * verts[ i3 + 1 ]\n        tps[ i3 + 2 ] += wt2 * verts[ i3 + 2 ]\n\n        wt2vi = wt2 + vdi\n        tps[ i3 ] /= wt2vi\n        tps[ i3 + 1 ] /= wt2vi\n        tps[ i3 + 2 ] /= wt2vi\n      } else {\n        tps[ i3 ] = 0\n        tps[ i3 + 1 ] = 0\n        tps[ i3 + 2 ] = 0\n\n        for (j = 0; j < vdi; ++j) {\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\n          tps[ i3 ] += verts[ vi3 ]\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\n        }\n\n        tps[ i3 ] += wt * verts[ i3 ]\n        tps[ i3 + 1 ] += wt * verts[ i3 + 1 ]\n        tps[ i3 + 2 ] += wt * verts[ i3 + 2 ]\n\n        wtvi = wt + vdi\n        tps[ i3 ] /= wtvi\n        tps[ i3 + 1 ] /= wtvi\n        tps[ i3 + 2 ] /= wtvi\n      }\n    }\n\n    verts.set(tps) // copy smoothed positions\n\n    if (inflate) {\n      computeVertexNormals(verts, faces, norms)\n      var nv3 = nv * 3\n\n      for (i3 = 0; i3 < nv3; i3 += 3) {\n        // if(verts[i].inout) ssign=1;\n        // else ssign=-1;\n\n        verts[ i3 ] += ssign * outwt * norms![ i3 ]\n        verts[ i3 + 1 ] += ssign * outwt * norms![ i3 + 1 ]\n        verts[ i3 + 2 ] += ssign * outwt * norms![ i3 + 2 ]\n      }\n    }\n  }\n}\nObject.assign(laplacianSmooth, {__deps: [ computeVertexNormals ]})\n\nfunction computeVertexNormals (position: Float32Array, index?: NumberArray, normal?: Float32Array) {\n  var i, il\n\n  if (normal === undefined) {\n    normal = new Float32Array(position.length)\n  } else {\n    // reset existing normals to zero\n    for (i = 0, il = normal.length; i < il; i++) {\n      normal[ i ] = 0\n    }\n  }\n\n  var a = new Float32Array(3)\n  var b = new Float32Array(3)\n  var c = new Float32Array(3)\n  var cb = new Float32Array(3)\n  var ab = new Float32Array(3)\n\n  if (index) {\n    // indexed elements\n    for (i = 0, il = index.length; i < il; i += 3) {\n      var ai = index[ i ] * 3\n      var bi = index[ i + 1 ] * 3\n      var ci = index[ i + 2 ] * 3\n\n      v3fromArray(a, position, ai)\n      v3fromArray(b, position, bi)\n      v3fromArray(c, position, ci)\n\n      v3sub(cb, c, b)\n      v3sub(ab, a, b)\n      v3cross(cb, cb, ab)\n\n      normal[ ai ] += cb[ 0 ]\n      normal[ ai + 1 ] += cb[ 1 ]\n      normal[ ai + 2 ] += cb[ 2 ]\n\n      normal[ bi ] += cb[ 0 ]\n      normal[ bi + 1 ] += cb[ 1 ]\n      normal[ bi + 2 ] += cb[ 2 ]\n\n      normal[ ci ] += cb[ 0 ]\n      normal[ ci + 1 ] += cb[ 1 ]\n      normal[ ci + 2 ] += cb[ 2 ]\n    }\n  } else {\n    // non-indexed elements (unconnected triangle soup)\n    for (i = 0, il = position.length; i < il; i += 9) {\n      v3fromArray(a, position, i)\n      v3fromArray(b, position, i + 3)\n      v3fromArray(c, position, i + 6)\n\n      v3sub(cb, c, b)\n      v3sub(ab, a, b)\n      v3cross(cb, cb, ab)\n\n      normal[ i ] = cb[ 0 ]\n      normal[ i + 1 ] = cb[ 1 ]\n      normal[ i + 2 ] = cb[ 2 ]\n\n      normal[ i + 3 ] = cb[ 0 ]\n      normal[ i + 4 ] = cb[ 1 ]\n      normal[ i + 5 ] = cb[ 2 ]\n\n      normal[ i + 6 ] = cb[ 0 ]\n      normal[ i + 7 ] = cb[ 1 ]\n      normal[ i + 8 ] = cb[ 2 ]\n    }\n  }\n\n  normalizeVector3array(normal)\n\n  return normal\n}\nObject.assign(computeVertexNormals, {__deps: [\n  v3sub, v3cross, v3fromArray, normalizeVector3array\n]})\n\nfunction getRadiusDict (radiusList: number[]) {\n  var radiusDict: {[k: number]: boolean} = {}\n  for (var i = 0, il = radiusList.length; i < il; ++i) {\n    radiusDict[ radiusList[ i ] ] = true\n  }\n  return radiusDict\n}\n\nfunction getSurfaceGrid (min: Float32Array, max: Float32Array, maxRadius: number, scaleFactor: number, extraMargin: number) {\n  // need margin to avoid boundary/round off effects\n  var margin = (1 / scaleFactor) * 3\n  margin += maxRadius\n\n  v3subScalar(min, min, extraMargin + margin)\n  v3addScalar(max, max, extraMargin + margin)\n\n  v3multiplyScalar(min, min, scaleFactor)\n  v3floor(min, min)\n  v3divideScalar(min, min, scaleFactor)\n\n  v3multiplyScalar(max, max, scaleFactor)\n  v3ceil(max, max)\n  v3divideScalar(max, max, scaleFactor)\n\n  var dim = new Float32Array(3)\n  v3sub(dim, max, min)\n  v3multiplyScalar(dim, dim, scaleFactor)\n  v3ceil(dim, dim)\n  v3addScalar(dim, dim, 1)\n\n  var maxSize = Math.pow(10, 6) * 256\n  var tmpSize = dim[ 0 ] * dim[ 1 ] * dim[ 2 ] * 3\n\n  if (maxSize <= tmpSize) {\n    scaleFactor *= Math.pow(maxSize / tmpSize, 1 / 3)\n\n    v3multiplyScalar(min, min, scaleFactor)\n    v3floor(min, min)\n    v3divideScalar(min, min, scaleFactor)\n\n    v3multiplyScalar(max, max, scaleFactor)\n    v3ceil(max, max)\n    v3divideScalar(max, max, scaleFactor)\n\n    v3sub(dim, max, min)\n    v3multiplyScalar(dim, dim, scaleFactor)\n    v3ceil(dim, dim)\n    v3addScalar(dim, dim, 1)\n  }\n\n  var tran = new Float32Array(min)\n  v3negate(tran, tran)\n\n  // coordinate transformation matrix\n  var matrix = m4new()\n  var mroty = m4new()\n  m4makeRotationY(mroty, degToRad(90))\n  m4multiply(matrix, matrix, mroty)\n\n  var mscale = m4new()\n  m4makeScale(\n    mscale,\n    -1 / scaleFactor,\n    1 / scaleFactor,\n    1 / scaleFactor\n  )\n  m4multiply(matrix, matrix, mscale)\n\n  var mtrans = m4new()\n  m4makeTranslation(\n    mtrans,\n    -scaleFactor * tran[2],\n    -scaleFactor * tran[1],\n    -scaleFactor * tran[0]\n  )\n  m4multiply(matrix, matrix, mtrans)\n\n  return {\n    dim: dim,\n    tran: tran,\n    matrix: matrix,\n    scaleFactor: scaleFactor\n  }\n}\nObject.assign(getSurfaceGrid, {'__deps': [\n  degToRad,\n  v3subScalar, v3addScalar, v3divideScalar, v3multiplyScalar,\n  v3floor, v3ceil, v3sub, v3negate,\n  m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\n]})\n\nexport {\n  laplacianSmooth,\n  computeVertexNormals,\n  getRadiusDict,\n  getSurfaceGrid\n}\n","/**\n * @file Surface\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Box3, Geometry, BufferGeometry, Group, Color } from 'three'\n\nimport { Debug, Log, ColormakerRegistry } from '../globals'\nimport { getUintArray } from '../utils'\nimport { AtomPicker, SurfacePicker } from '../utils/picker'\nimport { uniformArray, uniformArray3, serialArray } from '../math/array-utils'\nimport Selection from '../selection/selection'\nimport { ColormakerParameters } from '../color/colormaker';\nimport { Structure, Volume } from '../ngl';\n\nexport interface SurfaceData {\n  position: Float32Array\n  index: Uint32Array|Uint16Array|undefined\n  normal: Float32Array\n  color: Float32Array\n  atomindex: Int32Array\n  contour: boolean\n}\n/**\n * Surface\n */\nclass Surface {\n  name: string\n  path: string\n  position: Float32Array\n  index: Uint32Array|Uint16Array|undefined\n  normal: Float32Array|undefined\n  color: Float32Array|undefined\n  atomindex: Int32Array|undefined\n  contour: boolean\n  center: Vector3\n  boundingBox: Box3\n  size: number\n  info: {\n    type?: string\n    probeRadius?: number\n    scaleFactor?: number\n    smooth?: number\n    cutoff?: number\n    isolevel?: number\n    volume?: Volume\n  }\n\n  /**\n   * @param {String} name - surface name\n   * @param {String} path - source path\n   * @param {Object} data - surface data\n   * @param {Float32Array} data.position - surface positions\n   * @param {Int32Array} data.index - surface indices\n   * @param {Float32Array} data.normal - surface normals\n   * @param {Float32Array} data.color - surface colors\n   * @param {Int32Array} data.atomindex - atom indices\n   * @param {boolean} data.contour - contour mode flag\n   */\n  constructor (name: string, path: string, data?: SurfaceData) {\n    this.name = name || ''\n    this.path = path || ''\n    this.info = {}\n\n    this.center = new Vector3()\n    this.boundingBox = new Box3()\n\n    if (data instanceof Geometry ||\n      data instanceof BufferGeometry ||\n      data instanceof Group\n    ) {\n      // to be removed\n      this.fromGeometry(data)\n    } else if (data) {\n      this.set(\n        data.position,\n        data.index,\n        data.normal,\n        data.color,\n        data.atomindex,\n        data.contour\n      )\n\n      this.boundingBox.setFromArray(data.position)\n      this.boundingBox.getCenter(this.center)\n    }\n  }\n\n  get type () { return 'Surface' }\n\n  /**\n   * set surface data\n   * @param {Float32Array} position - surface positions\n   * @param {Int32Array} index - surface indices\n   * @param {Float32Array} normal - surface normals\n   * @param {Float32Array} color - surface colors\n   * @param {Int32Array} atomindex - atom indices\n   * @param {boolean} contour - contour mode flag\n   * @return {undefined}\n   */\n  set (position: Float32Array,\n      index: Uint32Array|Uint16Array|undefined,\n      normal: Float32Array|undefined,\n      color: Float32Array|undefined,\n      atomindex: Int32Array|undefined,\n      contour: boolean = false) {\n    /**\n     * @type {Float32Array}\n     */\n    this.position = position\n    /**\n     * @type {Uint32Array|Uint16Array|undefined}\n     */\n    this.index = index\n    /**\n     * @type {Float32Array|undefined}\n     */\n    this.normal = normal\n    /**\n     * @type {Float32Array|undefined}\n     */\n    this.color = color\n    /**\n     * @type {Int32Array|undefined}\n     */\n    this.atomindex = atomindex\n\n    this.size = position.length / 3\n    this.contour = contour\n  }\n\n  fromGeometry (geometry: Geometry|BufferGeometry|Group) {\n    if (Debug) Log.time('GeometrySurface.fromGeometry')\n\n    let geo\n\n    if (geometry instanceof Geometry) {\n      geometry.computeVertexNormals(true)\n      geo = new BufferGeometry().fromGeometry(geometry)\n    } else if (geometry instanceof BufferGeometry) {\n      geo = geometry\n    } else {\n      geo = (geometry as any)[ 0 ]\n    }\n\n    if (!geo.boundingBox) geo.computeBoundingBox()\n\n    this.boundingBox.copy(geo.boundingBox)\n    this.boundingBox.getCenter(this.center)\n\n    let position, color, index, normal\n\n    if (geo instanceof BufferGeometry) {\n      const attr = geo.attributes\n      const an = (attr as any).normal ? (attr as any).normal.array : false\n\n      // assume there are no normals if the first is zero\n      if (!an || (an[ 0 ] === 0 && an[ 1 ] === 0 && an[ 2 ] === 0)) {\n        geo.computeVertexNormals()\n      }\n\n      position = (<any>attr).position.array\n      index = (<any>attr).index ? (<any>attr).index.array : null\n      normal = (<any>attr).normal.array\n    }\n\n    this.set(position, index, normal, color, undefined)\n\n    if (Debug) Log.timeEnd('GeometrySurface.setGeometry')\n  }\n\n  getPosition () {\n    return this.position\n  }\n\n  getColor (params: ColormakerParameters&{ scheme: string}) {\n    const p = params || {}\n    p.surface = this\n\n    const n = this.size\n    const array = new Float32Array(n * 3)\n    const colormaker = ColormakerRegistry.getScheme(p)\n\n    if (colormaker.volumeColor || p.scheme === 'random') {\n      for (let i = 0; i < n; ++i) {\n        colormaker.volumeColorToArray(i, array, i * 3)\n      }\n    } else if (colormaker.positionColor) {\n      const v = new Vector3()\n      const pos = this.position\n\n      for (let i = 0; i < n; ++i) {\n        var i3 = i * 3\n        v.set(pos[ i3 ], pos[ i3 + 1 ], pos[ i3 + 2 ])\n        colormaker.positionColorToArray(v, array, i3)\n      }\n    } else if (colormaker.atomColor && this.atomindex) {\n      const atomProxy = p.structure!.getAtomProxy()\n      const atomindex = this.atomindex\n\n      for (let i = 0; i < n; ++i) {\n        atomProxy.index = atomindex[ i ]\n        colormaker.atomColorToArray(atomProxy, array, i * 3)\n      }\n    } else {\n      const tc = new Color(p.value)\n      uniformArray3(n, tc.r, tc.g, tc.b, array)\n    }\n\n    return array\n  }\n\n  getPicking (structure?: Structure) {\n    if (this.atomindex && structure) {\n      return new AtomPicker(this.atomindex as any, structure)\n    } else {\n      return new SurfacePicker(serialArray(this.size), this)\n    }\n  }\n\n  getNormal () {\n    return this.normal\n  }\n\n  getSize (size: number, scale: number) {\n    return uniformArray(this.size, size * scale)\n  }\n\n  getIndex () {\n    return this.index\n  }\n\n  getFilteredIndex (sele: string, structure: Structure) {\n    if (sele && this.atomindex) {\n      const selection = new Selection(sele)\n      const atomSet = structure.getAtomSet(selection)\n      const filteredIndex = []\n\n      const atomindex = this.atomindex\n      const index = this.index\n      const n = index!.length\n      const elementSize = this.contour ? 2 : 3\n\n      let j = 0\n\n      for (let i = 0; i < n; i += elementSize) {\n        let include = true\n\n        for (let a = 0; a < elementSize; a++) {\n          const idx = index![ i + a ]\n          const ai = atomindex[ idx ]\n          if (!atomSet.get(ai)) {\n            include = false\n            break\n          }\n        }\n\n        if (!include) { continue }\n\n        for (let a = 0; a < elementSize; a++, j++) {\n          filteredIndex[ j ] = index![ i + a ]\n        }\n      }\n\n      return getUintArray(filteredIndex, this.position.length / 3)\n    } else {\n      return this.index\n    }\n  }\n\n  getAtomindex () {\n    return this.atomindex\n  }\n\n  dispose () {\n\n    //\n\n  }\n}\n\nexport default Surface\n","/**\n * @file Volume\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Box3, Matrix3, Matrix4 } from 'three'\n\nimport { WorkerRegistry, ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport WorkerPool from '../worker/worker-pool'\nimport { VolumePicker } from '../utils/picker'\nimport {\n  uniformArray, serialArray,\n  arrayMin, arrayMax, arraySum, arrayMean, arrayRms\n} from '../math/array-utils'\nimport MarchingCubes from './marching-cubes'\nimport { laplacianSmooth, computeVertexNormals } from './surface-utils'\nimport {\n  applyMatrix4toVector3array, applyMatrix3toVector3array\n} from '../math/vector-utils'\nimport { m3new, m3makeNormal } from '../math/matrix-utils'\nimport Surface from './surface'\nimport { NumberArray } from '../types';\nimport { ColormakerParameters } from '../color/colormaker';\n\nexport interface VolumeSurface {\n  new (data: NumberArray, nx: number, ny: number, nz: number, atomindex: NumberArray): void\n  getSurface: (isolevel: number, smooth: boolean|number, box: number[][]|undefined, matrix: Float32Array, contour: boolean, wrap?: boolean) => {\n    position: Float32Array\n    normal: undefined|Float32Array\n    index: Uint32Array|Uint16Array\n    atomindex: Int32Array|undefined\n    contour: boolean\n  }\n}\nexport function VolumeSurface (this: VolumeSurface,data: NumberArray, nx: number, ny: number, nz: number, atomindex: NumberArray) {\n  var mc = new (MarchingCubes as any)(data, nx, ny, nz, atomindex) as MarchingCubes\n\n  function getSurface (isolevel: number, smooth: boolean|number, box: number[][]|undefined, matrix: Float32Array, contour: boolean, wrap: boolean = false) {\n    const sd = mc.triangulate(isolevel, smooth as boolean, box, contour, wrap)\n    if (smooth && !contour) {\n      laplacianSmooth(sd.position, sd.index as any, smooth as number, true)\n      sd.normal = computeVertexNormals(sd.position, sd.index as any)\n    }\n    if (matrix) {\n      applyMatrix4toVector3array(matrix, sd.position)\n      if (sd.normal) {\n        const normalMatrix = m3new()\n        m3makeNormal(normalMatrix, matrix)\n        applyMatrix3toVector3array(normalMatrix, sd.normal)\n      }\n    }\n    return sd\n  }\n\n  this.getSurface = getSurface\n}\nObject.assign(VolumeSurface, {__deps: [\n  laplacianSmooth, computeVertexNormals, MarchingCubes,\n  applyMatrix4toVector3array, applyMatrix3toVector3array,\n  m3new, m3makeNormal\n]})\n\nWorkerRegistry.add('surf', function func (e: any, callback: (data: any, transferList: any) => void) {\n  const a = e.data.args\n  const p = e.data.params\n  if (a) {\n    /* global self */\n    (self as any).volsurf = new (VolumeSurface as any)(a[0], a[1], a[2], a[3], a[4]) as VolumeSurface\n  }\n  if (p) {\n    const sd = ((self as any).volsurf as VolumeSurface).getSurface(\n      p.isolevel, p.smooth, p.box, p.matrix, p.contour, p.wrap\n    )\n    const transferList = [ sd.position.buffer, sd.index.buffer ]\n    if (sd.normal) transferList.push(sd.normal.buffer)\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\n    const data = {\n      sd: sd,\n      p: p\n    }\n    callback(data, transferList)\n  }\n}, [ VolumeSurface ])\n\nexport type VolumeSize = 'value'|'abs-value'|'value-min'|'deviation'\n/**\n * Volume\n */\nclass Volume {\n  name: string\n  path: string\n\n  matrix: Matrix4\n  normalMatrix: Matrix3\n  inverseMatrix: Matrix4\n  center: Vector3\n  boundingBox: Box3\n\n  nx: number\n  ny: number\n  nz: number\n  data: Float32Array\n\n  worker: Worker\n  workerPool: WorkerPool\n  _position: Float32Array\n  _min: number|undefined\n  _max: number|undefined\n  _mean: number|undefined\n  _rms: number|undefined\n  _sum: number|undefined\n  __box: Box3|undefined\n\n  atomindex: Int32Array|undefined\n  volsurf: VolumeSurface|undefined\n  header: any\n  /**\n   * Make Volume instance\n   * @param {String} name - volume name\n   * @param {String} path - source path\n   * @param {Float32array} data - volume 3d grid\n   * @param {Integer} nx - x dimension of the 3d volume\n   * @param {Integer} ny - y dimension of the 3d volume\n   * @param {Integer} nz - z dimension of the 3d volume\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\n   */\n  constructor (name: string, path: string, data?: Float32Array, nx?: number, ny?: number, nz?: number, atomindex?: Int32Array) {\n    this.name = name\n    this.path = path\n\n    this.matrix = new Matrix4()\n    this.normalMatrix = new Matrix3()\n    this.inverseMatrix = new Matrix4()\n    this.center = new Vector3()\n    this.boundingBox = new Box3()\n\n    this.setData(data, nx, ny, nz, atomindex)\n  }\n\n  get type () { return 'Volume' }\n\n  /**\n   * set volume data\n   * @param {Float32array} data - volume 3d grid\n   * @param {Integer} nx - x dimension of the 3d volume\n   * @param {Integer} ny - y dimension of the 3d volume\n   * @param {Integer} nz - z dimension of the 3d volume\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\n   * @return {undefined}\n   */\n  setData (data?: Float32Array, nx?: number, ny?: number, nz?: number, atomindex?: Int32Array) {\n    this.nx = nx || 1\n    this.ny = ny || 1\n    this.nz = nz || 1\n\n    this.data = data || new Float32Array(1)\n    this.setAtomindex(atomindex)\n\n    delete this._position\n\n    delete this._min\n    delete this._max\n    delete this._mean\n    delete this._rms\n\n    if (this.worker) this.worker.terminate()\n  }\n\n  /**\n   * Set statistics, which can be different from the data in this volume,\n   * if this volume is a slice of a bigger volume\n   * @param {Number|undefined} min - minimum value of the whole data set\n   * @param {Number|undefined} max - maximum value of the whole data set\n   * @param {Number|undefined} mean - average value of the whole data set\n   * @param {Number|undefined} rms - sigma value of the whole data set\n   */\n  setStats (min: number|undefined, max: number|undefined, mean: number|undefined, rms: number|undefined) {\n    this._min = min\n    this._max = max\n    this._mean = mean\n    this._rms = rms\n  }\n\n  /**\n   * set transformation matrix\n   * @param {Matrix4} matrix - 4x4 transformation matrix\n   * @return {undefined}\n   */\n  setMatrix (matrix: Matrix4) {\n    this.matrix.copy(matrix)\n\n    const bb = this.boundingBox\n    const v = this.center // temporary re-purposing\n\n    const x = this.nx - 1\n    const y = this.ny - 1\n    const z = this.nz - 1\n\n    bb.makeEmpty()\n\n    bb.expandByPoint(v.set(x, y, z))\n    bb.expandByPoint(v.set(x, y, 0))\n    bb.expandByPoint(v.set(x, 0, z))\n    bb.expandByPoint(v.set(x, 0, 0))\n    bb.expandByPoint(v.set(0, y, z))\n    bb.expandByPoint(v.set(0, 0, z))\n    bb.expandByPoint(v.set(0, y, 0))\n    bb.expandByPoint(v.set(0, 0, 0))\n\n    bb.applyMatrix4(this.matrix)\n    bb.getCenter(this.center)\n\n    // make normal matrix\n\n    const me = this.matrix.elements\n    const r0 = new Vector3(me[0], me[1], me[2])\n    const r1 = new Vector3(me[4], me[5], me[6])\n    const r2 = new Vector3(me[8], me[9], me[10])\n    const cp = new Vector3()\n    //        [ r0 ]       [ r1 x r2 ]\n    // M3x3 = [ r1 ]   N = [ r2 x r0 ]\n    //        [ r2 ]       [ r0 x r1 ]\n    const ne = this.normalMatrix.elements\n    cp.crossVectors(r1, r2)\n    ne[ 0 ] = cp.x\n    ne[ 1 ] = cp.y\n    ne[ 2 ] = cp.z\n    cp.crossVectors(r2, r0)\n    ne[ 3 ] = cp.x\n    ne[ 4 ] = cp.y\n    ne[ 5 ] = cp.z\n    cp.crossVectors(r0, r1)\n    ne[ 6 ] = cp.x\n    ne[ 7 ] = cp.y\n    ne[ 8 ] = cp.z\n\n    this.inverseMatrix.getInverse(this.matrix)\n  }\n\n  /**\n   * set atom indices\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\n   * @return {undefined}\n     */\n  setAtomindex (atomindex?: Int32Array) {\n    this.atomindex = atomindex\n  }\n\n  getBox (center: Vector3, size: number, target: Box3) {\n    if (!target) target = new Box3()\n\n    target.set(center, center)\n    target.expandByScalar(size)\n    target.applyMatrix4(this.inverseMatrix)\n\n    target.min.round()\n    target.max.round()\n\n    return target\n  }\n\n  _getBox (center: Vector3|undefined, size: number) {\n    if (!center || !size) return\n\n    if (!this.__box) this.__box = new Box3()\n    const box = this.getBox(center, size, this.__box)\n    return [ box.min.toArray(), box.max.toArray() ]\n  }\n\n  _makeSurface (sd: any, isolevel: number, smooth: number) {\n    const name = this.name + '@' + isolevel.toPrecision(2)\n    const surface = new Surface(name, '', sd)\n    surface.info.isolevel = isolevel\n    surface.info.smooth = smooth\n    surface.info.volume = this\n\n    return surface\n  }\n\n  getSurface (isolevel: number, smooth: number, center: Vector3, size: number, contour: boolean, wrap: boolean = false) {\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\n    smooth = defaults(smooth, 0)\n\n    //\n\n    if (this.volsurf === undefined) {\n      this.volsurf = new (VolumeSurface as any)(\n        this.data, this.nx, this.ny, this.nz, this.atomindex\n      ) as VolumeSurface\n    }\n\n    const box = this._getBox(center, size)\n    const sd = this.volsurf.getSurface(\n      isolevel, smooth, box!, this.matrix.elements as unknown as Float32Array, contour, wrap\n    )\n\n    return this._makeSurface(sd, isolevel, smooth)\n  }\n\n  getSurfaceWorker (isolevel: number, smooth: number, center: Vector3, size: number, contour: boolean, wrap: boolean, callback: (s: Surface) => void) {\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\n    smooth = smooth || 0\n\n    //\n\n    if (window.hasOwnProperty('Worker')) {\n      if (this.workerPool === undefined) {\n        this.workerPool = new WorkerPool('surf', 2)\n      }\n\n      const msg = {}\n      const worker = this.workerPool.getNextWorker()\n\n      if (worker!.postCount === 0) {\n        Object.assign(msg, {\n          args: [\n            this.data, this.nx, this.ny, this.nz, this.atomindex\n          ]\n        })\n      }\n\n      Object.assign(msg, {\n        params: {\n          isolevel: isolevel,\n          smooth: smooth,\n          box: this._getBox(center, size),\n          matrix: this.matrix.elements,\n          contour: contour,\n          wrap: wrap\n        }\n      })\n\n      worker!.post(msg, undefined,\n        (e: any) => {\n          const sd = e.data.sd\n          const p = e.data.p\n          callback(this._makeSurface(sd, p.isolevel, p.smooth))\n        },\n        (e : string) => {\n          console.warn(\n            'Volume.getSurfaceWorker error - trying without worker', e\n          )\n          const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\n          callback(surface)\n        }\n      )\n    } else {\n      const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\n      callback(surface)\n    }\n  }\n\n  getValueForSigma (sigma: number) {\n    return this.mean + defaults(sigma, 2) * this.rms\n  }\n\n  getSigmaForValue (value: number) {\n    return (defaults(value, 0) - this.mean) / this.rms\n  }\n\n  get position () {\n    if (!this._position) {\n      const nz = this.nz\n      const ny = this.ny\n      const nx = this.nx\n      const position = new Float32Array(nx * ny * nz * 3)\n\n      let p = 0\n      for (let z = 0; z < nz; ++z) {\n        for (let y = 0; y < ny; ++y) {\n          for (let x = 0; x < nx; ++x) {\n            position[ p + 0 ] = x\n            position[ p + 1 ] = y\n            position[ p + 2 ] = z\n            p += 3\n          }\n        }\n      }\n\n      applyMatrix4toVector3array(this.matrix.elements as unknown as Float32Array, position)\n      this._position = position\n    }\n\n    return this._position\n  }\n\n  getDataAtomindex () {\n    return this.atomindex\n  }\n\n  getDataPosition () {\n    return this.position\n  }\n\n  getDataColor (params: ColormakerParameters & {scheme: string}) {\n    const p = params || {}\n    p.volume = this\n    p.scale = p.scale || 'Spectral'\n    p.domain = p.domain || [ this.min, this.max ]\n\n    const colormaker = ColormakerRegistry.getScheme(p)\n\n    const n = this.position.length / 3\n    const array = new Float32Array(n * 3)\n\n    // var atoms = p.structure.atoms;\n    // var atomindex = this.atomindex;\n\n    for (let i = 0; i < n; ++i) {\n      colormaker.volumeColorToArray(i, array, i * 3)\n      // a = atoms[ atomindex[ i ] ];\n      // if( a ) colormaker.atomColorToArray( a, array, i * 3 );\n    }\n\n    return array\n  }\n\n  getDataPicking () {\n    const picking = serialArray(this.position.length / 3)\n    return new VolumePicker(picking, this)\n  }\n\n  getDataSize (size: VolumeSize|number, scale: number) {\n    const data = this.data\n    const n = this.position.length / 3\n    let array\n\n    switch (size) {\n      case 'value':\n        array = new Float32Array(data)\n        break\n\n      case 'abs-value':\n        array = new Float32Array(data)\n        for (let i = 0; i < n; ++i) {\n          array[ i ] = Math.abs(array[ i ])\n        }\n        break\n\n      case 'value-min': {\n        array = new Float32Array(data)\n        const min = this.min\n        for (let i = 0; i < n; ++i) {\n          array[ i ] -= min\n        }\n        break\n      }\n\n      case 'deviation':\n        array = new Float32Array(data)\n        break\n\n      default:\n        array = uniformArray(n, size)\n        break\n    }\n\n    if (scale !== 1.0) {\n      for (let i = 0; i < n; ++i) {\n        array[ i ] *= scale\n      }\n    }\n\n    return array\n  }\n\n  get min () {\n    if (this._min === undefined) {\n      this._min = arrayMin(this.data)\n    }\n    return this._min\n  }\n\n  get max () {\n    if (this._max === undefined) {\n      this._max = arrayMax(this.data)\n    }\n    return this._max\n  }\n\n  get sum () {\n    if (this._sum === undefined) {\n      this._sum = arraySum(this.data)\n    }\n    return this._sum\n  }\n\n  get mean () {\n    if (this._mean === undefined) {\n      this._mean = arrayMean(this.data)\n    }\n    return this._mean\n  }\n\n  get rms () {\n    if (this._rms === undefined) {\n      this._rms = arrayRms(this.data)\n    }\n    return this._rms\n  }\n\n  clone () {\n    const vol = new Volume(\n      this.name,\n      this.path,\n\n      this.data,\n\n      this.nx,\n      this.ny,\n      this.nz,\n\n      this.atomindex\n    )\n\n    vol.matrix.copy(this.matrix)\n    vol.header = Object.assign({}, this.header)\n\n    return vol\n  }\n\n  dispose () {\n    if (this.workerPool) this.workerPool.terminate()\n  }\n}\n\nexport default Volume\n","/**\n * @file Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport {\n  Color, Vector3, Matrix4,\n  FrontSide, BackSide, DoubleSide,\n  // VertexColors,\n  NoBlending,\n  BufferGeometry, BufferAttribute,\n  UniformsUtils, UniformsLib, Uniform,\n  Group, LineSegments, Points, Mesh, Object3D,\n  ShaderMaterial\n} from 'three'\n\nimport { Log } from '../globals'\nimport { createParams, getTypedArray, getUintArray } from '../utils'\nimport { NumberArray } from '../types'\nimport { getShader, ShaderDefines } from '../shader/shader-utils'\nimport { serialArray } from '../math/array-utils'\nimport { Picker } from '../utils/picker'\n\nexport type BufferSide = 'front'|'back'|'double'\n\nfunction getThreeSide (side: BufferSide) {\n  if (side === 'front') {\n    return FrontSide\n  } else if (side === 'back') {\n    return BackSide\n  } else if (side === 'double') {\n    return DoubleSide\n  } else {\n    return DoubleSide\n  }\n}\n\nconst itemSize = {\n  'f': 1, 'v2': 2, 'v3': 3, 'c': 3\n}\n\nfunction setObjectMatrix (object: Object3D, matrix: Matrix4) {\n  object.matrix.copy(matrix)\n  object.matrix.decompose(object.position, object.quaternion, object.scale)\n  object.matrixWorldNeedsUpdate = true\n}\n\nexport type BufferTypes = 'picking'|'background'\nexport type BufferMaterials = 'material'|'wireframeMaterial'|'pickingMaterial'\n\nexport interface _BufferAttribute {\n  type: 'f'|'v2'|'v3'|'c'\n  value?: NumberArray\n}\n\nexport type Uniforms = { [k: string]: Uniform|{ value: any } }\n\nexport const BufferDefaultParameters = {\n  opaqueBack: false,\n  side: 'double' as BufferSide,  // which triangle sides to render\n  opacity: 1.0,  // translucency: 1 is fully opaque, 0 is fully transparent\n  depthWrite: true,\n  clipNear: 0, // position of camera near/front clipping plane in percent of scene bounding box\n  clipRadius: 0,\n  clipCenter: new Vector3(),\n  flatShaded: false,  // render flat shaded\n  wireframe: false,  // render as wireframe\n  roughness: 0.4,  // how rough the material is, between 0 and 1\n  metalness: 0.0,  // how metallic the material is, between 0 and 1\n  diffuse: 0xffffff,  // diffuse color for lighting\n  diffuseInterior: false,\n  useInteriorColor: false,  // render back-side with interior color\n  interiorColor: 0xdddddd,  // interior color\n  interiorDarkening: 0,  // interior darkening factor\n  forceTransparent: false,  // force the material to allow transparency\n  matrix: new Matrix4(),  // additional transformation matrix\n  disablePicking: false,  // disable picking\n  sortParticles: false,\n  background: false\n}\nexport type BufferParameters = typeof BufferDefaultParameters\n\nexport const BufferParameterTypes = {\n  opaqueBack: { updateShader: true },\n  side: { updateShader: true, property: true },\n  opacity: { uniform: true },\n  depthWrite: { property: true },\n  clipNear: { updateShader: true, property: true },\n  clipRadius: { updateShader: true, uniform: true },\n  clipCenter: { uniform: true },\n  flatShaded: { updateShader: true },\n  background: { updateShader: true },\n  wireframe: { updateVisibility: true },\n  roughness: { uniform: true },\n  metalness: { uniform: true },\n  diffuse: { uniform: true },\n  diffuseInterior: { updateShader: true },\n  useInteriorColor: { updateShader: true },\n  interiorColor: { uniform: true },\n  interiorDarkening: { uniform: true },\n  matrix: {}\n}\n\nexport interface BufferData {\n  position?: Float32Array\n  position1?: Float32Array  // TODO\n  color?: Float32Array\n  index?: Uint32Array|Uint16Array\n  normal?: Float32Array\n\n  picking?: Picker\n  primitiveId?: Float32Array\n}\n\n/**\n * Buffer class. Base class for buffers.\n * @interface\n */\nclass Buffer {\n  parameterTypes = BufferParameterTypes\n  get defaultParameters() { return BufferDefaultParameters }\n  parameters: BufferParameters\n  uniforms: Uniforms\n  pickingUniforms: Uniforms\n\n  private _positionDataSize: number\n\n  geometry = new BufferGeometry()\n  indexVersion = 0\n  wireframeIndexVersion = -1\n  group = new Group()\n  wireframeGroup = new Group()\n  pickingGroup = new Group()\n\n  vertexShader = ''\n  fragmentShader = ''\n  isImpostor = false\n  isText = false\n  isSurface = false\n  isPoint = false\n  isLine = false\n  dynamic = true\n  visible = true\n\n  picking?: Picker\n\n  material: ShaderMaterial\n  wireframeMaterial: ShaderMaterial\n  pickingMaterial: ShaderMaterial\n\n  wireframeIndex?: Uint32Array|Uint16Array\n  wireframeIndexCount = 0\n  wireframeGeometry?: BufferGeometry\n\n  /**\n   * @param {Object} data - attribute object\n   * @param {Float32Array} data.position - positions\n   * @param {Float32Array} data.color - colors\n   * @param {Uint32Array|Uint16Array} data.index - triangle indices\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} params - parameters object\n   */\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\n    this.parameters = createParams(params, this.defaultParameters)\n\n    this.uniforms = UniformsUtils.merge([\n      UniformsLib.common,\n      {\n        fogColor: { value: new Color(0x000000) },\n        fogNear: { value: 0.0 },\n        fogFar: { value: 0.0 },\n        opacity: { value: this.parameters.opacity },\n        clipNear: { value: 0.0 },\n        clipRadius: { value: this.parameters.clipRadius },\n        clipCenter: { value: this.parameters.clipCenter }\n      },\n      {\n        emissive: { value: new Color(0x000000) },\n        roughness: { value: this.parameters.roughness },\n        metalness: { value: this.parameters.metalness },\n        interiorColor: { value: new Color(this.parameters.interiorColor) },\n        interiorDarkening: { value: this.parameters.interiorDarkening },\n      },\n      UniformsLib.lights\n    ])\n\n    this.uniforms.diffuse.value.set(this.parameters.diffuse)\n\n    this.pickingUniforms = {\n      clipNear: { value: 0.0 },\n      objectId: { value: 0 },\n      opacity: { value: this.parameters.opacity }\n    }\n\n    //\n\n    const position = data.position || data.position1\n    this._positionDataSize = position ? position.length / 3 : 0\n\n    if (!data.primitiveId) {\n      data.primitiveId = serialArray(this._positionDataSize)\n    }\n\n    this.addAttributes({\n      position: { type: 'v3', value: data.position },\n      color: { type: 'c', value: data.color },\n      primitiveId: { type: 'f', value: data.primitiveId }\n    })\n\n    if (params.matrix) {\n      this.matrix = params.matrix\n    }\n\n    if (data.index) {\n      this.initIndex(data.index)\n    }\n    this.picking = data.picking\n\n    this.makeWireframeGeometry()\n  }\n\n  set matrix (m) {\n    this.setMatrix(m)\n  }\n  get matrix () {\n    return this.group.matrix.clone()\n  }\n\n  get transparent () {\n    return this.parameters.opacity < 1 || this.parameters.forceTransparent\n  }\n\n  get size () {\n    return this._positionDataSize\n  }\n\n  get attributeSize () {\n    return this.size\n  }\n\n  get pickable () {\n    return !!this.picking && !this.parameters.disablePicking\n  }\n\n  setMatrix (m: Matrix4) {\n    setObjectMatrix(this.group, m)\n    setObjectMatrix(this.wireframeGroup, m)\n    setObjectMatrix(this.pickingGroup, m)\n  }\n\n  initIndex (index: Uint32Array|Uint16Array) {\n    this.geometry.setIndex(\n      new BufferAttribute(index, 1)\n    )\n    const nindex = this.geometry.getIndex();\n    if (!nindex) { Log.error('Index is null'); return; }\n    nindex.setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n  }\n\n  makeMaterial () {\n    const side = getThreeSide(this.parameters.side)\n\n    const m = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: '',\n      fragmentShader: '',\n      depthTest: true,\n      transparent: this.transparent,\n      depthWrite: this.parameters.depthWrite,\n      lights: true,\n      fog: true,\n      side: side\n    })\n    m.vertexColors = true\n    m.extensions.derivatives = true\n    m.extensions.fragDepth = this.isImpostor\n\n    const wm = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: '',\n      fragmentShader: '',\n      depthTest: true,\n      transparent: this.transparent,\n      depthWrite: this.parameters.depthWrite,\n      lights: false,\n      fog: true,\n      side: side\n    })\n    wm.vertexColors = true\n\n    const pm = new ShaderMaterial({\n      uniforms: this.pickingUniforms,\n      vertexShader: '',\n      fragmentShader: '',\n      depthTest: true,\n      transparent: false,\n      depthWrite: this.parameters.depthWrite,\n      lights: false,\n      fog: false,\n      side: side,\n      blending: NoBlending\n    })\n    pm.vertexColors = true\n    pm.extensions.fragDepth = this.isImpostor\n\n    ;(m as any).clipNear = this.parameters.clipNear\n    ;(wm as any).clipNear = this.parameters.clipNear\n    ;(pm as any).clipNear = this.parameters.clipNear\n\n    this.material = m\n    this.wireframeMaterial = wm\n    this.pickingMaterial = pm\n\n    // also sets vertexShader/fragmentShader\n    this.updateShader()\n  }\n\n  makeWireframeGeometry () {\n    this.makeWireframeIndex()\n\n    const geometry = this.geometry\n    const wireframeIndex = this.wireframeIndex\n    const wireframeGeometry = new BufferGeometry()\n\n    wireframeGeometry.attributes = geometry.attributes\n    if (wireframeIndex) {\n      wireframeGeometry.setIndex(\n        new BufferAttribute(wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n      )\n      wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\n    }\n\n    this.wireframeGeometry = wireframeGeometry\n  }\n\n  makeWireframeIndex () {\n    const edges: number[][] = []\n\n    function checkEdge (a: number, b: number) {\n      if (a > b) {\n        const tmp = a\n        a = b\n        b = tmp\n      }\n\n      const list = edges[ a ]\n\n      if (list === undefined) {\n        edges[ a ] = [ b ]\n        return true\n      } else if (!list.includes(b)) {\n        list.push(b)\n        return true\n      }\n\n      return false\n    }\n\n    const geometry = this.geometry\n    const index = geometry.index\n\n    if (!this.parameters.wireframe) {\n      this.wireframeIndex = new Uint16Array(0)\n      this.wireframeIndexCount = 0\n    } else if (index) {\n      const array = index.array\n      let n = array.length\n      if (geometry.drawRange.count !== Infinity) {\n        n = geometry.drawRange.count\n      }\n      let wireframeIndex\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\n        wireframeIndex = this.wireframeIndex\n      } else {\n        const count = (geometry.attributes as any).position.count  // TODO\n        wireframeIndex = getUintArray(n * 2, count)\n      }\n\n      let j = 0\n      edges.length = 0\n\n      for (let i = 0; i < n; i += 3) {\n        const a = array[ i + 0 ]\n        const b = array[ i + 1 ]\n        const c = array[ i + 2 ]\n\n        if (checkEdge(a, b)) {\n          wireframeIndex[ j + 0 ] = a\n          wireframeIndex[ j + 1 ] = b\n          j += 2\n        }\n        if (checkEdge(b, c)) {\n          wireframeIndex[ j + 0 ] = b\n          wireframeIndex[ j + 1 ] = c\n          j += 2\n        }\n        if (checkEdge(c, a)) {\n          wireframeIndex[ j + 0 ] = c\n          wireframeIndex[ j + 1 ] = a\n          j += 2\n        }\n      }\n\n      this.wireframeIndex = wireframeIndex\n      this.wireframeIndexCount = j\n      this.wireframeIndexVersion = this.indexVersion\n    } else {\n      const n = (geometry.attributes as any).position.count  // TODO\n\n      let wireframeIndex\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\n        wireframeIndex = this.wireframeIndex\n      } else {\n        wireframeIndex = getUintArray(n * 2, n)\n      }\n\n      for (let i = 0, j = 0; i < n; i += 3) {\n        wireframeIndex[ j + 0 ] = i\n        wireframeIndex[ j + 1 ] = i + 1\n        wireframeIndex[ j + 2 ] = i + 1\n        wireframeIndex[ j + 3 ] = i + 2\n        wireframeIndex[ j + 4 ] = i + 2\n        wireframeIndex[ j + 5 ] = i\n\n        j += 6\n      }\n\n      this.wireframeIndex = wireframeIndex\n      this.wireframeIndexCount = n * 2\n      this.wireframeIndexVersion = this.indexVersion\n    }\n  }\n\n  updateWireframeIndex () {\n    if (!this.wireframeGeometry || !this.wireframeIndex) return\n\n    this.wireframeGeometry.setDrawRange(0, Infinity)\n    if (this.wireframeIndexVersion < this.indexVersion) this.makeWireframeIndex()\n\n    if (this.wireframeGeometry.index &&\n        this.wireframeIndex.length > this.wireframeGeometry.index.array.length) {\n      this.wireframeGeometry.setIndex(\n        new BufferAttribute(this.wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n      )\n    } else {\n      const index = this.wireframeGeometry.getIndex()\n      if (!index) { Log.error('Index is null'); return; }\n      index.set(this.wireframeIndex)\n      index.needsUpdate = this.wireframeIndexCount > 0\n      index.updateRange.count = this.wireframeIndexCount\n    }\n\n    this.wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\n  }\n\n  getRenderOrder () {\n    let renderOrder = 0\n\n    if (this.isText) {\n      renderOrder = 1\n    } else if (this.transparent) {\n      if (this.isSurface) {\n        renderOrder = 3\n      } else {\n        renderOrder = 2\n      }\n    }\n\n    return renderOrder\n  }\n\n  _getMesh (materialName: BufferMaterials) {\n    if (!this.material) this.makeMaterial()\n\n    const g = this.geometry\n    const m = this[ materialName ]\n\n    let mesh\n\n    if (this.isLine) {\n      mesh = new LineSegments(g, m)\n    } else if (this.isPoint) {\n      mesh = new Points(g, m)\n    } else {\n      mesh = new Mesh(g, m)\n    }\n\n    mesh.frustumCulled = false\n    mesh.renderOrder = this.getRenderOrder()\n\n    return mesh\n  }\n\n  getMesh () {\n    return this._getMesh('material')\n  }\n\n  getWireframeMesh () {\n    let mesh\n\n    if (!this.material) this.makeMaterial()\n    if (!this.wireframeGeometry) this.makeWireframeGeometry()\n\n    mesh = new LineSegments(\n      this.wireframeGeometry, this.wireframeMaterial\n    )\n\n    mesh.frustumCulled = false\n    mesh.renderOrder = this.getRenderOrder()\n\n    return mesh\n  }\n\n  getPickingMesh () {\n    return this._getMesh('pickingMaterial')\n  }\n\n  getShader (name: string, type?: BufferTypes) {\n    return getShader(name, this.getDefines(type))\n  }\n\n  getVertexShader (type?: BufferTypes) {\n    return this.getShader(this.vertexShader, type)\n  }\n\n  getFragmentShader (type?: BufferTypes) {\n    return this.getShader(this.fragmentShader, type)\n  }\n\n  getDefines (type?: BufferTypes) {\n    const defines: ShaderDefines = {}\n\n    if (this.parameters.clipNear) {\n      defines.NEAR_CLIP = 1\n    }\n\n    if (this.parameters.clipRadius) {\n      defines.RADIUS_CLIP = 1\n    }\n\n    if (type === 'picking') {\n      defines.PICKING = 1\n    } else {\n      if (type === 'background' || this.parameters.background) {\n        defines.NOLIGHT = 1\n      }\n      if (this.parameters.flatShaded) {\n        defines.FLAT_SHADED = 1\n      }\n      if (this.parameters.opaqueBack) {\n        defines.OPAQUE_BACK = 1\n      }\n      if (this.parameters.diffuseInterior) {\n        defines.DIFFUSE_INTERIOR = 1\n      }\n      if (this.parameters.useInteriorColor) {\n        defines.USE_INTERIOR_COLOR = 1\n      }\n    }\n\n    return defines\n  }\n\n  getParameters () {\n    return this.parameters\n  }\n\n  addUniforms (uniforms: Uniforms) {\n    this.uniforms = UniformsUtils.merge(\n      [ this.uniforms, uniforms ]\n    )\n\n    this.pickingUniforms = UniformsUtils.merge(\n      [ this.pickingUniforms, uniforms ]\n    )\n  }\n\n  addAttributes (attributes: { [k: string]: _BufferAttribute }) {\n    for (let name in attributes) {\n      let buf\n      const a = attributes[ name ]\n      const arraySize = this.attributeSize * itemSize[ a.type ]\n\n      if (a.value) {\n        if (arraySize !== a.value.length) {\n          Log.error('attribute value has wrong length', name)\n        }\n        buf = a.value\n      } else {\n        buf = getTypedArray('float32', arraySize)\n      }\n\n      this.geometry.setAttribute(\n        name,\n        new BufferAttribute(buf, itemSize[ a.type ]).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n      )\n    }\n  }\n\n  updateRenderOrder () {\n    const renderOrder = this.getRenderOrder()\n    function setRenderOrder (mesh: Object3D) {\n      mesh.renderOrder = renderOrder\n    }\n\n    this.group.children.forEach(setRenderOrder)\n    if (this.pickingGroup) {\n      this.pickingGroup.children.forEach(setRenderOrder)\n    }\n  }\n\n  updateShader () {\n    const m = this.material\n    const wm = this.wireframeMaterial\n    const pm = this.pickingMaterial\n\n    m.vertexShader = this.getVertexShader()\n    m.fragmentShader = this.getFragmentShader()\n    m.needsUpdate = true\n\n    wm.vertexShader = this.getShader('Line.vert')\n    wm.fragmentShader = this.getShader('Line.frag')\n    wm.needsUpdate = true\n\n    pm.vertexShader = this.getVertexShader('picking')\n    pm.fragmentShader = this.getFragmentShader('picking')\n    pm.needsUpdate = true\n  }\n\n  /**\n   * Set buffer parameters\n   * @param {BufferParameters} params - buffer parameters object\n   * @return {undefined}\n   */\n  setParameters (params: Partial<BufferParameters>) {\n    const p = params as any\n    const pt = this.parameterTypes as any\n    const pv = this.parameters as any\n\n    const propertyData: { [k: string]: any } = {}\n    const uniformData: { [k: string]: any } = {}\n    let doShaderUpdate = false\n    let doVisibilityUpdate = false\n\n    for (const name in p) {\n      const value = p[ name ]\n\n      if (value === undefined) continue\n      pv[ name ] = value\n\n      if (pt[ name ] === undefined) continue\n\n      if (pt[ name ].property) {\n        if (pt[ name ].property !== true) {\n          propertyData[ pt[ name ].property as any ] = value\n        } else {\n          propertyData[ name ] = value\n        }\n      }\n\n      if (pt[ name ].uniform) {\n        if (pt[ name ].uniform !== true) {\n          uniformData[ pt[ name ].uniform as any ] = value\n        } else {\n          uniformData[ name ] = value\n        }\n      }\n\n      if (pt[ name ].updateShader) {\n        doShaderUpdate = true\n      }\n\n      if (pt[ name ].updateVisibility) {\n        doVisibilityUpdate = true\n      }\n\n      if (this.dynamic && name === 'wireframe' && value === true) {\n        this.updateWireframeIndex()\n      }\n\n      if (name === 'forceTransparent') {\n        propertyData.transparent = this.transparent\n      }\n\n      if (name === 'matrix') {\n        this.matrix = value\n      }\n    }\n\n    this.setProperties(propertyData)\n    this.setUniforms(uniformData)\n    if (doShaderUpdate) this.updateShader()\n    if (doVisibilityUpdate) this.setVisibility(this.visible)\n  }\n\n  /**\n   * Sets buffer attributes\n   * @param {Object} data - An object where the keys are the attribute names\n   *      and the values are the attribute data.\n   * @example\n   * var buffer = new Buffer();\n   * buffer.setAttributes({ attrName: attrData });\n   */\n  setAttributes (data: any) {  // TODO\n    const geometry = this.geometry\n    const attributes = geometry.attributes as any  // TODO\n\n    for (const name in data) {\n      if (name === 'picking') continue\n\n      const array = data[ name ]\n      const length = array.length\n\n      if (name === 'index') {\n        const index = geometry.getIndex()\n        if (!index) { Log.error('Index is null'); continue; }\n        geometry.setDrawRange(0, Infinity)\n\n        if (length > index.array.length) {\n          geometry.setIndex(\n            new BufferAttribute(array, 1)\n              .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n          )\n        } else {\n          index.set(array)\n          index.count = length\n          index.needsUpdate = length > 0\n          index.updateRange.count = length\n          geometry.setDrawRange(0, length)\n        }\n\n        this.indexVersion++\n        if (this.parameters.wireframe) this.updateWireframeIndex()\n      } else {\n        const attribute = attributes[ name ]\n\n        if (length > attribute.array.length) {\n          geometry.setAttribute(\n            name,\n            new BufferAttribute(array, attribute.itemSize)\n              .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\n          )\n        } else {\n          attributes[ name ].set(array)\n          attributes[ name ].needsUpdate = length > 0\n          attributes[ name ].updateRange.count = length\n        }\n      }\n    }\n  }\n\n  setUniforms (data: any) {  // TODO\n    if (!data) return\n\n    const u = this.material.uniforms\n    const wu = this.wireframeMaterial.uniforms\n    const pu = this.pickingMaterial.uniforms\n\n    for (let name in data) {\n      if (name === 'opacity') {\n        this.setProperties({ transparent: this.transparent })\n      }\n\n      if (u[ name ] !== undefined) {\n        if (u[ name ].value.isVector3) {\n          u[ name ].value.copy(data[ name ])\n        } else if (u[ name ].value.set) {\n          u[ name ].value.set(data[ name ])\n        } else {\n          u[ name ].value = data[ name ]\n        }\n      }\n\n      if (wu[ name ] !== undefined) {\n        if (wu[ name ].value.isVector3) {\n          wu[ name ].value.copy(data[ name ])\n        } else if (wu[ name ].value.set) {\n          wu[ name ].value.set(data[ name ])\n        } else {\n          wu[ name ].value = data[ name ]\n        }\n      }\n\n      if (pu[ name ] !== undefined) {\n        if (pu[ name ].value.isVector3) {\n          pu[ name ].value.copy(data[ name ])\n        } else if (pu[ name ].value.set) {\n          pu[ name ].value.set(data[ name ])\n        } else {\n          pu[ name ].value = data[ name ]\n        }\n      }\n    }\n  }\n\n  setProperties (data: any) {  // TODO\n    if (!data) return\n\n    const m = this.material\n    const wm = this.wireframeMaterial\n    const pm = this.pickingMaterial\n\n    for (const _name in data) {\n      const name = _name as 'side'|'transparent'  // TODO\n\n      let value = data[ name ]\n\n      if (name === 'transparent') {\n        this.updateRenderOrder()\n      } else if (name === 'side') {\n        value = getThreeSide(value)\n      }\n\n      (m[ name ] as any) = value;\n      (wm[ name ] as any) = value;\n      (pm[ name ] as any) = value\n    }\n\n    m.needsUpdate = true\n    wm.needsUpdate = true\n    pm.needsUpdate = true\n  }\n\n  /**\n   * Set buffer visibility\n   * @param {Boolean} value - visibility value\n   * @return {undefined}\n   */\n  setVisibility (value: boolean) {\n    this.visible = value\n\n    if (this.parameters.wireframe) {\n      this.group.visible = false\n      this.wireframeGroup.visible = value\n      if (this.pickable) {\n        this.pickingGroup.visible = false\n      }\n    } else {\n      this.group.visible = value\n      this.wireframeGroup.visible = false\n      if (this.pickable) {\n        this.pickingGroup.visible = value\n      }\n    }\n  }\n\n  /**\n   * Free buffer resources\n   * @return {undefined}\n   */\n  dispose () {\n    if (this.material) this.material.dispose()\n    if (this.wireframeMaterial) this.wireframeMaterial.dispose()\n    if (this.pickingMaterial) this.pickingMaterial.dispose()\n\n    this.geometry.dispose()\n    if (this.wireframeGeometry) this.wireframeGeometry.dispose()\n  }\n\n  /**\n   * Customize JSON serialization to avoid circular references\n   */\n  toJSON () {\n    var result: any = {};\n    for (var x in this) {\n      if (x !== \"group\" && x !== \"wireframeGroup\" && x != \"pickingGroup\"\n         && x !== \"picking\") {\n        result[x] = this[x];\n      }\n    }\n    return result;\n  }\n}\n\nexport default Buffer\n","/**\n * @file Mesh Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport '../shader/Mesh.vert'\nimport '../shader/Mesh.frag'\n\nimport Buffer, { BufferParameters, BufferData } from './buffer'\n\n/**\n * Mesh buffer. Draws a triangle mesh.\n *\n * @example\n * var meshBuffer = new MeshBuffer({\n *   position: new Float32Array(\n *     [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ]\n *   ),\n *   color: new Float32Array(\n *     [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\n *   )\n * });\n */\nclass MeshBuffer extends Buffer {\n  vertexShader = 'Mesh.vert'\n  fragmentShader = 'Mesh.frag'\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.color - colors\n   * @param  {Float32Array} [data.index] - triangle indices\n   * @param  {Float32Array} [data.normal] - radii\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params)\n\n    this.addAttributes({\n      'normal': { type: 'v3', value: data.normal }\n    })\n\n    if (data.normal === undefined) {\n      this.geometry.computeVertexNormals()\n    }\n  }\n}\n\nexport default MeshBuffer\n","/**\n * @file Surface Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport MeshBuffer from './mesh-buffer'\n\n/**\n * Surface buffer. Like a {@link MeshBuffer}, but with `.isSurface` set to `true`.\n */\nclass SurfaceBuffer extends MeshBuffer {\n  isSurface = true\n}\n\nexport default SurfaceBuffer\n","/**\n * @file Double Sided Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\nimport { Group, BufferGeometry, Object3D, Mesh, LineSegments, Vector3, Matrix4 } from 'three'\n\nimport Buffer, { BufferSide } from './buffer'\nimport { Picker } from '../utils/picker'\n\nfunction setVisibilityTrue (m: Object3D) { m.visible = true }\nfunction setVisibilityFalse (m: Object3D) { m.visible = false }\n\n/**\n * A double-sided mesh buffer. Takes a buffer and renders the front and\n * the back as seperate objects to avoid some artifacts when rendering\n * transparent meshes. Also allows to render the back of a mesh opaque\n * while the front is transparent.\n * @implements {Buffer}\n *\n * @example\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n * var doubleSidedBuffer = new DoubleSidedBuffer(sphereGeometryBuffer);\n */\nclass DoubleSidedBuffer {\n  size: number\n  side: BufferSide\n  visible: boolean\n  wireframe: boolean\n  geometry: BufferGeometry\n\n  picking?: Picker\n\n  group = new Group()\n  wireframeGroup = new Group()\n  pickingGroup = new Group()\n\n  frontMeshes: (Mesh|LineSegments)[] = []\n  backMeshes: (Mesh|LineSegments)[] = []\n\n  buffer: Buffer\n  frontBuffer: Buffer\n  backBuffer: Buffer\n\n  /**\n   * Create a double sided buffer\n   * @param  {Buffer} buffer - the buffer to be rendered double-sided\n   */\n  constructor (buffer: Buffer) {\n    this.size = buffer.size\n    this.side = buffer.parameters.side\n    this.visible = buffer.visible\n    this.geometry = buffer.geometry\n    this.picking = buffer.picking\n\n    this.group = new Group()\n    this.wireframeGroup = new Group()\n    this.pickingGroup = new Group()\n\n    // requires Group objects to be present\n    this.matrix = buffer.matrix\n\n    const frontBuffer = buffer\n    const backBuffer = new (buffer as any).constructor({  // TODO\n      position: new Float32Array(0)\n    }) as Buffer\n\n    frontBuffer.makeMaterial()\n    backBuffer.makeMaterial()\n\n    backBuffer.picking = buffer.picking\n    backBuffer.geometry = buffer.geometry\n    backBuffer.wireframeGeometry = buffer.wireframeGeometry\n    backBuffer.setParameters(buffer.getParameters())\n    backBuffer.updateShader()\n\n    frontBuffer.setParameters({\n      side: 'front'\n    })\n    backBuffer.setParameters({\n      side: 'back',\n      opacity: backBuffer.parameters.opacity\n    })\n\n    this.buffer = buffer\n    this.frontBuffer = frontBuffer\n    this.backBuffer = backBuffer\n  }\n\n  set matrix (m) {\n    Buffer.prototype.setMatrix.call(this, m)\n  }\n  get matrix () {\n    return this.group.matrix.clone()\n  }\n\n  get pickable () {\n    return !!this.picking && !this.parameters.disablePicking\n  }\n\n  get parameters () {\n    return this.buffer.parameters\n  }\n\n  getParameters () {\n    const p = Object.assign({}, this.buffer.parameters)\n    p.side = this.side\n    return p\n  }\n\n  getMesh (picking: boolean) {\n    let front, back\n\n    if (picking) {\n      back = this.backBuffer.getPickingMesh()\n      front = this.frontBuffer.getPickingMesh()\n    } else {\n      back = this.backBuffer.getMesh()\n      front = this.frontBuffer.getMesh()\n    }\n\n    this.frontMeshes.push(<LineSegments|Mesh>front)\n    this.backMeshes.push(<LineSegments|Mesh>back)\n\n    this.setParameters({ side: this.side })\n\n    return new Group().add(back, front)\n  }\n\n  getWireframeMesh () {\n    return this.buffer.getWireframeMesh()\n  }\n\n  getPickingMesh () {\n    return this.getMesh(true)\n  }\n\n  setAttributes (data: any) {  // TODO\n    this.buffer.setAttributes(data)\n  }\n\n  setParameters (data: any) {  // TODO\n    data = Object.assign({}, data)\n\n    if (data.side === 'front') {\n      this.frontMeshes.forEach(setVisibilityTrue)\n      this.backMeshes.forEach(setVisibilityFalse)\n    } else if (data.side === 'back') {\n      this.frontMeshes.forEach(setVisibilityFalse)\n      this.backMeshes.forEach(setVisibilityTrue)\n    } else if (data.side === 'double') {\n      this.frontMeshes.forEach(setVisibilityTrue)\n      this.backMeshes.forEach(setVisibilityTrue)\n    }\n\n    if (data.side !== undefined) {\n      this.side = data.side\n    }\n    delete data.side\n\n    if (data.matrix !== undefined) {\n      this.matrix = data.matrix\n    }\n    delete data.matrix\n\n    this.frontBuffer.setParameters(data)\n\n    if (data.wireframe !== undefined) {\n      this.wireframe = data.wireframe\n      this.setVisibility(this.visible)\n    }\n    delete data.wireframe\n\n    this.backBuffer.setParameters(data)\n  }\n\n  setVisibility (value: boolean) {\n    this.visible = value\n\n    if (this.parameters.wireframe) {\n      this.group.visible = false\n      this.wireframeGroup.visible = value\n      if (this.pickable) {\n        this.pickingGroup.visible = false\n      }\n    } else {\n      this.group.visible = value\n      this.wireframeGroup.visible = false\n      if (this.pickable) {\n        this.pickingGroup.visible = value\n      }\n    }\n  }\n\n  dispose () {\n    this.frontBuffer.dispose()\n    this.backBuffer.dispose()\n  }\n\n  /**\n   * Customize JSON serialization to avoid circular references.\n   * Only export simple params which could be useful.\n   */\n  toJSON () {\n    var result: any = {};\n    for (var x in this) {\n      if (['side', 'size', 'visible', 'matrix', 'parameters'].includes(x)) {\n        result[x] = this[x];\n      }\n    }\n    return result;\n  }\n}\n\nexport default DoubleSidedBuffer\n","/**\n * @file Contour Buffer\n * @author Fred ludlow <fred.ludlow@gmail.com>\n * @private\n */\n\nimport '../shader/Line.vert'\nimport '../shader/Line.frag'\n\nimport Buffer from './buffer'\n\n/**\n * Contour buffer. A buffer that draws lines (instead of triangle meshes).\n */\nclass ContourBuffer extends Buffer {\n  isLine = true\n  vertexShader = 'Line.vert'\n  fragmentShader = 'Line.frag'\n}\n\nexport default ContourBuffer\n","/**\n * @file Surface Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Vector3, Box3 } from 'three'\n\nimport { defaults } from '../utils'\nimport Representation, { RepresentationParameters } from './representation'\nimport Volume from '../surface/volume'\nimport SurfaceBuffer from '../buffer/surface-buffer'\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\nimport ContourBuffer from '../buffer/contour-buffer'\nimport Surface from '../surface/surface';\nimport Viewer from '../viewer/viewer';\nimport {SurfaceData} from '../surface/surface'\n// @ts-ignore: unused import ColormakerParameters required for declaration only\nimport { ColormakerParameters } from '../color/colormaker';\nexport type SurfaceDataFields = {position: boolean, color: boolean, index: boolean, normal: boolean, radius: boolean}\n\n/**\n * Surface representation parameter object. Extends {@link RepresentationParameters}\n *\n * @typedef {Object} SurfaceRepresentationParameters - surface representation parameters\n *\n * @property {String} isolevelType - Meaning of the isolevel value. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\n * @property {Float} isolevel - The value at which to create the isosurface. For volume data only.\n * @property {Boolean} negateIsolevel - For volume data only.\n * @property {Boolean} isolevelScroll - For volume data only\n * @property {Integer} smooth - How many iterations of laplacian smoothing after surface triangulation. For volume data only.\n * @property {Boolean} background - Render the surface in the background, unlit.\n * @property {Boolean} opaqueBack - Render the back-faces (where normals point away from the camera) of the surface opaque, ignoring the transparency parameter.\n * @property {Integer} boxSize - Size of the box to triangulate volume data in. Set to zero to triangulate the whole volume. For volume data only.\n * @property {Boolean} useWorker - Weather or not to triangulate the volume asynchronously in a Web Worker. For volume data only.\n * @property {Boolean} wrap - Wrap volume data around the edges; use in conjuction with boxSize but not larger than the volume dimension. For volume data only.\n */\nexport interface SurfaceRepresentationParameters extends RepresentationParameters {\n  isolevelType: 'value'|'sigma'\n  isolevel: number\n  smooth: number\n  background: boolean\n  opaqueBack: boolean\n  boxSize: number\n  useWorker: boolean\n  wrap: boolean\n}\n/**\n * Surface representation\n */\n/**\n   * Create Surface representation object\n   * @param {Surface|Volume} surface - the surface or volume to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {SurfaceRepresentationParameters} params - surface representation parameters\n   */\nclass SurfaceRepresentation extends Representation {\n  protected surface: Surface|Volume|undefined\n  protected volume: Volume|undefined\n  protected boxCenter: Vector3\n  protected __boxCenter: Vector3\n  protected box: Box3\n  protected __box: Box3\n  protected _position: Vector3\n  protected isolevelType: 'value'|'sigma'\n  protected isolevel: number\n  protected negateIsolevel: boolean\n  protected isolevelScroll: boolean\n  protected smooth: number\n  protected background: boolean\n  protected opaqueBack: boolean\n  protected boxSize: number\n  protected inverseMatrix: Matrix4\n  protected colorVolume: Volume\n  protected contour: boolean\n  protected useWorker: boolean\n  protected wrap: boolean\n\n  protected __isolevel: number\n  protected __smooth: number\n  protected __contour: boolean\n  protected __wrap: boolean\n  protected __boxSize: number\n\n  setBox: () => void\n\n  constructor (surface: Surface, viewer: Viewer, params: Partial<SurfaceRepresentationParameters>) {\n    super(surface, viewer, params)\n\n    this.type = 'surface'\n\n    this.parameters = Object.assign({\n\n      isolevelType: {\n        type: 'select',\n        options: {\n          'value': 'value', 'sigma': 'sigma'\n        }\n      },\n      isolevel: {\n        type: 'number', precision: 2, max: 1000, min: -1000\n      },\n      negateIsolevel: {\n        type: 'boolean'\n      },\n      isolevelScroll: {\n        type: 'boolean'\n      },\n      smooth: {\n        type: 'integer', precision: 1, max: 10, min: 0\n      },\n      background: {\n        type: 'boolean', rebuild: true // FIXME\n      },\n      opaqueBack: {\n        type: 'boolean', buffer: true\n      },\n      boxSize: {\n        type: 'integer', precision: 1, max: 100, min: 0\n      },\n      colorVolume: {\n        type: 'hidden'\n      },\n      contour: {\n        type: 'boolean', rebuild: true\n      },\n      useWorker: {\n        type: 'boolean', rebuild: true\n      },\n      wrap: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters)\n\n    if (surface instanceof Volume) {\n      this.surface = undefined\n      this.volume = surface\n    } else {\n      this.surface = surface\n      this.volume = undefined\n    }\n\n    this.boxCenter = new Vector3()\n    this.__boxCenter = new Vector3()\n    this.box = new Box3()\n    this.__box = new Box3()\n\n    this._position = new Vector3()\n    this.inverseMatrix = new Matrix4()\n\n    this.setBox = function setBox () {\n      this._position.copy(viewer.translationGroup.position).negate()\n      this._position.applyMatrix4(this.inverseMatrix)\n      if (!this._position.equals(this.boxCenter)) {\n        this.setParameters({ 'boxCenter': this._position })\n      }\n    }\n\n    this.toBePrepared = true\n\n    this.viewer.signals.ticked.add(this.setBox, this)\n\n    this.init(params)\n  }\n\n  init (params: Partial<SurfaceRepresentationParameters>) {\n    const p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\n\n    this.isolevelType = defaults(p.isolevelType, 'sigma')\n    this.isolevel = defaults(p.isolevel, 2.0)\n    this.negateIsolevel = defaults(p.negateIsolevel, false)\n    this.isolevelScroll = defaults(p.isolevelScroll, false)\n    this.smooth = defaults(p.smooth, 0)\n    this.background = defaults(p.background, false)\n    this.opaqueBack = defaults(p.opaqueBack, true)\n    this.boxSize = defaults(p.boxSize, 0)\n    this.colorVolume = defaults(p.colorVolume, undefined)\n    this.contour = defaults(p.contour, false)\n    this.useWorker = defaults(p.useWorker, true)\n    this.wrap = defaults(p.wrap, false)\n\n    super.init(p)\n\n    this.inverseMatrix.getInverse(this.matrix)\n\n    this.build()\n  }\n\n  attach (callback: () => void) {\n    this.bufferList.forEach(buffer => {\n      this.viewer.add(buffer)\n    })\n\n    this.setVisibility(this.visible)\n\n    callback()\n  }\n\n  prepare (callback: () => void) {\n    if (this.volume) {\n      let isolevel\n\n      if (this.isolevelType === 'sigma') {\n        isolevel = this.volume.getValueForSigma(this.isolevel)\n      } else {\n        isolevel = this.isolevel\n      }\n      if (this.negateIsolevel) isolevel *= -1\n\n      if (!this.surface ||\n        this.__isolevel !== isolevel ||\n        this.__smooth !== this.smooth ||\n        this.__contour !== this.contour ||\n        this.__wrap !== this.wrap ||\n        this.__boxSize !== this.boxSize ||\n        (this.boxSize > 0 &&\n            !this.__boxCenter.equals(this.boxCenter))\n      ) {\n        this.__isolevel = isolevel\n        this.__smooth = this.smooth\n        this.__contour = this.contour\n        this.__wrap = this.wrap\n        this.__boxSize = this.boxSize\n        this.__boxCenter.copy(this.boxCenter)\n        this.__box.copy(this.box)\n\n        const onSurfaceFinish = (surface: Surface) => {\n          this.surface = surface\n          callback()\n        }\n\n        if (this.useWorker) {\n          this.volume.getSurfaceWorker(\n            isolevel, this.smooth, this.boxCenter, this.boxSize,\n            this.contour, this.wrap, onSurfaceFinish\n          )\n        } else {\n          onSurfaceFinish(\n            this.volume.getSurface(\n              isolevel, this.smooth, this.boxCenter, this.boxSize,\n              this.contour, this.wrap\n            )\n          )\n        }\n      } else {\n        callback()\n      }\n    } else {\n      callback()\n    }\n  }\n\n  create () {\n    const sd = {\n      position: (this.surface as Surface).getPosition(),\n      color: (this.surface as Surface).getColor(this.getColorParams()),\n      index: (this.surface as Surface).getIndex()\n    }\n\n    let buffer\n\n    if (this.contour) {\n      buffer = new ContourBuffer(\n        sd,\n        this.getBufferParams({ wireframe: false })\n      )\n    } else {\n      Object.assign(sd, {\n        normal: (this.surface as Surface).getNormal(),\n        picking: (this.surface as Surface).getPicking()\n      })\n\n      const surfaceBuffer = new SurfaceBuffer(\n        sd,\n        this.getBufferParams({\n          background: this.background,\n          opaqueBack: this.opaqueBack,\n          dullInterior: false\n        })\n      )\n\n      buffer = new DoubleSidedBuffer(surfaceBuffer)\n    }\n\n    this.bufferList.push(buffer as ContourBuffer)\n  }\n\n  update (what: SurfaceDataFields) {\n    if (this.bufferList.length === 0) return\n\n    what = what || {}\n\n    const surfaceData: Partial<SurfaceData> = {}\n\n    if (what.position) {\n      surfaceData.position = (this.surface as Surface).getPosition()\n    }\n\n    if (what.color) {\n      surfaceData.color = (this.surface as Surface).getColor(\n        this.getColorParams()\n      )\n    }\n\n    if (what.index) {\n      surfaceData.index = (this.surface as Surface).getIndex()\n    }\n\n    if (what.normal) {\n      surfaceData.normal = (this.surface as Surface).getNormal()\n    }\n\n    this.bufferList.forEach(function (buffer) {\n      buffer.setAttributes(surfaceData)\n    })\n  }\n\n  /**\n   * Set representation parameters\n   * @alias SurfaceRepresentation#setParameters\n   * @param {SurfaceRepresentationParameters} params - surface parameter object\n   * @param {Object} [what] - buffer data attributes to be updated,\n   *                        note that this needs to be implemented in the\n   *                        derived classes. Generally it allows more\n   *                        fine-grained control over updating than\n   *                        forcing a rebuild.\n   * @param {Boolean} what.position - update position data\n   * @param {Boolean} what.color - update color data\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\n   * @return {SurfaceRepresentation} this object\n   */\n  setParameters (params: Partial<SurfaceRepresentationParameters>, what?: SurfaceDataFields, rebuild?: boolean) {\n    if (params && params.isolevelType !== undefined &&\n      this.volume\n    ) {\n      if (this.isolevelType === 'value' &&\n        params.isolevelType === 'sigma'\n      ) {\n        this.isolevel = this.volume.getSigmaForValue(this.isolevel)\n      } else if (this.isolevelType === 'sigma' &&\n        params.isolevelType === 'value'\n      ) {\n        this.isolevel = this.volume.getValueForSigma(this.isolevel)\n      }\n\n      this.isolevelType = params.isolevelType\n    }\n\n    if (params && params.boxCenter) {\n      this.boxCenter.copy(params.boxCenter)\n      delete params.boxCenter\n    }\n\n    // Forbid wireframe && contour as in molsurface\n    if (params && params.wireframe && (\n      params.contour || (params.contour === undefined && this.contour)\n    )) {\n      params.wireframe = false\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    if (params.matrix) {\n      this.inverseMatrix.getInverse(params.matrix)\n    }\n\n    if (this.volume) {\n      this.volume.getBox(this.boxCenter, this.boxSize, this.box)\n    }\n\n    if (params && params.colorVolume !== undefined) {\n      if (what) what.color = true\n    }\n\n    if (this.surface && (\n      params.isolevel !== undefined ||\n      params.negateIsolevel !== undefined ||\n      params.smooth !== undefined ||\n      params.wrap !== undefined ||\n      params.boxSize !== undefined ||\n      (this.boxSize > 0 &&\n        !this.__box.equals(this.box))\n    )) {\n      this.build({\n        'position': true,\n        'color': true,\n        'index': true,\n        'normal': !this.contour\n      })\n    }\n\n    return this\n  }\n\n  getColorParams () {\n    const p = super.getColorParams()\n\n    p.volume = this.colorVolume\n\n    return p\n  }\n\n  dispose () {\n    this.viewer.signals.ticked.remove(this.setBox, this)\n\n    super.dispose()\n  }\n}\n\nexport default SurfaceRepresentation\n","/**\n * @file Mouse Actions\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport PickingProxy from './picking-proxy'\nimport { almostIdentity } from '../math/math-utils'\nimport Stage from '../stage/stage'\nimport StructureComponent from '../component/structure-component'\nimport SurfaceRepresentation from '../representation/surface-representation'\n\nexport type ScrollCallback = (stage: Stage, delta: number) => void\nexport type DragCallback = (stage: Stage, dx: number, dy: number) => void\nexport type PickCallback = (stage: Stage, pickingProxy: PickingProxy) => void\nexport type MouseActionCallback = ScrollCallback | DragCallback | PickCallback\n\n/**\n * Mouse actions provided as static methods\n */\nclass MouseActions {\n  /**\n   * Zoom scene based on scroll-delta\n   * @param {Stage} stage - the stage\n   * @param {Number} delta - amount to zoom\n   * @return {undefined}\n   */\n  static zoomScroll (stage: Stage, delta: number) {\n    stage.trackballControls.zoom(delta)\n  }\n\n  /**\n   * Move near clipping plane based on scroll-delta\n   * @param {Stage} stage - the stage\n   * @param {Number} delta - amount to move clipping plane\n   * @return {undefined}\n   */\n  static clipNearScroll (stage: Stage, delta: number) {\n    const sp = stage.getParameters()\n    stage.setParameters({ clipNear: sp.clipNear + delta / 10 })\n  }\n\n  /**\n   * Move clipping planes based on scroll-delta.\n   * @param {Stage} stage - the stage\n   * @param {Number} delta - direction to move planes\n   * @return {undefined}\n   */\n  static focusScroll (stage: Stage, delta: number) {\n    const focus = stage.getFocus()\n    const sign = Math.sign(delta)\n    const step = sign * almostIdentity((100 - focus) / 10, 5, 0.2)\n    stage.setFocus(focus + step)\n  }\n\n  /**\n   * Zoom scene based on scroll-delta and\n   * move focus planes based on camera position (zoom)\n   * @param {Stage} stage - the stage\n   * @param {Number} delta - amount to move focus planes and zoom\n   * @return {undefined}\n   */\n  static zoomFocusScroll (stage: Stage, delta: number) {\n    stage.trackballControls.zoom(delta)\n    const z = stage.viewer.camera.position.z\n    stage.setFocus(100 - Math.abs(z / 8))\n  }\n\n  /**\n   * Change isolevel of volume surfaces based on scroll-delta\n   * @param {Stage} stage - the stage\n   * @param {Number} delta - amount to change isolevel\n   * @return {undefined}\n   */\n  static isolevelScroll (stage: Stage, delta: number) {\n    const d = Math.sign(delta) / 10\n    stage.eachRepresentation((reprElem, comp) => {\n      if (reprElem.repr instanceof SurfaceRepresentation) {\n        const p = reprElem.getParameters() as any  // TODO\n        if (p.isolevelScroll) {\n          reprElem.setParameters({ isolevel: p.isolevel + d })\n        }\n      }\n    })\n  }\n\n  /**\n   * Pan scene based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to pan in x direction\n   * @param {Number} dy - amount to pan in y direction\n   * @return {undefined}\n   */\n  static panDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.pan(dx, dy)\n  }\n\n  /**\n   * Rotate scene based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to rotate in x direction\n   * @param {Number} dy - amount to rotate in y direction\n   * @return {undefined}\n   */\n  static rotateDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.rotate(dx, dy)\n  }\n\n  /**\n   * Rotate scene around z axis based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to rotate in x direction\n   * @param {Number} dy - amount to rotate in y direction\n   * @return {undefined}\n   */\n  static zRotateDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.zRotate(dx, dy)\n  }\n\n  /**\n   * Zoom scene based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to zoom\n   * @param {Number} dy - amount to zoom\n   * @return {undefined}\n   */\n  static zoomDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.zoom((dx + dy) / -2)\n  }\n\n  /**\n   * Zoom scene based on mouse coordinate changes and\n   * move focus planes based on camera position (zoom)\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to zoom and focus\n   * @param {Number} dy - amount to zoom and focus\n   * @return {undefined}\n   */\n  static zoomFocusDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.zoom((dx + dy) / -2)\n    const z = stage.viewer.camera.position.z\n    stage.setFocus(100 - Math.abs(z / 8))\n  }\n\n  /**\n   * Pan picked component based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to pan in x direction\n   * @param {Number} dy - amount to pan in y direction\n   * @return {undefined}\n   */\n  static panComponentDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.panComponent(dx, dy)\n  }\n\n  /**\n   * Pan picked atom based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to pan in x direction\n   * @param {Number} dy - amount to pan in y direction\n   * @return {undefined}\n   */\n  static panAtomDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.panAtom(dx, dy)\n  }\n\n  /**\n   * Rotate picked component based on mouse coordinate changes\n   * @param {Stage} stage - the stage\n   * @param {Number} dx - amount to rotate in x direction\n   * @param {Number} dy - amount to rotate in y direction\n   * @return {undefined}\n   */\n  static rotateComponentDrag (stage: Stage, dx: number, dy: number) {\n    stage.trackballControls.rotateComponent(dx, dy)\n  }\n\n  /**\n   * Move picked element to the center of the screen\n   * @param {Stage} stage - the stage\n   * @param {PickingProxy} pickingProxy - the picking data object\n   * @return {undefined}\n   */\n  static movePick (stage: Stage, pickingProxy: PickingProxy) {\n    if (pickingProxy) {\n      stage.animationControls.move(pickingProxy.position.clone())\n    }\n  }\n\n  /**\n   * Show tooltip with information of picked element\n   * @param {Stage} stage - the stage\n   * @param {PickingProxy} pickingProxy - the picking data object\n   * @return {undefined}\n   */\n  static tooltipPick (stage: Stage, pickingProxy: PickingProxy) {\n    const tt = stage.tooltip\n    const sp = stage.getParameters() as any\n    if (sp.tooltip && pickingProxy) {\n      const mp = pickingProxy.mouse.position\n      tt.innerText = pickingProxy.getLabel()\n      tt.style.bottom = (window.innerHeight - mp.y + 3) + 'px'\n      tt.style.left = (mp.x + 3) + 'px'\n      tt.style.display = 'block'\n    } else {\n      tt.style.display = 'none'\n    }\n  }\n\n  static measurePick (stage: Stage, pickingProxy: PickingProxy) {\n    if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)) {\n      const atom = pickingProxy.atom || pickingProxy.closestBondAtom\n      const sc = pickingProxy.component as StructureComponent\n      sc.measurePick(atom)\n    } else {\n      stage.measureClear()\n    }\n  }\n}\n\ntype MouseActionPreset = [ string, MouseActionCallback ][]\nexport const MouseActionPresets = {\n  default: [\n    [ 'scroll', MouseActions.zoomScroll ],\n    [ 'scroll-shift', MouseActions.focusScroll ],\n    [ 'scroll-ctrl', MouseActions.isolevelScroll ],\n    [ 'scroll-shift-ctrl', MouseActions.zoomFocusScroll ],\n\n    [ 'drag-left', MouseActions.rotateDrag ],\n    [ 'drag-right', MouseActions.panDrag ],\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\n    [ 'drag-ctrl-right', MouseActions.zRotateDrag ],\n    [ 'drag-shift-left', MouseActions.zoomDrag ],\n    [ 'drag-middle', MouseActions.zoomFocusDrag ],\n\n    [ 'drag-ctrl-shift-right', MouseActions.panComponentDrag ],\n    [ 'drag-ctrl-shift-left', MouseActions.rotateComponentDrag ],\n\n    [ 'clickPick-right', MouseActions.measurePick ],\n    [ 'clickPick-ctrl-left', MouseActions.measurePick ],\n    [ 'clickPick-middle', MouseActions.movePick ],\n    [ 'clickPick-left', MouseActions.movePick ],\n    [ 'hoverPick', MouseActions.tooltipPick ]\n  ] as MouseActionPreset,\n  pymol: [\n    [ 'drag-left', MouseActions.rotateDrag ],\n    [ 'drag-middle', MouseActions.panDrag ],\n    [ 'drag-right', MouseActions.zoomDrag ],\n    [ 'drag-shift-right', MouseActions.focusScroll ],\n\n    [ 'clickPick-ctrl+shift-middle', MouseActions.movePick ],\n    [ 'hoverPick', MouseActions.tooltipPick ]\n  ] as MouseActionPreset,\n  coot: [\n    [ 'scroll', MouseActions.isolevelScroll ],\n\n    [ 'drag-left', MouseActions.rotateDrag ],\n    [ 'drag-middle', MouseActions.panDrag ],\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\n    [ 'drag-right', MouseActions.zoomFocusDrag ],\n    [ 'drag-ctrl-right', MouseActions.focusScroll ],\n\n    [ 'clickPick-middle', MouseActions.movePick ],\n    [ 'hoverPick', MouseActions.tooltipPick ]\n  ] as MouseActionPreset,\n  astexviewer: [\n    [ 'drag-left', MouseActions.rotateDrag ],\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\n    [ 'drag-shift-left', MouseActions.zoomDrag ],\n    [ 'scroll', MouseActions.focusScroll ],\n    [ 'clickPick-middle', MouseActions.movePick ],\n    [ 'hoverPick', MouseActions.tooltipPick ]\n  ] as MouseActionPreset\n}\n\nexport default MouseActions\n","/**\n * @file Mouse Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { MouseActionPresets, MouseActionCallback } from './mouse-actions'\nimport Stage from '../stage/stage'\nimport MouseObserver from '../stage/mouse-observer'\n\nexport type MouseControlPreset = keyof typeof MouseActionPresets\nexport interface MouseControlsParams {\n  preset?: MouseControlPreset\n  disabled?: boolean\n}\n\nexport type MouseActionType = ''|'scroll'|'drag'|'click'|'doubleClick'|'hover'|'clickPick'|'hoverPick'\nexport interface MouseAction {\n  type: MouseActionType\n  key: number\n  button: number\n  callback: MouseActionCallback\n}\n\n/**\n * Strings to describe mouse events (including optional keyboard modifiers).\n * Must contain an event type: \"scroll\", \"drag\", \"click\", \"doubleClick\",\n * \"hover\", \"clickPick\" or \"hoverPick\". Optionally contain one or more\n * (seperated by plus signs) keyboard modifiers: \"alt\", \"ctrl\", \"meta\" or\n * \"shift\". Can contain the mouse button performing the event: \"left\",\n * \"middle\" or \"right\". The type, key and button parts must be seperated by\n * dashes.\n *\n * @example\n * // triggered on scroll event (no key or button)\n * \"scroll\"\n *\n * @example\n * // triggered on scroll event while shift key is pressed\n * \"scroll-shift\"\n *\n * @example\n * // triggered on drag event with left mouse button\n * \"drag-left\"\n *\n * @example\n * // triggered on drag event with right mouse button\n * // while ctrl and shift keys are pressed\n * \"drag-right-ctrl+shift\"\n *\n * @typedef {String} TriggerString\n */\n\n/**\n * Get event type, key and button\n * @param  {TriggerString} str - input trigger string\n * @return {Array} event type, key and button\n */\nfunction triggerFromString (str: string) {\n  const tokens = str.split(/[-+]/)\n\n  let type = ''\n  if (tokens.includes('scroll')) type = 'scroll'\n  if (tokens.includes('drag')) type = 'drag'\n  if (tokens.includes('click')) type = 'click'\n  if (tokens.includes('doubleClick')) type = 'doubleClick'\n  if (tokens.includes('hover')) type = 'hover'\n  if (tokens.includes('clickPick')) type = 'clickPick'\n  if (tokens.includes('hoverPick')) type = 'hoverPick'\n\n  let key = 0\n  if (tokens.includes('alt')) key += 1\n  if (tokens.includes('ctrl')) key += 2\n  if (tokens.includes('meta')) key += 4\n  if (tokens.includes('shift')) key += 8\n\n  let button = 0\n  if (tokens.includes('left')) button += 1\n  if (tokens.includes('right')) button += 2\n  if (tokens.includes('middle')) button += 4\n\n  return [ type, key, button ] as [ MouseActionType, number, number ]\n}\n\n/**\n * Mouse controls\n */\nclass MouseControls {\n  actionList: MouseAction[] = []\n  mouse: MouseObserver\n\n  disabled: boolean  // Flag to disable all actions\n\n  /**\n   * @param {Stage} stage - the stage object\n   * @param {Object} [params] - the parameters\n   * @param {String} params.preset - one of \"default\", \"pymol\", \"coot\"\n   * @param {String} params.disabled - flag to disable all actions\n   */\n  constructor (readonly stage: Stage, params: MouseControlsParams = {}) {\n    this.mouse = stage.mouseObserver\n    this.disabled = params.disabled || false\n    this.preset(params.preset || 'default')\n  }\n\n  run (type: MouseActionType, ...args: any[]) {\n    if (this.disabled) return\n\n    const key = this.mouse.key || 0\n    const button = this.mouse.buttons || 0\n\n    this.actionList.forEach(a => {\n      if (a.type === type && a.key === key && a.button === button) {\n        (a.callback as any)(this.stage, ...args)  // TODO\n      }\n    })\n  }\n\n  /**\n   * Add a new mouse action triggered by an event, key and button combination.\n   * The {@link MouseActions} class provides a number of static methods for\n   * use as callback functions.\n   *\n   * @example\n   * // change ambient light intensity on mouse scroll\n   * // while the ctrl and shift keys are pressed\n   * stage.mouseControls.add( \"scroll-ctrl+shift\", function( stage, delta ){\n   *     var ai = stage.getParameters().ambientIntensity;\n   *     stage.setParameters( { ambientIntensity: Math.max( 0, ai + delta / 50 ) } );\n   * } );\n   *\n   * @example\n   * // Call the MouseActions.zoomDrag method on mouse drag events\n   * // with left and right mouse buttons simultaneous\n   * stage.mouseControls.add( \"drag-left+right\", MouseActions.zoomDrag );\n   *\n   * @param {TriggerString} triggerStr - the trigger for the action\n   * @param {function(stage: Stage, ...args: Any)} callback - the callback function for the action\n   * @return {undefined}\n   */\n  add (triggerStr: string, callback: MouseActionCallback) {\n    const [ type, key, button ] = triggerFromString(triggerStr)\n\n    this.actionList.push({ type, key, button, callback })\n  }\n\n  /**\n   * Remove a mouse action. The trigger string can contain an asterix (*)\n   * as a wildcard for any key or mouse button. When the callback function\n   * is given, only actions that call that function are removed.\n   *\n   * @example\n   * // remove actions triggered solely by a scroll event\n   * stage.mouseControls.remove( \"scroll\" );\n   *\n   * @example\n   * // remove actions triggered by a scroll event, including\n   * // those requiring a key pressed or mouse button used\n   * stage.mouseControls.remove( \"scroll-*\" );\n   *\n   * @example\n   * // remove actions triggered by a scroll event\n   * // while the shift key is pressed\n   * stage.mouseControls.remove( \"scroll-shift\" );\n   *\n   * @param {TriggerString} triggerStr - the trigger for the action\n   * @param {Function} [callback] - the callback function for the action\n   * @return {undefined}\n   */\n  remove (triggerStr: string, callback: MouseActionCallback) {\n    const wildcard = triggerStr.includes('*')\n    const [ type, key, button ] = triggerFromString(triggerStr)\n\n    const actionList = this.actionList.filter(function (a) {\n      return !(\n        (a.type === type || (wildcard && type === '')) &&\n        (a.key === key || (wildcard && key === 0)) &&\n        (a.button === button || (wildcard && button === 0)) &&\n        (a.callback === callback || callback === undefined)\n      )\n    })\n\n    this.actionList = actionList\n  }\n\n  /**\n   * Set mouse action preset\n   * @param  {String} name - one of \"default\", \"pymol\", \"coot\"\n   * @return {undefined}\n   */\n  preset (name: MouseControlPreset) {\n    this.clear()\n\n    const list = MouseActionPresets[ name ] || []\n\n    list.forEach(action => this.add(action[0], action[1]))\n  }\n\n  /**\n   * Remove all mouse actions\n   * @return {undefined}\n   */\n  clear () {\n    this.actionList.length = 0\n  }\n}\n\nexport default MouseControls\n","/**\n * @file Key Actions\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Stage from '../stage/stage'\n\nexport type KeyActionCallback = (stage: Stage) => void\n\n/**\n * Key actions provided as static methods\n */\nclass KeyActions {\n  /**\n   * Stage auto view\n   */\n  static autoView (stage: Stage) {\n    stage.autoView(1000)\n  }\n\n  /**\n   * Toggle stage animations\n   */\n  static toggleAnimations (stage: Stage) {\n    stage.animationControls.toggle()\n  }\n\n  /**\n   * Toggle stage rocking\n   */\n  static toggleRock (stage: Stage) {\n    stage.toggleRock()\n  }\n\n  /**\n   * Toggle stage spinning\n   */\n  static toggleSpin (stage: Stage) {\n    stage.toggleSpin()\n  }\n\n  /**\n   * Toggle anti-aliasing\n   */\n  static toggleAntialiasing (stage: Stage) {\n    const p = stage.getParameters()\n    stage.setParameters({ sampleLevel: p.sampleLevel === -1 ? 0 : -1 })\n  }\n}\n\ntype KeyActionPreset = [ string, KeyActionCallback ][]\nexport const KeyActionPresets = {\n  default: [\n    [ 'i', KeyActions.toggleSpin ],\n    [ 'k', KeyActions.toggleRock ],\n    [ 'p', KeyActions.toggleAnimations ],\n    [ 'a', KeyActions.toggleAntialiasing ],\n    [ 'r', KeyActions.autoView ]\n  ] as KeyActionPreset\n}\n\nexport default KeyActions\n","/**\n * @file Key Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { KeyActionPresets, KeyActionCallback } from './key-actions'\nimport Stage from '../stage/stage'\n\nexport type KeyControlPreset = keyof typeof KeyActionPresets\nexport interface KeyControlsParams {\n  preset?: KeyControlPreset\n  disabled?: boolean\n}\n\nexport interface KeyAction {\n  key: string,\n  callback: KeyActionCallback\n}\n\n/**\n * Mouse controls\n */\nclass KeyControls {\n  actionList: KeyAction[] = []\n\n  disabled: boolean  // Flag to disable all actions\n\n  /**\n   * @param {Stage} stage - the stage object\n   * @param {Object} [params] - the parameters\n   * @param {String} params.preset - one of \"default\"\n   * @param {String} params.disabled - flag to disable all actions\n   */\n  constructor (readonly stage: Stage, params: KeyControlsParams = {}) {\n    this.disabled = params.disabled || false\n    this.preset(params.preset || 'default')\n  }\n\n  run (key: string) {\n    if (this.disabled) return\n\n    this.actionList.forEach(a => {\n      if (a.key === key) {\n        a.callback(this.stage)\n      }\n    })\n  }\n\n  /**\n   * Add a key action triggered by pressing the given character.\n   * The {@link KeyActions} class provides a number of static methods for\n   * use as callback functions.\n   *\n   * @example\n   * // call KeyActions.toggleRock when \"k\" is pressed\n   * stage.keyControls.remove( \"k\", KeyActions.toggleRock );\n   *\n   * @param {Char} char - the key/character\n   * @param {Function} callback - the callback function for the action\n   * @return {undefined}\n   */\n  add (char: string, callback: KeyActionCallback) {\n    this.actionList.push({ key: char, callback })\n  }\n\n  /**\n   * Remove a key action. When the callback function\n   * is given, only actions that call that function are removed.\n   *\n   * @example\n   * // remove all actions triggered by pressing \"k\"\n   * stage.keyControls.remove( \"k\" );\n   *\n   * @example\n   * // remove action `toggleRock` triggered by pressing \"k\"\n   * stage.keyControls.remove( \"k\", toggleRock );\n   *\n   * @param {Char} char - the key/character\n   * @param {Function} [callback] - the callback function for the action\n   * @return {undefined}\n   */\n  remove (char: string, callback: KeyActionCallback) {\n\n    const actionList = this.actionList.filter(function (a) {\n      return !(\n        (a.key === char) &&\n        (a.callback === callback || callback === undefined)\n      )\n    })\n\n    this.actionList = actionList\n  }\n\n  /**\n   * Set key action preset\n   * @param  {String} name - one of \"default\"\n   * @return {undefined}\n   */\n  preset (name: KeyControlPreset) {\n    this.clear()\n\n    const list = KeyActionPresets[ name ] || []\n\n    list.forEach(action => this.add(action[0], action[1]))\n  }\n\n  /**\n   * Remove all key actions\n   * @return {undefined}\n   */\n  clear () {\n    this.actionList.length = 0\n  }\n}\n\nexport default KeyControls\n","/**\n * @file Picking Behavior\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Stage from './stage'\nimport MouseObserver from './mouse-observer'\nimport Viewer from '../viewer/viewer'\nimport MouseControls from '../controls/mouse-controls'\n\nclass PickingBehavior {\n  viewer: Viewer\n  mouse: MouseObserver\n  controls: MouseControls\n\n  constructor (readonly stage: Stage) {\n    this.stage = stage\n    this.mouse = stage.mouseObserver\n    this.controls = stage.mouseControls\n\n    this.mouse.signals.clicked.add(this._onClick, this)\n    this.mouse.signals.hovered.add(this._onHover, this)\n  }\n\n  _onClick (x: number, y: number) {\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\n    this.stage.signals.clicked.dispatch(pickingProxy)\n    this.controls.run('clickPick', pickingProxy)\n  }\n\n  _onHover (x: number, y: number) {\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\n    if (pickingProxy && this.mouse.down.equals(this.mouse.position)) {\n      this.stage.transformComponent = pickingProxy.component\n      this.stage.transformAtom = pickingProxy.atom\n    }\n    this.stage.signals.hovered.dispatch(pickingProxy)\n    this.controls.run('hoverPick', pickingProxy)\n  }\n\n  dispose () {\n    this.mouse.signals.clicked.remove(this._onClick, this)\n    this.mouse.signals.hovered.remove(this._onHover, this)\n  }\n}\n\nexport default PickingBehavior\n","/**\n * @file Mouse Behavior\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Stage from './stage'\nimport MouseObserver from './mouse-observer'\nimport Viewer from '../viewer/viewer'\nimport MouseControls from '../controls/mouse-controls'\n\nclass MouseBehavior {\n  viewer: Viewer\n  mouse: MouseObserver\n  controls: MouseControls\n  domElement: HTMLCanvasElement\n\n  constructor (readonly stage: Stage) {\n    this.stage = stage\n    this.mouse = stage.mouseObserver\n    this.controls = stage.mouseControls\n\n    this.mouse.signals.moved.add(this._onMove, this)\n    this.mouse.signals.scrolled.add(this._onScroll, this)\n    this.mouse.signals.dragged.add(this._onDrag, this)\n    this.mouse.signals.clicked.add(this._onClick, this)\n    this.mouse.signals.hovered.add(this._onHover, this)\n    this.mouse.signals.doubleClicked.add(this._onDblclick, this)\n  }\n\n  _onMove (/* x, y */) {\n    this.stage.tooltip.style.display = 'none'\n  }\n\n  _onScroll (delta: number) {\n    this.controls.run('scroll', delta)\n  }\n\n  _onDrag (dx: number, dy: number) {\n    this.controls.run('drag', dx, dy)\n  }\n\n  _onClick (x: number, y: number) {\n    this.controls.run('click', x, y)\n  }\n\n  _onDblclick (x: number, y: number) {\n    this.controls.run('doubleClick', x, y)\n  }\n\n  _onHover (x: number, y: number) {\n    this.controls.run('hover', x, y)\n  }\n\n  dispose () {\n    this.mouse.signals.moved.remove(this._onMove, this)\n    this.mouse.signals.scrolled.remove(this._onScroll, this)\n    this.mouse.signals.dragged.remove(this._onDrag, this)\n    this.mouse.signals.clicked.remove(this._onClick, this)\n    this.mouse.signals.hovered.remove(this._onHover, this)\n  }\n}\n\nexport default MouseBehavior\n","/**\n * @file Animation Behavior\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Stage from './stage'\nimport Viewer from '../viewer/viewer'\nimport Stats from '../viewer/stats'\nimport AnimationControls from '../controls/animation-controls'\n\nclass AnimationBehavior {\n  viewer: Viewer\n  animationControls: AnimationControls\n\n  constructor (readonly stage: Stage) {\n    this.viewer = stage.viewer\n    this.animationControls = stage.animationControls\n\n    this.viewer.signals.ticked.add(this._onTick, this)\n  }\n\n  _onTick (stats: Stats) {\n    this.animationControls.run(stats)\n  }\n\n  dispose () {\n    this.viewer.signals.ticked.remove(this._onTick, this)\n  }\n}\n\nexport default AnimationBehavior\n","/**\n * @file Key Behavior\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { SupportsPassiveEventHandler } from '../globals'\nimport Stage from './stage'\nimport Viewer from '../viewer/viewer'\nimport KeyControls from '../controls/key-controls'\n\nconst passive = SupportsPassiveEventHandler ? { passive: true } : false\n\nclass KeyBehavior {\n  viewer: Viewer\n  controls: KeyControls\n  domElement: HTMLCanvasElement\n\n  /**\n   * @param {Stage} stage - the stage object\n   */\n  constructor (readonly stage: Stage) {\n    this.stage = stage\n    this.controls = stage.keyControls\n    this.domElement = stage.viewer.renderer.domElement\n\n    // ensure the domElement is focusable\n    this.domElement.setAttribute('tabIndex', '-1')\n    this.domElement.style.outline = 'none'\n\n    this._focusDomElement = this._focusDomElement.bind(this)\n    this._onKeydown = this._onKeydown.bind(this)\n    this._onKeyup = this._onKeyup.bind(this)\n    this._onKeypress = this._onKeypress.bind(this)\n\n    this.domElement.addEventListener('mousedown', this._focusDomElement)\n    this.domElement.addEventListener('touchstart', this._focusDomElement, passive as any)  // TODO\n    this.domElement.addEventListener('keydown', this._onKeydown)\n    this.domElement.addEventListener('keyup', this._onKeyup)\n    this.domElement.addEventListener('keypress', this._onKeypress)\n  }\n\n  /**\n   * handle key down\n   * @param  {Event} event - key event\n   * @return {undefined}\n   */\n  _onKeydown (/* event */) {\n    // console.log( \"down\", event.keyCode, String.fromCharCode( event.keyCode ) );\n  }\n\n  /**\n   * handle key up\n   * @param  {Event} event - key event\n   * @return {undefined}\n   */\n  _onKeyup (/* event */) {\n    // console.log( \"up\", event.keyCode, String.fromCharCode( event.keyCode ) );\n  }\n\n  /**\n   * handle key press\n   * @param  {Event} event - key event\n   * @return {undefined}\n   */\n  _onKeypress (event: KeyboardEvent) {\n    // console.log( \"press\", event.keyCode, String.fromCharCode( event.keyCode ) );\n    let pressedKey: string;\n    if (\"key\" in KeyboardEvent.prototype) {\n      pressedKey = event.key;\n    // some mobile browsers don't support this attribute\n    } else {\n      pressedKey = String.fromCharCode(event.which || event.keyCode);\n    }\n    this.controls.run(pressedKey);\n  }\n\n  _focusDomElement () {\n    this.domElement.focus()\n  }\n\n  dispose () {\n    this.domElement.removeEventListener('mousedown', this._focusDomElement)\n    this.domElement.removeEventListener('touchstart', this._focusDomElement, passive as any)  // TODO\n    this.domElement.removeEventListener('keydown', this._onKeypress)\n    this.domElement.removeEventListener('keyup', this._onKeypress)\n    this.domElement.removeEventListener('keypress', this._onKeypress)\n  }\n}\n\nexport default KeyBehavior\n","/**\n * @file Annotation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector2, Vector3 } from 'three'\n\nimport { defaults } from '../utils'\nimport { smoothstep } from '../math/math-utils'\nimport Stage from '../stage/stage'\nimport Viewer from '../viewer/viewer'\nimport Component from './component'\n\nexport interface AnnotationParams {\n  offsetX?: number\n  offsetY?: number\n  visible?: boolean\n}\n\n/**\n * Annotation HTML element floating on top of a position rendered in 3d\n */\nexport default class Annotation {\n  offsetX: number\n  offsetY: number\n  visible: boolean\n\n  stage: Stage\n  viewer: Viewer\n  element: HTMLElement\n\n  private _viewerPosition: Vector3\n  private _canvasPosition: Vector2\n  private _cameraPosition: Vector3\n  private _clientRect: ClientRect\n\n  /**\n   * @param {Component} component - the associated component\n   * @param {Vector3} position - position in 3d\n   * @param {String|Element} content - HTML content\n   * @param {Object} [params] - parameters\n   * @param {Integer} params.offsetX - 2d offset in x direction\n   * @param {Integer} params.offsetY - 2d offset in y direction\n   * @param {Boolean} params.visible - visibility flag\n   */\n  constructor (readonly component: Component, readonly position: Vector3, content: string|HTMLElement, params: AnnotationParams = {}) {\n    this.offsetX = defaults(params.offsetX, 0)\n    this.offsetY = defaults(params.offsetY, 0)\n    this.visible = defaults(params.visible, true)\n\n    this.stage = component.stage\n    this.viewer = component.stage.viewer\n\n    this._viewerPosition = new Vector3()\n    this._updateViewerPosition()\n    this._canvasPosition = new Vector2()\n    this._cameraPosition = new Vector3()\n\n    this.element = document.createElement('div')\n    Object.assign(this.element.style, {\n      display: 'block',\n      position: 'absolute',\n      pointerEvents: 'none',\n      whiteSpace: 'nowrap',\n      left: '-10000px'\n    })\n\n    this.viewer.wrapper.appendChild(this.element)\n    this.setContent(content)\n    this.updateVisibility()\n    this.viewer.signals.rendered.add(this._update, this)\n    this.component.signals.matrixChanged.add(this._updateViewerPosition, this)\n  }\n\n  /**\n   * Set HTML content of the annotation\n   * @param {String|Element} value - HTML content\n   * @return {undefined}\n   */\n  setContent (value: string|HTMLElement) {\n    const displayValue = this.element.style.display\n    if (displayValue === 'none') {\n      this.element.style.left = '-10000px'\n      this.element.style.display = 'block'\n    }\n\n    if (value instanceof HTMLElement) {\n      this.element.appendChild(value)\n    } else {\n      const content = document.createElement('div')\n      content.innerText = value\n      Object.assign(content.style, {\n        backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\n        color: 'lightgrey',\n        padding: '8px',\n        fontFamily: 'sans-serif',\n      })\n      this.element.appendChild(content)\n    }\n\n    this._clientRect = this.element.getBoundingClientRect()\n\n    if (displayValue === 'none') {\n      this.element.style.display = displayValue\n    }\n  }\n\n  /**\n   * Set visibility of the annotation\n   * @param {Boolean} value - visibility flag\n   * @return {undefined}\n   */\n  setVisibility (value: boolean) {\n    this.visible = value\n    this.updateVisibility()\n  }\n\n  getVisibility () {\n    return this.visible && this.component.parameters.visible\n  }\n\n  updateVisibility () {\n    this.element.style.display = this.getVisibility() ? 'block' : 'none'\n  }\n\n  _updateViewerPosition () {\n    this._viewerPosition\n      .copy(this.position)\n      .applyMatrix4(this.component.matrix)\n  }\n\n  _update () {\n    if (!this.getVisibility()) return\n\n    const s = this.element.style\n    const cp = this._canvasPosition\n    const vp = this._viewerPosition\n    const cr = this._clientRect\n\n    this._cameraPosition.copy(vp)\n      .add(this.viewer.translationGroup.position)\n      .applyMatrix4(this.viewer.rotationGroup.matrix)\n      .sub(this.viewer.camera.position)\n\n    if (this._cameraPosition.z < 0) {\n      s.display = 'none'\n      return\n    } else {\n      s.display = 'block'\n    }\n\n    const depth = this._cameraPosition.length()\n    const fog = this.viewer.scene.fog as any  // TODO\n\n    s.opacity = (1 - smoothstep(fog.near, fog.far, depth)).toString()\n    s.zIndex = (Math.round((fog.far - depth) * 100)).toString()\n\n    this.stage.viewerControls.getPositionOnCanvas(vp, cp)\n\n    s.bottom = (this.offsetX + cp.y + cr.height / 2) + 'px'\n    s.left = (this.offsetY + cp.x - cr.width / 2) + 'px'\n  }\n\n  /**\n   * Safely remove the annotation\n   * @return {undefined}\n   */\n  dispose () {\n    this.viewer.wrapper.removeChild(this.element)\n    this.viewer.signals.ticked.remove(this._update, this)\n    this.component.signals.matrixChanged.remove(this._updateViewerPosition, this)\n  }\n}","/**\n * @file Component Controls\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4, Quaternion } from 'three'\nimport * as signalsWrapper from 'signals'\n\nimport { ensureVector3 } from '../utils'\nimport Component from '../component/component'\nimport Stage from '../stage/stage'\nimport Viewer from '../viewer/viewer'\n\nconst tmpRotateMatrix = new Matrix4()\nconst tmpRotateVector = new Vector3()\nconst tmpRotateQuaternion = new Quaternion()\n\n/**\n * Component controls\n */\nclass ComponentControls {\n  signals = {\n    changed: new signalsWrapper.Signal()\n  }\n\n  stage: Stage\n  viewer: Viewer\n\n  /**\n   * @param  {Component} component - the component object\n   */\n  constructor (readonly component: Component) {\n    this.stage = component.stage\n    this.viewer = component.stage.viewer\n  }\n\n  /**\n   * component center position\n   * @type {Vector3}\n   */\n  get position () {\n    return this.component.position\n  }\n\n  /**\n   * component rotation\n   * @type {Quaternion}\n   */\n  get rotation () {\n    return this.component.quaternion\n  }\n\n  /**\n   * Trigger render and emit changed event\n   * @emits {ComponentControls.signals.changed}\n   * @return {undefined}\n   */\n  changed () {\n    this.component.updateMatrix()\n    this.viewer.requestRender()\n    this.signals.changed.dispatch()\n  }\n\n  /**\n   * spin component on axis\n   * @param  {Vector3|Array} axis - rotation axis\n   * @param  {Number} angle - amount to spin\n   * @return {undefined}\n   */\n  spin (axis: Vector3, angle: number) {\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\n    tmpRotateVector\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\n\n    tmpRotateMatrix.extractRotation(this.component.transform)\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\n\n    tmpRotateVector.copy(ensureVector3(axis))\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\n    tmpRotateMatrix.makeRotationAxis(tmpRotateVector, angle)\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateMatrix)\n\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\n    this.changed()\n  }\n}\n\nexport default ComponentControls\n","/**\n * @file Radius Factory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { NucleicBackboneAtoms } from '../structure/structure-constants'\nimport AtomProxy from '../proxy/atom-proxy'\n\nexport const RadiusFactoryTypes = {\n  '': '',\n  'vdw': 'by vdW radius',\n  'covalent': 'by covalent radius',\n  'sstruc': 'by secondary structure',\n  'bfactor': 'by bfactor',\n  'size': 'size',\n  'data': 'data',\n  'explicit' : 'explicit'\n}\nexport type RadiusType = keyof typeof RadiusFactoryTypes\n\nexport interface RadiusParams {\n  type?: RadiusType\n  scale?: number\n  size?: number\n  data?: { [k: number]: number }\n}\n\nclass RadiusFactory {\n  max = 10\n\n  static types = RadiusFactoryTypes\n\n  readonly type: RadiusType\n  readonly scale: number\n  readonly size: number\n  readonly data: { [k: number]: number }\n\n  constructor (params: RadiusParams = {}) {\n    this.type = defaults(params.type, 'size')\n    this.scale = defaults(params.scale, 1)\n    this.size = defaults(params.size, 1)\n    this.data = defaults(params.data, {})\n  }\n\n  atomRadius (a: AtomProxy) {\n    let r\n\n    switch (this.type) {\n      case 'vdw':\n        r = a.vdw\n        break\n\n      case 'covalent':\n        r = a.covalent\n        break\n\n      case 'bfactor':\n        r = a.bfactor || 1.0\n        break\n\n      case 'sstruc':\n        const sstruc = a.sstruc\n        if (sstruc === 'h') {\n          r = 0.25\n        } else if (sstruc === 'g') {\n          r = 0.25\n        } else if (sstruc === 'i') {\n          r = 0.25\n        } else if (sstruc === 'e') {\n          r = 0.25\n        } else if (sstruc === 'b') {\n          r = 0.25\n        } else if (NucleicBackboneAtoms.includes(a.atomname)) {\n          r = 0.4\n        } else {\n          r = 0.1\n        }\n        break\n\n      case 'data':\n        r = defaults(this.data[ a.index ], 1.0)\n        break\n\n      case 'explicit':\n        // defaults is inappropriate as AtomProxy.radius returns\n        // null for missing radii\n        r = a.radius\n        if (r === null) r = this.size\n        break\n\n      default:\n        r = this.size\n        break\n    }\n\n    return Math.min(r * this.scale, this.max)\n  }\n\n}\n\nexport default RadiusFactory\n","/**\n * @file Principal Axes\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4, Quaternion } from 'three'\n\nimport {\n    Matrix, meanRows, subRows, transpose, multiplyABt, svd\n} from './matrix-utils'\nimport { projectPointOnVector } from './vector-utils'\nimport Structure from '../structure/structure'\nimport AtomProxy from '../proxy/atom-proxy'\n\nconst negateVector = new Vector3(-1, -1, -1)\nconst tmpMatrix = new Matrix4()\n\n/**\n * Principal axes\n */\nclass PrincipalAxes {\n  begA: Vector3\n  endA: Vector3\n  begB: Vector3\n  endB: Vector3\n  begC: Vector3\n  endC: Vector3\n\n  center: Vector3\n\n  vecA: Vector3\n  vecB: Vector3\n  vecC: Vector3\n\n  normVecA: Vector3\n  normVecB: Vector3\n  normVecC: Vector3\n\n  /**\n   * @param  {Matrix} points - 3 by N matrix\n   */\n  constructor (points: Matrix) {\n    // console.time( \"PrincipalAxes\" );\n\n    const n = points.rows\n    const n3 = n / 3\n    const pointsT = new Matrix(n, 3)\n    const A = new Matrix(3, 3)\n    const W = new Matrix(1, 3)\n    const U = new Matrix(3, 3)\n    const V = new Matrix(3, 3)\n\n        // calculate\n    const mean = meanRows(points)\n    subRows(points, mean)\n    transpose(pointsT, points)\n    multiplyABt(A, pointsT, pointsT)\n    svd(A, W, U, V)\n\n    // console.log( points, pointsT, mean )\n    // console.log( n, A, W, U, V );\n\n    // center\n    const vm = new Vector3(mean[0], mean[1], mean[2])\n\n    // normalized\n    const van = new Vector3(U.data[0], U.data[3], U.data[6])\n    const vbn = new Vector3(U.data[1], U.data[4], U.data[7])\n    const vcn = new Vector3(U.data[2], U.data[5], U.data[8])\n\n    // scaled\n    const va = van.clone().multiplyScalar(Math.sqrt(W.data[0] / n3))\n    const vb = vbn.clone().multiplyScalar(Math.sqrt(W.data[1] / n3))\n    const vc = vcn.clone().multiplyScalar(Math.sqrt(W.data[2] / n3))\n\n    // points\n    this.begA = vm.clone().sub(va)\n    this.endA = vm.clone().add(va)\n    this.begB = vm.clone().sub(vb)\n    this.endB = vm.clone().add(vb)\n    this.begC = vm.clone().sub(vc)\n    this.endC = vm.clone().add(vc)\n\n    //\n\n    this.center = vm\n\n    this.vecA = va\n    this.vecB = vb\n    this.vecC = vc\n\n    this.normVecA = van\n    this.normVecB = vbn\n    this.normVecC = vcn\n\n    // console.timeEnd( \"PrincipalAxes\" );\n  }\n\n  /**\n   * Get the basis matrix descriping the axes\n   * @param  {Matrix4} [optionalTarget] - target object\n   * @return {Matrix4} the basis\n   */\n  getBasisMatrix (optionalTarget = new Matrix4()) {\n    const basis = optionalTarget\n\n    basis.makeBasis(this.normVecB, this.normVecA, this.normVecC)\n    if (basis.determinant() < 0) {\n      basis.scale(negateVector)\n    }\n\n    return basis\n  }\n\n  /**\n   * Get a quaternion descriping the axes rotation\n   * @param  {Quaternion} [optionalTarget] - target object\n   * @return {Quaternion} the rotation\n   */\n  getRotationQuaternion (optionalTarget = new Quaternion()) {\n    const q = optionalTarget\n    q.setFromRotationMatrix(this.getBasisMatrix(tmpMatrix))\n\n    return q.inverse()\n  }\n\n  /**\n   * Get the scale/length for each dimension for a box around the axes\n   * to enclose the atoms of a structure\n   * @param  {Structure|StructureView} structure - the structure\n   * @return {{d1a: Number, d2a: Number, d3a: Number, d1b: Number, d2b: Number, d3b: Number}} scale\n   */\n  getProjectedScaleForAtoms (structure: Structure) {\n    let d1a = -Infinity\n    let d1b = -Infinity\n    let d2a = -Infinity\n    let d2b = -Infinity\n    let d3a = -Infinity\n    let d3b = -Infinity\n\n    const p = new Vector3()\n    const t = new Vector3()\n\n    const center = this.center\n    const ax1 = this.normVecA\n    const ax2 = this.normVecB\n    const ax3 = this.normVecC\n\n    structure.eachAtom(function (ap: AtomProxy) {\n      projectPointOnVector(p.copy(ap as any), ax1, center)  // TODO\n      const dp1 = t.subVectors(p, center).normalize().dot(ax1)\n      const dt1 = p.distanceTo(center)\n      if (dp1 > 0) {\n        if (dt1 > d1a) d1a = dt1\n      } else {\n        if (dt1 > d1b) d1b = dt1\n      }\n\n      projectPointOnVector(p.copy(ap as any), ax2, center)\n      const dp2 = t.subVectors(p, center).normalize().dot(ax2)\n      const dt2 = p.distanceTo(center)\n      if (dp2 > 0) {\n        if (dt2 > d2a) d2a = dt2\n      } else {\n        if (dt2 > d2b) d2b = dt2\n      }\n\n      projectPointOnVector(p.copy(ap as any), ax3, center)\n      const dp3 = t.subVectors(p, center).normalize().dot(ax3)\n      const dt3 = p.distanceTo(center)\n      if (dp3 > 0) {\n        if (dt3 > d3a) d3a = dt3\n      } else {\n        if (dt3 > d3b) d3b = dt3\n      }\n    })\n\n    return {\n      d1a: d1a,\n      d2a: d2a,\n      d3a: d3a,\n      d1b: -d1b,\n      d2b: -d2b,\n      d3b: -d3b\n    }\n  }\n}\n\nexport default PrincipalAxes\n","/**\n * @file Filtered Volume\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport Volume from './volume'\nimport { Box3, Matrix4, Matrix3, Vector3 } from 'three';\n\nclass FilteredVolume {\n  volume: Volume\n  data: Float32Array\n  position: Float32Array\n  atomindex: Int32Array\n  _filterHash: string\n  _dataBuffer: ArrayBuffer\n  _positionBuffer: ArrayBuffer\n  _atomindexBuffer: ArrayBuffer\n  getValueForSigma: typeof Volume.prototype.getValueForSigma\n  getSigmaForValue: typeof Volume.prototype.getSigmaForValue\n  getDataAtomindex: typeof Volume.prototype.getDataAtomindex\n  getDataPosition: typeof Volume.prototype.getDataPosition\n  getDataColor: typeof Volume.prototype.getDataColor\n  getDataPicking: typeof Volume.prototype.getDataPicking\n  getDataSize: typeof Volume.prototype.getDataSize\n\n\n  constructor (volume: Volume, minValue?: number, maxValue?: number, outside?: boolean) {\n    this.volume = volume\n    this.setFilter(minValue, maxValue, outside)\n  }\n\n  get header () { return this.volume.header }\n  get matrix (): Matrix4 { return this.volume.matrix }\n  get normalMatrix (): Matrix3 { return this.volume.normalMatrix }\n  get inverseMatrix (): Matrix4 { return this.volume.inverseMatrix }\n  get center (): Vector3 { return this.volume.center }\n  get boundingBox (): Box3 { return this.volume.boundingBox }\n  get min () { return this.volume.min }\n  get max () { return this.volume.max }\n  get mean () { return this.volume.mean }\n  get rms () { return this.volume.rms }\n\n  _getFilterHash (minValue: number, maxValue: number, outside: boolean) {\n    return JSON.stringify([ minValue, maxValue, outside ])\n  }\n\n  setFilter (minValue: number|undefined, maxValue: number|undefined, outside: boolean|undefined) {\n    if (isNaN(<number>minValue) && this.header) {\n      minValue = this.header.DMEAN + 2.0 * this.header.ARMS\n    }\n\n    minValue = (minValue !== undefined && !isNaN(minValue)) ? minValue : -Infinity\n    maxValue = defaults(maxValue, Infinity) as number\n    outside = defaults(outside, false) as boolean\n\n    const data = this.volume.data\n    const position = this.volume.position\n    const atomindex = this.volume.atomindex\n\n    const filterHash = this._getFilterHash(minValue, maxValue, outside)\n\n    if (filterHash === this._filterHash) {\n      // already filtered\n      return\n    } else if (minValue === -Infinity && maxValue === Infinity) {\n      this.data = data\n      this.position = position\n      this.atomindex = atomindex!\n    } else {\n      const n = data.length\n\n      if (!this._dataBuffer) {\n        // ArrayBuffer for re-use as Float32Array backend\n\n        this._dataBuffer = new ArrayBuffer(n * 4)\n        this._positionBuffer = new ArrayBuffer(n * 3 * 4)\n        if (atomindex) this._atomindexBuffer = new ArrayBuffer(n * 4)\n      }\n\n      const filteredData = new Float32Array(this._dataBuffer)\n      const filteredPosition = new Float32Array(this._positionBuffer)\n      let filteredAtomindex\n      if (atomindex) filteredAtomindex = new Uint32Array(this._atomindexBuffer)\n\n      let j = 0\n\n      for (let i = 0; i < n; ++i) {\n        const i3 = i * 3\n        const v = data[ i ]\n\n        if ((!outside && v >= minValue && v <= maxValue) ||\n            (outside && (v < minValue || v > maxValue))\n        ) {\n          const j3 = j * 3\n\n          filteredData[ j ] = v\n\n          filteredPosition[ j3 + 0 ] = position[ i3 + 0 ]\n          filteredPosition[ j3 + 1 ] = position[ i3 + 1 ]\n          filteredPosition[ j3 + 2 ] = position[ i3 + 2 ]\n\n          if (atomindex && filteredAtomindex) filteredAtomindex[ j ] = atomindex[ i ]\n\n          j += 1\n        }\n      }\n\n      // set views\n\n      this.data = new Float32Array(this._dataBuffer, 0, j)\n      this.position = new Float32Array(this._positionBuffer, 0, j * 3)\n      if (atomindex) this.atomindex = new Int32Array(this._atomindexBuffer, 0, j)\n    }\n\n    this._filterHash = filterHash\n  }\n}\n\nFilteredVolume.prototype.getValueForSigma = Volume.prototype.getValueForSigma\nFilteredVolume.prototype.getSigmaForValue = Volume.prototype.getSigmaForValue\n\nFilteredVolume.prototype.getDataAtomindex = Volume.prototype.getDataAtomindex\nFilteredVolume.prototype.getDataPosition = Volume.prototype.getDataPosition\nFilteredVolume.prototype.getDataColor = Volume.prototype.getDataColor\nFilteredVolume.prototype.getDataPicking = Volume.prototype.getDataPicking\nFilteredVolume.prototype.getDataSize = Volume.prototype.getDataSize\n\nexport default FilteredVolume\n","/**\n * @file Bond Hash\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport BondStore from './bond-store'\nimport { createAdjacencyList } from '../utils/adjacency-list'\n\nclass BondHash {\n  countArray: Uint8Array\n  offsetArray: Int32Array\n  indexArray: Int32Array\n\n  constructor (bondStore: BondStore, atomCount: number) {\n    const al = createAdjacencyList({\n      nodeArray1: bondStore.atomIndex1,\n      nodeArray2: bondStore.atomIndex2,\n      edgeCount: bondStore.count,\n      nodeCount: atomCount\n    })\n\n    this.countArray = al.countArray\n    this.offsetArray = al.offsetArray\n    this.indexArray = al.indexArray\n  }\n}\n\nexport default BondHash\n","/**\n * @file Bond Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Bond store\n */\nexport default class BondStore extends Store {\n  atomIndex1: Uint32Array\n  atomIndex2: Uint32Array\n  bondOrder: Uint8Array\n\n  get _defaultFields () {\n    return [\n      [ 'atomIndex1', 1, 'int32' ],\n      [ 'atomIndex2', 1, 'int32' ],\n      [ 'bondOrder', 1, 'int8' ]\n    ] as StoreField[]\n  }\n\n  addBond (atom1: AtomProxy, atom2: AtomProxy, bondOrder?: number) {\n    this.growIfFull()\n\n    const i = this.count\n    const ai1 = atom1.index\n    const ai2 = atom2.index\n\n    if (ai1 < ai2) {\n      this.atomIndex1[ i ] = ai1\n      this.atomIndex2[ i ] = ai2\n    } else {\n      this.atomIndex2[ i ] = ai1\n      this.atomIndex1[ i ] = ai2\n    }\n    if (bondOrder) this.bondOrder[ i ] = bondOrder\n\n    this.count += 1\n  }\n\n  addBondIfConnected (atom1: AtomProxy, atom2: AtomProxy, bondOrder?: number) {\n    if (atom1.connectedTo(atom2)) {\n      this.addBond(atom1, atom2, bondOrder)\n      return true\n    }\n\n    return false\n  }\n}","/**\n * @file Atom Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\n\n/**\n * Atom store\n */\nexport default class AtomStore extends Store {\n  residueIndex: Uint32Array\n  atomTypeId: Uint16Array\n\n  x: Float32Array\n  y: Float32Array\n  z: Float32Array\n  serial: Int32Array\n  bfactor: Float32Array\n  altloc: Uint8Array\n  occupancy: Float32Array\n\n  partialCharge?: Float32Array\n  formalCharge?: Uint8Array\n\n  get _defaultFields () {\n    return [\n      [ 'residueIndex', 1, 'uint32' ],\n      [ 'atomTypeId', 1, 'uint16' ],\n\n      [ 'x', 1, 'float32' ],\n      [ 'y', 1, 'float32' ],\n      [ 'z', 1, 'float32' ],\n      [ 'serial', 1, 'int32' ],\n      [ 'bfactor', 1, 'float32' ],\n      [ 'altloc', 1, 'uint8' ],\n      [ 'occupancy', 1, 'float32' ]\n    ] as StoreField[]\n  }\n\n  setAltloc (i: number, str: string) {\n    this.altloc[ i ] = str.charCodeAt(0)\n  }\n\n  getAltloc (i: number) {\n    const code = this.altloc[ i ]\n    return code ? String.fromCharCode(code) : ''\n  }\n}","/**\n * @file Residue Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\n\n/**\n * Residue store\n */\nexport default class ResidueStore extends Store {\n  chainIndex: Uint32Array\n  atomOffset: Uint32Array\n  atomCount: Uint32Array\n  residueTypeId: Uint16Array\n\n  resno: Uint32Array\n  sstruc: Uint8Array\n  inscode: Uint8Array\n\n  get _defaultFields () {\n    return [\n      [ 'chainIndex', 1, 'uint32' ],\n      [ 'atomOffset', 1, 'uint32' ],\n      [ 'atomCount', 1, 'uint32' ],\n      [ 'residueTypeId', 1, 'uint16' ],\n\n      [ 'resno', 1, 'int32' ],\n      [ 'sstruc', 1, 'uint8' ],\n      [ 'inscode', 1, 'uint8' ]\n    ] as StoreField[]\n  }\n\n  setSstruc (i: number, str: string) {\n    this.sstruc[ i ] = str.charCodeAt(0)\n  }\n\n  getSstruc (i: number) {\n    const code = this.sstruc[ i ]\n    return code ? String.fromCharCode(code) : ''\n  }\n\n  setInscode (i: number, str: string) {\n    this.inscode[ i ] = str.charCodeAt(0)\n  }\n\n  getInscode (i: number) {\n    const code = this.inscode[ i ]\n    return code ? String.fromCharCode(code) : ''\n  }\n}","/**\n * @file Chain Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\n\n/**\n * Chain store\n */\nexport default class ChainStore extends Store {\n  entityIndex: Uint16Array\n  modelIndex: Uint16Array\n  residueOffset: Uint32Array\n  residueCount: Uint32Array\n\n  chainname: Uint8Array\n  chainid: Uint8Array\n\n  get _defaultFields () {\n    return [\n      [ 'entityIndex', 1, 'uint16' ],\n      [ 'modelIndex', 1, 'uint16' ],\n      [ 'residueOffset', 1, 'uint32' ],\n      [ 'residueCount', 1, 'uint32' ],\n\n      [ 'chainname', 4, 'uint8' ],\n      [ 'chainid', 4, 'uint8' ]\n    ] as StoreField[]\n  }\n\n  setChainname (i: number, str: string) {\n    const j = 4 * i\n    this.chainname[ j ] = str.charCodeAt(0)\n    this.chainname[ j + 1 ] = str.charCodeAt(1)\n    this.chainname[ j + 2 ] = str.charCodeAt(2)\n    this.chainname[ j + 3 ] = str.charCodeAt(3)\n  }\n\n  getChainname (i: number) {\n    let chainname = ''\n    for (let k = 0; k < 4; ++k) {\n      const code = this.chainname[ 4 * i + k ]\n      if (code) {\n        chainname += String.fromCharCode(code)\n      } else {\n        break\n      }\n    }\n    return chainname\n  }\n\n  setChainid (i: number, str: string) {\n    const j = 4 * i\n    this.chainid[ j ] = str.charCodeAt(0)\n    this.chainid[ j + 1 ] = str.charCodeAt(1)\n    this.chainid[ j + 2 ] = str.charCodeAt(2)\n    this.chainid[ j + 3 ] = str.charCodeAt(3)\n  }\n\n  getChainid (i: number) {\n    let chainid = ''\n    for (let k = 0; k < 4; ++k) {\n      const code = this.chainid[ 4 * i + k ]\n      if (code) {\n        chainid += String.fromCharCode(code)\n      } else {\n        break\n      }\n    }\n    return chainid\n  }\n}\n","/**\n * @file Model Store\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Store, { StoreField } from './store'\n\n/**\n * Model store\n */\nexport default class ModelStore extends Store {\n\tchainOffset: Uint32Array\n\tchainCount: Uint32Array\n\n  get _defaultFields () {\n    return [\n      [ 'chainOffset', 1, 'uint32' ],\n      [ 'chainCount', 1, 'uint32' ]\n    ] as StoreField[]\n  }\n}","/**\n * @file Helixorient\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport { ColormakerParameters } from '../color/colormaker'\nimport { AtomPicker } from '../utils/picker'\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\nimport { copyArray } from '../math/array-utils'\nimport { projectPointOnVector } from '../math/vector-utils'\nimport Polymer from '../proxy/polymer'\n\nexport interface HelixIterator {\n  size: number\n  next: () => Vector3\n  get: (idx: number) => Vector3\n  reset: () => void\n}\n\nexport interface HelixPosition {\n  center: Float32Array\n  axis: Float32Array\n  bending: Float32Array\n  radius: Float32Array\n  rise: Float32Array\n  twist: Float32Array\n  resdir: Float32Array\n}\n\nclass Helixorient {\n  size: number\n\n  constructor (readonly polymer: Polymer) {\n    this.size = polymer.residueCount\n  }\n\n  getCenterIterator (smooth = 0): HelixIterator {\n    const center = this.getPosition().center\n    const size = center.length / 3\n\n    let i = 0\n    let j = -1\n\n    const cache = [\n      new Vector3(),\n      new Vector3(),\n      new Vector3(),\n      new Vector3()\n    ]\n\n    function next (this: HelixIterator) {\n      const vector = this.get(j)\n      j += 1\n      return vector\n    }\n\n    function get (idx: number) {\n      idx = Math.min(size - 1, Math.max(0, idx))\n      const v = cache[ i % 4 ]\n      const idx3 = 3 * idx\n      v.fromArray(center as any, idx3)  // TODO\n      if (smooth) {\n        const w = Math.min(smooth, idx, size - idx - 1)\n        for (let k = 1; k <= w; ++k) {\n          const l = k * 3\n          const t = (w + 1 - k) / (w + 1)\n          v.x += t * center[ idx3 - l + 0 ] + t * center[ idx3 + l + 0 ]\n          v.y += t * center[ idx3 - l + 1 ] + t * center[ idx3 + l + 1 ]\n          v.z += t * center[ idx3 - l + 2 ] + t * center[ idx3 + l + 2 ]\n        }\n        v.x /= w + 1\n        v.y /= w + 1\n        v.z /= w + 1\n      }\n      i += 1\n      return v\n    }\n\n    function reset () {\n      i = 0\n      j = -1\n    }\n\n    return { size, next, get, reset }\n  }\n\n  getColor (params: { scheme: string } & ColormakerParameters) {\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n    const residueIndexStart = polymer.residueIndexStart\n\n    const col = new Float32Array(n * 3)\n\n    const p = params || {}\n    p.structure = structure\n\n    const colormaker = ColormakerRegistry.getScheme(p)\n\n    const rp = structure.getResidueProxy()\n    const ap = structure.getAtomProxy()\n\n    for (let i = 0; i < n; ++i) {\n      rp.index = residueIndexStart + i\n      ap.index = rp.traceAtomIndex\n\n      colormaker.atomColorToArray(ap, col, i * 3)\n    }\n\n    return {\n      'color': col\n    }\n  }\n\n  getPicking () {\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n    const residueIndexStart = polymer.residueIndexStart\n\n    const pick = new Float32Array(n)\n    const rp = structure.getResidueProxy()\n\n    for (let i = 0; i < n; ++i) {\n      rp.index = residueIndexStart + i\n      pick[ i ] = rp.traceAtomIndex\n    }\n\n    return {\n      'picking': new AtomPicker(pick, structure)\n    }\n  }\n\n  getSize (params: RadiusParams) {\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n    const residueIndexStart = polymer.residueIndexStart\n\n    const size = new Float32Array(n)\n    const radiusFactory = new RadiusFactory(params)\n\n    const rp = structure.getResidueProxy()\n    const ap = structure.getAtomProxy()\n\n    for (let i = 0; i < n; ++i) {\n      rp.index = residueIndexStart + i\n      ap.index = rp.traceAtomIndex\n      size[ i ] = radiusFactory.atomRadius(ap)\n    }\n\n    return { size }\n  }\n\n  getPosition (): HelixPosition {\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n    const n3 = n - 3\n\n    const center = new Float32Array(3 * n)\n    const axis = new Float32Array(3 * n)\n    const diff = new Float32Array(n)\n    const radius = new Float32Array(n)\n    const rise = new Float32Array(n)\n    const twist = new Float32Array(n)\n    const resdir = new Float32Array(3 * n)\n\n    const r12 = new Vector3()\n    const r23 = new Vector3()\n    const r34 = new Vector3()\n\n    const diff13 = new Vector3()\n    const diff24 = new Vector3()\n\n    const v1 = new Vector3()\n    const v2 = new Vector3()\n    const vt = new Vector3()\n\n    const _axis = new Vector3()\n    const _prevAxis = new Vector3()\n\n    const _resdir = new Vector3()\n    const _center = new Vector3(0, 0, 0)\n\n    const type = 'trace'\n    const a1 = structure.getAtomProxy()\n    const a2 = structure.getAtomProxy(polymer.getAtomIndexByType(0, type))\n    const a3 = structure.getAtomProxy(polymer.getAtomIndexByType(1, type))\n    const a4 = structure.getAtomProxy(polymer.getAtomIndexByType(2, type))\n\n    for (let i = 0; i < n3; ++i) {\n      a1.index = a2.index\n      a2.index = a3.index\n      a3.index = a4.index\n      a4.index = polymer.getAtomIndexByType(i + 3, type)!  // TODO\n\n      const j = 3 * i\n\n      // ported from GROMACS src/tools/gmx_helixorient.c\n\n      r12.subVectors(a2 as any, a1 as any)  // TODO\n      r23.subVectors(a3 as any, a2 as any)  // TODO\n      r34.subVectors(a4 as any, a3 as any)  // TODO\n\n      diff13.subVectors(r12, r23)\n      diff24.subVectors(r23, r34)\n\n      _axis.crossVectors(diff13, diff24).normalize()\n      _axis.toArray(axis as any, j)  // TODO\n\n      if (i > 0) {\n        diff[ i ] = _axis.angleTo(_prevAxis)\n      }\n\n      const tmp = Math.cos(diff13.angleTo(diff24))\n      twist[ i ] = 180.0 / Math.PI * Math.acos(tmp)\n\n      const diff13Length = diff13.length()\n      const diff24Length = diff24.length()\n\n      radius[ i ] = (\n        Math.sqrt(diff24Length * diff13Length) /\n        // clamp, to avoid instabilities for when\n        // angle between diff13 and diff24 is near 0\n        Math.max(2.0, 2.0 * (1.0 - tmp))\n      )\n\n      rise[ i ] = Math.abs(r23.dot(_axis))\n\n      //\n\n      v1.copy(diff13).multiplyScalar(radius[ i ] / diff13Length)\n      v2.copy(diff24).multiplyScalar(radius[ i ] / diff24Length)\n\n      v1.subVectors(a2 as any, v1)  // TODO\n      v2.subVectors(a3 as any, v2)  // TODO\n\n      v1.toArray(center as any, j + 3)  // TODO\n      v2.toArray(center as any, j + 6)  // TODO\n\n      //\n\n      _resdir.subVectors(a1 as any, _center)  // TODO\n      _resdir.toArray(resdir as any, j)  // TODO\n\n      _prevAxis.copy(_axis)\n      _center.copy(v1)\n    }\n\n    //\n\n    // calc axis as dir of second and third center pos\n    // project first traceAtom onto axis to get first center pos\n    v1.fromArray(center as any, 3)  // TODO\n    v2.fromArray(center as any, 6)  // TODO\n    _axis.subVectors(v1, v2).normalize()\n      // _center.copy( res[ 0 ].getTraceAtom() );\n    a1.index = polymer.getAtomIndexByType(0, type)!  // TODO\n    _center.copy(a1 as any)  // TODO\n    vt.copy(a1 as any)  // TODO\n    projectPointOnVector(vt, _axis, v1)\n    vt.toArray(center as any, 0)  // TODO\n\n    // calc first resdir\n    _resdir.subVectors(_center, v1)\n    _resdir.toArray(resdir as any, 0)  // TODO\n\n    // calc axis as dir of n-1 and n-2 center pos\n    // project last traceAtom onto axis to get last center pos\n    v1.fromArray(center as any, 3 * n - 6)  // TODO\n    v2.fromArray(center as any, 3 * n - 9)  // TODO\n    _axis.subVectors(v1, v2).normalize()\n    // _center.copy( res[ n - 1 ].getTraceAtom() );\n    a1.index = polymer.getAtomIndexByType(n - 1, type)!  // TODO\n    _center.copy(a1 as any)  // TODO\n    vt.copy(a1 as any)  // TODO\n    projectPointOnVector(vt, _axis, v1)\n    vt.toArray(center as any, 3 * n - 3)  // TODO\n\n    // calc last three resdir\n    for (let i = n - 3; i < n; ++i) {\n      v1.fromArray(center as any, 3 * i)  // TODO\n      // _center.copy( res[ i ].getTraceAtom() );\n      a1.index = polymer.getAtomIndexByType(i, type)!  // TODO\n      _center.copy(a1 as any)  // TODO\n\n      _resdir.subVectors(_center, v1)\n      _resdir.toArray(resdir as any, 3 * i)  // TODO\n    }\n\n    // average measures to define them on the residues\n\n    const resRadius = new Float32Array(n)\n    const resTwist = new Float32Array(n)\n    const resRise = new Float32Array(n)\n    const resBending = new Float32Array(n)\n\n    resRadius[ 1 ] = radius[ 0 ]\n    resTwist[ 1 ] = twist[ 0 ]\n    resRise[ 1 ] = radius[ 0 ]\n\n    for (let i = 2; i < n - 2; ++i) {\n      resRadius[ i ] = 0.5 * (radius[ i - 2 ] + radius[ i - 1 ])\n      resTwist[ i ] = 0.5 * (twist[ i - 2 ] + twist[ i - 1 ])\n      resRise[ i ] = 0.5 * (rise[ i - 2 ] + rise[ i - 1 ])\n\n      v1.fromArray(axis as any, 3 * (i - 2))  // TODO\n      v2.fromArray(axis as any, 3 * (i - 1))  // TODO\n      resBending[ i ] = 180.0 / Math.PI * Math.acos(Math.cos(v1.angleTo(v2)))\n    }\n\n    resRadius[ n - 2 ] = radius[ n - 4 ]\n    resTwist[ n - 2 ] = twist[ n - 4 ]\n    resRise[ n - 2 ] = rise[ n - 4 ]\n\n    // average helix axes to define them on the residues\n\n    const resAxis = new Float32Array(3 * n)\n\n    copyArray(axis, resAxis, 0, 0, 3)\n    copyArray(axis, resAxis, 0, 3, 3)\n\n    for (let i = 2; i < n - 2; ++i) {\n      v1.fromArray(axis as any, 3 * (i - 2))  // TODO\n      v2.fromArray(axis as any, 3 * (i - 1))  // TODO\n\n      _axis.addVectors(v2, v1).multiplyScalar(0.5).normalize()\n      _axis.toArray(resAxis as any, 3 * i)  // TODO\n    }\n\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 6, 3)\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 3, 3)\n\n    return {\n      center,\n      axis: resAxis,\n      bending: resBending,\n      radius: resRadius,\n      rise: resRise,\n      twist: resTwist,\n      resdir: resdir\n    }\n  }\n\n}\n\nexport default Helixorient\n","/**\n * @file Helixbundle\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport { AtomPicker } from '../utils/picker'\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\nimport Helixorient, { HelixPosition } from './helixorient'\nimport { calculateMeanVector3, projectPointOnVector } from '../math/vector-utils'\nimport Polymer from '../proxy/polymer'\nimport { ColormakerParameters } from '../color/colormaker';\n\nexport interface Axis {\n  axis: Float32Array\n  center: Float32Array\n  begin: Float32Array\n  end: Float32Array\n  color: Float32Array\n  picking: AtomPicker\n  size: Float32Array\n  residueOffset: number[]\n  residueCount: number[]\n}\n\nclass Helixbundle {\n  helixorient: Helixorient;\n  position: HelixPosition;\n\n  constructor (readonly polymer: Polymer) {\n\n    this.helixorient = new Helixorient(polymer)\n    this.position = this.helixorient.getPosition()\n  }\n\n  getAxis (localAngle: number, centerDist: number, ssBorder: boolean, colorParams: { scheme: string} & ColormakerParameters, radiusParams: RadiusParams): Axis {\n    localAngle = localAngle || 30\n    centerDist = centerDist || 2.5\n    ssBorder = ssBorder === undefined ? false : ssBorder\n\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n    const residueIndexStart = polymer.residueIndexStart\n\n    const pos = this.position\n\n    const cp = colorParams || {}\n    cp.structure = structure\n\n    const colormaker = ColormakerRegistry.getScheme(cp)\n\n    const radiusFactory = new RadiusFactory(radiusParams)\n\n    let j = 0\n    let k = 0\n\n    const axis: number[] = []\n    const center: number[] = []\n    const beg: number[] = []\n    const end: number[] = []\n    const col: number[] = []\n    const pick = []\n    const size = []\n    const residueOffset = []\n    const residueCount = []\n\n    let tmpAxis = new Float32Array(n * 3)\n    let tmpCenter = new Float32Array(n * 3)\n\n    let _axis, _center\n    const _beg = new Vector3()\n    const _end = new Vector3()\n\n    const rp1 = structure.getResidueProxy()\n    const rp2 = structure.getResidueProxy()\n    const ap = structure.getAtomProxy()\n\n    const c1 = new Vector3()\n    const c2 = new Vector3()\n\n    let split = false\n\n    for (let i = 0; i < n; ++i) {\n      rp1.index = residueIndexStart + i\n      c1.fromArray(pos.center as any, i * 3)\n\n      if (i === n - 1) {\n        split = true\n      } else {\n        rp2.index = residueIndexStart + i + 1\n        c2.fromArray(pos.center as any, i * 3 + 3)\n\n        if (ssBorder && rp1.sstruc !== rp2.sstruc) {\n          split = true\n        } else if (c1.distanceTo(c2) > centerDist) {\n          split = true\n        } else if (pos.bending[ i ] > localAngle) {\n          split = true\n        }\n      }\n\n      if (split) {\n        if (i - j < 4) {\n          j = i\n          split = false\n          continue\n        }\n\n        ap.index = rp1.traceAtomIndex\n\n        // ignore first and last axis\n        tmpAxis = pos.axis.subarray(j * 3 + 3, i * 3)\n        tmpCenter = pos.center.subarray(j * 3, i * 3 + 3)\n\n        _axis = calculateMeanVector3(tmpAxis).normalize()\n        _center = calculateMeanVector3(tmpCenter)\n\n        _beg.fromArray(tmpCenter as any)\n        projectPointOnVector(_beg, _axis, _center)\n\n        _end.fromArray(tmpCenter as any, tmpCenter.length - 3)\n        projectPointOnVector(_end, _axis, _center)\n\n        _axis.subVectors(_end, _beg)\n\n        _axis.toArray(axis as any, k)\n        _center.toArray(center as any, k)\n        _beg.toArray(beg as any, k)\n        _end.toArray(end as any, k)\n\n        colormaker.atomColorToArray(ap, col, k)\n\n        pick.push(ap.index)\n\n        size.push(radiusFactory.atomRadius(ap))\n\n        residueOffset.push(residueIndexStart + j)\n        residueCount.push(residueIndexStart + i + 1 - j)\n\n        k += 3\n        j = i\n        split = false\n      }\n    }\n\n    const picking = new Float32Array(pick)\n\n    return {\n      axis: new Float32Array(axis),\n      center: new Float32Array(center),\n      begin: new Float32Array(beg),\n      end: new Float32Array(end),\n      color: new Float32Array(col),\n      picking: new AtomPicker(picking, structure),\n      size: new Float32Array(size),\n      residueOffset: residueOffset,\n      residueCount: residueCount\n    }\n  }\n}\n\nexport default Helixbundle\n","/**\n * @file Binary Heap\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n/**\n * Binary heap implementation\n * @class\n * @author http://eloquentjavascript.net/appendix2.htm\n * @param {Function} scoreFunction - the heap scoring function\n */\nclass BinaryHeap<T> {\n  content: T[] = []\n\n  constructor(readonly scoreFunction: (x: T) => number) {\n\n    this.scoreFunction = scoreFunction\n  }\n\n  push (element: T) {\n    // Add the new element to the end of the array.\n    this.content.push(element)\n\n    // Allow it to bubble up.\n    this.bubbleUp(this.content.length - 1)\n  }\n\n  pop () {\n    // Store the first element so we can return it later.\n    const result = this.content[ 0 ]\n\n    // Get the element at the end of the array.\n    const end = this.content.pop()\n\n    // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n    if (end && this.content.length > 0) {\n      this.content[ 0 ] = end\n      this.sinkDown(0)\n    }\n\n    return result\n  }\n\n  peek () {\n    return this.content[ 0 ]\n  }\n\n  remove (element: T) {\n    const len = this.content.length\n\n    // To remove a value, we must search through the array to find it.\n    for (let i = 0; i < len; i++) {\n      if (this.content[ i ] === element) {\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop()\n\n        if (end && i !== len - 1) {\n          this.content[ i ] = end\n\n          if (this.scoreFunction(end) < this.scoreFunction(element)) {\n            this.bubbleUp(i)\n          } else {\n            this.sinkDown(i)\n          }\n        }\n\n        return\n      }\n    }\n\n    throw new Error('Node not found.')\n  }\n\n  size () {\n    return this.content.length\n  }\n\n  bubbleUp (n: number) {\n    // Fetch the element that has to be moved.\n    const element = this.content[ n ]\n\n    // When at 0, an element can not go up any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = Math.floor((n + 1) / 2) - 1\n      const parent = this.content[ parentN ]\n\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[ parentN ] = element\n        this.content[ n ] = parent\n\n        // Update 'n' to continue at the new position.\n        n = parentN\n      } else {\n        // Found a parent that is less, no need to move it further.\n        break\n      }\n    }\n  }\n\n  sinkDown (n: number) {\n    // Look up the target element and its score.\n    const length = this.content.length\n    const element = this.content[ n ]\n    const elemScore = this.scoreFunction(element)\n\n    let child1Score = 0\n    let child2Score = 0\n\n    while (true) {\n      // Compute the indices of the child elements.\n      const child2N = (n + 1) * 2\n      const child1N = child2N - 1\n\n      // This is used to store the new position of the element, if any.\n      let swap = null\n\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        const child1 = this.content[ child1N ]\n        child1Score = this.scoreFunction(child1)\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) swap = child1N\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        const child2 = this.content[ child2N ]\n        child2Score = this.scoreFunction(child2)\n\n        if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[ n ] = this.content[ swap ]\n        this.content[ swap ] = element\n        n = swap\n      } else {\n        // Otherwise, we are done.\n        break\n      }\n    }\n  }\n\n}\n\nexport default BinaryHeap\n","/**\n * @file Kdtree\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { NumberArray } from '../types'\nimport BinaryHeap from './binary-heap'\n\n/**\n * Kdtree\n * @class\n * @author Alexander Rose <alexander.rose@weirdbyte.de>, 2016\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n * @description\n * k-d Tree for typed arrays of 3d points (e.g. for Float32Array), in-place\n * provides fast nearest neighbour search\n *\n * Based on https://github.com/ubilabs/kd-tree-javascript by Ubilabs\n *\n * Further information (including mathematical properties)\n * http://en.wikipedia.org/wiki/Binary_tree\n * http://en.wikipedia.org/wiki/K-d_tree\n *\n * @example\n * points: [x, y, z, x, y, z, x, y, z, ...]\n * metric: function(a, b){\n *    return Math.pow(a[0]-b[0], 2) + Math.pow(a[1]-b[1], 2) + Math.pow(a[2]-b[2], 2);\n * }\n *\n * @param {Float32Array} points - points\n * @param {Function} metric - metric\n */\nclass Kdtree {\n  indices: Uint32Array\n  nodes: Int32Array\n  rootIndex: number\n\n  maxDepth = 0\n  currentNode = 0\n\n  constructor(readonly points: NumberArray, readonly metric: (a: NumberArray, b: NumberArray) => number) {\n    const n = points.length / 3\n\n    const indices = new Uint32Array(n)\n    for (let i = 0; i < n; ++i) {\n      indices[ i ] = i\n    }\n    this.indices = indices\n    this.nodes = new Int32Array(n * 4)\n    this.rootIndex = this.buildTree(0, -1, 0, n)\n  }\n\n  buildTree (depth: number, parent: number, arrBegin: number, arrEnd: number) {\n    if (depth > this.maxDepth) this.maxDepth = depth\n\n    const plength = arrEnd - arrBegin\n    if (plength === 0) {\n      return -1\n    }\n\n    const nodeIndex = this.currentNode * 4\n    const nodes = this.nodes\n\n    this.currentNode += 1\n    if (plength === 1) {\n      nodes[ nodeIndex ] = arrBegin\n      nodes[ nodeIndex + 1 ] = -1\n      nodes[ nodeIndex + 2 ] = -1\n      nodes[ nodeIndex + 3 ] = parent\n      return nodeIndex\n    }\n    // if(plength <= 32){\n    //   return nodeIndex;\n    // }\n\n    const indices = this.indices\n    const points = this.points\n\n    const arrMedian = arrBegin + Math.floor(plength / 2)\n    const currentDim = depth % 3\n\n    // inlined quickselect function\n    let j, tmp, pivotIndex, pivotValue, storeIndex\n    let left = arrBegin\n    let right = arrEnd - 1\n    while (right > left) {\n      pivotIndex = (left + right) >> 1\n      pivotValue = points[ indices[ pivotIndex ] * 3 + currentDim ]\n      // swap( pivotIndex, right );\n      tmp = indices[ pivotIndex ]\n      indices[ pivotIndex ] = indices[ right ]\n      indices[ right ] = tmp\n      storeIndex = left\n      for (j = left; j < right; ++j) {\n        if (points[ indices[ j ] * 3 + currentDim ] < pivotValue) {\n          // swap( storeIndex, j );\n          tmp = indices[ storeIndex ]\n          indices[ storeIndex ] = indices[ j ]\n          indices[ j ] = tmp\n          ++storeIndex\n        }\n      }\n      // swap( right, storeIndex );\n      tmp = indices[ right ]\n      indices[ right ] = indices[ storeIndex ]\n      indices[ storeIndex ] = tmp\n      pivotIndex = storeIndex\n      if (arrMedian === pivotIndex) {\n        break\n      } else if (arrMedian < pivotIndex) {\n        right = pivotIndex - 1\n      } else {\n        left = pivotIndex + 1\n      }\n    }\n\n    nodes[ nodeIndex ] = arrMedian\n    nodes[ nodeIndex + 1 ] = this.buildTree(depth + 1, nodeIndex, arrBegin, arrMedian)\n    nodes[ nodeIndex + 2 ] = this.buildTree(depth + 1, nodeIndex, arrMedian + 1, arrEnd)\n    nodes[ nodeIndex + 3 ] = parent\n\n    return nodeIndex\n  }\n\n  getNodeDepth (nodeIndex: number): number {\n    const parentIndex = this.nodes[ nodeIndex + 3 ]\n    return (parentIndex === -1) ? 0 : this.getNodeDepth(parentIndex) + 1\n  }\n\n  // TODO\n  // function getNodePos (node) {}\n\n  /**\n   * find nearest points\n   * @param {Array} point - array of size 3\n   * @param {Integer} maxNodes - max amount of nodes to return\n   * @param {Float} maxDistance - maximum distance of point to result nodes\n   * @return {Array} array of point, distance pairs\n   */\n  nearest (point: NumberArray, maxNodes: number, maxDistance: number) {\n    const bestNodes = new BinaryHeap<[number, number]>(e => -e[ 1 ])\n\n    const nodes = this.nodes\n    const points = this.points\n    const indices = this.indices\n\n    const nearestSearch = (nodeIndex: number) => {\n      let bestChild, otherChild\n      const dimension = this.getNodeDepth(nodeIndex) % 3\n      const pointIndex = indices[ nodes[ nodeIndex ] ] * 3\n      const ownPoint = [\n        points[ pointIndex + 0 ],\n        points[ pointIndex + 1 ],\n        points[ pointIndex + 2 ]\n      ]\n      const ownDistance = this.metric(point, ownPoint)\n\n      function saveNode (nodeIndex: number, distance: number) {\n        bestNodes.push([ nodeIndex, distance ])\n        if (bestNodes.size() > maxNodes) {\n          bestNodes.pop()\n        }\n      }\n\n      const leftIndex = nodes[ nodeIndex + 1 ]\n      const rightIndex = nodes[ nodeIndex + 2 ]\n\n      // if it's a leaf\n      if (rightIndex === -1 && leftIndex === -1) {\n        if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\n          ownDistance <= maxDistance\n        ) {\n          saveNode(nodeIndex, ownDistance)\n        }\n        return\n      }\n\n      if (rightIndex === -1) {\n        bestChild = leftIndex\n      } else if (leftIndex === -1) {\n        bestChild = rightIndex\n      } else {\n        if (point[ dimension ] <= points[ pointIndex + dimension ]) {\n          bestChild = leftIndex\n        } else {\n          bestChild = rightIndex\n        }\n      }\n\n      // recursive search\n      nearestSearch(bestChild)\n\n      if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\n        ownDistance <= maxDistance\n      ) {\n        saveNode(nodeIndex, ownDistance)\n      }\n\n      // if there's still room or the current distance is nearer than the best distance\n      const linearPoint = []\n      for (let i = 0; i < 3; i += 1) {\n        if (i === dimension) {\n          linearPoint[ i ] = point[ i ]\n        } else {\n          linearPoint[ i ] = points[ pointIndex + i ]\n        }\n      }\n      const linearDistance = this.metric(linearPoint, ownPoint)\n\n      if ((bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[ 1 ]) &&\n        Math.abs(linearDistance) <= maxDistance\n      ) {\n        if (bestChild === leftIndex) {\n          otherChild = rightIndex\n        } else {\n          otherChild = leftIndex\n        }\n        if (otherChild !== -1) {\n          nearestSearch(otherChild)\n        }\n      }\n    }\n\n    nearestSearch(this.rootIndex)\n\n    const result = []\n    for (let i = 0, il = Math.min(bestNodes.size(), maxNodes); i < il; i += 1) {\n      result.push(bestNodes.content[ i ])\n    }\n\n    return result\n  }\n\n  verify (nodeIndex?: number, depth = 0) {\n    let count = 1\n\n    if (nodeIndex === undefined) {\n      nodeIndex = this.rootIndex\n    }\n\n    if (nodeIndex === -1) {\n      throw new Error('node is null')\n    }\n\n    const dim = depth % 3\n    const nodes = this.nodes\n    const points = this.points\n    const indices = this.indices\n\n    const leftIndex = nodes[ nodeIndex + 1 ]\n    const rightIndex = nodes[ nodeIndex + 2 ]\n\n    if (leftIndex !== -1) {\n      if (points[ indices[ nodes[ leftIndex ] ] * 3 + dim ] >\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\n      ) {\n        throw new Error('left child is > parent!')\n      }\n      count += this.verify(leftIndex, depth + 1)\n    }\n\n    if (rightIndex !== -1) {\n      if (points[ indices[ nodes[ rightIndex ] ] * 3 + dim ] <\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\n      ) {\n        throw new Error('right child is < parent!')\n      }\n      count += this.verify(rightIndex, depth + 1)\n    }\n\n    return count\n  }\n}\n\nexport default Kdtree\n","/**\n * @file Atom Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { NumberArray } from '../types'\nimport {\n  Elements,\n  SecStrucHelix, SecStrucSheet, SecStrucTurn,\n  ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\n  CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType\n} from '../structure/structure-constants'\n\nimport Structure from '../structure/structure'\n\nimport ChainStore from '../store/chain-store'\nimport ResidueStore from '../store/residue-store'\nimport AtomStore from '../store/atom-store'\n\nimport AtomMap from '../store/atom-map'\nimport ResidueMap from '../store/residue-map'\n\nimport BondProxy from '../proxy/bond-proxy'\nimport AtomType from '../store/atom-type';\nimport ResidueType from '../store/residue-type';\nimport ResidueProxy from './residue-proxy';\nimport Entity from '../structure/entity';\nimport BondHash from '../store/bond-hash';\n\n/**\n * Atom proxy\n */\nclass AtomProxy {\n  index: number\n\n  chainStore: ChainStore\n  residueStore: ResidueStore\n  atomStore: AtomStore\n\n  residueMap: ResidueMap\n  atomMap: AtomMap\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} index - the index\n   */\n  constructor (readonly structure: Structure, index = 0) {\n    this.index = index\n    this.chainStore = structure.chainStore\n    this.residueStore = structure.residueStore\n    this.atomStore = structure.atomStore\n    this.residueMap = structure.residueMap\n    this.atomMap = structure.atomMap\n  }\n\n  /**\n   * @type {BondHash}\n   */\n  get bondHash (): BondHash|undefined { return this.structure.bondHash }\n\n  /**\n   * Molecular enity\n   * @type {Entity}\n   */\n  get entity (): Entity {\n    return this.structure.entityList[ this.entityIndex ]\n  }\n  get entityIndex () {\n    return this.chainStore.entityIndex[ this.chainIndex ]\n  }\n  get modelIndex () {\n    return this.chainStore.modelIndex[ this.chainIndex ]\n  }\n  get chainIndex () {\n    return this.residueStore.chainIndex[ this.residueIndex ]\n  }\n  /**\n   * @type {ResidueProxy}\n   */\n  get residue (): ResidueProxy {\n    console.warn('residue - might be expensive')\n    return this.structure.getResidueProxy(this.residueIndex)\n  }\n\n  get residueIndex () {\n    return this.atomStore.residueIndex[ this.index ]\n  }\n  set residueIndex (value) {\n    this.atomStore.residueIndex[ this.index ] = value\n  }\n\n  //\n\n  /**\n   * Secondary structure code\n   * @type {String}\n   */\n  get sstruc () {\n    return this.residueStore.getSstruc(this.residueIndex)\n  }\n  /**\n   * Insertion code\n   * @type {String}\n   */\n  get inscode () {\n    return this.residueStore.getInscode(this.residueIndex)\n  }\n  /**\n   * Residue number/label\n   * @type {Integer}\n   */\n  get resno () {\n    return this.residueStore.resno[ this.residueIndex ]\n  }\n  /**\n   * Chain name\n   * @type {String}\n   */\n  get chainname () {\n    return this.chainStore.getChainname(this.chainIndex)\n  }\n  /**\n   * Chain id\n   * @type {String}\n   */\n  get chainid () {\n    return this.chainStore.getChainid(this.chainIndex)\n  }\n\n  //\n\n  /**\n   * @type {ResidueType}\n   */\n  get residueType (): ResidueType {\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.residueIndex ])\n  }\n  /**\n   * @type {AtomType}\n   */\n  get atomType (): AtomType {\n    return this.atomMap.get(this.atomStore.atomTypeId[ this.index ])\n  }\n  get residueAtomOffset () {\n    return this.residueStore.atomOffset[ this.residueIndex ]\n  }\n\n  //\n\n  /**\n   * Residue name\n   */\n  get resname () {\n    return this.residueType.resname\n  }\n  /**\n   * Hetero flag\n   */\n  get hetero () {\n    return this.residueType.hetero\n  }\n\n  //\n\n  /**\n   * Atom name\n   */\n  get atomname () {\n    return this.atomType.atomname\n  }\n  /**\n   * Atomic number\n   */\n  get number () {\n    return this.atomType.number\n  }\n  /**\n   * Element\n   */\n  get element () {\n    return this.atomType.element\n  }\n  /**\n   * Van-der-Waals radius\n   */\n  get vdw () {\n    return this.atomType.vdw\n  }\n  /**\n   * Covalent radius\n   */\n  get covalent () {\n    return this.atomType.covalent\n  }\n\n  //\n\n  /**\n   * X coordinate\n   */\n  get x () {\n    return this.atomStore.x[ this.index ]\n  }\n  set x (value) {\n    this.atomStore.x[ this.index ] = value\n  }\n\n  /**\n   * Y coordinate\n   */\n  get y () {\n    return this.atomStore.y[ this.index ]\n  }\n  set y (value) {\n    this.atomStore.y[ this.index ] = value\n  }\n\n  /**\n   * Z coordinate\n   */\n  get z () {\n    return this.atomStore.z[ this.index ]\n  }\n  set z (value) {\n    this.atomStore.z[ this.index ] = value\n  }\n\n  /**\n   * Serial number\n   */\n  get serial () {\n    return this.atomStore.serial[ this.index ]\n  }\n  set serial (value) {\n    this.atomStore.serial[ this.index ] = value\n  }\n\n  /**\n   * B-factor value\n   */\n  get bfactor () {\n    return this.atomStore.bfactor[ this.index ]\n  }\n  set bfactor (value) {\n    this.atomStore.bfactor[ this.index ] = value\n  }\n\n  /**\n   * Occupancy value\n   */\n  get occupancy () {\n    return this.atomStore.occupancy[ this.index ]\n  }\n  set occupancy (value) {\n    this.atomStore.occupancy[ this.index ] = value\n  }\n\n  /**\n   * Alternate location identifier\n   */\n  get altloc () {\n    return this.atomStore.getAltloc(this.index)\n  }\n  set altloc (value) {\n    this.atomStore.setAltloc(this.index, value)\n  }\n\n  /**\n   * Partial charge\n   */\n  get partialCharge () {\n    return this.atomStore.partialCharge ? this.atomStore.partialCharge[ this.index ] : null\n  }\n  set partialCharge (value) {\n    if (this.atomStore.partialCharge) {\n      this.atomStore.partialCharge[ this.index ] = value as number\n    }\n  }\n\n  /**\n   * Explicit radius\n   */\n  get radius () {\n    return this.atomStore.radius ? this.atomStore.radius[ this.index ] : null\n  }\n  set radius (value) {\n    if (this.atomStore.radius) {\n      this.atomStore.radius[ this.index ] = value as number\n    }\n  }\n\n  /**\n   * Formal charge\n   */\n  get formalCharge () {\n    return this.atomStore.formalCharge ? this.atomStore.formalCharge[ this.index ] : null\n  }\n  set formalCharge (value) {\n    if (this.atomStore.formalCharge) {\n      this.atomStore.formalCharge[ this.index ] = value as number\n    }\n  }\n\n  /**\n   * Aromaticity flag\n   */\n  get aromatic () {\n    if (this.atomStore.aromatic) {\n      return this.atomStore.aromatic[ this.index ] as number\n    } else {\n      return this.residueType.isAromatic(this) ? 1 : 0\n    }\n  }\n  set aromatic (value) {\n    if (this.atomStore.aromatic) {\n      this.atomStore.aromatic[ this.index ] = value as number\n    }\n  }\n\n  //\n\n  get bondCount () {\n    return this.bondHash!.countArray[ this.index ]  // TODO\n  }\n\n  //\n\n  /**\n   * Iterate over each bond\n   * @param  {function(bond: BondProxy)} callback - iterator callback function\n   * @param  {BondProxy} [bp] - optional target bond proxy for use in the callback\n   * @return {undefined}\n   */\n  eachBond (callback: (bp: BondProxy) => void, bp?: BondProxy) {\n    bp = bp || this.structure._bp\n    const idx = this.index\n    const bondHash = this.bondHash!  // TODO\n    const indexArray = bondHash.indexArray\n    const n = bondHash.countArray[ idx ]\n    const offset = bondHash.offsetArray[ idx ]\n\n    for (let i = 0; i < n; ++i) {\n      bp.index = indexArray[ offset + i ]\n      callback(bp)\n    }\n  }\n\n  /**\n   * Iterate over each bonded atom\n   * @param  {function(atom: AtomProxy)} callback - iterator callback function\n   * @param  {AtomProxy} [ap] - optional target atom proxy for use in the callback\n   * @return {undefined}\n   */\n  eachBondedAtom (callback: (ap: AtomProxy) => void, _ap?: AtomProxy) {\n    const ap = _ap ? _ap : this.structure._ap\n    const idx = this.index\n\n    this.eachBond(function (bp) {\n      ap.index = idx !== bp.atomIndex1 ? bp.atomIndex1 : bp.atomIndex2\n      callback(ap)\n    })\n    this.index = idx\n  }\n\n  /**\n   * Check if this atom is bonded to the given atom,\n   * assumes both atoms are from the same structure\n   * @param  {AtomProxy} ap - the given atom\n   * @return {Boolean} whether a bond exists or not\n   */\n  hasBondTo (ap: AtomProxy) {\n    let flag = false\n    this.eachBondedAtom(function (bap) {\n      if (ap.index === bap.index) flag = true\n    })\n    return flag\n  }\n\n  bondToElementCount (element: Elements) {\n    let count = 0\n    const idx = this.index // Avoid reentrancy problems\n    this.eachBondedAtom(function (bap) {\n      if (bap.number === element) count += 1\n    })\n    this.index = idx\n    return count\n  }\n\n  hasBondToElement (element: Elements) {\n    return this.bondToElementCount(element) > 0\n  }\n\n  //\n\n  /**\n   * If atom is part of a backbone\n   * @return {Boolean} flag\n   */\n  isBackbone () {\n    const backboneIndexList = this.residueType.backboneIndexList\n    if (backboneIndexList.length > 0) {\n      return backboneIndexList.includes(this.index - this.residueAtomOffset)\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * If atom is part of a polymer\n   * @return {Boolean} flag\n   */\n  isPolymer () {\n    if (this.structure.entityList.length > 0) {\n      return this.entity.isPolymer()\n    } else {\n      const moleculeType = this.residueType.moleculeType\n      return (\n        moleculeType === ProteinType ||\n        moleculeType === RnaType ||\n        moleculeType === DnaType\n      )\n    }\n  }\n\n  /**\n   * If atom is part of a sidechin\n   * @return {Boolean} flag\n   */\n  isSidechain () {\n    return this.isPolymer() && !this.isBackbone()\n  }\n\n  /**\n   * If atom is part of a coarse-grain group\n   * @return {Boolean} flag\n   */\n  isCg () {\n    const backboneType = this.residueType.backboneType\n    return (\n      backboneType === CgProteinBackboneType ||\n      backboneType === CgRnaBackboneType ||\n      backboneType === CgDnaBackboneType\n    )\n  }\n\n  isTrace () {\n    return this.index === (this.residueType.traceAtomIndex + this.residueAtomOffset)\n  }\n\n  /**\n   * If atom is part of a hetero group\n   * @return {Boolean} flag\n   */\n  isHetero () {\n    return this.residueType.hetero === 1\n  }\n\n  /**\n   * If atom is part of a protein molecule\n   * @return {Boolean} flag\n   */\n  isProtein () {\n    return this.residueType.moleculeType === ProteinType\n  }\n\n  /**\n   * If atom is part of a nucleic molecule\n   * @return {Boolean} flag\n   */\n  isNucleic () {\n    const moleculeType = this.residueType.moleculeType\n    return moleculeType === RnaType || moleculeType === DnaType\n  }\n\n  /**\n   * If atom is part of a rna\n   * @return {Boolean} flag\n   */\n  isRna () {\n    return this.residueType.moleculeType === RnaType\n  }\n\n  /**\n   * If atom is part of a dna\n   * @return {Boolean} flag\n   */\n  isDna () {\n    return this.residueType.moleculeType === DnaType\n  }\n\n  /**\n   * If atom is part of a water molecule\n   * @return {Boolean} flag\n   */\n  isWater () {\n    return this.residueType.moleculeType === WaterType\n  }\n\n  /**\n   * If atom is part of an ion\n   * @return {Boolean} flag\n   */\n  isIon () {\n    return this.residueType.moleculeType === IonType\n  }\n\n  /**\n   * If atom is part of a saccharide\n   * @return {Boolean} flag\n   */\n  isSaccharide () {\n    return this.residueType.moleculeType === SaccharideType\n  }\n\n  /**\n   * If atom is part of a helix\n   * @return {Boolean} flag\n   */\n  isHelix () {\n    return SecStrucHelix.includes(this.sstruc)\n  }\n\n  /**\n   * If atom is part of a sheet\n   * @return {Boolean} flag\n   */\n  isSheet () {\n    return SecStrucSheet.includes(this.sstruc)\n  }\n\n  /**\n   * If atom is part of a turn\n   * @return {Boolean} flag\n   */\n  isTurn () {\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\n  }\n\n  isBonded () {\n    return this.bondHash!.countArray[ this.index ] !== 0   // TODO\n  }\n\n  /**\n   * If atom is part of a ring\n   * @return {Boolean} flag\n   */\n  isRing () {\n    const atomRings = this.residueType.getRings()!.atomRings  // TODO\n    return atomRings[ this.index - this.residueAtomOffset ] !== undefined\n  }\n\n  isAromatic () {\n    return this.aromatic === 1\n  }\n\n  isPolarHydrogen () {\n    let result = false\n\n    if (this.number !== 1) return result\n\n    result = !this.hasBondToElement(Elements.C)\n\n    return result\n  }\n\n  isMetal () { return this.atomType.isMetal() }\n  isNonmetal () { return this.atomType.isNonmetal() }\n  isMetalloid () { return this.atomType.isMetalloid() }\n  isHalogen () { return this.atomType.isHalogen() }\n  isDiatomicNonmetal () { return this.atomType.isDiatomicNonmetal() }\n  isPolyatomicNonmetal () { return this.atomType.isPolyatomicNonmetal() }\n  isAlkaliMetal () { return this.atomType.isAlkaliMetal() }\n  isAlkalineEarthMetal () { return this.atomType.isAlkalineEarthMetal() }\n  isNobleGas () { return this.atomType.isNobleGas() }\n  isTransitionMetal () { return this.atomType.isTransitionMetal() }\n  isPostTransitionMetal () { return this.atomType.isPostTransitionMetal() }\n  isLanthanide () { return this.atomType.isLanthanide() }\n  isActinide () { return this.atomType.isActinide() }\n\n  getDefaultValence () { return this.atomType.getDefaultValence() }\n  getValenceList () { return this.atomType.getValenceList() }\n  getOuterShellElectronCount () { return this.atomType.getOuterShellElectronCount() }\n\n  /**\n   * Distance to another atom\n   * @param  {AtomProxy} atom - the other atom\n   * @return {Number} the distance\n   */\n  distanceTo (atom: AtomProxy) {\n    const taa = this.atomStore\n    const aaa = atom.atomStore\n    const ti = this.index\n    const ai = atom.index\n    const x = taa.x[ ti ] - aaa.x[ ai ]\n    const y = taa.y[ ti ] - aaa.y[ ai ]\n    const z = taa.z[ ti ] - aaa.z[ ai ]\n    const distSquared = x * x + y * y + z * z\n    return Math.sqrt(distSquared)\n  }\n\n  /**\n   * If connected to another atom\n   * @param  {AtomProxy} atom - the other atom\n   * @return {Boolean} flag\n   */\n  connectedTo (atom: AtomProxy) {\n    const taa = this.atomStore\n    const aaa = atom.atomStore\n    const ti = this.index\n    const ai = atom.index\n\n    if (taa.altloc && aaa.altloc) {\n      const ta = taa.altloc[ ti ]  // use Uint8 value to compare\n      const aa = aaa.altloc[ ai ]  // no need to convert to char\n      // 0 is the Null character, 32 is the space character\n      if (!(ta === 0 || aa === 0 || ta === 32 || aa === 32 || (ta === aa))) return false\n    }\n\n    const x = taa.x[ ti ] - aaa.x[ ai ]\n    const y = taa.y[ ti ] - aaa.y[ ai ]\n    const z = taa.z[ ti ] - aaa.z[ ai ]\n\n    const distSquared = x * x + y * y + z * z\n\n    // if( this.isCg() ) console.log( this.qualifiedName(), Math.sqrt( distSquared ), distSquared )\n    if (distSquared < 48.0 && this.isCg()) return true\n\n    if (isNaN(distSquared)) return false\n\n    const d = this.covalent + atom.covalent\n    const d1 = d + 0.3\n    const d2 = d - 0.5\n\n    return distSquared < (d1 * d1) && distSquared > (d2 * d2)\n  }\n\n  /**\n   * Set atom position from array\n   * @param  {Array|TypedArray} array - input array\n   * @param  {Integer} [offset] - the offset\n   * @return {AtomProxy} this object\n   */\n  positionFromArray (array: NumberArray, offset = 0) {\n    this.x = array[ offset + 0 ]\n    this.y = array[ offset + 1 ]\n    this.z = array[ offset + 2 ]\n\n    return this\n  }\n\n  /**\n   * Write atom position to array\n   * @param  {Array|TypedArray} [array] - target array\n   * @param  {Integer} [offset] - the offset\n   * @return {Array|TypedArray} target array\n   */\n  positionToArray (array: NumberArray = [], offset = 0) {\n    const index = this.index\n    const atomStore = this.atomStore\n\n    array[ offset + 0 ] = atomStore.x[ index ]\n    array[ offset + 1 ] = atomStore.y[ index ]\n    array[ offset + 2 ] = atomStore.z[ index ]\n\n    return array\n  }\n\n  /**\n   * Write atom position to vector\n   * @param  {Vector3} [v] - target vector\n   * @return {Vector3} target vector\n   */\n  positionToVector3 (v?: Vector3) {\n    if (v === undefined) v = new Vector3()\n\n    v.x = this.x\n    v.y = this.y\n    v.z = this.z\n\n    return v\n  }\n\n  /**\n   * Set atom position from vector\n   * @param  {Vector3} v - input vector\n   * @return {AtomProxy} this object\n   */\n  positionFromVector3 (v: Vector3) {\n    this.x = v.x\n    this.y = v.y\n    this.z = v.z\n\n    return this\n  }\n\n  /**\n   * Add vector to atom position\n   * @param  {Vector3} v - input vector\n   * @return {AtomProxy} this object\n   */\n  positionAdd (v: Vector3|AtomProxy) {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n\n    return this\n  }\n\n  /**\n   * Subtract vector from atom position\n   * @param  {Vector3} v - input vector\n   * @return {AtomProxy} this object\n   */\n  positionSub (v: Vector3|AtomProxy) {\n    this.x -= v.x\n    this.y -= v.y\n    this.z -= v.z\n\n    return this\n  }\n\n  /**\n   * Get intra group/residue bonds\n   * @param  {Boolean} firstOnly - immediately return the first connected atomIndex\n   * @return {Integer[]|Integer|undefined} connected atomIndices\n   */\n  getResidueBonds (firstOnly = false) {\n    const residueAtomOffset = this.residueAtomOffset\n    const relativeIndex = this.index - this.residueAtomOffset\n    const bonds = this.residueType.getBonds()!  // TODO\n    const atomIndices1 = bonds.atomIndices1\n    const atomIndices2 = bonds.atomIndices2\n    let idx1, idx2, connectedAtomIndex\n    let connectedAtomIndices: number[]|undefined\n\n    if (!firstOnly) connectedAtomIndices = []\n\n    idx1 = atomIndices1.indexOf(relativeIndex)\n    while (idx1 !== -1) {\n      connectedAtomIndex = atomIndices2[ idx1 ] + residueAtomOffset\n      if (connectedAtomIndices) {\n        connectedAtomIndices.push(connectedAtomIndex)\n        idx1 = atomIndices1.indexOf(relativeIndex, idx1 + 1)\n      } else {\n        return connectedAtomIndex\n      }\n    }\n\n    idx2 = atomIndices2.indexOf(relativeIndex)\n    while (idx2 !== -1) {\n      connectedAtomIndex = atomIndices1[ idx2 ] + residueAtomOffset\n      if (connectedAtomIndices) {\n        connectedAtomIndices.push(connectedAtomIndex)\n        idx2 = atomIndices2.indexOf(relativeIndex, idx2 + 1)\n      } else {\n        return connectedAtomIndex\n      }\n    }\n\n    return connectedAtomIndices\n  }\n\n  //\n\n  qualifiedName (noResname = false) {\n    var name = ''\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\n    if (this.resno !== undefined) name += this.resno\n    if (this.inscode) name += '^' + this.inscode\n    if (this.chainname) name += ':' + this.chainname\n    if (this.atomname) name += '.' + this.atomname\n    if (this.altloc) name += '%' + this.altloc\n    if (this.structure.modelStore.count > 1) name += '/' + this.modelIndex\n    return name\n  }\n\n  /**\n   * Clone object\n   * @return {AtomProxy} cloned atom\n   */\n  clone () {\n    return new AtomProxy(this.structure, this.index)\n  }\n\n  toObject () {\n    return {\n      index: this.index,\n      residueIndex: this.residueIndex,\n\n      resname: this.resname,\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      element: this.element,\n      chainname: this.chainname,\n      resno: this.resno,\n      serial: this.serial,\n      vdw: this.vdw,\n      covalent: this.covalent,\n      hetero: this.hetero,\n      bfactor: this.bfactor,\n      altloc: this.altloc,\n      atomname: this.atomname,\n      modelIndex: this.modelIndex\n    }\n  }\n}\n\nexport default AtomProxy\n","/**\n * @file Kdtree\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { Debug, Log } from '../globals'\nimport _Kdtree from '../utils/kdtree'\nimport Structure from '../structure/structure'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueProxy from '../proxy/residue-proxy'\n\nfunction euclideanDistSq(a: number[], b: number[]) {\n  const dx = a[0] - b[0]\n  const dy = a[1] - b[1]\n  const dz = a[2] - b[2]\n  return dx * dx + dy * dy + dz * dz\n}\n\nfunction euclideanDist(a: number[], b: number[]) {\n  return Math.sqrt(euclideanDistSq(a, b))\n}\n\nconst pointArray = new Float32Array(3)\n\nclass Kdtree {\n  points: Float32Array\n  atomIndices: Uint32Array\n  kdtree: _Kdtree\n\n  constructor(structure: Structure|ResidueProxy, useSquaredDist = false) {\n    if (Debug) Log.time('Kdtree build')\n\n    const metric = useSquaredDist ? euclideanDistSq : euclideanDist\n\n    const points = new Float32Array(structure.atomCount * 3)\n    const atomIndices = new Uint32Array(structure.atomCount)\n    let i = 0\n\n    structure.eachAtom(function (ap) {\n      points[ i + 0 ] = ap.x\n      points[ i + 1 ] = ap.y\n      points[ i + 2 ] = ap.z\n      atomIndices[ i / 3 ] = ap.index\n      i += 3\n    })\n\n    this.atomIndices = atomIndices\n    this.points = points\n    this.kdtree = new _Kdtree(points, metric)\n\n    if (Debug) Log.timeEnd('Kdtree build')\n\n      // console.log(\"this.kdtree.verify()\", this.kdtree.verify())\n  }\n\n  nearest (point: number[]|Vector3, maxNodes: number, maxDistance: number) {\n    // Log.time( \"Kdtree nearest\" );\n\n    if (point instanceof Vector3) {\n      point.toArray(pointArray as any)\n    } else if (point instanceof AtomProxy) {\n      point.positionToArray(pointArray)\n    }\n\n    const nodeList = this.kdtree.nearest(pointArray, maxNodes, maxDistance)\n\n    const indices = this.kdtree.indices\n    const nodes = this.kdtree.nodes\n    const atomIndices = this.atomIndices\n    const resultList = []\n\n    for (let i = 0, n = nodeList.length; i < n; ++i) {\n      const d = nodeList[ i ]\n      const nodeIndex = d[ 0 ]\n      const dist = d[ 1 ]\n\n      resultList.push({\n        index: atomIndices[ indices[ nodes[ nodeIndex ] ] ],\n        distance: dist\n      })\n    }\n\n    // Log.timeEnd( \"Kdtree nearest\" );\n\n    return resultList\n  }\n}\n\nexport default Kdtree\n","/**\n * @file Symmetry Constants\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport const SymOpCode: { [k: string]: string } = {\n  ' ': 'X',\n  '!': 'Y',\n  '#': 'Z',\n  '$': '-X',\n  '%': '-Y',\n  '&': '-Z',\n  \"'\": 'Y+1/2',\n  '(': '1/2+X',\n  ')': '1/2+Y',\n  '*': '1/2-X',\n  '+': '1/2+Z',\n  ',': '1/2-Y',\n  '-': '1/2-Z',\n  '.': 'X+1/2',\n  '/': 'Z+1/2',\n  '0': '-X+1/2',\n  '1': '-Y+1/2',\n  '2': '-Z+1/2',\n  '3': '1/4+X',\n  '4': '1/4-Y',\n  '5': '1/4+Z',\n  '6': '1/4-X',\n  '7': '1/4+Y',\n  '8': '3/4-Y',\n  '9': '3/4+Z',\n  ':': '3/4+Y',\n  ';': '3/4+X',\n  '<': '3/4-X',\n  '=': '1/4-Z',\n  '>': '3/4-Z',\n  '?': 'X-Y',\n  '@': 'Y-X',\n  'A': 'Z+1/3',\n  'B': 'Z+2/3',\n  'C': 'X+2/3',\n  'D': 'Y+1/3',\n  'E': '-Y+2/3',\n  'F': 'X-Y+1/3',\n  'G': 'Y-X+2/3',\n  'H': '-X+1/3',\n  'I': 'X+1/3',\n  'J': 'Y+2/3',\n  'K': '-Y+1/3',\n  'L': 'X-Y+2/3',\n  'M': 'Y-X+1/3',\n  'N': '-X+2/3',\n  'O': '2/3+X',\n  'P': '1/3+Y',\n  'Q': '1/3+Z',\n  'R': '2/3-Y',\n  'S': '1/3+X-Y',\n  'T': '2/3+Y-X',\n  'U': '1/3-X',\n  'V': '2/3-X',\n  'W': '1/3-Y',\n  'X': '1/3-Z',\n  'Y': '2/3+Y',\n  'Z': '1/3+Y-X',\n  '[': '2/3+X-Y',\n  ']': '1/3+X',\n  '^': '2/3+Z',\n  '_': '2/3-Z',\n  '`': '5/6+Z',\n  'a': '1/6+Z',\n  'b': '5/6-Z',\n  'c': '1/6-Z',\n  'd': 'Z+5/6',\n  'e': 'Z+1/6',\n  'f': 'Z+1/4',\n  'g': '+Y'\n}\n\n// encoded, originally from CCP4 symop.lib\nexport const EncodedSymOp: { [k: string]: string } = {\n  'P 1': ' !#',\n  'P -1': ' !#$%&',\n  'P 1 2 1': ' !#$!&',\n  'P 1 21 1': \" !#$'&\",\n  'C 1 2 1': ' !#$!&()#*)&',\n  'P 1 m 1': ' !# %#',\n  'P 1 c 1': ' !# %+',\n  'C 1 m 1': ' !# %#()#(,#',\n  'C 1 c 1': ' !# %+()#(,+',\n  'P 1 2/m 1': ' !# %#$!&$%&',\n  'P 1 21/m 1': ' !#$)&$%& ,#',\n  'C 1 2/m 1': ' !# %#$!&$%&()#(,#*)&*,&',\n  'P 1 2/c 1': ' !#$!-$%& %+',\n  'P 1 21/c 1': ' !#$%&$)- ,+',\n  'C 1 2/c 1': ' !#$!-$%& %+()#*)-*,&(,+',\n  'P 2 2 2': ' !#$%#$!& %&',\n  'P 2 2 21': ' !#$%+$!- %&',\n  'P 21 21 2': ' !#$%#*)&(,&',\n  'P 21 21 21': ' !#*%+$)-(,&',\n  'C 2 2 21': ' !#$%+$!- %&()#*,+*)-(,&',\n  'C 2 2 2': ' !#$%#$!& %&()#*,#*)&(,&',\n  'F 2 2 2': ' !#$%#$!& %& )+$,+$)- ,-(!+*%+*!-(%-()#*,#*)&(,&',\n  'I 2 2 2': \" !#$%# %&$!&.'/01/.120'2\",\n  'I 21 21 21': ' !#*%+$)-(,&()+$,#*!& %-',\n  'P m m 2': ' !#$%# %#$!#',\n  'P m c 21': ' !#$%+ %+$!#',\n  'P c c 2': ' !#$%# %+$!+',\n  'P m a 2': ' !#$%#(%#*!#',\n  'P c a 21': ' !#$%+(%#*!+',\n  'P n c 2': ' !#$%# ,+$)+',\n  'P m n 21': ' !#*%+(%+$!#',\n  'P b a 2': ' !#$%#(,#*)#',\n  'P n a 21': ' !#$%+(,#*)+',\n  'P n n 2': ' !#$%#(,+*)+',\n  'C m m 2': ' !#$%# %#$!#()#*,#(,#*)#',\n  'C m c 21': ' !#$%+ %+$!#()#*,+(,+*)#',\n  'C c c 2': ' !#$%# %+$!+()#*,#(,+*)+',\n  'A m m 2': ' !#$%# %#$!# )+$,+ ,+$)+',\n  'A b m 2': ' !#$%# ,#$)# )+$,+ %+$!+',\n  'A m a 2': ' !#$%#(%#*!# )+$,+(,+*)+',\n  'A b a 2': ' !#$%#(,#*)# )+$,+(%+*!+',\n  'F m m 2': ' !#$%# %#$!# )+$,+ ,+$)+(!+*%+(%+*!+()#*,#(,#*)#',\n  'F d d 2': ' !#$%#345675 )+$,+3896:9(!+*%+;49<79()#*,#;85<:5',\n  'I m m 2': ' !#$%# %#$!#()+*,+(,+*)+',\n  'I b a 2': ' !#$%#(,#*)#()+*,+ %+$!+',\n  'I m a 2': ' !#$%#(%#*!#()+*,+ ,+$)+',\n  'P 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#',\n  'P 2/n 2/n 2/n': ' !#$%#$!& %&*,-()-(,+*)+',\n  'P 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+',\n  'P 2/b 2/a 2/n': ' !#$%#$!& %&*,&()&(,#*)#',\n  'P 21/m 2/m 2/a': ' !#*%#$!&(%&$%&(!& %#*!#',\n  'P 2/n 21/n 2/a': ' !#*%#*)- ,-$%&(!&(,+$)+',\n  'P 2/m 2/n 21/a': ' !#*%+*!- %&$%&(!-(%+$!#',\n  'P 21/c 2/c 2/a': ' !#*%#$!-(%-$%&(!& %+*!+',\n  'P 21/b 21/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#',\n  'P 21/c 21/c 2/n': ' !#*,#$)-(%-$%&()& ,+*!+',\n  'P 2/b 21/c 21/m': ' !#$%+$)- ,&$%& !- ,+$)#',\n  'P 21/n 21/n 2/m': ' !#$%#*)-(,-$%& !&(,+*)+',\n  'P 21/m 21/m 2/n': \" !#$%#*'&.,&*,&.'& %#$!#\",\n  'P 21/b 2/c 21/n': ' !#*,+$!-(,&$%&()- %+*)#',\n  'P 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#',\n  'P 21/n 21/m 21/a': \" !#0%/$'&.12$%&.!2 1#0'/\",\n  'C 2/m 2/c 21/m': ' !#$%+$!- %&$%& !- %+$!#()#*,+*)-(,&*,&()-(,+*)#',\n  'C 2/m 2/c 21/a': ' !#$,+$)- %&$%& )- ,+$!#()#*%+*!-(,&*,&(!-(%+*)#',\n  'C 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()#*,#*)&(,&*,&()&(,#*)#',\n  'C 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+()#*,#*)-(,-*,&()&(,+*)+',\n  'C 2/m 2/m 2/a': ' !#$,#$)& %&$%& )& ,#$!#()#*%#*!&(,&*,&(!&(%#*)#',\n  'C 2/c 2/c 2/a': ' !#*,#$!&(,&$,-(!- ,+*!+()#$%#*)& %&*%- )-(%+$)+',\n  'F 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!# )+$,+$)- ,-$,- )- ,+$)+(!+*%+*!-(%-*%-(!-(%+*!+()#*,#*)&(,&*,&()&(,#*)#',\n  'F 2/d 2/d 2/d': ' !#$%#$!& %&64=37=345675 )+$,+$)- ,-68>3:>3896:9(!+*%+*!-(%-<4>;7>;49<79()#*,#*)&(,&<8=;:=;85<:5',\n  'I 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()+*,+*)-(,-*,-()-(,+*)+',\n  'I 2/b 2/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#()+*,+$!- %-*,-()- %+$!+',\n  'I 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#()+$,#*!& %-*,- )&(%#$!+',\n  'I 21/m 21/m 21/a': ' !#$,#$)& %&$%& )& ,#$!#()+*%+*!-(,-*,-(!-(%+*)+',\n  'P 4': ' !#$%#% #!$#',\n  'P 41': ' !#$%+% 5!$9',\n  'P 42': ' !#$%#% +!$+',\n  'P 43': ' !#$%+% 9!$5',\n  'I 4': ' !#$%#% #!$#()+*,+,(+)*+',\n  'I 41': ' !#*,+%(5)$9()+$%#, 9!*5',\n  'P -4': ' !#$%#!$&% &',\n  'I -4': ' !#$%#!$&% &()+*,+)*-,(-',\n  'P 4/m': ' !#$%#% #!$#$%& !&!$&% &',\n  'P 42/m': ' !#$%#% +!$+$%& !&!$-% -',\n  'P 4/n': ' !#$%#,(#)*#*,&()&!$&% &',\n  'P 42/n': ' !#$%#,(+)*+*,-()-!$&% &',\n  'I 4/m': ' !#$%#% #!$#$%& !&!$&% &()+*,+,(+)*+*,-()-)*-,(-',\n  'I 41/a': ' !#*,+%(5)$9$,=(!>!$&,(-()+$%#, 9!*5*%> )=)*-% &',\n  'P 4 2 2': ' !#$%#% #!$#$!& %&! &%$&',\n  'P 4 21 2': ' !#$%#,(#)*#*)&(,&! &%$&',\n  'P 41 2 2': ' !#$%+% 5!$9$!& %-! >%$=',\n  'P 41 21 2': ' !#$%+,(5)*9*)=(,>! &%$-',\n  'P 42 2 2': ' !#$%#% +!$+$!& %&! -%$-',\n  'P 42 21 2': ' !#$%#,(+)*+*)-(,-! &%$&',\n  'P 43 2 2': ' !#$%+% 9!$5$!& %-! =%$>',\n  'P 43 21 2': ' !#$%+,(9)*5*)>(,=! &%$-',\n  'I 4 2 2': ' !#$%#% #!$#$!& %&! &%$&()+*,+,(+)*+*)-(,-)(-,*-',\n  'I 41 2 2': ' !#*,+%(5)$9*!> ,=)(-%$&()+$%#, 9!*5$)=(%>! &,*-',\n  'P 4 m m': ' !#$%#% #!$# %#$!#%$#! #',\n  'P 4 b m': ' !#$%#% #!$#(,#*)#,*#)(#',\n  'P 42 c m': ' !#$%#% +!$+ %+$!+%$#! #',\n  'P 42 n m': ' !#$%#,(+)*+(,+*)+%$#! #',\n  'P 4 c c': ' !#$%#% #!$# %+$!+%$+! +',\n  'P 4 n c': ' !#$%#% #!$#(,+*)+,*+)(+',\n  'P 42 m c': ' !#$%#% +!$+ %#$!#%$+! +',\n  'P 42 b c': ' !#$%#% +!$+(,#*)#,*+)(+',\n  'I 4 m m': ' !#$%#% #!$# %#$!#%$#! #()+*,+,(+)*+(,+*)+,*+)(+',\n  'I 4 c m': ' !#$%#% #!$# %+$!+%$+! +()+*,+,(+)*+(,#*)#,*#)(#',\n  'I 41 m d': ' !#*,+%(5)$9 %#*)+%*5) 9()+$%#, 9!*5(,+$!#,$9!(5',\n  'I 41 c d': ' !#*,+%(5)$9 %+*)#%*9) 5()+$%#, 9!*5(,#$!+,$5!(9',\n  'P -4 2 m': ' !#$%#% &!$&$!& %&%$#! #',\n  'P -4 2 c': ' !#$%#% &!$&$!- %-%$+! +',\n  'P -4 21 m': ' !#$%#% &!$&*)&(,&,*#)(#',\n  'P -4 21 c': ' !#$%#% &!$&*)-(,-,*+)(+',\n  'P -4 m 2': ' !#$%#!$&% & %#$!#! &%$&',\n  'P -4 c 2': ' !#$%#% &!$& %+$!+! -%$-',\n  'P -4 b 2': ' !#$%#% &!$&(,#*)#)(&,*&',\n  'P -4 n 2': ' !#$%#% &!$&(,+*)+)(-,*-',\n  'I -4 m 2': ' !#$%#% &!$& %#$!#! &%$&()+*,+,(-)*-(,+*)+)(-,*-',\n  'I -4 c 2': ' !#$%#% &!$& %+$!+! -%$-()+*,+,(-)*-(,#*)#)(&,*&',\n  'I -4 2 m': ' !#$%#% &!$&$!& %&%$#! #()+*,+,(-)*-*)-(,-,*+)(+',\n  'I -4 2 d': ' !#$%#% &!$&*!>(%>,$9) 9()+*,+,(-)*-$)= ,=%*5!(5',\n  'P 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #',\n  'P 4/m 2/c 2/c': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +',\n  'P 4/n 2/b 2/m': ' !#$%#% #!$#$!& %&! &%$&*,&()&)*&,(&(,#*)#,*#)(#',\n  'P 4/n 2/n 2/c': ' !#$%#% #!$#$!& %&! &%$&*,-()-)*-,(-(,+*)+,*+)(+',\n  'P 4/m 21/b 2/m': ' !#$%#% #!$#*)&(,&)(&,*&$%& !&!$&% &(,#*)#,*#)(#',\n  'P 4/m 21/n 2/c': ' !#$%#% #!$#*)-(,-)(-,*-$%& !&!$&% &(,+*)+,*+)(+',\n  'P 4/n 21/m 2/m': ' !#$%#,(#)*#*)&(,&! &%$&*,&()&!$&% & %#$!#,*#)(#',\n  'P 4/n 2/c 2/c': ' !#$%#,(#)*#*)-(,-! -%$-*,&()&!$&% & %+$!+,*+)(+',\n  'P 42/m 2/m 2/c': ' !#$%#% +!$+$!& %&! -%$-$%& !&!$-% - %#$!#%$+! +',\n  'P 42/m 2/c 2/m': ' !#$%#% +!$+$!- %-! &%$&$%& !&!$-% - %+$!+%$#! #',\n  'P 42/n 2/b 2/c': ' !#$%#,(+)*+$!- %-)(&,*&*,-()-!$&% &(,#*)#%$+! +',\n  'P 42/n 2/n 2/m': ' !#$%#,(+)*+$!& %&)(-,*-*,-()-!$&% &(,+*)+%$#! #',\n  'P 42/m 21/b 2/c': ' !#$%#% +!$+*)&(,&)(-,*-$%& !&!$-% -(,#*)#,*+)(+',\n  'P 42/m 21/n 2/m': \" !#$%#,./'*/*'-.,-! &%$&$%& !&'*-,.-.,/*'/%$#! #\",\n  'P 42/n 21/m 2/c': ' !#$%#,(+)*+*)-(,-! &%$&*,-()-!$&% & %#$!#,*+)(+',\n  'P 42/n 21/c 2/m': ' !#$%#,(+)*+*)&(,&! -%$-*,-()-!$&% & %+$!+,*#)(#',\n  'I 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #()+*,+,(+)*+*)-(,-)(-,*-*,-()-)*-,(-(,+*)+,*+)(+',\n  'I 4/m 2/c 2/m': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +()+*,+,(+)*+*)&(,&)(&,*&*,-()-)*-,(-(,#*)#,*#)(#',\n  'I 41/a 2/m 2/d': ' !#*,+%(5)$9*!> ,=)(-%$&$,=(!>!$&,(-(,+$!#,$9!(5()+$%#, 9!*5$)=(%>! &,*-*%> )=)*-% & %#*)+%*5) 9',\n  'I 41/a 2/c 2/d': ' !#*,+%(5)$9*!= ,>)(&%$-$,=(!>!$&,(-(,#$!+,$5!(9()+$%#, 9!*5$)>(%=! -,*&*%> )=)*-% & %+*)#%*9) 5',\n  'P 3': ' !#%?#@$#',\n  'P 31': ' !#%?A@$B',\n  'P 32': ' !#%?B@$A',\n  'H 3': ' !#%?#@$#CDAEFAGHAIJBKLBMNB',\n  'R 3': ' !## !!# ',\n  'P -3': ' !#%?#@$#$%&!@&? &',\n  'H -3': ' !#%?#@$#$%&!@&? &OPQRSQTUQVWXYZX[]X]Y^W[^ZV^UR_PT_SO_',\n  'R -3': ' !## !!# $%&&$%%&$',\n  'P 3 1 2': ' !#%?#@$#%$&@!& ?&',\n  'P 3 2 1': ' !#%?#@$#! &?%&$@&',\n  'P 31 1 2': ' !#%?Q@$^%$_@!X ?&',\n  'P 31 2 1': ' !#%?A@$B! &?%_$@X',\n  'P 32 1 2': ' !#%?^@$Q%$X@!_ ?&',\n  'P 32 2 1': ' !#%?B@$A! &?%X$@_',\n  'H 3 2': ' !#%?#@$#! &?%&$@&OPQRSQTUQY]X[WXVZX]Y^W[^ZV^PO_SR_UT_',\n  'R 3 2': ' !## !!# %$&$&%&%$',\n  'P 3 m 1': ' !#%?#@$#%$#@!# ?#',\n  'P 3 1 m': ' !#%?#@$#! #?%#$@#',\n  'P 3 c 1': ' !#%?#@$#%$+@!+ ?+',\n  'P 3 1 c': ' !#%?#@$#! +?%+$@+',\n  'H 3 m': ' !#%?#@$#%$#@!# ?#OPQRSQTUQRUQTPQOSQ]Y^W[^ZV^WV^ZY^][^',\n  'R 3 m': ' !## !!# ! # #!#! ',\n  'H 3 c': ' !#%?#@$#%$+@!+ ?+OPQRSQTUQRU`TP`OS`]Y^W[^ZV^WVaZYa][a',\n  'R 3 c': \" !## !!# '././'/'.\",\n  'P -3 1 2/m': ' !#%?#@$#%$&@!& ?&$%&!@&? &! #?%#$@#',\n  'P -3 1 2/c': ' !#%?#@$#%$-@!- ?-$%&!@&? &! +?%+$@+',\n  'P -3 2/m 1': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#',\n  'P -3 2/c 1': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+',\n  'H -3 2/m': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#OPQRSQTUQY]X[WXVZXVWXYZX[]XRUQTPQOSQ]Y^W[^ZV^PO_SR_UT_UR_PT_SO_WV^ZY^][^',\n  'R -3 2/m': ' !## !!# %$&$&%&%$$%&&$%%&$! # #!#! ',\n  'H -3 2/c': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+OPQRSQTUQY]b[WbVZbVWXYZX[]XRU`TP`OS`]Y^W[^ZV^POcSRcUTcUR_PT_SO_WVaZYa][a',\n  'R -3 2/c': \" !## !!# 102021210$%&&$%%&$'././'/'.\",\n  'P 6': ' !#%?#@$#$%#!@#? #',\n  'P 61': ' !#%?A@$B$%/!@d? e',\n  'P 65': ' !#%?B@$A$%/!@e? d',\n  'P 62': ' !#%?^@$Q$%#!@^? Q',\n  'P 64': ' !#%?Q@$^$%#!@Q? ^',\n  'P 63': ' !#%?#@$#$%+!@+? +',\n  'P -6': ' !#%?#@$# !&%?&@$&',\n  'P 6/m': ' !#%?#@$#$%#!@#? #$%&!@&? & !&%?&@$&',\n  'P 63/m': ' !#%?#@$#$%+!@+? +$%&!@&? & !-%?-@$-',\n  'P 6 2 2': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&',\n  'P 61 2 2': ' !#%?Q@$^$%+!@`? a! X?%&$@_%$b@!- ?c',\n  'P 65 2 2': ' !#%?^@$Q$%+!@a? `! _?%&$@X%$c@!- ?b',\n  'P 62 2 2': ' !#%?^@$Q$%#!@^? Q! _?%&$@X%$_@!& ?X',\n  'P 64 2 2': ' !#%?Q@$^$%#!@Q? ^! X?%&$@_%$X@!& ?_',\n  'P 63 2 2': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-',\n  'P 6 m m': ' !#%?#@$#$%#!@#? #%$#@!# ?#! #?%#$@#',\n  'P 6 c c': ' !#%?#@$#$%#!@#? #%$+@!+ ?+! +?%+$@+',\n  'P 63 c m': ' !#%?#@$#$%+!@+? +%$+@!+ ?+! #?%#$@#',\n  'P 63 m c': ' !#%?#@$#$%+!@+? +%$#@!# ?#! +?%+$@+',\n  'P -6 m 2': ' !#%?#@$# !&%?&@$&%$#@!# ?#%$&@!& ?&',\n  'P -6 c 2': ' !#%?#@$# !-%?-@$-%$+@!+ ?+%$&@!& ?&',\n  'P -6 2 m': ' !#%?#@$# !&%?&@$&! &?%&$@&! #?%#$@#',\n  'P -6 2 c': ' !#%?#@$# !-%?-@$-! &?%&$@&! +?%+$@+',\n  'P 6/m 2/m 2/m': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&$%&!@&? & !&@$&%?&%$#@!# ?#! #?%#$@#',\n  'P 6/m 2/c 2/c': ' !#%?#@$#$%#!@#? #! -?%-$@-%$-@!- ?-$%&!@&? & !&@$&%?&%$+@!+ ?+! +?%+$@+',\n  'P 63/m 2/c 2/m': ' !#%?#@$#$%+!@+? +! -?%-$@-%$&@!& ?&$%&!@&? & !-@$-%?-%$+@!+ ?+! #?%#$@#',\n  'P 63/m 2/m 2/c': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-$%&!@&? & !-@$-%?-%$#@!# ?#! +?%+$@+',\n  'P 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ',\n  'F 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%&  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ',\n  'I 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(',\n  'P 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(',\n  'I 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- ',\n  'P 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$',\n  'P 2/n -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& *,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\n  'F 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-($,- )- ,+$)+&*,&()#(,#*)%-*!-(%+(!+*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(*%-(!-(%+*!+-$,- )+ ,+$),&*)&(,#()#*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- *,&()&(,#*)#-*%-(!+(%+*!,-$)- ,+ )+$',\n  'F 2/d -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& 64=37=345675=64=375345674=67=3453756 )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(68>3:>3896:9=<8=;:5;85<:4><7>;49;79<(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(<4>;7>;49<79>68>3:93896:8=<:=;85;:5<()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- <8=;:=;8f<:f><4>;79;49<78>6:>3893:96',\n  'I 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\n  'P 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*',\n  'I 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*()+$,#*g& %-+()#$,&*!- %)+(,#$!&*%- *,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$',\n  'P 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$',\n  'P 42 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\n  'F 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(-%*-!*+%(+ +,$+)$-, -)#)*#,(&)(&,*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() -,$-)$+, +(#,*#)*&,(&)+!*+%(-!(-%*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(&,*&)*#,(#(+%*+!*-%(-!+)$+, -) -,$',\n  'F 41 3 2': ' !#$,+*)&(%-# !+$,&*)-(%!# ,+$)&*%-(:3>46=7<98;5;58<976=43>:97<58;>:3=46 )+$%#*!-(,&#()+*%&$!- ,!+(,#*)-$%& :;=4<>765839;94<5:6>83=79:6543>7;=8<(!+*,#$)- %&+ )#$%-*!&(,)#(%+*!&$,- 73=86>:<54;935469:<=8;>7576983=:;>4<()#*%+$!& ,-+(!#*,-$)& %)+ %#$!-*,&(7;>8<=:69435398657<>4;=:5:<94;=73>86',\n  'I 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\n  'P 43 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7;>46=:<5839398<5:6=4;>75:<983>7;=46',\n  'P 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<',\n  'I 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46',\n  'P -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ',\n  'F -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&%  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(+%*+!*-%(- +)$+,$-) -,#)(#,*&)*&,((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() +,$+)$-, -(#)*#,*&)(&,+!(+%*-!*-%(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(#,*#)*&,(&(+!*+%*-!(-%+) +,$-)$-, ',\n  'I -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\n  'P -4 3 n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\n  'F -4 3 c': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,( )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-() #,$#)$&, &(#!*#%*&!(&%+! +%$-!$-% (!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(!(#%*#!*&%(& +!$+%$-! -%#) #,$&)$&, ()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ! +%$+!$-% - #)$#,$&) &,#!(#%*&!*&%(',\n  'I -4 3 d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7354<9:6>8;=357<946>:;=857394<>:6=8;()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- :;98657<=43>;9:658<=73>49:;586=7<>43',\n  'P 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\n  'P 4/n -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\n  'P 42/m -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\n  'P 42/n -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\n  'F 4/m -3 2/mn  'F 4/m -3 2/cn  'F 41/d -3 2/mn  'F 41/d -3 2/cn  'I 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\n  'I 41/a -3 2/d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<$%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*4<97358;=:6>6>:;=8357<94=8;>:694<573()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46*,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$865:;943>7<=<=73>4;9:658>43=7<5869:;',\n  'P 1 1 2': ' !#$%#',\n  'P 1 1 21': ' !#$%+',\n  'B 1 1 2': ' !#$%#(g+*%+',\n  'A 1 2 1': ' !#$!& )+$)-',\n  'C 1 21 1': ' !#$)&()#*!&',\n  'I 1 2 1': \" !#$!&.'/0'2\",\n  'I 1 21 1': \" !#$)&.'/0!-\",\n  'P 1 1 m': ' !# !&',\n  'P 1 1 b': ' !# )&',\n  'B 1 1 m': ' !# !&(!+(!-',\n  'B 1 1 b': ' !# )&(!+()-',\n  'P 1 1 2/m': ' !# !&$%#$%&',\n  'P 1 1 21/m': ' !#$%+$%& !-',\n  'B 1 1 2/m': ' !# !&$%#$%&(!+(!-*%+*%-',\n  'P 1 1 2/b': ' !#$,#$%& )&',\n  'P 1 1 21/b': ' !#$%&$,+ )-',\n  'B 1 1 2/b': ' !#$,#$%& )&(!+*,+*%-()-',\n  'P 21 2 2': ' !#$!&(%&*%#',\n  'P 2 21 2': ' !# ,&$)&$%#',\n  'P 21 21 2 (a)': \" !#*,#.%&$'&\",\n  'P 21 2 21': ' !#$!&(%-*%+',\n  'P 2 21 21': ' !# %&$)-$,+',\n  'C 2 2 21a)': ' !#*%+(,&$)-()#$,+ %&*!-',\n  'C 2 2 2a': \" !#*,#.%&$'&()#$%# ,&*!&\",\n  'F 2 2 2a': \" !#*,#.%&$'& '/*%/.12$!2.!/$,/ %20'2.'#$%# 1&0!&\",\n  'I 2 2 2a': \" !#*,#.%&$'&()+$%+*!- ,-\",\n  'P 21/m 21/m 2/n a': \" !#*,#$)&(%&$%&.'& ,#*!#\",\n  'P 42 21 2a': \" !#*,#%.+'$+$'&.%&! -,*-\",\n  'I 2 3a': \" !#*,#.%&$'&!# ,- '&$%/$# !-*!/$%&.%()+$%+ ,-*!-)+(%&(!-*,#*+()&$)#*,- ,\"\n}\n","/**\n * @file Symmetry Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Log } from '../globals'\nimport { EncodedSymOp, SymOpCode } from './symmetry-constants'\n\nconst reInteger = /^[1-9]$/\n\nexport function getSymmetryOperations (spacegroup: string) {\n  const encodedSymopList = EncodedSymOp[ spacegroup ]\n  const matrixDict: { [k: string]: Matrix4 } = {}\n\n  if (encodedSymopList === undefined) {\n    console.warn(`spacegroup '${spacegroup}' not found in symop library`)\n    return matrixDict\n  }\n\n  const symopList = []\n  for (let i = 0, il = encodedSymopList.length; i < il; i += 3) {\n    const symop = []\n    for (let j = 0; j < 3; ++j) {\n      symop.push(SymOpCode[ encodedSymopList[ i + j ] ])\n    }\n    symopList.push(symop)\n  }\n\n  symopList.forEach(function (symop) {\n    let row = 0\n    const matrix = new Matrix4().set(\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      0, 0, 0, 1\n    )\n    const me = matrix.elements\n\n    matrixDict[ symop.toString() ] = matrix\n\n    symop.forEach(function (elm) {\n      let negate = false\n      let denominator = false\n\n      for (let i = 0, n = elm.length; i < n; ++i) {\n        const c = elm[ i ]\n\n        if (c === '-') {\n          negate = true\n        } else if (c === '+') {\n          negate = false\n        } else if (c === '/') {\n          denominator = true\n        } else if (c === 'X') {\n          me[ 0 + row ] = negate ? -1 : 1\n        } else if (c === 'Y') {\n          me[ 4 + row ] = negate ? -1 : 1\n        } else if (c === 'Z') {\n          me[ 8 + row ] = negate ? -1 : 1\n        } else if (reInteger.test(c)) {\n          const integer = parseInt(c)\n          if (denominator) {\n            me[ 12 + row ] /= integer\n          } else {\n            me[ 12 + row ] = integer\n          }\n        } else {\n          Log.warn(`getSymmetryOperations: unknown token '${c}'`)\n        }\n      }\n\n      row += 1\n    })\n  })\n\n  return matrixDict\n}\n","/**\n * @file Assembly\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Box3, Vector3 } from 'three'\n\nimport { uniqueArray } from '../utils'\nimport Selection from '../selection/selection'\nimport Structure from '../structure/structure'\nimport StructureView from '../structure/structure-view';\n\nfunction selectionFromChains (chainList: string[]) {\n  let sele = ''\n  if (chainList.length > 0) {\n    sele = ':' + uniqueArray(chainList).join(' OR :')\n  }\n  return new Selection(sele)\n}\n\n/**\n * Assembly of transformed parts of a {@link Structure}\n */\nclass Assembly {\n  partList: AssemblyPart[] = []\n\n  /**\n   * @param {String} name - assembly name\n   */\n  constructor (readonly name = '') {}\n\n  get type () { return 'Assembly' }\n\n  /**\n   * Add transformed parts to the assembly\n   * @example\n   * var m1 = new NGL.Matrix4().set( ... );\n   * var m2 = new NGL.Matrix4().set( ... );\n   * var assembly = new NGL.Assembly( \"myAssembly\" );\n   * // add part that transforms chain 'A' and 'B' using matrices `m1` and `m2`\n   * assembly.addPart( [ m1, m2 ], [ \"A\", \"B\" ] )\n   *\n   * @param {Matrix4[]} matrixList - array of 4x4 transformation matrices\n   * @param {String[]} chainList - array of chain names\n   * @return {AssemblyPart} the added assembly part\n   */\n  addPart (matrixList?: Matrix4[], chainList?: string[]) {\n    const part = new AssemblyPart(matrixList, chainList)\n    this.partList.push(part)\n    return part\n  }\n\n  /**\n   * Get the number of atom for a given structure\n   * @param  {Structure} structure - the given structure\n   * @return {Integer} number of atoms in the assembly\n   */\n  getAtomCount (structure: Structure) {\n    return this.partList.reduce(\n      (count, part) => count + part.getAtomCount(structure), 0\n    )\n  }\n\n  /**\n   * Get the number of residues for a given structure\n   * @param  {Structure} structure - the given structure\n   * @return {Integer} number of residues in the assembly\n   */\n  getResidueCount (structure: Structure) {\n    return this.partList.reduce(\n      (count, part) => count + part.getResidueCount(structure), 0\n    )\n  }\n\n  /**\n   * Get number of instances the assembly will produce, i.e.\n   * the number of transformations performed by the assembly\n   * @return {Integer} number of instances\n   */\n  getInstanceCount () {\n    let instanceCount = 0\n\n    this.partList.forEach(function (part) {\n      instanceCount += part.matrixList.length\n    })\n\n    return instanceCount\n  }\n\n  /**\n   * Determine if the assembly is the full and untransformed structure\n   * @param  {Structure}  structure - the given structure\n   * @return {Boolean} whether the assembly is identical to the structure\n   */\n  isIdentity (structure: Structure) {\n    if (this.partList.length !== 1) return false\n\n    const part = this.partList[ 0 ]\n    if (part.matrixList.length !== 1) return false\n\n    const identityMatrix = new Matrix4()\n    if (!identityMatrix.equals(part.matrixList[ 0 ])) return false\n\n    let structureChainList: string[] = []\n    structure.eachChain(function (cp) {\n      structureChainList.push(cp.chainname)\n    })\n    structureChainList = uniqueArray(structureChainList)\n    if (part.chainList.length !== structureChainList.length) return false\n\n    return true\n  }\n\n  getBoundingBox (structure: Structure) {\n    const boundingBox = new Box3()\n\n    this.partList.forEach(function (part) {\n      const partBox = part.getBoundingBox(structure)\n      boundingBox.expandByPoint(partBox.min)\n      boundingBox.expandByPoint(partBox.max)\n    })\n\n    return boundingBox\n  }\n\n  getCenter (structure: Structure) {\n    return this.getBoundingBox(structure).getCenter(new Vector3())\n  }\n\n  getSelection () {\n    let chainList: string[] = []\n    this.partList.forEach(function (part) {\n      chainList = chainList.concat(part.chainList)\n    })\n    return selectionFromChains(chainList)\n  }\n}\n\nexport class AssemblyPart {\n  constructor (readonly matrixList: Matrix4[] = [], readonly chainList: string[] = []) {}\n\n  get type () { return 'AssemblyPart' }\n\n  _getCount (structure: Structure, propertyName: 'atomCount'|'residueCount') {\n    let count = 0\n\n    structure.eachChain(cp => {\n      if (this.chainList.length === 0 || this.chainList.includes(cp.chainname)) {\n        count += cp[ propertyName ]\n      }\n    })\n\n    return this.matrixList.length * count\n  }\n\n  getAtomCount (structure: Structure) {\n    return this._getCount(structure, 'atomCount')\n  }\n\n  getResidueCount (structure: Structure) {\n    return this._getCount(structure, 'residueCount')\n  }\n\n  getBoundingBox (structure: Structure) {\n    const partBox = new Box3()\n    const instanceBox = new Box3()\n\n    const selection = this.getSelection()\n    const structureBox = structure.getBoundingBox(selection)\n\n    this.matrixList.forEach(function (matrix) {\n      instanceBox.copy(structureBox).applyMatrix4(matrix)\n      partBox.expandByPoint(instanceBox.min)\n      partBox.expandByPoint(instanceBox.max)\n    })\n\n    return partBox\n  }\n\n  getSelection () {\n    return selectionFromChains(this.chainList)\n  }\n\n  getView (structure: Structure): Structure | StructureView {\n    const selection = this.getSelection()\n    if (selection) {\n      return structure.getView(selection)\n    } else {\n      return structure\n    }\n  }\n\n  getInstanceList () {\n    const instanceList = []\n    for (let j = 0, jl = this.matrixList.length; j < jl; ++j) {\n      instanceList.push({\n        id: j + 1,\n        name: j,\n        matrix: this.matrixList[ j ]\n      })\n    }\n    return instanceList\n  }\n}\n\nexport default Assembly\n","/**\n * @file Structure Builder\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from './structure'\n\nclass StructureBuilder {\n  currentModelindex: number|null = null\n  currentChainid: string|null = null\n  currentResname: string|null = null\n  currentResno: number|null = null\n  currentInscode: string|undefined = undefined\n  currentHetero: boolean|null = null\n\n  previousResname: string|null = ''\n  previousHetero: boolean|null = null\n\n  ai = -1\n  ri = -1\n  ci = -1\n  mi = -1\n\n  constructor(readonly structure: Structure) {}\n\n  addResidueType (ri: number) {\n    const atomStore = this.structure.atomStore\n    const residueStore = this.structure.residueStore\n    const residueMap = this.structure.residueMap\n\n    const count = residueStore.atomCount[ ri ]\n    const offset = residueStore.atomOffset[ ri ]\n    const atomTypeIdList = new Array(count)\n    for (let i = 0; i < count; ++i) {\n      atomTypeIdList[ i ] = atomStore.atomTypeId[ offset + i ]\n    }\n    residueStore.residueTypeId[ ri ] = residueMap.add(\n      this.previousResname!, atomTypeIdList, this.previousHetero!  // TODO\n    )\n  }\n\n  addAtom (modelindex: number, chainname: string, chainid: string, resname: string, resno: number, hetero: boolean, sstruc?: string|undefined, inscode?: string|undefined) {\n    const atomStore = this.structure.atomStore\n    const residueStore = this.structure.residueStore\n    const chainStore = this.structure.chainStore\n    const modelStore = this.structure.modelStore\n\n    let addModel = false\n    let addChain = false\n    let addResidue = false\n\n    if (this.currentModelindex !== modelindex) {\n      addModel = true\n      addChain = true\n      addResidue = true\n      this.mi += 1\n      this.ci += 1\n      this.ri += 1\n    } else if (this.currentChainid !== chainid) {\n      addChain = true\n      addResidue = true\n      this.ci += 1\n      this.ri += 1\n    } else if (this.currentResno !== resno || this.currentResname !== resname || this.currentInscode !== inscode) {\n      addResidue = true\n      this.ri += 1\n    }\n    this.ai += 1\n\n    if (addModel) {\n      modelStore.growIfFull()\n      modelStore.chainOffset[ this.mi ] = this.ci\n      modelStore.chainCount[ this.mi ] = 0\n      modelStore.count += 1\n      chainStore.modelIndex[ this.ci ] = this.mi\n    }\n\n    if (addChain) {\n      chainStore.growIfFull()\n      chainStore.setChainname(this.ci, chainname)\n      chainStore.setChainid(this.ci, chainid)\n      chainStore.residueOffset[ this.ci ] = this.ri\n      chainStore.residueCount[ this.ci ] = 0\n      chainStore.count += 1\n      chainStore.modelIndex[ this.ci ] = this.mi\n      modelStore.chainCount[ this.mi ] += 1\n      residueStore.chainIndex[ this.ri ] = this.ci\n    }\n\n    if (addResidue) {\n      this.previousResname = this.currentResname\n      this.previousHetero = this.currentHetero\n      if (this.ri > 0) this.addResidueType(this.ri - 1)\n      residueStore.growIfFull()\n      residueStore.resno[ this.ri ] = resno\n      if (sstruc !== undefined) {\n        residueStore.sstruc[ this.ri ] = sstruc.charCodeAt(0)\n      }\n      if (inscode !== undefined) {\n        residueStore.inscode[ this.ri ] = inscode.charCodeAt(0)\n      }\n      residueStore.atomOffset[ this.ri ] = this.ai\n      residueStore.atomCount[ this.ri ] = 0\n      residueStore.count += 1\n      residueStore.chainIndex[ this.ri ] = this.ci\n      chainStore.residueCount[ this.ci ] += 1\n    }\n\n    atomStore.count += 1\n    atomStore.residueIndex[ this.ai ] = this.ri\n    residueStore.atomCount[ this.ri ] += 1\n\n    this.currentModelindex = modelindex\n    this.currentChainid = chainid\n    this.currentResname = resname\n    this.currentResno = resno\n    this.currentInscode = inscode\n    this.currentHetero = hetero\n  }\n\n  finalize () {\n    this.previousResname = this.currentResname\n    this.previousHetero = this.currentHetero\n    if (this.ri > -1) this.addResidueType(this.ri)\n  }\n}\n\nexport default StructureBuilder\n","/**\n * @file Structure Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4 } from 'three'\n\nimport { Debug, Log } from '../globals'\nimport { binarySearchIndexOf } from '../utils'\nimport Helixbundle from '../geometry/helixbundle'\nimport Kdtree from '../geometry/kdtree'\nimport { getSymmetryOperations } from '../symmetry/symmetry-utils'\nimport Assembly from '../symmetry/assembly'\nimport Structure from '../structure/structure'\nimport StructureBuilder from '../structure/structure-builder'\nimport Polymer from '../proxy/polymer'\nimport ResidueProxy from '../proxy/residue-proxy'\n\nimport { UnknownBackboneType, AA3, Bases } from './structure-constants'\n\nexport function reorderAtoms (structure: Structure) {\n  if (Debug) Log.time('reorderAtoms')\n\n  var ap1 = structure.getAtomProxy()\n  var ap2 = structure.getAtomProxy()\n\n  function compareModelChainResno (index1: number, index2: number) {\n    ap1.index = index1\n    ap2.index = index2\n    if (ap1.modelIndex < ap2.modelIndex) {\n      return -1\n    } else if (ap1.modelIndex > ap2.modelIndex) {\n      return 1\n    } else {\n      if (ap1.chainname < ap2.chainname) {\n        return -1\n      } else if (ap1.chainname > ap2.chainname) {\n        return 1\n      } else {\n        if (ap1.resno < ap2.resno) {\n          return -1\n        } else if (ap1.resno > ap2.resno) {\n          return 1\n        } else {\n          return 0\n        }\n      }\n    }\n  }\n\n  structure.atomStore.sort(compareModelChainResno)\n\n  if (Debug) Log.timeEnd('reorderAtoms')\n}\n\nexport interface SecStruct {\n  helices: [string, number, string, string, number, string, number][]\n  sheets: [string, number, string, string, number, string][]\n}\n\nexport function assignSecondaryStructure (structure: Structure, secStruct: SecStruct) {\n  if (!secStruct) return\n\n  if (Debug) Log.time('assignSecondaryStructure')\n\n  const chainnames: string[] = []\n  structure.eachModel(function (mp) {\n    mp.eachChain(function (cp) {\n      chainnames.push(cp.chainname)\n    })\n  })\n\n  const chainnamesSorted = chainnames.slice().sort()\n  const chainnamesIndex: number[] = []\n  chainnamesSorted.forEach(function (c) {\n    chainnamesIndex.push(chainnames.indexOf(c))\n  })\n\n    // helix assignment\n\n  const helices = secStruct.helices.filter(function (h) {\n    return binarySearchIndexOf(chainnamesSorted, h[ 0 ]) >= 0\n  })\n\n  helices.sort(function (h1, h2) {\n    const c1 = h1[ 0 ]\n    const c2 = h2[ 0 ]\n    const r1 = h1[ 1 ]\n    const r2 = h2[ 1 ]\n\n    if (c1 === c2) {\n      if (r1 === r2) {\n        return 0\n      } else {\n        return r1 < r2 ? -1 : 1\n      }\n    } else {\n      const idx1 = binarySearchIndexOf(chainnamesSorted, c1)\n      const idx2 = binarySearchIndexOf(chainnamesSorted, c2)\n      return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\n    }\n  })\n\n  const residueStore = structure.residueStore\n\n  structure.eachModel(function (mp) {\n    let i = 0\n    const n = helices.length\n    if (n === 0) return\n    let helix = helices[ i ]\n    let helixRun = false\n    let done = false\n\n    mp.eachChain(function (cp) {\n      let chainChange = false\n\n      if (cp.chainname === helix[ 0 ]) {\n        const count = cp.residueCount\n        const offset = cp.residueOffset\n        const end = offset + count\n\n        for (let j = offset; j < end; ++j) {\n          if (residueStore.resno[ j ] === helix[ 1 ] &&  // resnoBeg\n              residueStore.getInscode(j) === helix[ 2 ]   // inscodeBeg\n          ) {\n            helixRun = true\n          }\n\n          if (helixRun) {\n            residueStore.sstruc[ j ] = helix[ 6 ]\n\n            if (residueStore.resno[ j ] === helix[ 4 ] &&  // resnoEnd\n                residueStore.getInscode(j) === helix[ 5 ]   // inscodeEnd\n            ) {\n              helixRun = false\n              i += 1\n\n              if (i < n) {\n                // must look at previous residues as\n                // residues may not be ordered by resno\n                j = offset - 1\n                helix = helices[ i ]\n                chainChange = cp.chainname !== helix[ 0 ]\n              } else {\n                done = true\n              }\n            }\n          }\n\n          if (chainChange || done) return\n        }\n      }\n    })\n  })\n\n    // sheet assignment\n\n  const sheets = secStruct.sheets.filter(function (s) {\n    return binarySearchIndexOf(chainnamesSorted, s[ 0 ]) >= 0\n  })\n\n  sheets.sort(function (s1, s2) {\n    const c1 = s1[ 0 ]\n    const c2 = s2[ 0 ]\n\n    if (c1 === c2) return 0\n    const idx1 = binarySearchIndexOf(chainnamesSorted, c1)\n    const idx2 = binarySearchIndexOf(chainnamesSorted, c2)\n    return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\n  })\n\n  const strandCharCode = 'e'.charCodeAt(0)\n  structure.eachModel(function (mp) {\n    let i = 0\n    const n = sheets.length\n    if (n === 0) return\n    let sheet = sheets[ i ]\n    let sheetRun = false\n    let done = false\n\n    mp.eachChain(function (cp) {\n      let chainChange = false\n\n      if (cp.chainname === sheet[ 0 ]) {\n        const count = cp.residueCount\n        const offset = cp.residueOffset\n        const end = offset + count\n\n        for (let j = offset; j < end; ++j) {\n          if (residueStore.resno[ j ] === sheet[ 1 ] &&  // resnoBeg\n              residueStore.getInscode(j) === sheet[ 2 ]   // inscodeBeg\n          ) {\n            sheetRun = true\n          }\n\n          if (sheetRun) {\n            residueStore.sstruc[ j ] = strandCharCode\n\n            if (residueStore.resno[ j ] === sheet[ 4 ] &&  // resnoEnd\n                residueStore.getInscode(j) === sheet[ 5 ]   // inscodeEnd\n            ) {\n              sheetRun = false\n              i += 1\n\n              if (i < n) {\n                // must look at previous residues as\n                // residues may not be ordered by resno\n                j = offset - 1\n                sheet = sheets[ i ]\n                chainChange = cp.chainname !== sheet[ 0 ]\n              } else {\n                done = true\n              }\n            }\n          }\n\n          if (chainChange || done) return\n        }\n      }\n    })\n  })\n\n  if (Debug) Log.timeEnd('assignSecondaryStructure')\n}\n\nexport const calculateSecondaryStructure = (function () {\n  // Implementation for proteins based on \"pv\"\n  //\n  // assigns secondary structure information based on a simple and very fast\n  // algorithm published by Zhang and Skolnick in their TM-align paper.\n  // Reference:\n  //\n  // TM-align: a protein structure alignment algorithm based on the Tm-score\n  // (2005) NAR, 33(7) 2302-2309\n\n  const zhangSkolnickSS = function (polymer: Polymer, i: number, distances: number[], delta: number) {\n    const structure = polymer.structure\n    const offset = polymer.residueIndexStart\n    const rp1 = structure.getResidueProxy()\n    const rp2 = structure.getResidueProxy()\n    const ap1 = structure.getAtomProxy()\n    const ap2 = structure.getAtomProxy()\n\n    for (let j = Math.max(0, i - 2); j <= i; ++j) {\n      for (let k = 2; k < 5; ++k) {\n        if (j + k >= polymer.residueCount) {\n          continue\n        }\n\n        rp1.index = offset + j\n        rp2.index = offset + j + k\n        ap1.index = rp1.traceAtomIndex\n        ap2.index = rp2.traceAtomIndex\n\n        const d = ap1.distanceTo(ap2)\n\n        if (Math.abs(d - distances[ k - 2 ]) > delta) {\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  const isHelical = function (polymer: Polymer, i: number) {\n    const helixDistances = [ 5.45, 5.18, 6.37 ]\n    const helixDelta = 2.1\n    return zhangSkolnickSS(polymer, i, helixDistances, helixDelta)\n  }\n\n  const isSheet = function (polymer: Polymer, i: number) {\n    const sheetDistances = [ 6.1, 10.4, 13.0 ]\n    const sheetDelta = 1.42\n    return zhangSkolnickSS(polymer, i, sheetDistances, sheetDelta)\n  }\n\n  const proteinPolymer = function (p: Polymer) {\n    const residueStore = p.residueStore\n    const offset = p.residueIndexStart\n    for (let i = 0, il = p.residueCount; i < il; ++i) {\n      let sstruc = 'c'\n      if (isHelical(p, i)) {\n        sstruc = 'h'\n      } else if (isSheet(p, i)) {\n        sstruc = 'e'\n      }\n      residueStore.sstruc[ offset + i ] = sstruc.charCodeAt(0)\n    }\n  }\n\n  const cgPolymer = function (p: Polymer) {\n    const localAngle = 20\n    const centerDist = 2.0\n\n    const residueStore = p.residueStore\n    const offset = p.residueIndexStart\n\n    const helixbundle = new Helixbundle(p)\n    const pos = helixbundle.position\n\n    const c1 = new Vector3()\n    const c2 = new Vector3()\n\n    for (let i = 0, il = p.residueCount; i < il; ++i) {\n      c1.fromArray(pos.center as any, i * 3)  // TODO\n      c2.fromArray(pos.center as any, i * 3 + 3)  // TODO\n      const d = c1.distanceTo(c2)\n\n      if (d < centerDist && d > 1.0 && pos.bending[ i ] < localAngle) {\n        residueStore.sstruc[ offset + i ] = 'h'.charCodeAt(0)\n        residueStore.sstruc[ offset + i + 1 ] = 'h'.charCodeAt(0)\n      }\n    }\n  }\n\n  return function calculateSecondaryStructure (structure: Structure) {\n    if (Debug) Log.time('calculateSecondaryStructure')\n\n    structure.eachPolymer(function (p) {\n      // assign secondary structure\n      if (p.residueCount < 4) return\n      if (p.isCg()) {\n        cgPolymer(p)\n      } else if (p.isProtein()) {\n        proteinPolymer(p)\n      } else {\n        return\n      }\n\n      // set lone secondary structure assignments to \"c\"\n      let prevSstruc: string\n      let sstrucCount = 0\n      p.eachResidue(function (r: ResidueProxy) {\n        if (r.sstruc === prevSstruc) {\n          sstrucCount += 1\n        } else {\n          if (sstrucCount === 1) {\n            r.index -= 1\n            r.sstruc = 'c'\n          }\n          sstrucCount = 1\n          prevSstruc = r.sstruc\n        }\n      })\n    })\n\n    if (Debug) Log.timeEnd('calculateSecondaryStructure')\n  }\n}())\n\n// const ChainnameAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n//                           \"abcdefghijklmnopqrstuvwxyz\" +\n//                           \"0123456789\";\nconst ChainnameAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nexport function getChainname (index: number) {\n  const n = ChainnameAlphabet.length\n  let j = index\n  let k = 0\n  let chainname = ChainnameAlphabet[j % n]\n  while (j >= n) {\n    j = Math.floor(j / n)\n    chainname += ChainnameAlphabet[j % n]\n    k += 1\n  }\n  if (k >= 5) {\n    Log.warn('chainname overflow')\n  }\n  return chainname\n}\n\ninterface ChainData {\n  mIndex: number\n  chainname: string\n  rStart: number\n  rCount: number\n}\n\nexport function calculateChainnames (structure: Structure, useExistingBonds = false) {\n  if (Debug) Log.time('calculateChainnames')\n\n  let doAutoChainName = true\n  structure.eachChain(function (c) {\n    if (c.chainname) doAutoChainName = false\n  })\n\n  if (doAutoChainName) {\n    const modelStore = structure.modelStore\n    const chainStore = structure.chainStore\n    const residueStore = structure.residueStore\n\n    const addChain = function (mIndex: number, chainname: string, rOffset: number, rCount: number) {\n      const ci = chainStore.count\n      for (let i = 0; i < rCount; ++i) {\n        residueStore.chainIndex[ rOffset + i ] = ci\n      }\n      chainStore.growIfFull()\n      chainStore.modelIndex[ ci ] = mIndex\n      chainStore.setChainname(ci, chainname)\n      chainStore.setChainid(ci, chainname)\n      chainStore.residueOffset[ ci ] = rOffset\n      chainStore.residueCount[ ci ] = rCount\n      chainStore.count += 1\n      modelStore.chainCount[ mIndex ] += 1\n    }\n\n    const ap1 = structure.getAtomProxy()\n    const ap2 = structure.getAtomProxy()\n\n    let i = 0\n    let mi = 0\n    let rStart = 0\n    let rEnd = 0\n    const chainData: ChainData[] = []\n\n    if (residueStore.count === 1) {\n      chainData.push({\n        mIndex: 0,\n        chainname: 'A',\n        rStart: 0,\n        rCount: 1\n      })\n    } else {\n      structure.eachResidueN(2, function (rp1: ResidueProxy, rp2: ResidueProxy) {\n        let newChain = false\n\n        const bbType1 = rp1.backboneType\n        const bbType2 = rp2.backboneType\n        const bbTypeUnk = UnknownBackboneType\n\n        rEnd = rp1.index\n\n        if (rp1.modelIndex !== rp2.modelIndex) {\n          newChain = true\n        } else if (rp1.moleculeType !== rp2.moleculeType) {\n          newChain = true\n        } else if (bbType1 !== bbTypeUnk && bbType1 === bbType2) {\n          ap1.index = rp1.backboneEndAtomIndex\n          ap2.index = rp2.backboneStartAtomIndex\n          if (useExistingBonds) {\n            newChain = !ap1.hasBondTo(ap2)\n          } else {\n            newChain = !ap1.connectedTo(ap2)\n          }\n        }\n\n        // current chain goes to end of the structure\n        if (!newChain && rp2.index === residueStore.count - 1) {\n          newChain = true\n          rEnd = rp2.index\n        }\n\n        if (newChain) {\n          chainData.push({\n            mIndex: mi,\n            chainname: getChainname(i),\n            rStart: rStart,\n            rCount: rEnd - rStart + 1\n          })\n\n          i += 1\n\n          if (rp1.modelIndex !== rp2.modelIndex) {\n            i = 0\n            mi += 1\n          }\n\n          // new chain for the last residue of the structure\n          if (rp2.index === residueStore.count - 1 && rEnd !== rp2.index) {\n            chainData.push({\n              mIndex: mi,\n              chainname: getChainname(i),\n              rStart: residueStore.count - 1,\n              rCount: 1\n            })\n          }\n\n          rStart = rp2.index\n          rEnd = rp2.index\n        }\n      })\n    }\n\n    //\n\n    chainStore.count = 0\n    chainData.forEach(function (d) {\n      addChain(d.mIndex, d.chainname, d.rStart, d.rCount)\n    })\n\n    let chainOffset = 0\n    structure.eachModel(function (mp) {\n      modelStore.chainOffset[ mp.index ] = chainOffset\n      modelStore.chainCount[ mp.index ] -= 1\n      chainOffset += modelStore.chainCount[ mp.index ]\n    })\n  }\n\n  if (Debug) Log.timeEnd('calculateChainnames')\n}\n\nexport function calculateBonds (structure: Structure) {\n  if (Debug) Log.time('calculateBonds')\n\n  calculateBondsWithin(structure)\n  calculateBondsBetween(structure)\n\n  if (Debug) Log.timeEnd('calculateBonds')\n}\n\nexport interface ResidueBonds {\n  atomIndices1: number[]\n  atomIndices2: number[]\n  bondOrders: number[]\n}\n\n\nconst BondOrderTable: { [k: string]: number } = {\n  'HIS|CD2|CG': 2,\n  'HIS|CE1|ND1': 2,\n  'ARG|CZ|NH2': 2,\n  'PHE|CE1|CZ': 2,\n  'PHE|CD2|CE2': 2,\n  'PHE|CD1|CG': 2,\n  'TRP|CD1|CG': 2,\n  'TRP|CD2|CE2': 2,\n  'TRP|CE3|CZ3': 2,\n  'TRP|CH2|CZ2': 2,\n  'ASN|CG|OD1': 2,\n  'GLN|CD|OE1': 2,\n  'TYR|CD1|CG': 2,\n  'TYR|CD2|CE2': 2,\n  'TYR|CE1|CZ': 2,\n  'ASP|CG|OD1': 2,\n  'GLU|CD|OE1': 2,\n\n  'G|C8|N7': 2,\n  'G|C4|C5': 2,\n  'G|C2|N3': 2,\n  'G|C6|O6': 2,\n  'C|C4|N3': 2,\n  'C|C5|C6': 2,\n  'C|C2|O2': 2,\n  'A|C2|N3': 2,\n  'A|C6|N1': 2,\n  'A|C4|C5': 2,\n  'A|C8|N7': 2,\n  'U|C5|C6': 2,\n  'U|C2|O2': 2,\n  'U|C4|O4': 2,\n\n  'DG|C8|N7': 2,\n  'DG|C4|C5': 2,\n  'DG|C2|N3': 2,\n  'DG|C6|O6': 2,\n  'DC|C4|N3': 2,\n  'DC|C5|C6': 2,\n  'DC|C2|O2': 2,\n  'DA|C2|N3': 2,\n  'DA|C6|N1': 2,\n  'DA|C4|C5': 2,\n  'DA|C8|N7': 2,\n  'DT|C5|C6': 2,\n  'DT|C2|O2': 2,\n  'DT|C4|O4': 2\n}\nfunction getBondOrderFromTable (resname: string, atomname1: string, atomname2: string) {\n  [ atomname1, atomname2 ] = atomname1 < atomname2 ? [ atomname1, atomname2 ] : [ atomname2, atomname1 ]\n  if (AA3.includes(resname) && atomname1 === 'C' && atomname2 === 'O') return 2\n  if (Bases.includes(resname) && atomname1 === 'OP1' && atomname2 === 'P') return 2\n  return BondOrderTable[ `${resname}|${atomname1}|${atomname2}` ] || 1\n}\n\nexport function calculateResidueBonds (r: ResidueProxy) {\n  const structure = r.structure\n  const a1 = structure.getAtomProxy()\n  const a2 = structure.getAtomProxy()\n\n  const count = r.atomCount\n  const offset = r.atomOffset\n  const end = offset + count\n  const end1 = end - 1\n\n  const atomIndices1 = []\n  const atomIndices2 = []\n  const bondOrders = []\n\n  if (count > 500) {\n    if (Debug) Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\n  } else {\n    if (count > 50) {\n      const kdtree = new Kdtree(r, true)\n      const radius = r.isCg() ? 1.2 : 2.3\n\n      for (let i = offset; i < end1; ++i) {\n        a1.index = i\n        const maxd = a1.covalent + radius + 0.3\n        const nearestAtoms = kdtree.nearest(a1 as any, Infinity, maxd * maxd)  // TODO\n        const m = nearestAtoms.length\n        for (let j = 0; j < m; ++j) {\n          a2.index = nearestAtoms[ j ].index\n          if (a1.index < a2.index) {\n            if (a1.connectedTo(a2)) {\n              atomIndices1.push(a1.index - offset)\n              atomIndices2.push(a2.index - offset)\n              bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname))\n            }\n          }\n        }\n      }\n    } else {\n      for (let i = offset; i < end1; ++i) {\n        a1.index = i\n        for (let j = i + 1; j <= end1; ++j) {\n          a2.index = j\n          if (a1.connectedTo(a2)) {\n            atomIndices1.push(i - offset)\n            atomIndices2.push(j - offset)\n            bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname))\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    atomIndices1: atomIndices1,\n    atomIndices2: atomIndices2,\n    bondOrders: bondOrders\n  }\n}\n\nexport function calculateAtomBondMap (structure: Structure) {\n  if (Debug) Log.time('calculateAtomBondMap')\n\n  var atomBondMap: number[][] = []\n\n  structure.eachBond(function (bp) {\n    var ai1 = bp.atomIndex1\n    var ai2 = bp.atomIndex2\n    if (atomBondMap[ ai1 ] === undefined) atomBondMap[ ai1 ] = []\n    atomBondMap[ ai1 ][ ai2 ] = bp.index\n  })\n\n  if (Debug) Log.timeEnd('calculateAtomBondMap')\n\n  return atomBondMap\n}\n\nexport function calculateBondsWithin (structure: Structure, onlyAddRung = false) {\n  if (Debug) Log.time('calculateBondsWithin')\n\n  const bondStore = structure.bondStore\n  const rungBondStore = structure.rungBondStore\n  const rungAtomSet = structure.getAtomSet(false)\n  const a1 = structure.getAtomProxy()\n  const a2 = structure.getAtomProxy()\n  const bp = structure.getBondProxy()\n  const atomBondMap = onlyAddRung ? null : calculateAtomBondMap(structure)\n\n  structure.eachResidue(function (r) {\n    if (!onlyAddRung && atomBondMap) {\n      const count = r.atomCount\n      const offset = r.atomOffset\n\n      if (count > 500) {\n        Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\n        return\n      }\n\n      const bonds = r.getBonds()\n      const atomIndices1 = bonds.atomIndices1\n      const atomIndices2 = bonds.atomIndices2\n      const bondOrders = bonds.bondOrders\n      const nn = atomIndices1.length\n\n      for (let i = 0; i < nn; ++i) {\n        const rai1 = atomIndices1[ i ]\n        const rai2 = atomIndices2[ i ]\n        const ai1 = rai1 + offset\n        const ai2 = rai2 + offset\n        const tmp = atomBondMap[ ai1 ]\n        if (tmp !== undefined && tmp[ ai2 ] !== undefined) {\n          bp.index = tmp[ ai2 ]\n          const residueTypeBondIndex = r.residueType.getBondIndex(rai1, rai2)!  // TODO\n          // overwrite residueType bondOrder with value from existing bond\n          bondOrders[ residueTypeBondIndex ] = bp.bondOrder\n        } else {\n          a1.index = ai1\n          a2.index = ai2\n          // only add bond if not already in bondStore\n          bondStore.addBond(a1, a2, bondOrders[ i ])\n        }\n      }\n    }\n\n    // get RNA/DNA rung pseudo bonds\n    const traceAtomIndex = r.residueType.traceAtomIndex\n    const rungEndAtomIndex = r.residueType.rungEndAtomIndex\n    if (traceAtomIndex !== -1 && rungEndAtomIndex !== -1) {\n      a1.index = r.traceAtomIndex\n      a2.index = r.rungEndAtomIndex\n      rungBondStore.addBond(a1, a2)\n      rungAtomSet.set(a1.index)\n      rungAtomSet.set(a2.index)\n    }\n  })\n\n  structure.atomSetDict.rung = rungAtomSet\n\n  if (Debug) Log.timeEnd('calculateBondsWithin')\n}\n\nexport function calculateBondsBetween (structure: Structure, onlyAddBackbone = false, useExistingBonds = false) {\n  if (Debug) Log.time('calculateBondsBetween')\n\n  const bondStore = structure.bondStore\n  const backboneBondStore = structure.backboneBondStore\n  const backboneAtomSet = structure.getAtomSet(false)\n  const ap1 = structure.getAtomProxy()\n  const ap2 = structure.getAtomProxy()\n\n  if (backboneBondStore.count === 0) {\n    backboneBondStore.resize(structure.residueStore.count)\n  }\n\n  function addBondIfConnected (rp1: ResidueProxy, rp2: ResidueProxy) {\n    const bbType1 = rp1.backboneType\n    const bbType2 = rp2.backboneType\n    if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\n      ap1.index = rp1.backboneEndAtomIndex\n      ap2.index = rp2.backboneStartAtomIndex\n      if ((useExistingBonds && ap1.hasBondTo(ap2)) || ap1.connectedTo(ap2)) {\n        if (!onlyAddBackbone) {\n          bondStore.addBond(ap1, ap2, 1)  // assume single bond\n        }\n        ap1.index = rp1.traceAtomIndex\n        ap2.index = rp2.traceAtomIndex\n        backboneBondStore.addBond(ap1, ap2)\n        backboneAtomSet.set(ap1.index)\n        backboneAtomSet.set(ap2.index)\n      }\n    }\n  }\n\n  structure.eachResidueN(2, addBondIfConnected)\n\n  const rp1 = structure.getResidueProxy()\n  const rp2 = structure.getResidueProxy()\n\n  // check for cyclic chains\n  structure.eachChain(function (cp) {\n    if (cp.residueCount === 0) return\n    rp1.index = cp.residueOffset\n    rp2.index = cp.residueOffset + cp.residueCount - 1\n    addBondIfConnected(rp2, rp1)\n  })\n\n  structure.atomSetDict.backbone = backboneAtomSet\n\n  if (!onlyAddBackbone) {\n    if (Debug) Log.time('calculateBondsBetween inter')\n    const spatialHash = structure.spatialHash\n    structure.eachResidue(function (rp) {\n      if (rp.backboneType === UnknownBackboneType && !rp.isWater()) {\n        rp.eachAtom(function (ap) {\n          if (ap.isMetal()) return\n          spatialHash!.eachWithin(ap.x, ap.y, ap.z, 4, function (idx) {  // TODO\n            ap2.index = idx\n            if (ap.modelIndex === ap2.modelIndex &&\n                ap.residueIndex !== ap2.residueIndex &&\n                !ap2.isMetal()\n            ) {\n              bondStore.addBondIfConnected(ap, ap2, 1)  // assume single bond\n            }\n          })\n        })\n      }\n    })\n    if (Debug) Log.timeEnd('calculateBondsBetween inter')\n  }\n\n  if (Debug) Log.timeEnd('calculateBondsBetween')\n}\n\nexport function buildUnitcellAssembly (structure: Structure) {\n  if (!structure.unitcell) return\n\n  if (Debug) Log.time('buildUnitcellAssembly')\n\n  const uc = structure.unitcell\n\n  const structureCenterFrac = structure.center.clone().applyMatrix4(uc.cartToFrac)\n  const centerFrac = structureCenterFrac.clone().floor()\n  const symopDict: { [K: string]: Matrix4 } = getSymmetryOperations(uc.spacegroup)\n\n  const centerFracSymop = new Vector3()\n  const positionFracSymop = new Vector3()\n\n  function getMatrixList (shift?: Vector3) {\n    const matrixList: Matrix4[] = []\n\n    Object.keys(symopDict).forEach(function (name) {\n      const m = symopDict[ name ].clone()\n\n      centerFracSymop.copy(structureCenterFrac).applyMatrix4(m).floor()\n      positionFracSymop.setFromMatrixPosition(m)\n      positionFracSymop.sub(centerFracSymop)\n      positionFracSymop.add(centerFrac)\n\n      if (shift) positionFracSymop.add(shift)\n\n      m.setPosition(positionFracSymop)\n      m.multiplyMatrices(uc.fracToCart, m)\n      m.multiply(uc.cartToFrac)\n\n      matrixList.push(m)\n    })\n\n    return matrixList\n  }\n\n  const unitcellAssembly = new Assembly('UNITCELL')\n  const unitcellMatrixList = getMatrixList()\n  const ncsMatrixList: Matrix4[] = []\n  if (structure.biomolDict.NCS) {\n    ncsMatrixList.push(\n      new Matrix4(), ...structure.biomolDict.NCS.partList[ 0 ].matrixList\n    )\n    const ncsUnitcellMatrixList: Matrix4[] = []\n    unitcellMatrixList.forEach(sm => {\n      ncsMatrixList.forEach(nm => {\n        ncsUnitcellMatrixList.push(sm.clone().multiply(nm))\n      })\n    })\n    unitcellAssembly.addPart(ncsUnitcellMatrixList)\n  } else {\n    unitcellAssembly.addPart(unitcellMatrixList)\n  }\n\n  const vec = new Vector3()\n  const supercellAssembly = new Assembly('SUPERCELL')\n  const supercellMatrixList = Array.prototype.concat.call(\n    getMatrixList(vec.set(1, 0, 0)),  // 655\n    getMatrixList(vec.set(0, 1, 0)),  // 565\n    getMatrixList(vec.set(0, 0, 1)),  // 556\n\n    getMatrixList(vec.set(-1, 0, 0)),  // 455\n    getMatrixList(vec.set(0, -1, 0)),  // 545\n    getMatrixList(vec.set(0, 0, -1)),  // 554\n\n    getMatrixList(vec.set(1, 1, 0)),  // 665\n    getMatrixList(vec.set(1, 0, 1)),  // 656\n    getMatrixList(vec.set(0, 1, 1)),  // 566\n\n    getMatrixList(vec.set(-1, -1, 0)),  // 445\n    getMatrixList(vec.set(-1, 0, -1)),  // 454\n    getMatrixList(vec.set(0, -1, -1)),  // 544\n\n    getMatrixList(vec.set(1, -1, -1)),  // 644\n    getMatrixList(vec.set(1, 1, -1)),  // 664\n    getMatrixList(vec.set(1, -1, 1)),  // 646\n    getMatrixList(vec.set(-1, 1, 1)),  // 466\n    getMatrixList(vec.set(-1, -1, 1)),  // 446\n    getMatrixList(vec.set(-1, 1, -1)),  // 464\n\n    getMatrixList(vec.set(0, 1, -1)),  // 564\n    getMatrixList(vec.set(0, -1, 1)),  // 546\n    getMatrixList(vec.set(1, 0, -1)),  // 654\n    getMatrixList(vec.set(-1, 0, 1)),  // 456\n    getMatrixList(vec.set(1, -1, 0)),  // 645\n    getMatrixList(vec.set(-1, 1, 0)),  // 465\n\n    getMatrixList(),  // 555\n    getMatrixList(vec.set(1, 1, 1)),  // 666\n    getMatrixList(vec.set(-1, -1, -1))   // 444\n  )\n  if (structure.biomolDict.NCS) {\n    const ncsSupercellMatrixList: Matrix4[] = []\n    supercellMatrixList.forEach(function (sm: Matrix4) {\n      ncsMatrixList.forEach(function (nm) {\n        ncsSupercellMatrixList.push(sm.clone().multiply(nm))\n      })\n    })\n    supercellAssembly.addPart(ncsSupercellMatrixList)\n  } else {\n    supercellAssembly.addPart(supercellMatrixList)\n  }\n\n  structure.biomolDict.UNITCELL = unitcellAssembly\n  structure.biomolDict.SUPERCELL = supercellAssembly\n\n  if (Debug) Log.timeEnd('buildUnitcellAssembly')\n}\n\nconst elm1 = [ 'H', 'C', 'O', 'N', 'S', 'P' ]\nconst elm2 = [ 'NA', 'CL', 'FE' ]\n\nexport function guessElement (atomName: string) {\n  let at = atomName.trim().toUpperCase()\n  // parseInt('C') -> NaN; (NaN > -1) -> false\n  if (parseInt(at.charAt(0)) > -1) at = at.substr(1)\n    // parse again to check for a second integer\n  if (parseInt(at.charAt(0)) > -1) at = at.substr(1)\n  const n = at.length\n\n  if (n === 0) return ''\n  if (n === 1) return at\n  if (n === 2) {\n    if (elm2.indexOf(at) !== -1) return at\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\n  }\n  if (n >= 3) {\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\n  }\n  return ''\n}\n\n/**\n * Assigns ResidueType bonds.\n * @param {Structure} structure - the structure object\n * @return {undefined}\n */\nexport function assignResidueTypeBonds (structure: Structure) {\n  // if( Debug ) Log.time( \"assignResidueTypeBonds\" )\n\n  const bondHash = structure.bondHash!  // TODO\n  const countArray = bondHash.countArray\n  const offsetArray = bondHash.offsetArray\n  const indexArray = bondHash.indexArray\n  const bp = structure.getBondProxy()\n\n  structure.eachResidue(function (rp) {\n    const residueType = rp.residueType\n    if (residueType.bonds !== undefined) return\n\n    var atomOffset = rp.atomOffset\n    var atomIndices1: number[] = []\n    var atomIndices2: number[] = []\n    var bondOrders: number[] = []\n    var bondDict: { [k: string]: boolean } = {}\n\n    const nextAtomOffset = atomOffset + rp.atomCount\n\n    rp.eachAtom(function (ap) {\n      const index = ap.index\n      const offset = offsetArray[ index ]\n      const count = countArray[ index ]\n      for (let i = 0, il = count; i < il; ++i) {\n        bp.index = indexArray[ offset + i ]\n        let idx1 = bp.atomIndex1\n        if (idx1 < atomOffset || idx1 >= nextAtomOffset) {\n          // Don't add bonds outside of this resiude\n          continue\n        }\n        let idx2 = bp.atomIndex2\n        if (idx2 < atomOffset || idx2 >= nextAtomOffset) {\n          continue\n        }\n\n        if (idx1 > idx2) {\n          const tmp = idx2\n          idx2 = idx1\n          idx1 = tmp\n        }\n        const hash = idx1 + '|' + idx2\n        if (bondDict[ hash ] === undefined) {\n          bondDict[ hash ] = true\n          atomIndices1.push(idx1 - atomOffset)\n          atomIndices2.push(idx2 - atomOffset)\n          bondOrders.push(bp.bondOrder)\n        }\n      }\n    })\n\n    residueType.bonds = {\n      atomIndices1: atomIndices1,\n      atomIndices2: atomIndices2,\n      bondOrders: bondOrders\n    }\n  })\n\n  // if( Debug ) Log.timeEnd( \"assignResidueTypeBonds\" )\n}\n\nexport function concatStructures (name: string, ...structures: Structure[]) {\n  if( Debug ) Log.time( \"concatStructures\" )\n\n  const s = new Structure(name, '')\n  const sb = new StructureBuilder(s)\n\n  const atomStore = s.atomStore as any\n  const atomMap = s.atomMap\n  atomStore.addField('formalCharge', 1, 'int8')\n  atomStore.addField('partialCharge', 1, 'float32')\n\n  const atomIndexDict: { [k: number]: number } = {}\n\n  let idx = 0\n  let atomCount = 0\n  let modelCount = 0\n  structures.forEach(structure => {\n    structure.eachAtom(a => {\n      atomStore.growIfFull()\n      atomStore.atomTypeId[ idx ] = atomMap.add(a.atomname, a.element)\n\n      atomStore.x[ idx ] = a.x\n      atomStore.y[ idx ] = a.y\n      atomStore.z[ idx ] = a.z\n      atomStore.serial[ idx ] = a.serial\n      atomStore.formalCharge[ idx ] = a.formalCharge\n      atomStore.partialCharge[ idx ] = a.partialCharge\n      atomStore.altloc[ idx ] = a.altloc\n      atomStore.occupancy[ idx ] = a.occupancy\n      atomStore.bfactor[ idx ] = a.bfactor\n\n      sb.addAtom(\n        a.modelIndex + modelCount,\n        a.chainname,\n        a.chainid,\n        a.resname,\n        a.resno,\n        a.hetero === 1,\n        a.sstruc,\n        a.inscode\n      )\n\n      atomIndexDict[a.index + atomCount] = idx\n      idx += 1\n    })\n    atomCount += structure.atomStore.count\n    modelCount += structure.modelStore.count\n  })\n\n  const bondStore = s.bondStore\n  const a1 = s.getAtomProxy()\n  const a2 = s.getAtomProxy()\n\n  atomCount = 0\n  structures.forEach(structure => {\n    structure.eachBond(b => {\n      a1.index = atomIndexDict[ b.atomIndex1 + atomCount ]\n      a2.index = atomIndexDict[ b.atomIndex2 + atomCount ]\n      bondStore.addBond(a1, a2, b.bondOrder)\n    })\n    atomCount += structure.atomStore.count\n  })\n\n  sb.finalize()\n\n  calculateBondsBetween(s, true)  // calculate backbone bonds\n  calculateBondsWithin(s, true)  // calculate rung bonds\n\n  s.finalizeAtoms()\n  s.finalizeBonds()\n  assignResidueTypeBonds(s)\n\n  if( Debug ) Log.timeEnd( \"concatStructures\" )\n\n  return s\n}\n","/**\n * @file Atom Type\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { guessElement } from '../structure/structure-utils'\nimport {\n  AtomicNumbers, DefaultAtomicNumber,\n  VdwRadii, DefaultVdwRadius,\n  CovalentRadii, DefaultCovalentRadius,\n  Valences, DefaultValence,\n  OuterShellElectronCounts, DefaultOuterShellElectronCount\n} from '../structure/structure-constants'\nimport Structure from '../structure/structure'\n\n// Li, Na, K, Rb, Cs Fr\nconst AlkaliMetals = [ 3, 11, 19, 37, 55, 87 ]\n\n// Be, Mg, Ca, Sr, Ba, Ra\nconst AlkalineEarthMetals = [ 4, 12, 20, 38, 56, 88 ]\n\n// C, P, S, Se\nconst PolyatomicNonmetals = [ 6, 15, 16, 34, ]\n\n// H, N, O, F, Cl, Br, I\nconst DiatomicNonmetals = [ 1, 7, 8, 9, 17, 35, 53 ]\n\n// He, Ne, Ar, Kr, Xe, Rn\nconst NobleGases = [ 2, 10, 18, 36, 54, 86 ]\n\n// Zn, Ga, Cd, In, Sn, Hg, Ti, Pb, Bi, Po, Cn\nconst PostTransitionMetals = [ 13, 30, 31, 48, 49, 50, 80, 81, 82, 83, 84, 85, 112 ]\n\n// B, Si, Ge, As, Sb, Te, At\nconst Metalloids = [ 5, 14, 32, 33, 51, 52, 85 ]\n\n// F, Cl, Br, I, At\nconst Halogens = [ 9, 17, 35, 53, 85 ]\n\n/**\n * Atom type\n */\nclass AtomType {\n  element: string\n  number: number\n  vdw: number\n  covalent: number\n\n  /**\n   * @param {Structure} structure - the structure object\n   * @param {String} atomname - the name of the atom\n   * @param {String} element - the chemical element\n   */\n  constructor (readonly structure: Structure, readonly atomname: string, element?: string) {\n    element = element || guessElement(atomname)\n\n    this.element = element\n    this.number = AtomicNumbers[ element ] || DefaultAtomicNumber\n    this.vdw = VdwRadii[ this.number ] || DefaultVdwRadius\n    this.covalent = CovalentRadii[ this.number ] || DefaultCovalentRadius\n  }\n\n  getDefaultValence() {\n    const vl = Valences[ this.number ]\n    return vl ? vl[ 0 ] : DefaultValence\n  }\n\n  getValenceList () {\n    return Valences[ this.number ] || []\n  }\n\n  getOuterShellElectronCount () {\n    return OuterShellElectronCounts[ this.number ] || DefaultOuterShellElectronCount\n  }\n\n  isMetal () {\n    return (\n      this.isAlkaliMetal() ||\n      this.isAlkalineEarthMetal() ||\n      this.isLanthanide() ||\n      this.isActinide() ||\n      this.isTransitionMetal() ||\n      this.isPostTransitionMetal()\n    )\n  }\n\n  isNonmetal () {\n    return (\n      this.isDiatomicNonmetal() ||\n      this.isPolyatomicNonmetal() ||\n      this.isNobleGas()\n    )\n  }\n\n  isMetalloid () {\n    return Metalloids.includes(this.number)\n  }\n\n  isHalogen () {\n    return Halogens.includes(this.number)\n  }\n\n  isDiatomicNonmetal () {\n    return DiatomicNonmetals.includes(this.number)\n  }\n\n  isPolyatomicNonmetal () {\n    return PolyatomicNonmetals.includes(this.number)\n  }\n\n  isAlkaliMetal () {\n    return AlkaliMetals.includes(this.number)\n  }\n\n  isAlkalineEarthMetal () {\n    return AlkalineEarthMetals.includes(this.number)\n  }\n\n  isNobleGas () {\n    return NobleGases.includes(this.number)\n  }\n\n  isTransitionMetal () {\n    const no = this.number\n    return (\n      (no >= 21 && no <= 29) ||\n      (no >= 39 && no <= 47) ||\n      (no >= 72 && no <= 79) ||\n      (no >= 104 && no <= 108)\n    )\n  }\n\n  isPostTransitionMetal () {\n    return PostTransitionMetals.includes(this.number)\n  }\n\n  isLanthanide () {\n    return this.number >= 57 && this.number <= 71\n  }\n\n  isActinide () {\n    return this.number >= 89 && this.number <= 103\n  }\n\n}\n\nexport default AtomType","/**\n * @file Atom Map\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport AtomType from './atom-type'\nimport { guessElement } from '../structure/structure-utils'\nimport Structure from '../structure/structure'\n\nfunction getHash (atomname: string, element: string) {\n  return atomname + '|' + element\n}\n\nclass AtomMap {\n  dict: { [k: string]: number } = {}\n  list: AtomType[] = []\n\n  constructor (readonly structure: Structure) {\n    this.structure = structure\n  }\n\n  add (atomname: string, element?: string) {\n    atomname = atomname.toUpperCase()\n    if (!element) {\n      element = guessElement(atomname)\n    } else {\n      element = element.toUpperCase()\n    }\n    const hash = getHash(atomname, element)\n    let id = this.dict[ hash ]\n    if (id === undefined) {\n      const atomType = new AtomType(this.structure, atomname, element)\n      id = this.list.length\n      this.dict[ hash ] = id\n      this.list.push(atomType)\n    }\n    return id\n  }\n\n  get (id: number) {\n    return this.list[ id ]\n  }\n}\n\nexport default AtomMap\n","/**\n * @file Residue Type\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Fred Ludlow\n * @private\n */\n\nimport { defaults } from '../utils'\nimport PrincipalAxes from '../math/principal-axes'\nimport { Matrix } from '../math/matrix-utils'\nimport { calculateResidueBonds, ResidueBonds } from '../structure/structure-utils'\nimport {\n  Elements,\n  ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, UnknownType,\n  ProteinBackboneType, RnaBackboneType, DnaBackboneType, UnknownBackboneType,\n  CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\n  ChemCompProtein, ChemCompRna, ChemCompDna, ChemCompSaccharide,\n  AA3, PurinBases, RnaBases, DnaBases, Bases, IonNames, WaterNames, SaccharideNames,\n  ProteinBackboneAtoms, NucleicBackboneAtoms, ResidueTypeAtoms\n} from '../structure/structure-constants'\nimport Structure from '../structure/structure'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\n\nexport interface BondGraph {\n  [k: number]: number[]\n}\n\nexport interface RingData {\n  atomRings: number[][]  // sparse array:\n                         // atomRings[atomIdx] -> array of ring indices\n  rings: number[][]  // rings as arrays of indices\n}\n\n/**\n * Residue type\n */\nexport default class ResidueType {\n  resname: string\n  atomTypeIdList: number[]\n  hetero: number\n  chemCompType: string\n  bonds?: ResidueBonds\n  rings?: RingData\n  bondGraph?: BondGraph\n  aromaticAtoms?: Uint8Array\n  aromaticRings?: number[][]\n\n  atomCount: number\n\n  moleculeType: number\n  backboneType: number\n  backboneEndType: number\n  backboneStartType: number\n  backboneIndexList: number[]\n\n  traceAtomIndex: number\n  direction1AtomIndex: number\n  direction2AtomIndex: number\n  backboneStartAtomIndex: number\n  backboneEndAtomIndex: number\n  rungEndAtomIndex: number\n\n  // Sparse array containing the reference atom index for each bond.\n  bondReferenceAtomIndices: number[] = []\n\n  /**\n   * @param {Structure} structure - the structure object\n   * @param {String} resname - name of the residue\n   * @param {Array} atomTypeIdList - list of IDs of {@link AtomType}s corresponding\n   *                                 to the atoms of the residue\n   * @param {Boolean} hetero - hetero flag\n   * @param {String} chemCompType - chemical component type\n   * @param {Object} [bonds] - TODO\n   */\n  constructor (readonly structure: Structure, resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType: string, bonds?: ResidueBonds) {\n    this.resname = resname\n    this.atomTypeIdList = atomTypeIdList\n    this.hetero = hetero ? 1 : 0\n    this.chemCompType = chemCompType\n    this.bonds = bonds\n    this.atomCount = atomTypeIdList.length\n\n    this.moleculeType = this.getMoleculeType()\n    this.backboneType = this.getBackboneType(0)\n    this.backboneEndType = this.getBackboneType(-1)\n    this.backboneStartType = this.getBackboneType(1)\n    this.backboneIndexList = this.getBackboneIndexList()\n\n    const atomnames = ResidueTypeAtoms[ this.backboneType ]\n    const atomnamesStart = ResidueTypeAtoms[ this.backboneStartType ]\n    const atomnamesEnd = ResidueTypeAtoms[ this.backboneEndType ]\n\n    const traceIndex = this.getAtomIndexByName(atomnames.trace)\n    this.traceAtomIndex = defaults(traceIndex, -1)\n\n    const dir1Index = this.getAtomIndexByName(atomnames.direction1)\n    this.direction1AtomIndex = defaults(dir1Index, -1)\n\n    const dir2Index = this.getAtomIndexByName(atomnames.direction2)\n    this.direction2AtomIndex = defaults(dir2Index, -1)\n\n    const bbStartIndex = this.getAtomIndexByName(atomnamesStart.backboneStart)\n    this.backboneStartAtomIndex = defaults(bbStartIndex, -1)\n\n    const bbEndIndex = this.getAtomIndexByName(atomnamesEnd.backboneEnd)\n    this.backboneEndAtomIndex = defaults(bbEndIndex, -1)\n\n    let rungEndIndex\n    if (PurinBases.includes(resname)) {\n      rungEndIndex = this.getAtomIndexByName('N1')\n    } else {\n      rungEndIndex = this.getAtomIndexByName('N3')\n    }\n    this.rungEndAtomIndex = defaults(rungEndIndex, -1)\n  }\n\n  getBackboneIndexList () {\n    const backboneIndexList: number[] = []\n    let atomnameList\n    switch (this.moleculeType) {\n      case ProteinType:\n        atomnameList = ProteinBackboneAtoms\n        break\n      case RnaType:\n      case DnaType:\n        atomnameList = NucleicBackboneAtoms\n        break\n      default:\n        return backboneIndexList\n    }\n    const atomMap = this.structure.atomMap\n    const atomTypeIdList = this.atomTypeIdList\n    for (let i = 0, il = this.atomCount; i < il; ++i) {\n      const atomType = atomMap.get(atomTypeIdList[ i ])\n      if (atomnameList.includes(atomType.atomname)) {\n        backboneIndexList.push(i)\n      }\n    }\n    return backboneIndexList\n  }\n\n  getMoleculeType () {\n    if (this.isProtein()) {\n      return ProteinType\n    } else if (this.isRna()) {\n      return RnaType\n    } else if (this.isDna()) {\n      return DnaType\n    } else if (this.isWater()) {\n      return WaterType\n    } else if (this.isIon()) {\n      return IonType\n    } else if (this.isSaccharide()) {\n      return SaccharideType\n    } else {\n      return UnknownType\n    }\n  }\n\n  getBackboneType (position: number) {\n    if (this.hasProteinBackbone(position)) {\n      return ProteinBackboneType\n    } else if (this.hasRnaBackbone(position)) {\n      return RnaBackboneType\n    } else if (this.hasDnaBackbone(position)) {\n      return DnaBackboneType\n    } else if (this.hasCgProteinBackbone(position)) {\n      return CgProteinBackboneType\n    } else if (this.hasCgRnaBackbone(position)) {\n      return CgRnaBackboneType\n    } else if (this.hasCgDnaBackbone(position)) {\n      return CgDnaBackboneType\n    } else {\n      return UnknownBackboneType\n    }\n  }\n\n  isProtein () {\n    if (this.chemCompType) {\n      return ChemCompProtein.includes(this.chemCompType)\n    } else {\n      return (\n        this.hasAtomWithName('CA', 'C', 'N') ||\n        AA3.includes(this.resname)\n      )\n    }\n  }\n\n  isCg () {\n    const backboneType = this.backboneType\n    return (\n      backboneType === CgProteinBackboneType ||\n      backboneType === CgRnaBackboneType ||\n      backboneType === CgDnaBackboneType\n    )\n  }\n\n  isNucleic () {\n    return this.isRna() || this.isDna()\n  }\n\n  isRna () {\n    if (this.chemCompType) {\n      return ChemCompRna.includes(this.chemCompType)\n    } else if (this.hetero === 1) {\n      return false\n    } else {\n      return (\n        this.hasAtomWithName(\n          [ 'P', \"O3'\", 'O3*' ], [ \"C4'\", 'C4*' ], [ \"O2'\", 'O2*', \"F2'\", 'F2*' ]\n        ) ||\n        (RnaBases.includes(this.resname) &&\n          (this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])))\n      )\n    }\n  }\n\n  isDna () {\n    if (this.chemCompType) {\n      return ChemCompDna.includes(this.chemCompType)\n    } else if (this.hetero === 1) {\n      return false\n    } else {\n      return (\n        (this.hasAtomWithName([ 'P', \"O3'\", 'O3*' ], [ \"C3'\", 'C3*' ]) &&\n          !this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])) ||\n        DnaBases.includes(this.resname)\n      )\n    }\n  }\n\n  isHetero () {\n    return this.hetero === 1\n  }\n\n  isIon () {\n    return IonNames.includes(this.resname)\n  }\n\n  isWater () {\n    return WaterNames.includes(this.resname)\n  }\n\n  isSaccharide () {\n    if (this.chemCompType) {\n      return ChemCompSaccharide.includes(this.chemCompType)\n    } else {\n      return SaccharideNames.includes(this.resname)\n    }\n  }\n\n  isStandardAminoacid () {\n    return AA3.includes(this.resname)\n  }\n\n  isStandardBase () {\n    return Bases.includes(this.resname)\n  }\n\n  hasBackboneAtoms (position: number, type: number) {\n    const atomnames = ResidueTypeAtoms[ type ]\n    if (position === -1) {\n      return this.hasAtomWithName(\n        atomnames.trace,\n        atomnames.backboneEnd,\n        atomnames.direction1,\n        atomnames.direction2\n      )\n    } else if (position === 0) {\n      return this.hasAtomWithName(\n        atomnames.trace,\n        atomnames.direction1,\n        atomnames.direction2\n      )\n    } else if (position === 1) {\n      return this.hasAtomWithName(\n        atomnames.trace,\n        atomnames.backboneStart,\n        atomnames.direction1,\n        atomnames.direction2\n      )\n    } else {\n      return this.hasAtomWithName(\n        atomnames.trace,\n        atomnames.backboneStart,\n        atomnames.backboneEnd,\n        atomnames.direction1,\n        atomnames.direction2\n      )\n    }\n  }\n\n  hasProteinBackbone (position: number) {\n    return (\n      this.isProtein() &&\n      this.hasBackboneAtoms(position, ProteinBackboneType)\n    )\n  }\n\n  hasRnaBackbone (position: number) {\n    return (\n      this.isRna() &&\n      this.hasBackboneAtoms(position, RnaBackboneType)\n    )\n  }\n\n  hasDnaBackbone (position: number) {\n    return (\n      this.isDna() &&\n      this.hasBackboneAtoms(position, DnaBackboneType)\n    )\n  }\n\n  hasCgProteinBackbone (position: number) {\n    return (\n      this.atomCount < 7 &&\n      this.isProtein() &&\n      this.hasBackboneAtoms(position, CgProteinBackboneType)\n    )\n  }\n\n  hasCgRnaBackbone (position: number) {\n    return (\n      this.atomCount < 11 &&\n      this.isRna() &&\n      this.hasBackboneAtoms(position, CgRnaBackboneType)\n    )\n  }\n\n  hasCgDnaBackbone (position: number) {\n    return (\n      this.atomCount < 11 &&\n      this.isDna() &&\n      this.hasBackboneAtoms(position, CgDnaBackboneType)\n    )\n  }\n\n  hasBackbone (position: number) {\n    return (\n      this.hasProteinBackbone(position) ||\n      this.hasRnaBackbone(position) ||\n      this.hasDnaBackbone(position) ||\n      this.hasCgProteinBackbone(position) ||\n      this.hasCgRnaBackbone(position) ||\n      this.hasCgDnaBackbone(position)\n    )\n  }\n\n  getAtomIndexByName (atomname: string|string[]) {\n    const n = this.atomCount\n    const atomMap = this.structure.atomMap\n    const atomTypeIdList = this.atomTypeIdList\n    if (Array.isArray(atomname)) {\n      for (let i = 0; i < n; ++i) {\n        const index = atomTypeIdList[ i ]\n        if (atomname.includes(atomMap.get(index).atomname)) {\n          return i\n        }\n      }\n    } else {\n      for (let i = 0; i < n; ++i) {\n        const index = atomTypeIdList[ i ]\n        if (atomname === atomMap.get(index).atomname) {\n          return i\n        }\n      }\n    }\n    return undefined\n  }\n\n  hasAtomWithName (...atomnames: (string|string[])[]) {\n    const n = atomnames.length\n    for (let i = 0; i < n; ++i) {\n      if (atomnames[ i ] === undefined) continue\n      if (this.getAtomIndexByName(atomnames[ i ]) === undefined) {\n        return false\n      }\n    }\n    return true\n  }\n\n  getBonds (r?: ResidueProxy) {\n    if (this.bonds === undefined) {\n      this.bonds = calculateResidueBonds(r!)  // TODO\n    }\n    return this.bonds\n  }\n\n  getRings () {\n    if (this.rings === undefined) {\n      this.calculateRings()\n    }\n    return this.rings\n  }\n\n  getBondGraph () {\n    if (this.bondGraph === undefined) {\n      this.calculateBondGraph()\n    }\n    return this.bondGraph\n  }\n\n  getAromatic (a?: AtomProxy) {\n    if (this.aromaticAtoms === undefined) {\n      this.calculateAromatic(this.structure.getResidueProxy((a!).residueIndex))  // TODO\n    }\n    return this.aromaticAtoms\n  }\n\n  getAromaticRings (r?: ResidueProxy) {\n    if (this.aromaticRings === undefined) {\n      this.calculateAromatic(r!)  // TODO\n    }\n    return this.aromaticRings\n  }\n\n  /**\n   * @return {Object} bondGraph - represents the bonding in this\n   *   residue: { ai1: [ ai2, ai3, ...], ...}\n   */\n  calculateBondGraph () {\n    const bondGraph: BondGraph = this.bondGraph = {}\n    const bonds = this.getBonds()\n    const nb = bonds.atomIndices1.length\n    const atomIndices1 = bonds.atomIndices1\n    const atomIndices2 = bonds.atomIndices2\n\n    for (let i = 0; i < nb; ++i) {\n      const ai1 = atomIndices1[i]\n      const ai2 = atomIndices2[i]\n\n      const a1 = bondGraph[ ai1 ] = bondGraph[ ai1 ] || []\n      a1.push(ai2)\n\n      const a2 = bondGraph[ ai2 ] = bondGraph[ ai2 ] || []\n      a2.push(ai1)\n    }\n  }\n\n  /**\n   * Find all rings up to 2 * RingFinderMaxDepth\n   */\n  calculateRings () {\n    const bondGraph = this.getBondGraph()!  // TODO\n    const state = RingFinderState(bondGraph, this.atomCount)\n\n    for (let i = 0; i < state.count; i++) {\n      if (state.visited[i] >= 0) continue\n      findRings(state, i)\n    }\n\n    this.rings = { atomRings: state.atomRings, rings: state.rings }\n  }\n\n  isAromatic (atom: AtomProxy) {\n    this.aromaticAtoms = this.getAromatic(atom)!  // TODO\n    return this.aromaticAtoms[atom.index - atom.residueAtomOffset] === 1\n  }\n\n  calculateAromatic (r: ResidueProxy) {\n    const aromaticAtoms = this.aromaticAtoms = new Uint8Array(this.atomCount)\n    const rings = this.getRings()!.rings\n\n    const aromaticRingFlags = rings.map(ring => {\n      return isRingAromatic(ring.map(idx => {\n        return this.structure.getAtomProxy(idx + r.atomOffset)\n      }))\n    })\n\n    const aromaticRings: number[][] = this.aromaticRings = []\n    rings.forEach((ring, i) => {\n      if (aromaticRingFlags[i]) {\n        aromaticRings.push(ring)\n        ring.forEach(idx => aromaticAtoms[idx] = 1)\n      }\n    })\n  }\n\n  /**\n   * For bonds with order > 1, pick a reference atom\n   * @return {undefined}\n   */\n  assignBondReferenceAtomIndices () {\n    const bondGraph = this.getBondGraph()!  // TODO\n    const rings = this.getRings()!  // TODO\n    const atomRings = rings.atomRings\n    const ringData = rings.rings\n\n    const bonds = this.bonds!  // TODO\n    const atomIndices1 = bonds.atomIndices1\n    const atomIndices2 = bonds.atomIndices2\n    const bondOrders = bonds.bondOrders\n    const bondReferenceAtomIndices = this.bondReferenceAtomIndices\n\n    const nb = bonds.atomIndices1.length\n\n    bondReferenceAtomIndices.length = 0  // reset array\n\n    for (let i = 0; i < nb; ++i) {\n      // Not required for single bonds\n      if (bondOrders[i] <= 1) continue\n\n      let refRing\n\n      const ai1 = atomIndices1[i]\n      const ai2 = atomIndices2[i]\n\n      const rings1 = atomRings[ ai1 ]\n      const rings2 = atomRings[ ai2 ]\n      // Are both atoms in a ring?\n      if (rings1 && rings2) {\n        // Are they in the same ring? (If not, ignore ring info)\n        for (let ri1 = 0; ri1 < rings1.length; ri1++){\n          if (rings2.indexOf(rings1[ ri1 ]) !== -1) {\n            refRing = ringData[ rings1[ ri1 ] ]\n            break\n          }\n        }\n      }\n\n      // Find the first neighbour.\n      if (bondGraph[ ai1 ].length > 1) {\n        for (let j = 0; j < bondGraph[ ai1 ].length; ++j) {\n          const ai3 = bondGraph[ ai1 ][ j ]\n          if (ai3 !== ai2) {\n            if (refRing === undefined || refRing.indexOf(ai3) !== -1){\n              bondReferenceAtomIndices[i] = ai3\n              break\n            }\n          }\n        }\n      } else if (bondGraph[ ai2 ].length > 1) {\n        for (let j = 0; j < bondGraph[ ai2 ].length; ++j) {\n          const ai3 = bondGraph[ ai2 ][ j ]\n          if (ai3 !== ai1) {\n            if (refRing === undefined || refRing.indexOf(ai3) !== -1){\n              bondReferenceAtomIndices[i] = ai3\n              break\n            }\n          }\n        }\n      } // No reference atom could be found (e.g. diatomic molecule/fragment)\n    }\n  }\n\n  getBondIndex (atomIndex1: number, atomIndex2: number) {\n    const bonds = this.bonds!  // TODO\n    const atomIndices1 = bonds.atomIndices1\n    const atomIndices2 = bonds.atomIndices2\n    let idx1 = atomIndices1.indexOf(atomIndex1)\n    let idx2 = atomIndices2.indexOf(atomIndex2)\n    const _idx2 = idx2\n    while (idx1 !== -1) {\n      while (idx2 !== -1) {\n        if (idx1 === idx2) return idx1\n        idx2 = atomIndices2.indexOf(atomIndex2, idx2 + 1)\n      }\n      idx1 = atomIndices1.indexOf(atomIndex1, idx1 + 1)\n      idx2 = _idx2\n    }\n    // returns undefined when no bond is found\n  }\n\n  getBondReferenceAtomIndex (atomIndex1: number, atomIndex2: number) {\n    const bondIndex = this.getBondIndex(atomIndex1, atomIndex2)\n    if (bondIndex === undefined) return undefined\n    if (this.bondReferenceAtomIndices.length === 0) {\n      this.assignBondReferenceAtomIndices()\n    }\n    return this.bondReferenceAtomIndices[ bondIndex ]\n  }\n}\n\n//\n\nconst AromaticRingElements = [\n  Elements.B, Elements.C, Elements.N, Elements.O,\n  Elements.SI, Elements.P, Elements.S,\n  Elements.GE, Elements.AS,\n  Elements.SN, Elements.SB,\n  Elements.BI\n]\nconst AromaticRingPlanarityThreshold = 0.05\n\nfunction isRingAromatic (ring: AtomProxy[]) {\n  if (ring.some(a => !AromaticRingElements.includes(a.number))) return false\n\n  let i = 0\n  const coords = new Matrix(3, ring.length)\n  const cd = coords.data\n\n  ring.forEach(a => {\n    cd[ i + 0 ] = a.x\n    cd[ i + 1 ] = a.y\n    cd[ i + 2 ] = a.z\n    i += 3\n  })\n\n  const pa = new PrincipalAxes(coords)\n\n  return pa.vecC.length() < AromaticRingPlanarityThreshold\n}\n\n//\n\n/**\n * Ring finding code below adapted from MolQL\n * Copyright (c) 2017 MolQL contributors, licensed under MIT\n * @author David Sehnal <david.sehnal@gmail.com>\n */\n\nfunction addRing(state: RingFinderState, a: number, b: number) {\n  // only \"monotonous\" rings\n  if (b < a) return\n\n  const { pred, color, left, right } = state\n  const nc = ++state.currentColor\n\n  let current = a\n\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\n    color[current] = nc\n    current = pred[current]\n    if (current < 0) break\n  }\n\n  let leftOffset = 0\n  let rightOffset = 0\n\n  let found = false\n  let target = 0\n  current = b\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\n    if (color[current] === nc) {\n      target = current\n      found = true\n      break\n    }\n    right[rightOffset++] = current\n    current = pred[current]\n    if (current < 0) break\n  }\n  if (!found) return\n\n  current = a\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\n    left[leftOffset++] = current\n    if (target === current) break\n    current = pred[current]\n    if (current < 0) break\n  }\n\n  const rn = leftOffset + rightOffset\n  const ring: number[] = new Array(rn)\n  let ringOffset = 0;\n  for (let t = 0; t < leftOffset; t++) {\n    ring[ringOffset++] = left[t]\n  }\n  for (let t = rightOffset - 1; t >= 0; t--) {\n    ring[ringOffset++] = right[t]\n  }\n\n  const ri = state.rings.length\n  // set atomRing indices:\n  for (let i = 0; i < rn; ++i) {\n    const ai = ring[i]\n    if (state.atomRings[ai]) {\n      state.atomRings[ai].push(ri)\n    } else {\n      state.atomRings[ai] = [ri]\n    }\n  }\n\n  state.rings.push(ring)\n}\n\nfunction findRings(state: RingFinderState, from: number) {\n  const { bonds, visited, queue, pred } = state\n\n  visited[from] = 1\n  queue[0] = from\n\n  let head = 0\n  let size = 1\n\n  while (head < size) {\n    const top = queue[head++]\n    const start = 0\n    if (bonds[top] === undefined) {\n      continue\n    }\n    const end = bonds[top].length\n\n    for (let i = start; i < end; i++) {\n      const other = bonds[top][i]\n\n      if (visited[other] > 0) {\n        if (pred[other] !== top && pred[top] !== other) {\n          addRing(state, top, other)\n        }\n        continue\n      }\n\n      visited[other] = 1\n      queue[size++] = other\n      pred[other] = top\n    }\n  }\n}\n\nconst RingFinderMaxDepth = 4\n\ninterface RingFinderState {\n  count: number,\n  visited: Int32Array,\n  queue: Int32Array,\n  color: Int32Array,\n  pred: Int32Array,\n\n  left: Int32Array,\n  right: Int32Array,\n\n  currentColor: number,\n\n  rings: number[][],\n  atomRings: number[][],\n\n  bonds: BondGraph\n}\n\nfunction RingFinderState(bonds: BondGraph, capacity: number): RingFinderState {\n  const state = {\n    count: capacity,\n    visited: new Int32Array(capacity),\n    queue: new Int32Array(capacity),\n    pred: new Int32Array(capacity),\n    left: new Int32Array(RingFinderMaxDepth),\n    right: new Int32Array(RingFinderMaxDepth),\n    color: new Int32Array(capacity),\n    currentColor: 0,\n    rings: [],\n    atomRings: [],\n    bonds\n  }\n  for (let i = 0; i < capacity; i++) {\n    state.visited[i] = -1\n    state.pred[i] = -1\n  }\n  return state\n}\n","/**\n * @file Residue Map\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport { ResidueBonds } from '../structure/structure-utils'\nimport ResidueType from './residue-type'\n\nfunction getHash (resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType = '') {\n  return (\n    resname + '|' +\n    atomTypeIdList.join(',') + '|' +\n    (hetero ? 1 : 0) + '|' +\n    chemCompType\n  )\n}\n\nclass ResidueMap {\n  dict: { [k: string]: number } = {}\n  list: ResidueType[] = []\n\n  constructor (readonly structure: Structure) {}\n\n  add (resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType = '', bonds?: ResidueBonds) {\n    resname = resname.toUpperCase()\n    const hash = getHash(resname, atomTypeIdList, hetero, chemCompType)\n    let id = this.dict[ hash ]\n    if (id === undefined) {\n      const residueType = new ResidueType(\n        this.structure, resname, atomTypeIdList, hetero, chemCompType, bonds\n      )\n      id = this.list.length\n      this.dict[ hash ] = id\n      this.list.push(residueType)\n    }\n    return id\n  }\n\n  get (id: number) {\n    return this.list[ id ]\n  }\n}\n\nexport default ResidueMap\n","/**\n * @file Bond Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport Structure from '../structure/structure'\nimport BondStore from '../store/bond-store'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Bond proxy\n */\nclass BondProxy {\n  index: number\n\n  bondStore: BondStore\n\n  private _v12: Vector3\n  private _v13: Vector3\n  private _ap1: AtomProxy\n  private _ap2: AtomProxy\n  private _ap3: AtomProxy\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} index - the index\n   */\n  constructor (readonly structure: Structure, index = 0) {\n    this.index = index\n    this.bondStore = structure.bondStore\n\n    this._v12 = new Vector3()\n    this._v13 = new Vector3()\n    this._ap1 = this.structure.getAtomProxy()\n    this._ap2 = this.structure.getAtomProxy()\n    this._ap3 = this.structure.getAtomProxy()\n  }\n\n  /**\n   * @type {AtomProxy}\n   */\n  get atom1 () {\n    return this.structure.getAtomProxy(this.atomIndex1)\n  }\n\n  /**\n   * @type {AtomProxy}\n   */\n  get atom2 () {\n    return this.structure.getAtomProxy(this.atomIndex2)\n  }\n\n  /**\n   * @type {Integer}\n   */\n  get atomIndex1 () {\n    return this.bondStore.atomIndex1[ this.index ]\n  }\n  set atomIndex1 (value) {\n    this.bondStore.atomIndex1[ this.index ] = value\n  }\n\n  /**\n   * @type {Integer}\n   */\n  get atomIndex2 () {\n    return this.bondStore.atomIndex2[ this.index ]\n  }\n  set atomIndex2 (value) {\n    this.bondStore.atomIndex2[ this.index ] = value\n  }\n\n  /**\n   * @type {Integer}\n   */\n  get bondOrder () {\n    return this.bondStore.bondOrder[ this.index ]\n  }\n  set bondOrder (value) {\n    this.bondStore.bondOrder[ this.index ] = value\n  }\n\n  getOtherAtomIndex (atomIndex: number) {\n    return atomIndex === this.atomIndex1 ? this.atomIndex2 : this.atomIndex1\n  }\n\n  getOtherAtom (atom: AtomProxy) {\n    return this.structure.getAtomProxy(this.getOtherAtomIndex(atom.index))\n  }\n\n  /**\n   * Get reference atom index for the bond\n   * @return {Integer|undefined} atom index, or `undefined` if unavailable\n   */\n  getReferenceAtomIndex () {\n    const ap1 = this._ap1\n    const ap2 = this._ap2\n    ap1.index = this.atomIndex1\n    ap2.index = this.atomIndex2\n    if (ap1.residueIndex !== ap2.residueIndex) {\n      return undefined  // Bond between residues, for now ignore (could detect)\n    }\n    const typeAtomIndex1 = ap1.index - ap1.residueAtomOffset\n    const typeAtomIndex2 = ap2.index - ap2.residueAtomOffset\n    const residueType = ap1.residueType\n    const ix = residueType.getBondReferenceAtomIndex(typeAtomIndex1, typeAtomIndex2)\n    if (ix !== undefined) {\n      return ix + ap1.residueAtomOffset\n    } else {\n      console.warn('No reference atom found', ap1.index, ap2.index)\n    }\n  }\n\n  /**\n   * calculate shift direction for displaying double/triple bonds\n   * @param  {Vector3} [v] pre-allocated output vector\n   * @return {Vector3} the shift direction vector\n   */\n  calculateShiftDir (v = new Vector3()) {\n    const ap1 = this._ap1\n    const ap2 = this._ap2\n    const ap3 = this._ap3\n    const v12 = this._v12\n    const v13 = this._v13\n\n    ap1.index = this.atomIndex1\n    ap2.index = this.atomIndex2\n    const ai3 = this.getReferenceAtomIndex()\n\n    v12.subVectors(ap1 as any, ap2 as any).normalize()  // TODO\n    if (ai3 !== undefined) {\n      ap3.index = ai3\n      v13.subVectors(ap1 as any, ap3 as any)  // TODO\n    } else {\n      v13.copy(ap1 as any)  // no reference point, use origin  // TODO\n    }\n    v13.normalize()\n\n    // make sure v13 and v12 are not colinear\n    let dp = v12.dot(v13)\n    if (1 - Math.abs(dp) < 1e-5) {\n      v13.set(1, 0, 0)\n      dp = v12.dot(v13)\n      if (1 - Math.abs(dp) < 1e-5) {\n        v13.set(0, 1, 0)\n        dp = v12.dot(v13)\n      }\n    }\n\n    return v.copy(v13.sub(v12.multiplyScalar(dp))).normalize()\n  }\n\n  qualifiedName () {\n    return this.atomIndex1 + '=' + this.atomIndex2\n  }\n\n  /**\n   * Clone object\n   * @return {BondProxy} cloned bond\n   */\n  clone () {\n    return new BondProxy(this.structure, this.index)\n  }\n\n  toObject () {\n    return {\n      atomIndex1: this.atomIndex1,\n      atomIndex2: this.atomIndex2,\n      bondOrder: this.bondOrder\n    }\n  }\n}\n\nexport default BondProxy\n","/**\n * @file Residue Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { NumberArray } from '../types'\nimport { defaults } from '../utils'\nimport {\n    SecStrucHelix, SecStrucSheet, SecStrucTurn,\n    ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\n    CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\n    AA1\n} from '../structure/structure-constants'\n\nimport Structure from '../structure/structure'\nimport Selection from '../selection/selection'\n\nimport ChainStore from '../store/chain-store'\nimport ResidueStore from '../store/residue-store'\nimport AtomStore from '../store/atom-store'\n\nimport AtomMap from '../store/atom-map'\nimport ResidueMap from '../store/residue-map'\n\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueType, { RingData } from '../store/residue-type';\nimport { ResidueBonds } from '../structure/structure-utils';\nimport AtomType from '../store/atom-type';\nimport ChainProxy from './chain-proxy';\nimport Entity from '../structure/entity';\n\n/**\n * Residue proxy\n */\nclass ResidueProxy {\n  index: number\n\n  chainStore: ChainStore\n  residueStore: ResidueStore\n  atomStore: AtomStore\n\n  residueMap: ResidueMap\n  atomMap: AtomMap\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} index - the index\n   */\n  constructor (readonly structure: Structure, index = 0) {\n    this.index = index\n    this.chainStore = structure.chainStore\n    this.residueStore = structure.residueStore\n    this.atomStore = structure.atomStore\n    this.residueMap = structure.residueMap\n    this.atomMap = structure.atomMap\n  }\n\n  /**\n   * Entity\n   * @type {Entity}\n   */\n  get entity (): Entity {\n    return this.structure.entityList[ this.entityIndex ]\n  }\n  get entityIndex () {\n    return this.chainStore.entityIndex[ this.chainIndex ]\n  }\n  /**\n   * Chain\n   * @type {ChainProxy}\n   */\n  get chain (): ChainProxy {\n    return this.structure.getChainProxy(this.chainIndex)\n  }\n\n  get chainIndex () {\n    return this.residueStore.chainIndex[ this.index ]\n  }\n  set chainIndex (value) {\n    this.residueStore.chainIndex[ this.index ] = value\n  }\n\n  get atomOffset () {\n    return this.residueStore.atomOffset[ this.index ]\n  }\n  set atomOffset (value) {\n    this.residueStore.atomOffset[ this.index ] = value\n  }\n\n  /**\n   * Atom count\n   * @type {Integer}\n   */\n  get atomCount () {\n    return this.residueStore.atomCount[ this.index ]\n  }\n  set atomCount (value) {\n    this.residueStore.atomCount[ this.index ] = value\n  }\n\n  get atomEnd () {\n    return this.atomOffset + this.atomCount - 1\n  }\n\n  //\n\n  get modelIndex () {\n    return this.chainStore.modelIndex[ this.chainIndex ]\n  }\n  /**\n   * Chain name\n   * @type {String}\n   */\n  get chainname () {\n    return this.chainStore.getChainname(this.chainIndex)\n  }\n  /**\n   * Chain id\n   * @type {String}\n   */\n  get chainid () {\n    return this.chainStore.getChainid(this.chainIndex)\n  }\n\n  //\n\n  /**\n   * Residue number/label\n   * @type {Integer}\n   */\n  get resno () {\n    return this.residueStore.resno[ this.index ]\n  }\n  set resno (value) {\n    this.residueStore.resno[ this.index ] = value\n  }\n\n  /**\n   * Secondary structure code\n   * @type {String}\n   */\n  get sstruc () {\n    return this.residueStore.getSstruc(this.index)\n  }\n  set sstruc (value) {\n    this.residueStore.setSstruc(this.index, value)\n  }\n\n  /**\n   * Insertion code\n   * @type {String}\n   */\n  get inscode () {\n    return this.residueStore.getInscode(this.index)\n  }\n  set inscode (value) {\n    this.residueStore.setInscode(this.index, value)\n  }\n\n  //\n\n  get residueType (): ResidueType {\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.index ])\n  }\n\n  /**\n   * Residue name\n   * @type {String}\n   */\n  get resname () {\n    return this.residueType.resname\n  }\n  /**\n   * Hetero flag\n   * @type {Boolean}\n   */\n  get hetero () {\n    return this.residueType.hetero\n  }\n  get moleculeType () {\n    return this.residueType.moleculeType\n  }\n  get backboneType () {\n    return this.residueType.backboneType\n  }\n  get backboneStartType () {\n    return this.residueType.backboneStartType\n  }\n  get backboneEndType () {\n    return this.residueType.backboneEndType\n  }\n  get traceAtomIndex () {\n    return this.residueType.traceAtomIndex + this.atomOffset\n  }\n  get direction1AtomIndex () {\n    return this.residueType.direction1AtomIndex + this.atomOffset\n  }\n  get direction2AtomIndex () {\n    return this.residueType.direction2AtomIndex + this.atomOffset\n  }\n  get backboneStartAtomIndex () {\n    return this.residueType.backboneStartAtomIndex + this.atomOffset\n  }\n  get backboneEndAtomIndex () {\n    return this.residueType.backboneEndAtomIndex + this.atomOffset\n  }\n  get rungEndAtomIndex () {\n    return this.residueType.rungEndAtomIndex + this.atomOffset\n  }\n\n  //\n\n  get x () {\n    let x = 0\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\n      x += this.atomStore.x[ i ]\n    }\n    return x / this.atomCount\n  }\n\n  get y () {\n    let y = 0\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\n      y += this.atomStore.y[ i ]\n    }\n    return y / this.atomCount\n  }\n\n  get z () {\n    let z = 0\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\n      z += this.atomStore.z[ i ]\n    }\n    return z / this.atomCount\n  }\n\n  //\n\n  /**\n   * Atom iterator\n   * @param  {function(atom: AtomProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\n    const count = this.atomCount\n    const offset = this.atomOffset\n    const ap = this.structure._ap\n    const end = offset + count\n\n    if (selection && selection.atomOnlyTest) {\n      const atomOnlyTest = selection.atomOnlyTest\n      for (let i = offset; i < end; ++i) {\n        ap.index = i\n        if (atomOnlyTest(ap)) callback(ap)\n      }\n    } else {\n      for (let i = offset; i < end; ++i) {\n        ap.index = i\n        callback(ap)\n      }\n    }\n  }\n\n  //\n\n  /**\n   * Write residue center position to array\n   * @param  {Array|TypedArray} [array] - target array\n   * @param  {Integer} [offset] - the offset\n   * @return {Array|TypedArray} target array\n   */\n  positionToArray (array: NumberArray = [], offset = 0) {\n    array[ offset + 0 ] = this.x\n    array[ offset + 1 ] = this.y\n    array[ offset + 2 ] = this.z\n\n    return array\n  }\n\n  //\n\n  /**\n   * If residue is from a protein\n   * @return {Boolean} flag\n   */\n  isProtein () {\n    return this.residueType.moleculeType === ProteinType\n  }\n\n  /**\n   * If residue is nucleic\n   * @return {Boolean} flag\n   */\n  isNucleic () {\n    const moleculeType = this.residueType.moleculeType\n    return moleculeType === RnaType || moleculeType === DnaType\n  }\n\n  /**\n   * If residue is rna\n   * @return {Boolean} flag\n   */\n  isRna () {\n    return this.residueType.moleculeType === RnaType\n  }\n\n  /**\n   * If residue is dna\n   * @return {Boolean} flag\n   */\n  isDna () {\n    return this.residueType.moleculeType === DnaType\n  }\n\n  /**\n   * If residue is coarse-grain\n   * @return {Boolean} flag\n   */\n  isCg () {\n    const backboneType = this.residueType.backboneType\n    return (\n      backboneType === CgProteinBackboneType ||\n      backboneType === CgRnaBackboneType ||\n      backboneType === CgDnaBackboneType\n    )\n  }\n\n  /**\n   * If residue is from a polymer\n   * @return {Boolean} flag\n   */\n  isPolymer () {\n    if (this.structure.entityList.length > 0) {\n      return this.entity.isPolymer()\n    } else {\n      const moleculeType = this.residueType.moleculeType\n      return (\n        moleculeType === ProteinType ||\n        moleculeType === RnaType ||\n        moleculeType === DnaType\n      )\n    }\n  }\n\n  /**\n   * If residue is hetero\n   * @return {Boolean} flag\n   */\n  isHetero () {\n    return this.residueType.hetero === 1\n  }\n\n  /**\n   * If residue is a water molecule\n   * @return {Boolean} flag\n   */\n  isWater () {\n    return this.residueType.moleculeType === WaterType\n  }\n\n  /**\n   * If residue is an ion\n   * @return {Boolean} flag\n   */\n  isIon () {\n    return this.residueType.moleculeType === IonType\n  }\n\n  /**\n   * If residue is a saccharide\n   * @return {Boolean} flag\n   */\n  isSaccharide () {\n    return this.residueType.moleculeType === SaccharideType\n  }\n\n  isStandardAminoacid () {\n    return this.residueType.isStandardAminoacid()\n  }\n\n  isStandardBase () {\n    return this.residueType.isStandardBase()\n  }\n\n  /**\n   * If residue is part of a helix\n   * @return {Boolean} flag\n   */\n  isHelix () {\n    return SecStrucHelix.includes(this.sstruc)\n  }\n\n  /**\n   * If residue is part of a sheet\n   * @return {Boolean} flag\n   */\n  isSheet () {\n    return SecStrucSheet.includes(this.sstruc)\n  }\n\n  /**\n   * If residue is part of a turn\n   * @return {Boolean} flag\n   */\n  isTurn () {\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\n  }\n\n  getAtomType (index: number): AtomType {\n    return this.atomMap.get(this.atomStore.atomTypeId[ index ])\n  }\n\n  getResname1 () {\n    // FIXME nucleic support\n    return AA1[ this.resname.toUpperCase() ] || 'X'\n  }\n\n  getBackboneType (position: number) {\n    switch (position) {\n      case -1:\n        return this.residueType.backboneStartType\n      case 1:\n        return this.residueType.backboneEndType\n      default:\n        return this.residueType.backboneType\n    }\n  }\n\n  getAtomIndexByName (atomname: string) {\n    let index = this.residueType.getAtomIndexByName(atomname)\n    if (index !== undefined) {\n      index += this.atomOffset\n    }\n    return index\n  }\n\n  hasAtomWithName (atomname: string) {\n    return this.residueType.hasAtomWithName(atomname)\n  }\n\n  getAtomnameList () {\n    console.warn('getAtomnameList - might be expensive')\n\n    const n = this.atomCount\n    const offset = this.atomOffset\n    const list = new Array(n)\n    for (let i = 0; i < n; ++i) {\n      list[ i ] = this.getAtomType(offset + i).atomname\n    }\n    return list\n  }\n\n  /**\n   * If residue is connected to another\n   * @param  {ResidueProxy} rNext - the other residue\n   * @return {Boolean} - flag\n   */\n  connectedTo (rNext: ResidueProxy) {\n    const bbAtomEnd = this.structure.getAtomProxy(this.backboneEndAtomIndex)\n    const bbAtomStart = this.structure.getAtomProxy(rNext.backboneStartAtomIndex)\n    if (bbAtomEnd && bbAtomStart) {\n      return bbAtomEnd.connectedTo(bbAtomStart)\n    } else {\n      return false\n    }\n  }\n\n  getNextConnectedResidue () {\n    const rOffset = this.chainStore.residueOffset[ this.chainIndex ]\n    const rCount = this.chainStore.residueCount[ this.chainIndex ]\n    const nextIndex = this.index + 1\n    if (nextIndex < rOffset + rCount) {\n      const rpNext = this.structure.getResidueProxy(nextIndex)\n      if (this.connectedTo(rpNext)) {\n        return rpNext\n      }\n    } else if (nextIndex === rOffset + rCount) {  // cyclic\n      const rpFirst = this.structure.getResidueProxy(rOffset)\n      if (this.connectedTo(rpFirst)) {\n        return rpFirst\n      }\n    }\n    return undefined\n  }\n\n  getPreviousConnectedResidue (residueProxy?: ResidueProxy) {\n    const rOffset = this.chainStore.residueOffset[ this.chainIndex ]\n    const prevIndex = this.index - 1\n    if (prevIndex >= rOffset) {\n      const rpPrev = defaults(residueProxy, this.structure.getResidueProxy())\n      rpPrev.index = prevIndex\n      if (rpPrev.connectedTo(this)) {\n        return rpPrev\n      }\n    } else if (prevIndex === rOffset - 1) {  // cyclic\n      const rCount = this.chainStore.residueCount[ this.chainIndex ]\n      const rpLast = defaults(residueProxy, this.structure.getResidueProxy())\n      rpLast.index = rOffset + rCount - 1\n      if (rpLast.connectedTo(this)) {\n        return rpLast\n      }\n    }\n    return undefined\n  }\n\n  getBonds (): ResidueBonds {\n    return this.residueType.getBonds(this)\n  }\n\n  getRings (): RingData|undefined {\n    return this.residueType.getRings()\n  }\n\n  getAromaticRings () {\n    return this.residueType.getAromaticRings(this)\n  }\n\n  qualifiedName (noResname = false) {\n    let name = ''\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\n    if (this.resno !== undefined) name += this.resno\n    if (this.inscode) name += '^' + this.inscode\n    if (this.chain) name += ':' + this.chainname\n    name += '/' + this.modelIndex\n    return name\n  }\n\n  /**\n   * Clone object\n   * @return {ResidueProxy} cloned residue\n   */\n  clone () {\n    return new ResidueProxy(this.structure, this.index)\n  }\n\n  toObject () {\n    return {\n      index: this.index,\n      chainIndex: this.chainIndex,\n      atomOffset: this.atomOffset,\n      atomCount: this.atomCount,\n\n      resno: this.resno,\n      resname: this.resname,\n      sstruc: this.sstruc\n    }\n  }\n}\n\nexport default ResidueProxy\n","/**\n * @file Polymer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// import { Log } from '../globals'\n\nimport Structure from '../structure/structure'\nimport Selection from '../selection/selection'\n\nimport ChainStore from '../store/chain-store'\nimport ResidueStore from '../store/residue-store'\nimport AtomStore from '../store/atom-store'\n\nimport ResidueProxy from '../proxy/residue-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Polymer\n */\nclass Polymer {\n  chainStore: ChainStore\n  residueStore: ResidueStore\n  atomStore: AtomStore\n\n  residueCount: number\n\n  isPrevConnected: boolean\n  isNextConnected: boolean\n  isNextNextConnected: boolean\n  isCyclic: boolean\n\n  private __residueProxy: ResidueProxy\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} residueIndexStart - the index of the first residue\n   * @param {Integer} residueIndexEnd - the index of the last residue\n   */\n  constructor (readonly structure: Structure, readonly residueIndexStart: number, readonly residueIndexEnd: number) {\n    this.chainStore = structure.chainStore\n    this.residueStore = structure.residueStore\n    this.atomStore = structure.atomStore\n\n    /**\n     * @type {Integer}\n     */\n    this.residueCount = residueIndexEnd - residueIndexStart + 1\n\n    const rpStart = this.structure.getResidueProxy(this.residueIndexStart)\n    const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\n    this.isPrevConnected = rpStart.getPreviousConnectedResidue() !== undefined\n    const rpNext = rpEnd.getNextConnectedResidue()\n    this.isNextConnected = rpNext !== undefined\n    this.isNextNextConnected = rpNext !== undefined && rpNext.getNextConnectedResidue() !== undefined\n    this.isCyclic = rpEnd.connectedTo(rpStart)\n\n    this.__residueProxy = this.structure.getResidueProxy()\n\n    // console.log( this.qualifiedName(), this );\n  }\n\n  get chainIndex () {\n    return this.residueStore.chainIndex[ this.residueIndexStart ]\n  }\n  get modelIndex () {\n    return this.chainStore.modelIndex[ this.chainIndex ]\n  }\n\n  /**\n   * @type {String}\n   */\n  get chainname () {\n    return this.chainStore.getChainname(this.chainIndex)\n  }\n\n  //\n\n  /**\n   * If first residue is from aprotein\n   * @return {Boolean} flag\n   */\n  isProtein () {\n    this.__residueProxy.index = this.residueIndexStart\n    return this.__residueProxy.isProtein()\n  }\n\n  /**\n   * If atom is part of a coarse-grain group\n   * @return {Boolean} flag\n   */\n  isCg () {\n    this.__residueProxy.index = this.residueIndexStart\n    return this.__residueProxy.isCg()\n  }\n\n  /**\n   * If atom is part of a nucleic molecule\n   * @return {Boolean} flag\n   */\n  isNucleic () {\n    this.__residueProxy.index = this.residueIndexStart\n    return this.__residueProxy.isNucleic()\n  }\n\n  getMoleculeType () {\n    this.__residueProxy.index = this.residueIndexStart\n    return this.__residueProxy.moleculeType\n  }\n\n  getBackboneType (position: number) {\n    this.__residueProxy.index = this.residueIndexStart\n    return this.__residueProxy.getBackboneType(position)\n  }\n\n  getAtomIndexByType (index: number, type: string) {\n    // TODO pre-calculate, add to residueStore???\n\n    if (this.isCyclic) {\n      if (index === -1) {\n        index = this.residueCount - 1\n      } else if (index === this.residueCount) {\n        index = 0\n      }\n    } else {\n      if (index === -1 && !this.isPrevConnected) index += 1\n      if (index === this.residueCount && !this.isNextNextConnected) index -= 1\n      // if( index === this.residueCount - 1 && !this.isNextConnected ) index -= 1;\n    }\n\n    const rp = this.__residueProxy\n    rp.index = this.residueIndexStart + index\n    let aIndex\n\n    switch (type) {\n      case 'trace':\n        aIndex = rp.traceAtomIndex\n        break\n      case 'direction1':\n        aIndex = rp.direction1AtomIndex\n        break\n      case 'direction2':\n        aIndex = rp.direction2AtomIndex\n        break\n      default:\n        aIndex = rp.getAtomIndexByName(type)\n    }\n\n    // if (!ap){\n    //   console.log(this, type, rp.residueType)\n    //   // console.log(rp.qualifiedName(), rp.index, index, this.residueCount - 1)\n    //   // rp.index = this.residueIndexStart;\n    //   // console.log(rp.qualifiedName(), this.residueIndexStart)\n    //   // rp.index = this.residueIndexEnd;\n    //   // console.log(rp.qualifiedName(), this.residueIndexEnd)\n    // }\n\n    return aIndex\n  }\n\n  /**\n   * Atom iterator\n   * @param  {function(atom: AtomProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\n    this.eachResidue(function (rp) {\n      rp.eachAtom(callback, selection)\n    })\n  }\n\n  eachAtomN (n: number, callback: (...apArray: AtomProxy[]) => void, type: string) {\n    const m = this.residueCount\n    const array: AtomProxy[] = new Array(n)\n\n    for (let i = 0; i < n; ++i) {\n      array[ i ] = this.structure.getAtomProxy(this.getAtomIndexByType(i, type))\n    }\n    callback.apply(this, array)\n\n    for (var j = n; j < m; ++j) {\n      for (let i = 1; i < n; ++i) {\n        array[ i - 1 ].index = array[ i ].index\n      }\n      array[ n - 1 ].index = this.getAtomIndexByType(j, type)!  // TODO\n      callback.apply(this, array)\n    }\n  }\n\n  /**\n   * Residue iterator\n   * @param  {function(residue: ResidueProxy)} callback - the callback\n   * @return {undefined}\n   */\n  eachResidue (callback: (rp: ResidueProxy) => void) {\n    const rp = this.structure.getResidueProxy()\n    const n = this.residueCount\n    const rStartIndex = this.residueIndexStart\n\n    for (let i = 0; i < n; ++i) {\n      rp.index = rStartIndex + i\n      callback(rp)\n    }\n  }\n\n  qualifiedName () {\n    const rpStart = this.structure.getResidueProxy(this.residueIndexStart)\n    const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\n    return rpStart.qualifiedName() + ' - ' + rpEnd.qualifiedName()\n  }\n}\n\nexport default Polymer\n","/**\n * @file Chain Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { UnknownBackboneType } from '../structure/structure-constants'\n\nimport Structure from '../structure/structure'\nimport Selection from '../selection/selection'\n\nimport ChainStore from '../store/chain-store'\nimport ResidueStore from '../store/residue-store'\n\nimport Polymer from '../proxy/polymer'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ModelProxy from './model-proxy';\nimport Entity from '../structure/entity';\n\n/**\n * Chain proxy\n */\nclass ChainProxy {\n  index: number\n\n  chainStore: ChainStore\n  residueStore: ResidueStore\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} index - the index\n   */\n  constructor (readonly structure: Structure, index = 0) {\n    this.index = index\n    this.chainStore = structure.chainStore\n    this.residueStore = structure.residueStore\n  }\n\n  /**\n   * Entity\n   * @type {Entity}\n   */\n  get entity (): Entity {\n    return this.structure.entityList[ this.entityIndex ]\n  }\n  /**\n   * Model\n   * @type {ModelProxy}\n   */\n  get model (): ModelProxy {\n    return this.structure.getModelProxy(this.modelIndex)\n  }\n\n  get entityIndex () {\n    return this.chainStore.entityIndex[ this.index ]\n  }\n  set entityIndex (value) {\n    this.chainStore.entityIndex[ this.index ] = value\n  }\n\n  get modelIndex () {\n    return this.chainStore.modelIndex[ this.index ]\n  }\n  set modelIndex (value) {\n    this.chainStore.modelIndex[ this.index ] = value\n  }\n\n  get residueOffset () {\n    return this.chainStore.residueOffset[ this.index ]\n  }\n  set residueOffset (value) {\n    this.chainStore.residueOffset[ this.index ] = value\n  }\n\n  /**\n   * Residue count\n   * @type {Integer}\n   */\n  get residueCount () {\n    return this.chainStore.residueCount[ this.index ]\n  }\n  set residueCount (value) {\n    this.chainStore.residueCount[ this.index ] = value\n  }\n\n  get residueEnd () {\n    return this.residueOffset + this.residueCount - 1\n  }\n\n  get atomOffset () {\n    return this.residueStore.atomOffset[ this.residueOffset ]\n  }\n  get atomEnd () {\n    return (\n      this.residueStore.atomOffset[ this.residueEnd ] +\n      this.residueStore.atomCount[ this.residueEnd ] - 1\n    )\n  }\n  /**\n   * Atom count\n   * @type {Integer}\n   */\n  get atomCount () {\n    if (this.residueCount === 0) {\n      return 0\n    } else {\n      return this.atomEnd - this.atomOffset + 1\n    }\n  }\n\n  //\n\n  /**\n   * Chain name\n   * @type {String}\n   */\n  get chainname () {\n    return this.chainStore.getChainname(this.index)\n  }\n  set chainname (value) {\n    this.chainStore.setChainname(this.index, value)\n  }\n\n  /**\n   * Chain id\n   * @type {String}\n   */\n  get chainid () {\n    return this.chainStore.getChainid(this.index)\n  }\n  set chainid (value) {\n    this.chainStore.setChainid(this.index, value)\n  }\n\n  //\n\n  /**\n   * Atom iterator\n   * @param  {function(atom: AtomProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\n    this.eachResidue(function (rp) {\n      rp.eachAtom(callback, selection)\n    }, selection)\n  }\n\n  /**\n   * Residue iterator\n   * @param  {function(residue: ResidueProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachResidue (callback: (rp: ResidueProxy) => void, selection?: Selection) {\n    const count = this.residueCount\n    const offset = this.residueOffset\n    const rp = this.structure._rp\n    const end = offset + count\n\n    if (selection && selection.test) {\n      const residueOnlyTest = selection.residueOnlyTest\n      if (residueOnlyTest) {\n        for (let i = offset; i < end; ++i) {\n          rp.index = i\n          if (residueOnlyTest(rp)) {\n            callback(rp)\n          }\n        }\n      } else {\n        for (let i = offset; i < end; ++i) {\n          rp.index = i\n          callback(rp)\n        }\n      }\n    } else {\n      for (let i = offset; i < end; ++i) {\n        rp.index = i\n        callback(rp)\n      }\n    }\n  }\n\n  /**\n   * Multi-residue iterator\n   * @param {Integer} n - window size\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\n   * @return {undefined}\n   */\n  eachResidueN (n: number, callback: (...rpArray: ResidueProxy[]) => void) {\n    const count = this.residueCount\n    const offset = this.residueOffset\n    const end = offset + count\n    if (count < n) return\n    const array: ResidueProxy[] = new Array(n)\n\n    for (let i = 0; i < n; ++i) {\n      array[ i ] = this.structure.getResidueProxy(offset + i)\n    }\n    callback.apply(this, array)\n\n    for (let j = offset + n; j < end; ++j) {\n      for (let i = 0; i < n; ++i) {\n        array[ i ].index += 1\n      }\n      callback.apply(this, array)\n    }\n  }\n\n  /**\n   * Polymer iterator\n   * @param  {function(polymer: Polymer)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachPolymer (callback: (p: Polymer) => void, selection?: Selection) {\n    let rStartIndex = 0\n    let rNextIndex = 0\n    const test = selection ? selection.residueOnlyTest : undefined\n    const structure = this.model.structure\n\n    const count = this.residueCount\n    const offset = this.residueOffset\n    const end = offset + count\n\n    const rp1 = this.structure.getResidueProxy()\n    const rp2 = this.structure.getResidueProxy(offset)\n\n    const ap1 = this.structure.getAtomProxy()\n    const ap2 = this.structure.getAtomProxy()\n\n    let first = true\n\n    for (let i = offset + 1; i < end; ++i) {\n      rp1.index = rp2.index\n      rp2.index = i\n\n      const bbType1 = first ? rp1.backboneEndType : rp1.backboneType\n      const bbType2 = rp2.backboneType\n\n      if (first) {\n        rStartIndex = rp1.index\n        first = false\n      }\n      rNextIndex = rp2.index\n\n      if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\n        ap1.index = rp1.backboneEndAtomIndex\n        ap2.index = rp2.backboneStartAtomIndex\n      } else {\n        if (bbType1 !== UnknownBackboneType) {\n          if (rp1.index - rStartIndex > 1) {\n            // console.log(\"FOO1\",rStartIndex, rp1.index)\n            callback(new Polymer(structure, rStartIndex, rp1.index))\n          }\n        }\n        rStartIndex = rNextIndex\n\n        continue\n      }\n\n      if (!ap1 || !ap2 || !ap1.connectedTo(ap2) ||\n        (test && (!test(rp1) || !test(rp2)))\n      ) {\n        if (rp1.index - rStartIndex > 1) {\n          // console.log(\"FOO2\",rStartIndex, rp1.index)\n          callback(new Polymer(structure, rStartIndex, rp1.index))\n        }\n        rStartIndex = rNextIndex\n      }\n    }\n\n    if (rNextIndex - rStartIndex > 1) {\n      if (this.structure.getResidueProxy(rStartIndex).backboneEndType) {\n        // console.log(\"FOO3\",rStartIndex, rNextIndex)\n        callback(new Polymer(structure, rStartIndex, rNextIndex))\n      }\n    }\n  }\n\n  //\n\n  qualifiedName () {\n    var name = ':' + this.chainname + '/' + this.modelIndex\n    return name\n  }\n\n  /**\n   * Clone object\n   * @return {ChainProxy} cloned chain\n   */\n  clone () {\n    return new ChainProxy(this.structure, this.index)\n  }\n\n  toObject () {\n    return {\n      index: this.index,\n      residueOffset: this.residueOffset,\n      residueCount: this.residueCount,\n\n      chainname: this.chainname\n    }\n  }\n}\n\nexport default ChainProxy\n","/**\n * @file Model Proxy\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport Selection from '../selection/selection'\n\nimport ModelStore from '../store/model-store'\nimport ChainStore from '../store/chain-store'\nimport ResidueStore from '../store/residue-store'\n\nimport ChainProxy from '../proxy/chain-proxy'\nimport Polymer from '../proxy/polymer'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Model proxy\n */\nclass ModelProxy {\n  index: number\n\n  modelStore: ModelStore\n  chainStore: ChainStore\n  residueStore: ResidueStore\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Integer} index - the index\n   */\n  constructor (readonly structure: Structure, index = 0) {\n    this.index = index\n    this.modelStore = structure.modelStore\n    this.chainStore = structure.chainStore\n    this.residueStore = structure.residueStore\n  }\n\n  get chainOffset () {\n    return this.modelStore.chainOffset[ this.index ]\n  }\n  set chainOffset (value) {\n    this.modelStore.chainOffset[ this.index ] = value\n  }\n\n  get chainCount () {\n    return this.modelStore.chainCount[ this.index ]\n  }\n  set chainCount (value) {\n    this.modelStore.chainCount[ this.index ] = value\n  }\n\n  get residueOffset () {\n    return this.chainStore.residueOffset[ this.chainOffset ]\n  }\n  get atomOffset () {\n    return this.residueStore.atomOffset[ this.residueOffset ]\n  }\n\n  get chainEnd () {\n    return this.chainOffset + this.chainCount - 1\n  }\n  get residueEnd () {\n    return (\n      this.chainStore.residueOffset[ this.chainEnd ] +\n      this.chainStore.residueCount[ this.chainEnd ] - 1\n    )\n  }\n  get atomEnd () {\n    return (\n      this.residueStore.atomOffset[ this.residueEnd ] +\n      this.residueStore.atomCount[ this.residueEnd ] - 1\n    )\n  }\n\n  /**\n   * Residue count\n   * @type {Integer}\n   */\n  get residueCount () {\n    if (this.chainCount === 0) {\n      return 0\n    } else {\n      return this.residueEnd - this.residueOffset + 1\n    }\n  }\n\n  /**\n   * Atom count\n   * @type {Integer}\n   */\n  get atomCount () {\n    if (this.residueCount === 0) {\n      return 0\n    } else {\n      return this.atomEnd - this.atomOffset + 1\n    }\n  }\n\n  //\n\n  /**\n   * Atom iterator\n   * @param  {function(atom: AtomProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\n    this.eachChain(function (cp) {\n      cp.eachAtom(callback, selection)\n    }, selection)\n  }\n\n  /**\n   * Residue iterator\n   * @param  {function(residue: ResidueProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachResidue (callback: (rp: ResidueProxy) => void, selection?: Selection) {\n    this.eachChain(function (cp) {\n      cp.eachResidue(callback, selection)\n    }, selection)\n  }\n\n  /**\n   * Polymer iterator\n   * @param  {function(polymer: Polymer)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachPolymer (callback: (p: Polymer) => void, selection?: Selection) {\n    if (selection && selection.chainOnlyTest) {\n      const chainOnlyTest = selection.chainOnlyTest\n\n      this.eachChain(function (cp) {\n        if (chainOnlyTest(cp)) {\n          cp.eachPolymer(callback, selection)\n        }\n      })\n    } else {\n      this.eachChain(function (cp) {\n        cp.eachPolymer(callback, selection)\n      })\n    }\n  }\n\n  /**\n   * Chain iterator\n   * @param  {function(chain: ChainProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachChain (callback: (cp: ChainProxy) => void, selection?: Selection) {\n    const count = this.chainCount\n    const offset = this.chainOffset\n    const cp = this.structure._cp\n    const end = offset + count\n\n    if (selection && selection.test) {\n      const chainOnlyTest = selection.chainOnlyTest\n      if (chainOnlyTest) {\n        for (let i = offset; i < end; ++i) {\n          cp.index = i\n          if (chainOnlyTest(cp)) {\n            callback(cp)\n          }\n        }\n      } else {\n        for (let i = offset; i < end; ++i) {\n          cp.index = i\n          callback(cp)\n        }\n      }\n    } else {\n      for (let i = offset; i < end; ++i) {\n        cp.index = i\n        callback(cp)\n      }\n    }\n  }\n\n  //\n\n  qualifiedName () {\n    const name = '/' + this.index\n    return name\n  }\n\n  /**\n   * Clone object\n   * @return {ModelProxy} cloned model\n   */\n  clone () {\n    return new ModelProxy(this.structure, this.index)\n  }\n\n  toObject () {\n    return {\n      index: this.index,\n      chainOffset: this.chainOffset,\n      chainCount: this.chainCount\n    }\n  }\n}\n\nexport default ModelProxy\n","/**\n * @file Structure\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Box3 } from 'three'\nimport { Signal } from 'signals'\n\nimport { Debug, Log, ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { AtomPicker, BondPicker } from '../utils/picker'\nimport { copyWithin, arrayMin, arrayMax } from '../math/array-utils'\nimport BitArray from '../utils/bitarray'\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\nimport { Matrix } from '../math/matrix-utils'\nimport PrincipalAxes from '../math/principal-axes'\nimport SpatialHash from '../geometry/spatial-hash'\nimport FilteredVolume from '../surface/filtered-volume'\nimport StructureView from './structure-view'\nimport { AtomDataParams, AtomData, BondDataParams, BondData } from './structure-data'\nimport { Data, createData } from './data'\n\nimport Entity from './entity'\nimport Unitcell from '../symmetry/unitcell'\nimport Validation from './validation'\nimport Selection from '../selection/selection'\nimport Assembly from '../symmetry/assembly'\nimport Volume from '../surface/volume'\nimport Polymer from '../proxy/polymer'\n\nimport BondHash from '../store/bond-hash'\nimport BondStore from '../store/bond-store'\nimport AtomStore from '../store/atom-store'\nimport ResidueStore from '../store/residue-store'\nimport ChainStore from '../store/chain-store'\nimport ModelStore from '../store/model-store'\n\nimport AtomMap from '../store/atom-map'\nimport ResidueMap from '../store/residue-map'\n\nimport BondProxy from '../proxy/bond-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\ninterface Structure {\n  signals: StructureSignals\n\n  name: string\n  path: string\n  title: string\n  id: string\n\n  data: Data\n\n  atomCount: number\n  bondCount: number\n\n  header: StructureHeader\n  extraData: StructureExtraData\n\n  atomSetCache: { [k: string]: BitArray }\n  atomSetDict: { [k: string]: BitArray }\n  biomolDict: { [k: string]: Assembly }\n\n  entityList: Entity[]\n  unitcell?: Unitcell\n\n  frames: Float32Array[]\n  boxes: Float32Array[]\n\n  validation?: Validation\n\n  bondStore: BondStore\n  backboneBondStore: BondStore\n  rungBondStore: BondStore\n  atomStore: AtomStore\n  residueStore: ResidueStore\n  chainStore: ChainStore\n  modelStore: ModelStore\n\n  atomMap: AtomMap\n  residueMap: ResidueMap\n\n  bondHash?: BondHash\n  spatialHash?: SpatialHash\n\n  atomSet?: BitArray\n  bondSet?: BitArray\n\n  center: Vector3\n  boundingBox: Box3\n\n  trajectory?: {\n    name: string\n    frame: number\n  }\n\n  getView(selection: Selection): StructureView\n\n  _hasCoords?: boolean\n\n  _bp: BondProxy\n  _ap: AtomProxy\n  _rp: ResidueProxy\n  _cp: ChainProxy\n}\n\nexport type StructureHeader = {\n  releaseDate?: string\n  depositionDate?: string\n  resolution?: number\n  rFree?: number\n  rWork?: number\n  experimentalMethods?: string[]\n}\n\nexport type StructureExtraData = {\n  cif?: object\n  sdf?: object[]\n}\n\nexport type StructureSignals = {\n  refreshed: Signal\n}\n\n/**\n * Structure\n */\nclass Structure implements Structure{\n  signals: StructureSignals = {\n    refreshed: new Signal()\n  }\n\n  /**\n   * @param {String} name - structure name\n   * @param {String} path - source path\n   */\n  constructor (name = '', path = '') {\n    this.init(name, path)\n  }\n\n  init (name: string, path: string) {\n    this.name = name\n    this.path = path\n    this.title = ''\n    this.id = ''\n\n    this.data = createData(this)\n\n    this.header = {}\n    this.extraData = {}\n\n    this.atomSetCache = {}\n    this.atomSetDict = {}\n    this.biomolDict = {}\n\n    this.entityList = []\n    this.unitcell = undefined\n\n    this.frames = []\n    this.boxes = []\n\n    this.validation = undefined\n\n    this.bondStore = new BondStore(0)\n    this.backboneBondStore = new BondStore(0)\n    this.rungBondStore = new BondStore(0)\n    this.atomStore = new AtomStore(0)\n    this.residueStore = new ResidueStore(0)\n    this.chainStore = new ChainStore(0)\n    this.modelStore = new ModelStore(0)\n\n    this.atomMap = new AtomMap(this)\n    this.residueMap = new ResidueMap(this)\n\n    this.bondHash = undefined\n    this.spatialHash = undefined\n\n    this.atomSet = undefined\n    this.bondSet = undefined\n\n    this.center = new Vector3()\n    this.boundingBox = new Box3()\n\n    this._bp = this.getBondProxy()\n    this._ap = this.getAtomProxy()\n    this._rp = this.getResidueProxy()\n    this._cp = this.getChainProxy()\n  }\n\n  get type () { return 'Structure' }\n\n  finalizeAtoms () {\n    this.atomSet = this.getAtomSet()\n    this.atomCount = this.atomStore.count\n    this.boundingBox = this.getBoundingBox(undefined, this.boundingBox)\n    this.center = this.boundingBox.getCenter(new Vector3())\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\n  }\n\n  finalizeBonds () {\n    this.bondSet = this.getBondSet()\n    this.bondCount = this.bondStore.count\n    this.bondHash = new BondHash(this.bondStore, this.atomStore.count)\n\n    this.atomSetCache = {}\n    if (!this.atomSetDict.rung) {\n      this.atomSetDict.rung = this.getAtomSet(false)\n    }\n\n    for (let name in this.atomSetDict) {\n      this.atomSetCache[ '__' + name ] = this.atomSetDict[ name ].clone()\n    }\n  }\n\n  //\n\n  getBondProxy (index?: number) {\n    return new BondProxy(this, index)\n  }\n\n  getAtomProxy (index?: number) {\n    return new AtomProxy(this, index)\n  }\n\n  getResidueProxy (index?: number) {\n    return new ResidueProxy(this, index)\n  }\n\n  getChainProxy (index?: number) {\n    return new ChainProxy(this, index)\n  }\n\n  getModelProxy (index?: number) {\n    return new ModelProxy(this, index)\n  }\n\n  //\n\n  getBondSet (/* selection */) {\n    // TODO implement selection parameter\n\n    const n = this.bondStore.count\n    const bondSet = new BitArray(n)\n    const atomSet = this.atomSet\n\n    if (atomSet) {\n      if (atomSet.isAllSet()) {\n        bondSet.setAll()\n      } else if (atomSet.isAllClear()) {\n        bondSet.clearAll()\n      } else {\n        const bp = this.getBondProxy()\n\n        for (let i = 0; i < n; ++i) {\n          bp.index = i\n          if (atomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\n            bondSet.set(bp.index)\n          }\n        }\n      }\n    } else {\n      bondSet.setAll()\n    }\n\n    return bondSet\n  }\n\n  getBackboneBondSet (/* selection */) {\n    // TODO implement selection parameter\n\n    const n = this.backboneBondStore.count\n    const backboneBondSet = new BitArray(n)\n    const backboneAtomSet = this.atomSetCache.__backbone\n\n    if (backboneAtomSet) {\n      const bp = this.getBondProxy()\n      bp.bondStore = this.backboneBondStore\n\n      for (let i = 0; i < n; ++i) {\n        bp.index = i\n        if (backboneAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\n          backboneBondSet.set(bp.index)\n        }\n      }\n    } else {\n      backboneBondSet.setAll()\n    }\n\n    return backboneBondSet\n  }\n\n  getRungBondSet (/* selection */) {\n    // TODO implement selection parameter\n\n    const n = this.rungBondStore.count\n    const rungBondSet = new BitArray(n)\n    const rungAtomSet = this.atomSetCache.__rung\n\n    if (rungAtomSet) {\n      const bp = this.getBondProxy()\n      bp.bondStore = this.rungBondStore\n\n      for (let i = 0; i < n; ++i) {\n        bp.index = i\n        if (rungAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\n          rungBondSet.set(bp.index)\n        }\n      }\n    } else {\n      rungBondSet.setAll()\n    }\n\n    return rungBondSet\n  }\n\n  /**\n   * Get a set of atoms\n   * @param  {Boolean|Selection|BitArray} selection - object defining how to\n   *                                      initialize the atom set.\n   *                                      Boolean: init with value;\n   *                                      Selection: init with selection;\n   *                                      BitArray: return bit array\n   * @return {BitArray} set of atoms\n   */\n  getAtomSet (selection?: boolean|Selection|BitArray) {\n    const n = this.atomStore.count\n\n    if (selection === undefined) {\n      return new BitArray(n, true)\n    } else if (selection instanceof BitArray) {\n      return selection\n    } else if (selection === true) {\n      return new BitArray(n, true)\n    } else if (selection && selection.test) {\n      const seleString = selection.string\n      if (seleString in this.atomSetCache) {\n        return this.atomSetCache[ seleString ]\n      } else {\n        if (seleString === '') {\n          return new BitArray(n, true)\n        } else {\n          const atomSet = new BitArray(n)\n          this.eachAtom(function (ap: AtomProxy) {\n            atomSet.set(ap.index)\n          }, selection)\n          this.atomSetCache[ seleString ] = atomSet\n          return atomSet\n        }\n      }\n    } else if (selection === false) {\n      return new BitArray(n)\n    }\n\n    return new BitArray(n, true)\n  }\n\n  /**\n   * Get set of atoms around a set of atoms from a selection\n   * @param  {Selection} selection - the selection object\n   * @param  {Number} radius - radius to select within\n   * @return {BitArray} set of atoms\n   */\n  getAtomSetWithinSelection (selection: boolean|Selection|BitArray, radius: number) {\n    const spatialHash = this.spatialHash\n    const atomSet = this.getAtomSet(false)\n    const ap = this.getAtomProxy()\n\n    if (!spatialHash) return atomSet\n\n    this.getAtomSet(selection).forEach(function (idx: number) {\n      ap.index = idx\n      spatialHash.within(ap.x, ap.y, ap.z, radius).forEach(function (idx2: number) {\n        atomSet.set(idx2)\n      })\n    })\n\n    return atomSet\n  }\n\n  /**\n   * Get set of atoms around a point\n   * @param  {Vector3|AtomProxy} point - the point\n   * @param  {Number} radius - radius to select within\n   * @return {BitArray} set of atoms\n   */\n  getAtomSetWithinPoint (point: Vector3|AtomProxy, radius: number) {\n    const p = point\n    const atomSet = this.getAtomSet(false)\n\n    if (!this.spatialHash) return atomSet\n\n    this.spatialHash.within(p.x, p.y, p.z, radius).forEach(function (idx: number) {\n      atomSet.set(idx)\n    })\n\n    return atomSet\n  }\n\n  /**\n   * Get set of atoms within a volume\n   * @param  {Volume} volume - the volume\n   * @param  {Number} radius - radius to select within\n   * @param  {[type]} minValue - minimum value to be considered as within the volume\n   * @param  {[type]} maxValue - maximum value to be considered as within the volume\n   * @param  {[type]} outside - use only values falling outside of the min/max values\n   * @return {BitArray} set of atoms\n   */\n  getAtomSetWithinVolume (volume: Volume, radius: number, minValue: number, maxValue: number, outside: boolean) {\n    const fv = new FilteredVolume(volume, minValue, maxValue, outside) as any  // TODO\n\n    const dp = fv.getDataPosition()\n    const n = dp.length\n    const r = fv.matrix.getMaxScaleOnAxis()\n    const atomSet = this.getAtomSet(false)\n\n    if (!this.spatialHash) return atomSet\n\n    for (let i = 0; i < n; i += 3) {\n      this.spatialHash.within(dp[ i ], dp[ i + 1 ], dp[ i + 2 ], r).forEach(function (idx) {\n        atomSet.set(idx)\n      })\n    }\n\n    return atomSet\n  }\n\n  /**\n   * Get set of all atoms within the groups of a selection\n   * @param  {Selection} selection - the selection object\n   * @return {BitArray} set of atoms\n   */\n  getAtomSetWithinGroup (selection: boolean|Selection) {\n    const atomResidueIndex = this.atomStore.residueIndex\n    const atomSet = this.getAtomSet(false)\n    const rp = this.getResidueProxy()\n\n    this.getAtomSet(selection).forEach(function (idx) {\n      rp.index = atomResidueIndex[ idx ]\n      for (let idx2 = rp.atomOffset; idx2 <= rp.atomEnd; ++idx2) {\n        atomSet.set(idx2)\n      }\n    })\n\n    return atomSet\n  }\n\n  //\n\n  getSelection (): undefined|Selection {\n    return\n  }\n\n  getStructure (): Structure|StructureView {\n    return this\n  }\n\n  /**\n   * Entity iterator\n   * @param  {function(entity: Entity)} callback - the callback\n   * @param  {EntityType} type - entity type\n   * @return {undefined}\n   */\n  eachEntity (callback: (entity: Entity) => void, type: number) {\n    this.entityList.forEach(function (entity) {\n      if (type === undefined || entity.getEntityType() === type) {\n        callback(entity)\n      }\n    })\n  }\n\n  /**\n   * Bond iterator\n   * @param  {function(bond: BondProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachBond (callback: (entity: BondProxy) => void, selection?: Selection) {\n    const bp = this.getBondProxy()\n    let bondSet\n\n    if (selection && selection.test) {\n      bondSet = this.getBondSet(/*selection*/)\n      if (this.bondSet) {\n        bondSet.intersection(this.bondSet)\n      }\n    }\n\n    if (bondSet) {\n      bondSet.forEach(function (index) {\n        bp.index = index\n        callback(bp)\n      })\n    } else {\n      const n = this.bondStore.count\n      for (let i = 0; i < n; ++i) {\n        bp.index = i\n        callback(bp)\n      }\n    }\n  }\n\n  /**\n   * Atom iterator\n   * @param  {function(atom: AtomProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachAtom (callback: (entity: AtomProxy) => void, selection?: Selection) {\n    if (selection && selection.test) {\n      this.eachModel(function (mp) {\n        mp.eachAtom(callback, selection)\n      }, selection)\n    } else {\n      const an = this.atomStore.count\n      const ap = this.getAtomProxy()\n      for (let i = 0; i < an; ++i) {\n        ap.index = i\n        callback(ap)\n      }\n    }\n  }\n\n  /**\n   * Residue iterator\n   * @param  {function(residue: ResidueProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachResidue (callback: (entity: ResidueProxy) => void, selection?: Selection) {\n    if (selection && selection.test) {\n      const mn = this.modelStore.count\n      const mp = this.getModelProxy()\n      const modelOnlyTest = selection.modelOnlyTest\n      if (modelOnlyTest) {\n        for (let i = 0; i < mn; ++i) {\n          mp.index = i\n          if (modelOnlyTest(mp)) {\n            mp.eachResidue(callback, selection)\n          }\n        }\n      } else {\n        for (let i = 0; i < mn; ++i) {\n          mp.index = i\n          mp.eachResidue(callback, selection)\n        }\n      }\n    } else {\n      const rn = this.residueStore.count\n      const rp = this.getResidueProxy()\n      for (let i = 0; i < rn; ++i) {\n        rp.index = i\n        callback(rp)\n      }\n    }\n  }\n\n  /**\n   * Multi-residue iterator\n   * @param {Integer} n - window size\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\n   * @return {undefined}\n   */\n  eachResidueN (n: number, callback: (...entityArray: ResidueProxy[]) => void) {\n    const rn = this.residueStore.count\n    if (rn < n) return\n    const array: ResidueProxy[] = new Array(n)\n\n    for (let i = 0; i < n; ++i) {\n      array[ i ] = this.getResidueProxy(i)\n    }\n    callback.apply(this, array)\n\n    for (let j = n; j < rn; ++j) {\n      for (let i = 0; i < n; ++i) {\n        array[ i ].index += 1\n      }\n      callback.apply(this, array)\n    }\n  }\n\n  /**\n   * Polymer iterator\n   * @param  {function(polymer: Polymer)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachPolymer (callback: (entity: Polymer) => void, selection?: Selection) {\n    if (selection && selection.modelOnlyTest) {\n      const modelOnlyTest = selection.modelOnlyTest\n\n      this.eachModel(function (mp) {\n        if (modelOnlyTest(mp)) {\n          mp.eachPolymer(callback, selection)\n        }\n      })\n    } else {\n      this.eachModel(function (mp) {\n        mp.eachPolymer(callback, selection)\n      })\n    }\n  }\n\n  /**\n   * Chain iterator\n   * @param  {function(chain: ChainProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachChain (callback: (entity: ChainProxy) => void, selection?: Selection) {\n    if (selection && selection.test) {\n      this.eachModel(function (mp) {\n        mp.eachChain(callback, selection)\n      })\n    } else {\n      const cn = this.chainStore.count\n      const cp = this.getChainProxy()\n      for (let i = 0; i < cn; ++i) {\n        cp.index = i\n        callback(cp)\n      }\n    }\n  }\n\n  /**\n   * Model iterator\n   * @param  {function(model: ModelProxy)} callback - the callback\n   * @param  {Selection} [selection] - the selection\n   * @return {undefined}\n   */\n  eachModel (callback: (entity: ModelProxy) => void, selection?: Selection) {\n    const n = this.modelStore.count\n    const mp = this.getModelProxy()\n\n    if (selection && selection.test) {\n      const modelOnlyTest = selection.modelOnlyTest\n      if (modelOnlyTest) {\n        for (let i = 0; i < n; ++i) {\n          mp.index = i\n          if (modelOnlyTest(mp)) {\n            callback(mp)\n          }\n        }\n      } else {\n        for (let i = 0; i < n; ++i) {\n          mp.index = i\n          callback(mp)\n        }\n      }\n    } else {\n      for (let i = 0; i < n; ++i) {\n        mp.index = i\n        callback(mp)\n      }\n    }\n  }\n\n  //\n\n  getAtomData (params: AtomDataParams) {\n    const p = Object.assign({}, params)\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\n\n    const what = p.what\n    const atomSet = defaults(p.atomSet, this.atomSet)\n\n    let radiusFactory: any  // TODO\n    let colormaker: any  // TODO\n\n    const atomData: AtomData = {}\n    const ap = this.getAtomProxy()\n    const atomCount = atomSet.getSize()\n\n    if (!what || what.position) {\n      atomData.position = new Float32Array(atomCount * 3)\n    }\n    if ((!what || what.color) && p.colorParams) {\n      atomData.color = new Float32Array(atomCount * 3)\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\n    }\n    if (!what || what.picking) {\n      atomData.picking = new AtomPicker(new Float32Array(atomCount), this.getStructure())\n    }\n    if (!what || what.radius) {\n      atomData.radius = new Float32Array(atomCount)\n      radiusFactory = new RadiusFactory(p.radiusParams as RadiusParams)\n    }\n    if (!what || what.index) {\n      atomData.index = new Uint32Array(atomCount)\n    }\n\n    const {position, color, picking, radius, index} = atomData\n\n    atomSet.forEach((idx: number, i: number) => {\n      const i3 = i * 3\n      ap.index = idx\n      if (position) {\n        ap.positionToArray(position, i3)\n      }\n      if (color) {\n        colormaker.atomColorToArray(ap, color, i3)\n      }\n      if (picking) {\n        picking.array![ i ] = idx\n      }\n      if (radius) {\n        radius[ i ] = radiusFactory.atomRadius(ap)\n      }\n      if (index) {\n        index[ i ] = idx\n      }\n    })\n    return atomData\n  }\n\n  getBondData (params: BondDataParams) {\n    const p = Object.assign({}, params)\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\n\n    const what = p.what\n    const bondSet = defaults(p.bondSet, this.bondSet)\n    const multipleBond = defaults(p.multipleBond, 'off')\n    const isMulti = multipleBond !== 'off'\n    const isOffset = multipleBond === 'offset'\n    const bondScale = defaults(p.bondScale, 0.4)\n    const bondSpacing = defaults(p.bondSpacing, 1.0)\n\n    let radiusFactory: any  // TODO\n    let colormaker: any  // TODO\n\n    const bondData: BondData = {}\n    const bp = this.getBondProxy()\n    if (p.bondStore) bp.bondStore = p.bondStore\n    const ap1 = this.getAtomProxy()\n    const ap2 = this.getAtomProxy()\n\n    let bondCount: number\n    if (isMulti) {\n      const storeBondOrder = bp.bondStore.bondOrder\n      bondCount = 0\n      bondSet.forEach(function (index: number) {\n        bondCount += storeBondOrder[ index ]\n      })\n    } else {\n      bondCount = bondSet.getSize()\n    }\n\n    if (!what || what.position) {\n      bondData.position1 = new Float32Array(bondCount * 3)\n      bondData.position2 = new Float32Array(bondCount * 3)\n    }\n    if ((!what || what.color) && p.colorParams) {\n      bondData.color = new Float32Array(bondCount * 3)\n      bondData.color2 = new Float32Array(bondCount * 3)\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\n    }\n    if (!what || what.picking) {\n      bondData.picking = new BondPicker(new Float32Array(bondCount), this.getStructure(), p.bondStore!) as any\n    }\n    if (!what || what.radius || (isMulti && what.position)) {\n      radiusFactory = new RadiusFactory(p.radiusParams as RadiusParams)\n    }\n    if (!what || what.radius) {\n      bondData.radius = new Float32Array(bondCount)\n      if (p.radius2) {\n        bondData.radius2 = new Float32Array(bondCount)\n      }\n    }\n\n    const {position1, position2, color, color2, picking, radius, radius2} = bondData\n\n    let i = 0\n    let j, i3, k, bondOrder, absOffset\n    let multiRadius\n\n    const vt = new Vector3()\n    const vShortening = new Vector3()\n    const vShift = new Vector3()\n\n    bondSet.forEach((index: number) => {\n      i3 = i * 3\n      bp.index = index\n      ap1.index = bp.atomIndex1\n      ap2.index = bp.atomIndex2\n      bondOrder = bp.bondOrder\n      if (position1) {\n        if (isMulti && bondOrder > 1) {\n          const atomRadius = radiusFactory.atomRadius(ap1)\n          multiRadius = atomRadius * bondScale / (0.5 * bondOrder)\n\n          bp.calculateShiftDir(vShift)\n\n          if (isOffset) {\n            absOffset = 2 * bondSpacing * atomRadius\n            vShift.multiplyScalar(absOffset)\n            vShift.negate()\n\n            // Shortening is calculated so that neighbouring double\n            // bonds on tetrahedral geometry (e.g. sulphonamide)\n            // are not quite touching (arccos(1.9 / 2) ~ 109deg)\n            // but don't shorten beyond 10% each end or it looks odd\n            vShortening.subVectors(ap2 as any, ap1 as any).multiplyScalar(  // TODO\n              Math.max(0.1, absOffset / 1.88)\n            )\n            ap1.positionToArray(position1, i3)\n            ap2.positionToArray(position2, i3)\n\n            if (bondOrder >= 2) {\n              vt.addVectors(ap1 as any, vShift).add(vShortening).toArray(position1 as any, i3 + 3)  // TODO\n              vt.addVectors(ap2 as any, vShift).sub(vShortening).toArray(position2 as any, i3 + 3)  // TODO\n\n              if (bondOrder >= 3) {\n                vt.subVectors(ap1 as any, vShift).add(vShortening).toArray(position1 as any, i3 + 6)  // TODO\n                vt.subVectors(ap2 as any, vShift).sub(vShortening).toArray(position2 as any, i3 + 6)  // TODO\n              }\n            }\n          } else {\n            absOffset = (bondSpacing - bondScale) * atomRadius\n            vShift.multiplyScalar(absOffset)\n\n            if (bondOrder === 2) {\n              vt.addVectors(ap1 as any, vShift).toArray(position1 as any, i3)  // TODO\n              vt.subVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 3)  // TODO\n              vt.addVectors(ap2 as any, vShift).toArray(position2 as any, i3)  // TODO\n              vt.subVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 3)  // TODO\n            } else if (bondOrder === 3) {\n              ap1.positionToArray(position1, i3)\n              vt.addVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 3)  // TODO\n              vt.subVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 6)  // TODO\n              ap2.positionToArray(position2, i3)\n              vt.addVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 3)  // TODO\n              vt.subVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 6)  // TODO\n            } else {\n              // todo, better fallback\n              ap1.positionToArray(position1, i3)\n              ap2.positionToArray(position2, i3)\n            }\n          }\n        } else {\n          ap1.positionToArray(position1, i3)\n          ap2.positionToArray(position2, i3)\n        }\n      }\n      if (color && color2) {\n        colormaker.bondColorToArray(bp, 1, color, i3)\n        colormaker.bondColorToArray(bp, 0, color2, i3)\n        if (isMulti && bondOrder > 1) {\n          for (j = 1; j < bondOrder; ++j) {\n            k = j * 3 + i3\n            copyWithin(color, i3, k, 3)\n            copyWithin(color2, i3, k, 3)\n          }\n        }\n      }\n      if (picking && picking.array) {\n        picking.array[ i ] = index\n        if (isMulti && bondOrder > 1) {\n          for (j = 1; j < bondOrder; ++j) {\n            picking.array[ i + j ] = index\n          }\n        }\n      }\n      if (radius) {\n        radius[ i ] = radiusFactory.atomRadius(ap1)\n        if (isMulti && bondOrder > 1) {\n          multiRadius = radius[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\n            radius[ i + j ] = multiRadius\n          }\n        }\n      }\n      if (radius2) {\n        radius2[ i ] = radiusFactory.atomRadius(ap2)\n        if (isMulti && bondOrder > 1) {\n          multiRadius = radius2[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\n            radius2[ i + j ] = multiRadius\n          }\n        }\n      }\n      i += isMulti ? bondOrder : 1\n    })\n\n    return bondData\n  }\n\n  getBackboneAtomData (params: AtomDataParams) {\n    params = Object.assign({\n      atomSet: this.atomSetCache.__backbone\n    }, params)\n\n    return this.getAtomData(params)\n  }\n\n  getBackboneBondData (params: BondDataParams) {\n    params = Object.assign({\n      bondSet: this.getBackboneBondSet(),\n      bondStore: this.backboneBondStore\n    }, params)\n\n    return this.getBondData(params)\n  }\n\n  getRungAtomData (params: AtomDataParams) {\n    params = Object.assign({\n      atomSet: this.atomSetCache.__rung\n    }, params)\n\n    return this.getAtomData(params)\n  }\n\n  getRungBondData (params: BondDataParams) {\n    params = Object.assign({\n      bondSet: this.getRungBondSet(),\n      bondStore: this.rungBondStore\n    }, params)\n\n    return this.getBondData(params)\n  }\n\n  //\n\n  /**\n   * Gets the bounding box of the (selected) structure atoms\n   * @param  {Selection} [selection] - the selection\n   * @param  {Box3} [box] - optional target\n   * @return {Vector3} the box\n   */\n  getBoundingBox (selection?: Selection, box?: Box3) {\n    if (Debug) Log.time('getBoundingBox')\n\n    box = box || new Box3()\n\n    let minX = +Infinity\n    let minY = +Infinity\n    let minZ = +Infinity\n\n    let maxX = -Infinity\n    let maxY = -Infinity\n    let maxZ = -Infinity\n\n    this.eachAtom(ap => {\n      const x = ap.x\n      const y = ap.y\n      const z = ap.z\n\n      if (x < minX) minX = x\n      if (y < minY) minY = y\n      if (z < minZ) minZ = z\n\n      if (x > maxX) maxX = x\n      if (y > maxY) maxY = y\n      if (z > maxZ) maxZ = z\n    }, selection)\n\n    box.min.set(minX, minY, minZ)\n    box.max.set(maxX, maxY, maxZ)\n\n    if (Debug) Log.timeEnd('getBoundingBox')\n\n    return box\n  }\n\n  /**\n   * Gets the principal axes of the (selected) structure atoms\n   * @param  {Selection} [selection] - the selection\n   * @return {PrincipalAxes} the principal axes\n   */\n  getPrincipalAxes (selection?: Selection) {\n    if (Debug) Log.time('getPrincipalAxes')\n\n    let i = 0\n    const coords = new Matrix(3, this.atomCount)\n    const cd = coords.data\n\n    this.eachAtom(a => {\n      cd[ i + 0 ] = a.x\n      cd[ i + 1 ] = a.y\n      cd[ i + 2 ] = a.z\n      i += 3\n    }, selection)\n\n    if (Debug) Log.timeEnd('getPrincipalAxes')\n\n    return new PrincipalAxes(coords)\n  }\n\n  /**\n   * Gets the center of the (selected) structure atoms\n   * @param  {Selection} [selection] - the selection\n   * @return {Vector3} the center\n   */\n  atomCenter (selection?: Selection) {\n    if (selection) {\n      return this.getBoundingBox(selection).getCenter(new Vector3())\n    } else {\n      return this.center.clone()\n    }\n  }\n\n  hasCoords () {\n    if (this._hasCoords === undefined) {\n      const atomStore = this.atomStore\n      this._hasCoords = (\n        arrayMin(atomStore.x) !== 0 || arrayMax(atomStore.x) !== 0 ||\n        arrayMin(atomStore.y) !== 0 || arrayMax(atomStore.y) !== 0 ||\n        arrayMin(atomStore.z) !== 0 || arrayMax(atomStore.z) !== 0\n      ) || (\n        // allow models with a single atom at the origin\n        atomStore.count / this.modelStore.count === 1\n      )\n    }\n    return this._hasCoords;\n  }\n\n  getSequence (selection?: Selection) {\n    const seq: string[] = []\n    const rp = this.getResidueProxy()\n\n    this.eachAtom(function (ap: AtomProxy) {\n      rp.index = ap.residueIndex\n      if (ap.index === rp.traceAtomIndex) {\n        seq.push(rp.getResname1())\n      }\n    }, selection)\n\n    return seq\n  }\n\n  getAtomIndices (selection?: Selection) {\n    if (selection && selection.string) {\n      const indices: number[] = []\n      this.eachAtom(function (ap: AtomProxy) {\n        indices.push(ap.index)\n      }, selection)\n      return new Uint32Array(indices)\n    } else {\n      const p = { what: { index: true } }\n      return this.getAtomData(p).index\n    }\n  }\n\n  /**\n   * Get number of unique chainnames\n   * @param  {Selection} selection - limit count to selection\n   * @return {Integer} count\n   */\n  getChainnameCount (selection?: Selection) {\n    const chainnames = new Set()\n    this.eachChain(function (cp: ChainProxy) {\n      if (cp.residueCount) {\n        chainnames.add(cp.chainname)\n      }\n    }, selection)\n\n    return chainnames.size\n  }\n\n  //\n\n  updatePosition (position: Float32Array|number[]) {\n    let i = 0\n\n    this.eachAtom(function (ap: AtomProxy) {\n      ap.positionFromArray(position, i)\n      i += 3\n    }, undefined)\n\n    this._hasCoords = undefined  // to trigger recalculation\n  }\n\n  refreshPosition () {\n    this.getBoundingBox(undefined, this.boundingBox)\n    this.boundingBox.getCenter(this.center)\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\n  }\n\n  /**\n   * Calls dispose() method of property objects.\n   * Unsets properties to help garbage collection.\n   * @return {undefined}\n   */\n  dispose () {\n    if (this.frames) this.frames.length = 0\n    if (this.boxes) this.boxes.length = 0\n\n    this.bondStore.dispose()\n    this.backboneBondStore.dispose()\n    this.rungBondStore.dispose()\n    this.atomStore.dispose()\n    this.residueStore.dispose()\n    this.chainStore.dispose()\n    this.modelStore.dispose()\n\n    delete this.bondStore\n    delete this.atomStore\n    delete this.residueStore\n    delete this.chainStore\n    delete this.modelStore\n\n    delete this.frames\n    delete this.boxes\n\n    delete this.bondSet\n    delete this.atomSet\n  }\n}\n\nexport default Structure\n","/**\n * @file Shape\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Matrix4 required for declaration only\nimport { Box3, Vector3, Color, Matrix4 } from 'three'\n\nimport { createParams, ensureFloat32Array, getUintArray } from '../utils'\nimport {\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive, EllipsoidPrimitive,\n  OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive, TextPrimitive,\n  TorusPrimitive, PointPrimitive, WidelinePrimitive\n} from './primitive'\nimport { MeshPicker } from '../utils/picker'\nimport Buffer from '../buffer/buffer'\nimport MeshBuffer from '../buffer/mesh-buffer'\nimport { TextBufferParameters } from '../buffer/text-buffer'\n\nconst tmpBox = new Box3()\n\nconst Primitives = [\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive,\n  TextPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive\n]\n\nexport const ShapeDefaultParameters = {\n  aspectRatio: 1.5,\n  sphereDetail: 2,\n  radialSegments: 50,\n  disableImpostor: false,\n  openEnded: false,\n  dashedCylinder: false,\n  labelParams: {} as Partial<TextBufferParameters>,\n  pointSize: 2,\n  sizeAttenuation: false,\n  useTexture: true,\n  linewidth: 2\n}\nexport type ShapeParameters = typeof ShapeDefaultParameters\n\n/**\n * Class for building custom shapes.\n *\n * @example\n * var shape = new NGL.Shape('shape', { disableImpostor: true });\n * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\n * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\n * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\n * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\n * shape.addArrow([ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0);\n * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\n * var shapeComp = stage.addComponentFromObject(shape);\n * geoComp.addRepresentation('buffer');\n */\nclass Shape {\n  name: string\n  parameters: ShapeParameters\n\n  boundingBox = new Box3()\n  bufferList: Buffer[] = []\n  meshCount = 0\n\n  _center?: Vector3\n  _primitiveData: { [k: string]: any } = {}\n\n  /**\n   * @param {String} name - name\n   * @param {Object} params - parameter object\n   * @param {Integer} params.aspectRatio - arrow aspect ratio, used for cylinder radius and cone length\n   * @param {Integer} params.sphereDetail - sphere quality (icosahedron subdivisions)\n   * @param {Integer} params.radialSegments - cylinder quality (number of segments)\n   * @param {Boolean} params.disableImpostor - disable use of raycasted impostors for rendering\n   * @param {Boolean} params.openEnded - capped or not\n   * @param {TextBufferParameters} params.labelParams - label parameters\n   */\n  constructor (name = 'shape', params: Partial<ShapeParameters> = {}) {\n    this.name = name\n\n    this.parameters = createParams(params, ShapeDefaultParameters)\n\n    Primitives.forEach(P => {\n      Object.keys(P.fields).forEach(name => {\n        this._primitiveData[ P.getShapeKey(name) ] = []\n      })\n      this._primitiveData[ P.getShapeKey('name') ] = []\n    })\n  }\n\n  /**\n   * Add a buffer\n   * @param {Buffer} buffer - buffer object\n   * @return {Shape} this object\n   */\n  addBuffer (buffer: Buffer) {\n    this.bufferList.push(buffer)\n\n    const geometry = (buffer as any).geometry  // TODO\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox()\n    }\n    this.boundingBox.union(geometry.boundingBox)\n\n    return this\n  }\n\n  /**\n   * Add a mesh\n   * @example\n   * shape.addMesh(\n   *   [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\n   *   [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\n   * );\n   *\n   * @param {Float32Array|Array} position - positions\n   * @param {Float32Array|Array} color - colors\n   * @param {Uint32Array|Uint16Array|Array} [index] - indices\n   * @param {Float32Array|Array} [normal] - normals\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addMesh (position: Float32Array|number[], color:Float32Array|number[], index: Uint32Array|Uint16Array|number[], normal?: Float32Array|number[], name?: string) {\n    position = ensureFloat32Array(position)\n    color = ensureFloat32Array(color)\n\n    if (Array.isArray(index)) {\n      index = getUintArray(index, position.length)\n    }\n    if (normal) {\n      normal = ensureFloat32Array(normal)\n    }\n\n    let data\n    if (normal === undefined || normal.length == 0 ) {\n      data = { position, color, index }\n    } else {\n      data = { position, color, index, normal }\n    }\n    //const data = { position, color, index, normal }\n    const picking = new MeshPicker(\n      this, Object.assign({ serial: this.meshCount, name }, data)\n    )\n    const meshBuffer = new MeshBuffer(\n      Object.assign({ picking }, data) as any\n    )\n    this.bufferList.push(meshBuffer)\n\n    tmpBox.setFromArray(position)\n    this.boundingBox.union(tmpBox)\n    this.meshCount += 1\n\n    return this\n  }\n\n  /**\n   * Add a sphere\n   * @example\n   * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addSphere (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\n    SpherePrimitive.objectToShape(\n      this, { position, color, radius, name }\n    )\n    return this\n  }\n\n  /**\n   * Add an ellipsoid\n   * @example\n   * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {Vector3|Array} majorAxis - major axis vector or array\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addEllipsoid (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, majorAxis: Vector3|[number, number, number], minorAxis: Vector3|[number, number, number], name: string) {\n    EllipsoidPrimitive.objectToShape(\n      this, { position, color, radius, majorAxis, minorAxis, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a torus\n   * @example\n   * shape.addTorus([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {Vector3|Array} majorAxis - major axis vector or array\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addTorus (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, majorAxis: Vector3|[number, number, number], minorAxis: Vector3|[number, number, number], name: string) {\n    TorusPrimitive.objectToShape(\n      this, { position, color, radius, majorAxis, minorAxis, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a cylinder\n   * @example\n   * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\n   *\n   * @param {Vector3|Array} position1 - from position vector or array\n   * @param {Vector3|Array} position2 - to position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addCylinder (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\n    CylinderPrimitive.objectToShape(\n      this, { position1, position2, color, radius, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a cone\n   * @example\n   * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\n   *\n   * @param {Vector3|Array} position1 - from position vector or array\n   * @param {Vector3|Array} position2 - to position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addCone (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\n    ConePrimitive.objectToShape(\n      this, { position1, position2, color, radius, name }\n    )\n    return this\n  }\n\n  /**\n   * Add an arrow\n   * @example\n   * shape.addArrow([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\n   *\n   * @param {Vector3|Array} position1 - from position vector or array\n   * @param {Vector3|Array} position2 - to position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} radius - radius value\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addArrow (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\n    ArrowPrimitive.objectToShape(\n      this, { position1, position2, color, radius, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a box\n   * @example\n   * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} size - size value\n   * @param {Vector3|Array} heightAxis - height axis vector or array\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addBox (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\n    BoxPrimitive.objectToShape(\n      this, { position, color, size, heightAxis, depthAxis, name }\n    )\n    return this\n  }\n\n  /**\n   * Add an octahedron\n   * @example\n   * shape.addOctahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} size - size value\n   * @param {Vector3|Array} heightAxis - height axis vector or array\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addOctahedron (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\n    OctahedronPrimitive.objectToShape(\n      this, { position, color, size, heightAxis, depthAxis, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a tetrahedron\n   * @example\n   * shape.addTetrahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} size - size value\n   * @param {Vector3|Array} heightAxis - height axis vector or array\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addTetrahedron (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\n    TetrahedronPrimitive.objectToShape(\n      this, { position, color, size, heightAxis, depthAxis, name }\n    )\n    return this\n  }\n\n  /**\n   * Add text\n   * @example\n   * shape.addText([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ], 0.5, \"Hello\");\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {Float} size - size value\n   * @param {String} text - text value\n   * @return {Shape} this object\n   */\n  addText (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, text: string) {\n    TextPrimitive.objectToShape(\n      this, { position, color, size, text }\n    )\n    return this\n  }\n\n  /**\n   * Add point\n   * @example\n   * shape.addPoint([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ]);\n   *\n   * @param {Vector3|Array} position - position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addPoint (position: Vector3|[number, number, number], color: Color|[number, number, number], name: string) {\n    PointPrimitive.objectToShape(\n      this, { position, color, name }\n    )\n    return this\n  }\n\n  /**\n   * Add a wideline\n   * @example\n   * shape.addWideline([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ]);\n   *\n   * @param {Vector3|Array} position1 - from position vector or array\n   * @param {Vector3|Array} position2 - to position vector or array\n   * @param {Color|Array} color - color object or array\n   * @param {String} [name] - text\n   * @return {Shape} this object\n   */\n  addWideline (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], linewidth: number, name: string) {\n    this.parameters.linewidth = linewidth\n    WidelinePrimitive.objectToShape(\n      this, { position1, position2, color, name }\n    )\n    return this\n  }\n\n  /**\n   * Deprecated, use `.addText`\n   */\n  addLabel (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, text: string) {\n    console.warn('Shape.addLabel is deprecated, use .addText instead')\n    return this.addText(position, color, size, text)\n  }\n\n  getBufferList () {\n    const buffers: Buffer[] = []\n\n    Primitives.forEach(P => {\n      if (this._primitiveData[ P.getShapeKey('color') ].length) {\n        buffers.push(P.bufferFromShape(this, this.parameters))\n      }\n    })\n\n    return this.bufferList.concat(buffers)\n  }\n\n  dispose () {\n    this.bufferList.forEach(function (buffer) {\n      buffer.dispose()\n    })\n    this.bufferList.length = 0\n\n    Primitives.forEach(P => {\n      Object.keys(P.fields).forEach(name => {\n        this._primitiveData[ P.getShapeKey(name) ].length = 0\n      })\n      this._primitiveData[ P.getShapeKey('name') ].length = 0\n    })\n  }\n\n  get center () {\n    if (!this._center) {\n      this._center = this.boundingBox.getCenter(new Vector3())\n    }\n    return this._center\n  }\n\n  get type () { return 'Shape' }\n}\n\nexport default Shape\n","/**\n * @file Buffer Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Representation, { RepresentationParameters } from './representation'\nimport Viewer from '../viewer/viewer';\n\n/**\n * Representation for showing buffer objects. Good for efficiently showing\n * large amounts of geometric primitives e.g. spheres via {@link SphereBuffer}.\n * Smaller numbers of geometric primitives are more easily shown with help\n * from the {@link Shape} class.\n *\n * __Name:__ _buffer_\n *\n * @example\n * // add a single red sphere from a buffer to a shape instance\n * var shape = new NGL.Shape( \"shape\" );\n * var sphereBuffer = new NGL.SphereBuffer( {\n *     position: new Float32Array( [ 0, 0, 0 ] ),\n *     color: new Float32Array( [ 1, 0, 0 ] ),\n *     radius: new Float32Array( [ 1 ] )\n * } );\n * shape.addBuffer( sphereBuffer );\n * var shapeComp = stage.addComponentFromObject( shape );\n * shapeComp.addRepresentation( \"buffer\" );\n *\n * @example\n * // add a single red sphere from a buffer to a structure component instance\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n *     var sphereBuffer = new NGL.SphereBuffer( {\n *         position: new Float32Array( [ 0, 0, 0 ] ),\n *         color: new Float32Array( [ 1, 0, 0 ] ),\n *         radius: new Float32Array( [ 1 ] )\n *     } );\n *     o.addBufferRepresentation( sphereBuffer, { opacity: 0.5 } );\n * } );\n */\nclass BufferRepresentation extends Representation {\n  buffer: Buffer[]\n  /**\n   * Create Buffer representation\n   * @param {Buffer} buffer - a buffer object\n   * @param {Viewer} viewer - a viewer object\n   * @param {RepresentationParameters} params - representation parameters\n   */\n  constructor (buffer: Buffer|Buffer[], viewer: Viewer, params: Partial<RepresentationParameters>) {\n    if (!Array.isArray(buffer)) {\n      buffer = [ buffer ]\n    }\n\n    super(buffer, viewer, params)\n\n    this.type = 'buffer'\n\n    this.parameters = Object.assign({\n\n    }, this.parameters, {\n\n      colorScheme: null,\n      colorScale: null,\n      colorValue: null,\n      colorDomain: null,\n      colorMode: null\n\n    })\n\n    this.buffer = buffer\n\n    this.init(params)\n  }\n\n  init (params: Partial<RepresentationParameters>) {\n    super.init(params)\n\n    this.build()\n  }\n\n  create () {\n    this.bufferList.push.apply(this.bufferList, this.buffer)\n  }\n\n  attach (callback: ()=> void) {\n    this.bufferList.forEach(buffer => {\n      this.viewer.add(buffer)\n      buffer.setParameters(this.getBufferParams())\n    })\n    this.setVisibility(this.visible)\n\n    callback()\n  }\n}\n\nexport default BufferRepresentation\n","/**\n * @file Geometry Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3 required for declaration only\n import {  Vector3, Matrix4, Matrix3, BufferGeometry } from 'three'\n\nimport { getUintArray } from '../utils'\nimport { serialBlockArray } from '../math/array-utils'\nimport { applyMatrix3toVector3array, applyMatrix4toVector3array } from '../math/vector-utils'\nimport MeshBuffer from './mesh-buffer'\nimport { BufferParameters, BufferData } from './buffer'\nimport {Log} from \"../globals\";\n\nconst matrix = new Matrix4()\nconst normalMatrix = new Matrix3()\n\nfunction getData(data: BufferData, geo: BufferGeometry){\n  const geoPosition = (geo.attributes as any).position.array\n  const geoIndex = geo.index ? geo.index.array : undefined\n\n  const n = data.position!.length / 3\n  const m = geoPosition.length / 3\n\n  const size = n * m\n\n  const meshPosition = new Float32Array(size * 3)\n  const meshNormal = new Float32Array(size * 3)\n  const meshColor = new Float32Array(size * 3)\n\n  let meshIndex\n  if (geoIndex) {\n    meshIndex = getUintArray(n * geoIndex.length, size)\n  }\n\n  return {\n    position: meshPosition,\n    color: meshColor,\n    index: meshIndex,\n    normal: meshNormal,\n    primitiveId: data.primitiveId || serialBlockArray(n, m) as Float32Array,\n    picking: data.picking\n  }\n}\n\n/**\n * Geometry buffer. Base class for geometry-based buffers. Used to draw\n * geometry primitives given a mesh.\n * @interface\n */\nabstract class GeometryBuffer extends MeshBuffer {\n  updateNormals = false\n\n  geoPosition: Float32Array\n  geoNormal: Float32Array\n  geoIndex?: Uint32Array|Uint16Array\n\n  positionCount: number\n  geoPositionCount: number\n\n  transformedGeoPosition: Float32Array\n  transformedGeoNormal: Float32Array\n\n  meshPosition: Float32Array\n  meshColor: Float32Array\n  meshIndex: Uint32Array|Uint16Array\n  meshNormal: Float32Array\n\n  /**\n   * @param {Object} data - buffer data\n   * @param {Float32Array} data.position - positions\n   * @param {Float32Array} data.color - colors\n   * @param {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} [params] - parameters object\n   * @param {BufferGeometry} geo - geometry object\n   */\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}, geo: BufferGeometry) {\n    super(getData(data, geo), params)\n\n    const geoPosition = (geo.attributes as any).position.array\n    const geoNormal = (geo.attributes as any).normal.array\n    const geoIndex = geo.index ? (geo.index.array as Uint32Array|Uint16Array) : undefined\n\n    this.geoPosition = geoPosition\n    this.geoNormal = geoNormal\n    this.geoIndex = geoIndex\n\n    this.positionCount = data.position!.length / 3\n    this.geoPositionCount = geoPosition.length / 3\n\n    this.transformedGeoPosition = new Float32Array(this.geoPositionCount * 3)\n    this.transformedGeoNormal = new Float32Array(this.geoPositionCount * 3)\n\n    const attributes = this.geometry.attributes as any  // TODO\n    this.meshPosition = attributes.position.array\n    this.meshColor = attributes.color.array\n    this.meshNormal = attributes.normal.array\n\n    this.setAttributes(data)\n\n    if (geoIndex) {\n      const index = this.geometry.getIndex()\n      if (!index) { Log.error('Index is null'); return; }\n      this.meshIndex = index.array as Uint32Array|Uint16Array\n      this.makeIndex()\n    }\n  }\n\n  abstract applyPositionTransform (matrix: Matrix4, i: number, i3?: number): void\n\n  setAttributes (data: Partial<BufferData> = {}, initNormals = false) {\n    const attributes = this.geometry.attributes as any  // TODO\n\n    let position, color\n    let geoPosition, geoNormal\n    let transformedGeoPosition, transformedGeoNormal\n    let meshPosition, meshColor, meshNormal\n\n    const updateNormals = this.updateNormals\n\n    if (data.position) {\n      position = data.position\n      geoPosition = this.geoPosition\n      meshPosition = this.meshPosition\n      transformedGeoPosition = this.transformedGeoPosition\n      attributes.position.needsUpdate = true\n      if (updateNormals || initNormals) {\n        geoNormal = this.geoNormal\n        meshNormal = this.meshNormal\n        transformedGeoNormal = this.transformedGeoNormal\n        attributes.normal.needsUpdate = true\n      }\n    }\n\n    if (data.color) {\n      color = data.color\n      meshColor = this.meshColor\n      attributes.color.needsUpdate = true\n    }\n\n    const n = this.positionCount\n    const m = this.geoPositionCount\n\n    for (let i = 0; i < n; ++i) {\n      let j, l\n      const k = i * m * 3\n      const i3 = i * 3\n\n      if (position && transformedGeoPosition && meshPosition && meshNormal && geoPosition && geoNormal) {\n        transformedGeoPosition.set(geoPosition)\n        matrix.makeTranslation(\n          position[ i3 ], position[ i3 + 1 ], position[ i3 + 2 ]\n        )\n        this.applyPositionTransform(matrix, i, i3)\n        applyMatrix4toVector3array(matrix.elements as unknown as Float32Array,\n                                   transformedGeoPosition)\n\n        meshPosition.set(transformedGeoPosition, k)\n\n        if (updateNormals && transformedGeoNormal) {\n          transformedGeoNormal.set(geoNormal)\n          normalMatrix.getNormalMatrix(matrix)\n          applyMatrix3toVector3array(normalMatrix.elements as unknown as Float32Array,\n                                     transformedGeoNormal)\n\n          meshNormal.set(transformedGeoNormal, k)\n        } else if (initNormals) {\n          meshNormal.set(geoNormal, k)\n        }\n      }\n\n      if (color && meshColor) {\n        for (j = 0; j < m; ++j) {\n          l = k + 3 * j\n\n          meshColor[ l ] = color[ i3 ]\n          meshColor[ l + 1 ] = color[ i3 + 1 ]\n          meshColor[ l + 2 ] = color[ i3 + 2 ]\n        }\n      }\n    }\n  }\n\n  makeIndex () {\n    const geoIndex = this.geoIndex\n    const meshIndex = this.meshIndex\n\n    if (!geoIndex) return\n\n    const n = this.positionCount\n    const m = this.geoPositionCount\n    const o = geoIndex.length / 3\n\n    const o3 = o * 3\n\n    for (let i = 0; i < n; ++i) {\n      const j = i * o3\n      const q = j + o3\n\n      meshIndex.set(geoIndex, j)\n      for (let p = j; p < q; ++p) meshIndex[ p ] += i * m\n    }\n  }\n}\n\nexport default GeometryBuffer\n","/**\n * @file Sphere Geometry Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { IcosahedronBufferGeometry, Vector3, Matrix4 } from 'three'\nimport { defaults } from '../utils'\nimport GeometryBuffer from './geometry-buffer'\nimport { SphereBufferData } from './sphere-buffer'\nimport { BufferDefaultParameters } from './buffer'\n\nconst scale = new Vector3()\n\nexport const SphereGeometryBufferDefaultParameters = Object.assign({\n  sphereDetail: 1\n}, BufferDefaultParameters)\nexport type SphereGeometryBufferParameters = typeof SphereGeometryBufferDefaultParameters\n\n/**\n * Sphere geometry buffer.\n *\n * @example\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\nclass SphereGeometryBuffer extends GeometryBuffer {\n  get defaultParameters() { return SphereGeometryBufferDefaultParameters }\n  parameters: SphereGeometryBufferParameters\n\n  private _radius: Float32Array\n\n  /**\n   * @param {Object} data - attribute object\n   * @param {Float32Array} data.position - positions\n   * @param {Float32Array} data.color - colors\n   * @param {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} params - parameter object\n   */\n  constructor (data: SphereBufferData, params: Partial<SphereGeometryBufferParameters> = {}) {\n    super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 1)))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number) {\n    const r = this._radius[ i ]\n    scale.set(r, r, r)\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<SphereBufferData> = {}, initNormals?: boolean) {\n    if (data.radius) this._radius = data.radius\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nexport default SphereGeometryBuffer\n","/**\n * @file Mapped Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { getUintArray } from '../utils'\nimport { calculateCenterArray, serialArray } from '../math/array-utils'\nimport Buffer, { BufferParameters, BufferData } from './buffer'\n\nexport type MappingType = 'v2'|'v3'\n\n/**\n * Mapped buffer. Sends mapping attribute to the GPU and repeats data in\n * others attributes. Used to render imposters.\n * @interface\n */\nabstract class MappedBuffer extends Buffer {\n  index: Uint32Array|Uint16Array\n\n  constructor (mappingType: MappingType, data: BufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params)\n\n    this.index = getUintArray(this.indexSize, this.attributeSize)\n    this.makeIndex()\n    this.initIndex(this.index)\n\n    this.addAttributes({\n      'mapping': { type: mappingType, value: null }\n    })\n\n    this.setAttributes({ primitiveId: serialArray(this.size) })\n  }\n\n  abstract get mapping (): Float32Array\n  abstract get mappingIndices (): Uint32Array|Uint16Array\n  abstract get mappingIndicesSize (): number\n  abstract get mappingSize (): number\n  abstract get mappingItemSize (): number\n\n  get attributeSize () {\n    return this.size * this.mappingSize\n  }\n\n  get indexSize () {\n    return this.size * this.mappingIndicesSize\n  }\n\n  addAttributes (attributes: any) {\n    const nullValueAttributes: any = {}\n    for (const name in attributes) {\n      const a = attributes[ name ]\n      nullValueAttributes[ name ] = {\n        type: a.type,\n        value: null\n      }\n    }\n\n    super.addAttributes(nullValueAttributes)\n  }\n\n  getAttributeIndex (dataIndex: number) {\n    return dataIndex * 3 * this.mappingSize\n  }\n\n  setAttributes (data: any) {  // TODO\n    if (data && !data.position && data.position1 && data.position2) {\n      data.position = calculateCenterArray(data.position1, data.position2)\n    }\n\n    const size = this.size\n    const mappingSize = this.mappingSize\n    const attributes = this.geometry.attributes as any  // TODO\n\n    let a, d, itemSize, array, n, i, j\n\n    for (const name in data) {\n      if (name === 'index' || name === 'picking') continue\n\n      d = data[ name ]\n      a = attributes[ name ]\n      itemSize = a.itemSize\n      array = a.array\n\n      for (let k = 0; k < size; ++k) {\n        n = k * itemSize\n        i = n * mappingSize\n\n        for (let l = 0; l < mappingSize; ++l) {\n          j = i + (itemSize * l)\n\n          for (let m = 0; m < itemSize; ++m) {\n            array[ j + m ] = d[ n + m ]\n          }\n        }\n      }\n\n      a.needsUpdate = true\n    }\n  }\n\n  makeMapping () {\n    const size = this.size\n    const mapping = this.mapping\n    const mappingSize = this.mappingSize\n    const mappingItemSize = this.mappingItemSize\n\n    const attributes = this.geometry.attributes as any  // TODO\n    const aMapping = attributes.mapping.array\n\n    for (let v = 0; v < size; v++) {\n      aMapping.set(mapping, v * mappingItemSize * mappingSize)\n    }\n  }\n\n  makeIndex () {\n    const size = this.size\n    const mappingSize = this.mappingSize\n    const mappingIndices = this.mappingIndices\n    const mappingIndicesSize = this.mappingIndicesSize\n\n    const index = this.index\n\n    for (let v = 0; v < size; v++) {\n      const ix = v * mappingIndicesSize\n      const it = v * mappingSize\n\n      index.set(mappingIndices, ix)\n\n      for (let s = 0; s < mappingIndicesSize; ++s) {\n        index[ ix + s ] += it\n      }\n    }\n  }\n}\n\nexport default MappedBuffer\n","/**\n * @file Mapped Quad Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { BufferParameters, BufferData } from './buffer'\nimport MappedBuffer from './mapped-buffer'\n\nconst mapping = new Float32Array([\n  -1.0, 1.0,\n  -1.0, -1.0,\n  1.0, 1.0,\n  1.0, -1.0\n])\n\nconst mappingIndices = new Uint16Array([\n  0, 1, 2,\n  1, 3, 2\n])\n\n/**\n * Mapped Quad buffer. Draws screen-aligned quads. Used to render impostors.\n * @interface\n */\nclass MappedQuadBuffer extends MappedBuffer {\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\n    super('v2', data, params)\n  }\n  get mapping () { return mapping }\n  get mappingIndices () { return mappingIndices }\n  get mappingIndicesSize () { return 6 }\n  get mappingSize () { return 4 }\n  get mappingItemSize () { return 2 }\n}\n\nexport default MappedQuadBuffer\n","/**\n * @file Sphere Impostor Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport '../shader/SphereImpostor.vert'\nimport '../shader/SphereImpostor.frag'\n\nimport MappedQuadBuffer from './mappedquad-buffer'\nimport { SphereBufferData } from './sphere-buffer'\nimport { BufferParameters } from './buffer'\n\n/**\n * Sphere impostor buffer.\n *\n * @example\n * var sphereImpostorBuffer = new SphereImpostorBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\nclass SphereImpostorBuffer extends MappedQuadBuffer {\n  isImpostor = true\n  vertexShader = 'SphereImpostor.vert'\n  fragmentShader = 'SphereImpostor.frag'\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.color - colors\n   * @param  {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: SphereBufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params)\n\n    this.addUniforms({\n      'projectionMatrixInverse': { value: new Matrix4() },\n      'ortho': { value: 0.0 }\n    })\n\n    this.addAttributes({\n      'radius': { type: 'f', value: null }\n    })\n\n    this.setAttributes(data)\n    this.makeMapping()\n  }\n}\n\nexport default SphereImpostorBuffer\n","/**\n * @file Sphere Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only \nimport { Vector3, Matrix4 } from 'three'\nimport { BufferRegistry, ExtensionFragDepth } from '../globals'\nimport SphereGeometryBuffer, { SphereGeometryBufferDefaultParameters } from './spheregeometry-buffer'\nimport SphereImpostorBuffer from './sphereimpostor-buffer'\nimport { BufferData } from './buffer'\n\nexport interface SphereBufferData extends BufferData {\n  radius: Float32Array\n}\n\nexport const SphereBufferDefaultParameters = Object.assign({\n  disableImpostor: false\n}, SphereGeometryBufferDefaultParameters)\nexport type SphereBufferParameters = typeof SphereBufferDefaultParameters\n\n/**\n * Sphere buffer. Depending on the value {@link ExtensionFragDepth} and\n * `params.disableImpostor` the constructor returns either a\n * {@link SphereGeometryBuffer} or a {@link SphereImpostorBuffer}\n * @implements {Buffer}\n *\n * @example\n * var sphereBuffer = new SphereBuffer( {\n *     position: new Float32Array( [ 0, 0, 0 ] ),\n *     color: new Float32Array( [ 1, 0, 0 ] ),\n *     radius: new Float32Array( [ 1 ] )\n * } );\n */\nclass SphereBuffer {\n    /**\n     * @param {Object} data - buffer data\n     * @param {Float32Array} data.position - positions\n     * @param {Float32Array} data.color - colors\n     * @param {Float32Array} data.radius - radii\n     * @param {Picker} [data.picking] - picking ids\n     * @param {BufferParameters} params - parameters object\n     * @return {SphereGeometryBuffer|SphereImpostorBuffer} the buffer object\n     */\n  constructor (data: SphereBufferData, params: SphereBufferParameters) {\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\n      return new SphereGeometryBuffer(data, params)\n    } else {\n      return new SphereImpostorBuffer(data, params)\n    }\n  }\n}\n\nBufferRegistry.add('sphere', SphereBuffer)\n\nexport default SphereBuffer\n","/**\n * @file Point Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\nimport { DataTexture, Vector3, Matrix4 } from 'three'\n\nimport '../shader/Point.vert'\nimport '../shader/Point.frag'\n\nimport { BufferRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { smoothstep } from '../math/math-utils'\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferTypes } from './buffer'\n\nfunction distance (x0: number, y0: number, x1: number, y1: number) {\n  const dx = x1 - x0\n  const dy = y1 - y0\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\ninterface PointTextureParams {\n  width?: number\n  height?: number\n  delta?: number\n}\n\nfunction makePointTexture (params: PointTextureParams) {\n  const p = params || {}\n\n  const width = defaults(p.width, 256)\n  const height = defaults(p.height, 256)\n  const center = [ width / 2, height / 2 ]\n  const radius = Math.min(width / 2, height / 2)\n  const delta = defaults(p.delta, 1 / (radius + 1)) * radius\n\n  let x = 0\n  let y = 0\n  const data = new Uint8Array(width * height * 4)\n\n  for (let i = 0, il = data.length; i < il; i += 4) {\n    const dist = distance(x, y, center[ 0 ], center[ 1 ])\n    const value = 1 - smoothstep(radius - delta, radius, dist)\n\n    data[ i ] = value * 255\n    data[ i + 1 ] = value * 255\n    data[ i + 2 ] = value * 255\n    data[ i + 3 ] = value * 255\n\n    if (++x === width) {\n      x = 0\n      y++\n    }\n  }\n\n  const tex = new DataTexture(data, width, height)\n  tex.needsUpdate = true\n\n  return tex\n}\n\nexport const PointBufferDefaultParameters = Object.assign({\n  pointSize: 1,\n  sizeAttenuation: true,\n  sortParticles: false,\n  alphaTest: 0.5,\n  useTexture: false,\n  forceTransparent: false,\n  edgeBleach: 0.0\n}, BufferDefaultParameters)\nexport type PointBufferParameters = typeof PointBufferDefaultParameters\n\nconst PointBufferParameterTypes = Object.assign({\n  pointSize: { uniform: 'size' },\n  sizeAttenuation: { updateShader: true },\n  sortParticles: {},\n  alphaTest: { updateShader: true },\n  useTexture: { updateShader: true },\n  forceTransparent: {},\n  edgeBleach: { uniform: true }\n}, BufferParameterTypes)\n\n/**\n * Point buffer. Draws points. Optionally textured.\n *\n * @example\n * var pointBuffer = new PointBuffer( {\n *     position: new Float32Array( [ 0, 0, 0 ] ),\n *     color: new Float32Array( [ 1, 0, 0 ] )\n * } );\n */\nclass PointBuffer extends Buffer {\n  parameterTypes = PointBufferParameterTypes\n  get defaultParameters() { return PointBufferDefaultParameters }\n  parameters: PointBufferParameters\n\n  vertexShader = 'Point.vert'\n  fragmentShader ='Point.frag'\n\n  isPoint = true\n  tex: DataTexture\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.color - colors\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: BufferData, params: Partial<PointBufferParameters> = {}) {\n    super(data, params)\n\n    this.addUniforms({\n      'size': { value: this.parameters.pointSize },\n      'canvasHeight': { value: 1.0 },\n      'pixelRatio': { value: 1.0 },\n      'map': { value: null }\n    })\n  }\n\n  makeMaterial () {\n    super.makeMaterial()\n\n    this.makeTexture()\n\n    const m = this.material\n    const wm = this.wireframeMaterial\n    const pm = this.pickingMaterial\n\n    m.uniforms.map.value = this.tex\n    m.needsUpdate = true\n\n    wm.uniforms.map.value = this.tex\n    wm.needsUpdate = true\n\n    pm.uniforms.map.value = this.tex\n    pm.needsUpdate = true\n  }\n\n  makeTexture () {\n    if (this.tex) this.tex.dispose()\n    this.tex = makePointTexture({ delta: this.parameters.edgeBleach })\n  }\n\n  getDefines (type?: BufferTypes) {\n    const defines = super.getDefines(type)\n\n    if (this.parameters.sizeAttenuation) {\n      defines.USE_SIZEATTENUATION = 1\n    }\n\n    if (this.parameters.useTexture) {\n      defines.USE_MAP = 1\n    }\n\n    if (this.parameters.alphaTest > 0 && this.parameters.alphaTest <= 1) {\n      defines.ALPHATEST = this.parameters.alphaTest.toPrecision(2)\n    }\n\n    return defines\n  }\n\n  setUniforms (data: any) {\n    if (data && data.edgeBleach !== undefined) {\n      this.makeTexture()\n      data.map = this.tex\n    }\n\n    super.setUniforms(data)\n  }\n\n  dispose () {\n    super.dispose()\n\n    if (this.tex) this.tex.dispose()\n  }\n}\n\nBufferRegistry.add('point', PointBuffer)\n\nexport default PointBuffer\n","/**\n * @file Dot Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ExtensionFragDepth } from '../globals'\nimport { defaults } from '../utils'\nimport Representation, { RepresentationParameters } from './representation'\nimport Volume from '../surface/volume'\nimport FilteredVolume from '../surface/filtered-volume'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport PointBuffer from '../buffer/point-buffer'\nimport Surface from '../surface/surface';\nimport Viewer from '../viewer/viewer';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\n\nexport interface DotDataFields {\n  color?: boolean,\n  radius?: boolean,\n  scale?: boolean\n}\n\n/**\n * Dot representation parameter object. Extends {@link RepresentationParameters}\n *\n * @typedef {Object} DotRepresentationParameters - dot representation parameters\n *\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\n * @property {Number} thresholdOut - Show only values falling outside of the treshold minumum and maximum. For volume data only.\n */\nexport interface DotRepresentationParameters extends RepresentationParameters {\n  thresholdType: 'value'|'value'|'sigma'|'sigma'\n  thresholdMin: number\n  thresholdMax: number\n  thresholdOut: boolean\n  dotType: ''|'sphere'|'point'\n  radiusType: ''|'value'|'abs-value'|'value-min'|'deviation'|'size'|'radius' //TODO had to add 'radius' because of test in line 333\n  radius: number\n  scale: number\n  sphereDetail: number\n  disableImpostor: boolean\n  pointSize: number\n  sizeAttenuation: boolean\n  sortParticles: boolean\n  useTexture: boolean\n  alphaTest: number\n  forceTransparent: boolean\n  edgeBleach: number\n}\n/**\n * Dot representation\n */\nclass DotRepresentation extends Representation {\n  protected thresholdType: 'value'|'value'|'sigma'|'sigma'\n  protected thresholdMin: number\n  protected thresholdMax: number\n  protected thresholdOut: boolean\n  protected dotType: ''|'sphere'|'point'\n  protected radiusType: ''|'value'|'abs-value'|'value-min'|'deviation'|'size'|'radius' //TODO had to add 'radius' because of test in line 333\n  protected radius: number\n  protected scale: number\n  protected sphereDetail: number\n  protected disableImpostor: boolean\n  protected pointSize: number\n  protected sizeAttenuation: boolean\n  protected sortParticles: boolean\n  protected useTexture: boolean\n  protected alphaTest: number\n  protected forceTransparent: boolean\n  protected edgeBleach: number\n\n  protected surface: Surface|undefined\n  protected volume: FilteredVolume|undefined\n  protected dotBuffer: SphereBuffer|PointBuffer\n  /**\n   * Create Dot representation object\n   * @param {Surface|Volume} surface - the surface or volume to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {DotRepresentationParameters} params - dot representation parameters\n   */\n  constructor (surface: Surface, viewer: Viewer, params: Partial<DotRepresentationParameters>) {\n    super(surface, viewer, params)\n\n    this.type = 'dot'\n\n    this.parameters = Object.assign({\n\n      thresholdType: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'value': 'value', 'sigma': 'sigma'\n        }\n      },\n      thresholdMin: {\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\n      },\n      thresholdMax: {\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\n      },\n      thresholdOut: {\n        type: 'boolean', rebuild: true\n      },\n      dotType: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          '': '',\n          'sphere': 'sphere',\n          'point': 'point'\n        }\n      },\n      radiusType: {\n        type: 'select',\n        options: {\n          '': '',\n          'value': 'value',\n          'abs-value': 'abs-value',\n          'value-min': 'value-min',\n          'deviation': 'deviation',\n          'size': 'size'\n        }\n      },\n      radius: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001, property: 'size'\n      },\n      scale: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      sphereDetail: true,\n      disableImpostor: true,\n\n      pointSize: {\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\n      },\n      sizeAttenuation: {\n        type: 'boolean', buffer: true\n      },\n      sortParticles: {\n        type: 'boolean', rebuild: true\n      },\n      useTexture: {\n        type: 'boolean', buffer: true\n      },\n      alphaTest: {\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\n      },\n      forceTransparent: {\n        type: 'boolean', buffer: true\n      },\n      edgeBleach: {\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\n      }\n\n    }, this.parameters, {\n\n      colorScheme: {\n        type: 'select',\n        update: 'color',\n        options: {\n          '': '',\n          'value': 'value',\n          'uniform': 'uniform',\n          'random': 'random'\n        }\n      }\n\n    })\n\n    if (surface instanceof Volume) {\n      this.surface = undefined\n      this.volume = new FilteredVolume(surface)\n    } else {\n      this.surface = surface\n      this.volume = undefined\n    }\n\n    this.init(params)\n  }\n\n  init (params: Partial<DotRepresentationParameters>) {\n    var p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\n\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\n    this.thresholdMin = defaults(p.thresholdMin, 2.0)\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\n    this.thresholdOut = defaults(p.thresholdOut, false)\n    this.dotType = defaults(p.dotType, 'point')\n    this.radius = defaults(p.radius, 0.1)\n    this.scale = defaults(p.scale, 1.0)\n\n    this.pointSize = defaults(p.pointSize, 1)\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\n    this.sortParticles = defaults(p.sortParticles, false)\n    this.useTexture = defaults(p.useTexture, false)\n    this.alphaTest = defaults(p.alphaTest, 0.5)\n    this.forceTransparent = defaults(p.forceTransparent, false)\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\n\n    super.init(p)\n\n    this.build()\n  }\n\n  attach (callback: () => void) {\n    this.bufferList.forEach(buffer => {\n      this.viewer.add(buffer)\n    })\n    this.setVisibility(this.visible)\n\n    callback()\n  }\n\n  create () {\n    var dotData: SphereBufferData|{} = {}\n\n    if (this.volume) {\n      var volume = this.volume\n      var thresholdMin, thresholdMax\n\n      if (this.thresholdType === 'sigma') {\n        thresholdMin = volume.getValueForSigma(this.thresholdMin)\n        thresholdMax = volume.getValueForSigma(this.thresholdMax)\n      } else {\n        thresholdMin = this.thresholdMin\n        thresholdMax = this.thresholdMax\n      }\n      volume.setFilter(thresholdMin, thresholdMax, this.thresholdOut)\n\n      Object.assign(dotData, {\n        position: volume.getDataPosition(),\n        color: volume.getDataColor(this.getColorParams())\n      })\n      if (this.dotType === 'sphere') {\n        Object.assign(dotData, {\n          radius: volume.getDataSize(this.radius, this.scale),\n          picking: volume.getDataPicking()\n        })\n      }\n    } else {\n      var surface = this.surface\n      Object.assign(dotData, {\n        position: (surface as Surface).getPosition(),\n        color: (surface as Surface).getColor(this.getColorParams())\n      })\n      if (this.dotType === 'sphere') {\n        Object.assign(dotData, {\n          radius: (surface as Surface).getSize(this.radius, this.scale),\n          picking: (surface as Surface).getPicking()\n        })\n      }\n    }\n\n    if (this.dotType === 'sphere') {\n      this.dotBuffer = new SphereBuffer(\n        dotData as SphereBufferData,\n        this.getBufferParams({\n          sphereDetail: this.sphereDetail,\n          disableImpostor: this.disableImpostor,\n          dullInterior: false\n        }) as SphereBufferParameters\n      ) as SphereGeometryBuffer\n    } else {\n      this.dotBuffer = new PointBuffer(\n        dotData,\n        this.getBufferParams({\n          pointSize: this.pointSize,\n          sizeAttenuation: this.sizeAttenuation,\n          sortParticles: this.sortParticles,\n          useTexture: this.useTexture,\n          alphaTest: this.alphaTest,\n          forceTransparent: this.forceTransparent,\n          edgeBleach: this.edgeBleach\n        })\n      )\n    }\n\n    this.bufferList.push(this.dotBuffer as SphereGeometryBuffer)\n  }\n\n  update (what: DotDataFields = {}) {\n    if (this.bufferList.length === 0) return\n\n    const dotData: SphereBufferData|{} = {}\n\n    if (what.color) {\n      if (this.volume) {\n        Object.assign(dotData, {\n          color: this.volume.getDataColor(\n            this.getColorParams()\n          )\n        })\n      } else {\n        Object.assign(dotData, {\n          color: (this.surface as Surface).getColor(\n            this.getColorParams()\n          )\n        })\n      }\n    }\n\n    if (this.dotType === 'sphere' && (what.radius || what.scale)) {\n      if (this.volume) {\n        Object.assign(dotData, {\n          radius: this.volume.getDataSize(\n            this.radius, this.scale\n          )\n        })\n      } else {\n        Object.assign(dotData, {\n          radius: (this.surface as Surface).getSize(\n            this.radius, this.scale\n          )\n        })\n      }\n    }\n\n    (this.dotBuffer as SphereGeometryBuffer).setAttributes(dotData)\n  }\n\n  setParameters (params: Partial<DotRepresentationParameters>, what: DotDataFields = {}, rebuild: boolean) {\n    \n    if (params && params.thresholdType !== undefined &&\n        this.volume instanceof Volume\n    ) {\n      if (this.thresholdType === 'value' &&\n          params.thresholdType === 'sigma'\n      ) {\n        this.thresholdMin = this.volume.getSigmaForValue(\n          this.thresholdMin\n        )\n        this.thresholdMax = this.volume.getSigmaForValue(\n          this.thresholdMax\n        )\n      } else if (this.thresholdType === 'sigma' &&\n                 params.thresholdType === 'value'\n      ) {\n        this.thresholdMin = this.volume.getValueForSigma(\n          this.thresholdMin\n        )\n        this.thresholdMax = this.volume.getValueForSigma(\n          this.thresholdMax\n        )\n      }\n\n      this.thresholdType = params.thresholdType\n    }\n\n    if (params && params.radiusType !== undefined) {\n      if (params.radiusType === 'radius') {\n        this.radius = 0.1\n      } else {\n        this.radius = parseFloat(params.radiusType)\n      }\n      what.radius = true\n      if (this.dotType === 'sphere' &&\n          (!ExtensionFragDepth || this.disableImpostor)\n      ) {\n        rebuild = true\n      }\n    }\n\n    if (params && params.radius !== undefined) {\n      what.radius = true\n      if (this.dotType === 'sphere' &&\n          (!ExtensionFragDepth || this.disableImpostor)\n      ) {\n        rebuild = true\n      }\n    }\n\n    if (params && params.scale !== undefined) {\n      what.scale = true\n      if (this.dotType === 'sphere' &&\n          (!ExtensionFragDepth || this.disableImpostor)\n      ) {\n        rebuild = true\n      }\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nexport default DotRepresentation\n","/**\n * @file Image Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport {\n    // @ts-ignore: unused import Vector3, Matrix4 required for declaration only\n    Vector2, Vector3, Matrix4, BufferAttribute, DataTexture,\n    NormalBlending, NearestFilter, LinearFilter\n} from 'three'\n\nimport '../shader/Image.vert'\nimport '../shader/Image.frag'\n\nimport { Picker } from '../utils/picker'\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes, BufferTypes } from './buffer'\n\n\nconst quadIndices = new Uint16Array([\n  0, 1, 2,\n  1, 3, 2\n])\n\nconst quadUvs = new Float32Array([\n  0, 1,\n  0, 0,\n  1, 1,\n  1, 0\n])\n\ntype ImageFilterTypes = 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\n\nexport interface ImageBufferData {\n  position: Float32Array\n  imageData: Uint8Array\n  width: number\n  height: number\n\n  picking?: Picker\n}\n\nexport const ImageBufferDefaultParameters = Object.assign({\n  filter: 'nearest' as ImageFilterTypes,\n  forceTransparent: true\n}, BufferDefaultParameters)\nexport type ImageBufferParameters = typeof ImageBufferDefaultParameters\n\nexport const ImageBufferParameterTypes = Object.assign({\n  filter: { updateShader: true, uniform: true }\n}, BufferParameterTypes)\n\n/**\n * Image buffer. Draw a single image. Optionally interpolate.\n */\nclass ImageBuffer extends Buffer {\n  parameterTypes = ImageBufferParameterTypes\n  get defaultParameters() { return ImageBufferDefaultParameters }\n  parameters: ImageBufferParameters\n\n  alwaysTransparent = true\n  hasWireframe = false\n  vertexShader = 'Image.vert'\n  fragmentShader = 'Image.frag'\n\n  tex: DataTexture\n  pickingTex: DataTexture\n\n  /**\n   * @param {Object} data - buffer data\n   * @param {Float32Array} data.position - image position\n   * @param {Float32Array} data.imageData - image data, rgba channels\n   * @param {Float32Array} data.width - image width\n   * @param {Float32Array} data.height - image height\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} [params] - parameters object\n   */\n  constructor (data: ImageBufferData, params: ImageBufferParameters) {\n    super({\n      position: data.position,\n      index: quadIndices,\n      picking: data.picking\n    }, params)\n\n    const {imageData, width, height} = data\n\n    const tex = new DataTexture(imageData, width, height)\n    tex.flipY = true\n    this.tex = tex\n\n    const n = imageData.length\n    const pickingData = new Uint8Array(n)\n    for (let i = 0; i < n; i += 4) {\n      const j = i / 4\n      pickingData[ i ] = j >> 16 & 255\n      pickingData[ i + 1 ] = j >> 8 & 255\n      pickingData[ i + 2 ] = j & 255\n    }\n\n    const pickingTex = new DataTexture(pickingData, width, height)\n    pickingTex.flipY = true\n    pickingTex.minFilter = NearestFilter\n    pickingTex.magFilter = NearestFilter\n    this.pickingTex = pickingTex\n\n    this.addUniforms({\n      'map': { value: tex },\n      'pickingMap': { value: pickingTex },\n      'mapSize': { value: new Vector2(width, height) }\n    })\n\n    this.geometry.setAttribute('uv', new BufferAttribute(quadUvs, 2))\n  }\n\n  getDefines (type: BufferTypes) {\n    const defines = super.getDefines(type)\n    const filter = this.parameters.filter\n\n    if (filter.startsWith('cubic')) {\n      defines.CUBIC_INTERPOLATION = 1\n      if (filter.endsWith('bspline')) {\n        defines.BSPLINE_FILTER = 1\n      } else if (filter.endsWith('catmulrom')) {\n        defines.CATMULROM_FILTER = 1\n      } else if (filter.endsWith('mitchell')) {\n        defines.MITCHELL_FILTER = 1\n      }\n    }\n\n    return defines\n  }\n\n  updateTexture () {\n    const tex = this.tex\n    const filter = this.parameters.filter\n\n    if (filter.startsWith('cubic')) {\n      tex.minFilter = NearestFilter\n      tex.magFilter = NearestFilter\n    } else if (filter === 'linear') {\n      tex.minFilter = LinearFilter\n      tex.magFilter = LinearFilter\n    } else {  // filter === \"nearest\"\n      tex.minFilter = NearestFilter\n      tex.magFilter = NearestFilter\n    }\n\n    tex.needsUpdate = true\n    this.pickingTex.needsUpdate = true\n  }\n\n  makeMaterial () {\n    super.makeMaterial()\n    this.updateTexture()\n\n    const m = this.material\n    m.uniforms.map.value = this.tex\n    m.blending = NormalBlending\n    m.needsUpdate = true\n\n    const wm = this.wireframeMaterial\n    wm.uniforms.map.value = this.tex\n    wm.blending = NormalBlending\n    wm.needsUpdate = true\n\n    const pm = this.pickingMaterial\n    pm.uniforms.map.value = this.tex\n    pm.uniforms.pickingMap.value = this.pickingTex\n    pm.blending = NormalBlending\n    pm.needsUpdate = true\n  }\n\n  setUniforms (data: any) {  // TODO\n    if (data && data.filter !== undefined) {\n      this.updateTexture()\n      data.map = this.tex\n    }\n\n    super.setUniforms(data)\n  }\n}\n\nexport default ImageBuffer\n","/**\n * @file Volume Slice\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { SlicePicker } from '../utils/picker'\nimport { Volume } from '../ngl';\nimport { SliceRepresentationParameters } from '../representation/slice-representation';\n\nclass VolumeSlice {\n  dimension: 'x'|'y'|'z'\n  positionType: 'percent'|'coordinate'\n  position: number\n  thresholdType: 'sigma'|'value'\n  thresholdMin: number\n  thresholdMax: number\n  normalize: boolean\n  volume: Volume\n\n  constructor (volume: Volume, params: Partial<SliceRepresentationParameters>) {\n    const p = params || {}\n\n    this.dimension = defaults(p.dimension, 'x')\n    this.positionType = defaults(p.positionType, 'percent')\n    this.position = defaults(p.position, 30)\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\n    this.normalize = defaults(p.normalize, false)\n\n    this.volume = volume\n  }\n\n  getPositionFromCoordinate (coord: number) {\n    const dim = this.dimension\n    const v = this.volume\n    const m = v.matrix\n\n    const mp = new Vector3().setFromMatrixPosition(m)[ dim ]\n    const ms = new Vector3().setFromMatrixScale(m)[ dim ]\n\n    let vn\n    if (dim === 'x') {\n      vn = v.nx\n    } else if (dim === 'y') {\n      vn = v.ny\n    } else {\n      vn = v.nz\n    }\n\n    return Math.round((((coord - mp) / (vn / 100)) + 1) / ms)\n  }\n\n  getData (params: any) {\n    params = params || {}\n\n    const v = this.volume\n    const d = v.data\n    const m = v.matrix\n\n    let p: number\n    if (this.positionType === 'coordinate') {\n      p = this.getPositionFromCoordinate(this.position)\n    } else {\n      p = this.position\n    }\n\n    function pos (dimLen: number) {\n      return Math.round((dimLen / 100) * (p - 1))\n    }\n\n    function index (x: number, y: number, z: number, i: number) {\n      return (z * v.ny * v.nx + y * v.nx + x) * 3 + i\n    }\n\n    const position = new Float32Array(4 * 3)\n    const vec = new Vector3()\n\n    let width, height\n    let x\n    let y\n    let z\n    let x0 = 0\n    let y0 = 0\n    let z0 = 0\n    let nx = v.nx\n    let ny = v.ny\n    let nz = v.nz\n\n    function setVec (x: number, y: number, z: number, offset: number) {\n      vec.set(x, y, z).applyMatrix4(m).toArray(position as any, offset)\n    }\n\n    if (this.dimension === 'x') {\n      x = pos(v.nx)\n      y = v.ny - 1\n      z = v.nz - 1\n\n      width = v.nz\n      height = v.ny\n\n      x0 = x\n      nx = x0 + 1\n\n      setVec(x, 0, 0, 0)\n      setVec(x, y, 0, 3)\n      setVec(x, 0, z, 6)\n      setVec(x, y, z, 9)\n    } else if (this.dimension === 'y') {\n      x = v.nx - 1\n      y = pos(v.ny)\n      z = v.nz - 1\n\n      width = v.nz\n      height = v.nx\n\n      y0 = y\n      ny = y0 + 1\n\n      setVec(0, y, 0, 0)\n      setVec(x, y, 0, 3)\n      setVec(0, y, z, 6)\n      setVec(x, y, z, 9)\n    } else if (this.dimension === 'z') {\n      x = v.nx - 1\n      y = v.ny - 1\n      z = pos(v.nz)\n\n      width = v.nx\n      height = v.ny\n\n      z0 = z\n      nz = z0 + 1\n\n      setVec(0, 0, z, 0)\n      setVec(0, y, z, 3)\n      setVec(x, 0, z, 6)\n      setVec(x, y, z, 9)\n    }\n\n    let i = 0\n    let j = 0\n    const imageData = new Uint8Array(<number>width * <number>height * 4)\n    const pickingArray = new Float32Array(<number>width * <number>height)\n\n    let tMin, tMax\n    if (this.thresholdType === 'sigma') {\n      tMin = v.getValueForSigma(this.thresholdMin)\n      tMax = v.getValueForSigma(this.thresholdMax)\n    } else {\n      tMin = this.thresholdMin\n      tMax = this.thresholdMax\n    }\n\n    const cp = Object.assign({}, params.colorParams, { volume: v })\n    if (this.normalize) {\n      cp.domain = [ 0, 1 ]\n    }\n    const colormaker = ColormakerRegistry.getScheme(cp)\n    const tmp = new Float32Array(3)\n    const scale = colormaker.getScale()\n\n    let min = 0, max, diff = 0\n    if (this.normalize) {\n      min = +Infinity\n      max = -Infinity\n      for (let iy = y0; iy < ny; ++iy) {\n        for (let ix = x0; ix < nx; ++ix) {\n          for (let iz = z0; iz < nz; ++iz) {\n            const idx = index(ix, iy, iz, 0) / 3\n            const val = d[ idx ]\n            if (val < min) min = val\n            if (val > max) max = val\n          }\n        }\n      }\n      diff = max - min\n    }\n\n    for (let iy = y0; iy < ny; ++iy) {\n      for (let ix = x0; ix < nx; ++ix) {\n        for (let iz = z0; iz < nz; ++iz) {\n          const idx = index(ix, iy, iz, 0) / 3\n          let val = d[ idx ]\n          if (this.normalize) {\n            val = (val - min) / diff\n          }\n\n          colormaker.colorToArray(scale(val), tmp)\n          imageData[ i ] = Math.round(tmp[ 0 ] * 255)\n          imageData[ i + 1 ] = Math.round(tmp[ 1 ] * 255)\n          imageData[ i + 2 ] = Math.round(tmp[ 2 ] * 255)\n          imageData[ i + 3 ] = (val > tMin && val < tMax) ? 255 : 0\n\n          pickingArray[ j ] = idx\n\n          ++j\n          i += 4\n        }\n      }\n    }\n\n    const picking = new SlicePicker(pickingArray, v)\n\n    return { position, imageData, width, height, picking }\n  }\n}\n\nexport default VolumeSlice\n","/**\n * @file Slice Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport Representation, { RepresentationParameters } from './representation'\nimport ImageBuffer, { ImageBufferParameters, ImageBufferData } from '../buffer/image-buffer'\nimport VolumeSlice from '../surface/volume-slice'\nimport Viewer from '../viewer/viewer';\nimport { Volume } from '../ngl';\n\n/**\n * Slice representation parameter object. Extends {@link RepresentationParameters}\n *\n * @typedef {Object} SliceRepresentationParameters - slice representation parameters\n *\n * @property {String} filter - filter applied to map the volume data on the slice, one of \"nearest\", \"linear\", \"cubic-bspline\", \"cubic-catmulrom\", \"cubic-mitchell\".\n * @property {String} positionType - Meaning of the position value. Either \"percent\" od \"coordinate\".\n * @property {Number} position - position of the slice.\n * @property {String} dimension - one of \"x\", \"y\" or \"z\"\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\n * @property {Boolean} normalize - Flag indicating wheather to normalize the data in a slice when coloring.\n */\nexport interface SliceRepresentationParameters extends RepresentationParameters {\n  filter: 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\n  positionType: 'percent'|'coordinate'\n  position: number\n  dimension: 'x'|'y'|'z'\n  thresholdType: 'value'|'sigma'\n  thresholdMin: number\n  thresholdMax: number\n  normalize: boolean\n}\n/**\n * Slice representation\n */\nclass SliceRepresentation extends Representation {\n  protected filter: 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\n  protected positionType: 'percent'|'coordinate'\n  protected position: number\n  protected dimension: 'x'|'y'|'z'\n  protected thresholdType: 'value'|'sigma'\n  protected thresholdMin: number\n  protected thresholdMax: number\n  protected normalize: boolean\n  protected volume: Volume\n  /**\n   * Create Slice representation object\n   * @param {Volume} surface - the volume to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {SliceRepresentationParameters} params - slice representation parameters\n   */\n  constructor (volume: Volume, viewer: Viewer, params: Partial<SliceRepresentationParameters>) {\n    super(volume, viewer, params)\n\n    this.type = 'slice'\n\n    this.parameters = Object.assign({\n\n      filter: {\n        type: 'select',\n        buffer: true,\n        options: {\n          'nearest': 'nearest',\n          'linear': 'linear',\n          'cubic-bspline': 'cubic-bspline',\n          'cubic-catmulrom': 'cubic-catmulrom',\n          'cubic-mitchell': 'cubic-mitchell'\n        }\n      },\n      positionType: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'percent': 'percent', 'coordinate': 'coordinate'\n        }\n      },\n      position: {\n        type: 'range',\n        step: 0.1,\n        max: 100,\n        min: 1,\n        rebuild: true\n      },\n      dimension: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'x': 'x', 'y': 'y', 'z': 'z'\n        }\n      },\n      thresholdType: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'value': 'value', 'sigma': 'sigma'\n        }\n      },\n      thresholdMin: {\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\n      },\n      thresholdMax: {\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\n      },\n      normalize: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters, {\n\n      flatShaded: null,\n      side: null,\n      wireframe: null,\n      linewidth: null,\n      colorScheme: null,\n\n      roughness: null,\n      metalness: null,\n      diffuse: null\n\n    })\n\n    this.volume = volume\n\n    this.init(params)\n  }\n\n  init (params: Partial<SliceRepresentationParameters>) {\n    const v = this.volume\n    const p = params || {}\n    p.colorDomain = defaults(p.colorDomain, [ v.min, v.max ])\n    p.colorScheme = defaults(p.colorScheme, 'value')\n    p.colorScale = defaults(p.colorScale, 'Spectral')\n\n    this.colorScheme = 'value'\n    this.dimension = defaults(p.dimension, 'x')\n    this.filter = defaults(p.filter, 'cubic-bspline')\n    this.positionType = defaults(p.positionType, 'percent')\n    this.position = defaults(p.position, 30)\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\n    this.normalize = defaults(p.normalize, false)\n\n    super.init(p)\n\n    this.build()\n  }\n\n  attach (callback: () => void) {\n    this.bufferList.forEach(buffer => {\n      this.viewer.add(buffer)\n    })\n    this.setVisibility(this.visible)\n\n    callback()\n  }\n\n  create () {\n    const volumeSlice = new VolumeSlice(this.volume, {\n      positionType: this.positionType,\n      position: this.position,\n      dimension: this.dimension,\n      thresholdType: this.thresholdType,\n      thresholdMin: this.thresholdMin,\n      thresholdMax: this.thresholdMax,\n      normalize: this.normalize\n    })\n\n    const sliceBuffer = new ImageBuffer(\n      volumeSlice.getData({ colorParams: this.getColorParams() }) as ImageBufferData,\n      this.getBufferParams({\n        filter: this.filter\n      }) as ImageBufferParameters\n    )\n\n    this.bufferList.push(sliceBuffer)\n  }\n}\n\nexport default SliceRepresentation\n","/**\n * @file Representation Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, RepresentationRegistry } from '../globals'\n\nimport Viewer from '../viewer/viewer'\nimport Structure from '../structure/structure'\nimport Surface from '../surface/surface'\nimport Volume from '../surface/volume'\nimport Shape from '../geometry/shape'\n\nimport BufferRepresentation from './buffer-representation'\nimport SurfaceRepresentation from './surface-representation'\nimport DotRepresentation from './dot-representation'\nimport SliceRepresentation from './slice-representation'\n\nfunction logReprUnknown (type: string) {\n  Log.error(`makeRepresentation: representation type ${type} unknown`)\n}\n\nexport function makeRepresentation (type: string, object: any, viewer: Viewer, params: any) {  // TODO\n  if (Debug) Log.time('makeRepresentation ' + type)\n\n  var ReprClass\n\n  if (object instanceof Structure) {\n    ReprClass = RepresentationRegistry.get(type)\n\n    if (!ReprClass) {\n      logReprUnknown(type)\n      return\n    }\n  } else if (object instanceof Surface) {\n    if (type === 'surface') {\n      ReprClass = SurfaceRepresentation\n    } else if (type === 'dot') {\n      ReprClass = DotRepresentation\n    } else {\n      logReprUnknown(type)\n      return\n    }\n  } else if (object instanceof Volume) {\n    if (type === 'surface') {\n      ReprClass = SurfaceRepresentation\n    } else if (type === 'dot') {\n      ReprClass = DotRepresentation\n    } else if (type === 'slice') {\n      ReprClass = SliceRepresentation\n    } else {\n      logReprUnknown(type)\n      return\n    }\n  } else if (object instanceof Shape) {\n    ReprClass = BufferRepresentation\n    object = object.getBufferList()\n  } else if (type === 'buffer') {\n    ReprClass = BufferRepresentation\n  } else {\n    Log.error('makeRepresentation: object ' + object + ' unknown')\n    return\n  }\n\n  const repr = new ReprClass(object, viewer, params)\n\n  if (Debug) Log.timeEnd('makeRepresentation ' + type)\n\n  return repr\n}\n","/**\n * @file Element\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { createParams } from '../utils'\nimport { generateUUID } from '../math/math-utils'\nimport Stage from '../stage/stage'\n\nexport const ElementDefaultParameters = {\n  name: 'some element',\n  status: ''\n}\nexport type ElementParameters = typeof ElementDefaultParameters\n\nexport interface ElementSignals {\n  statusChanged: Signal  // on status change\n  nameChanged: Signal  // on name change\n  disposed: Signal  // on dispose\n}\n\n/**\n * Element base class\n */\nabstract class Element {\n  /**\n   * Events emitted by the element\n   */\n  signals: ElementSignals = {\n    statusChanged: new Signal(),\n    nameChanged: new Signal(),\n    disposed: new Signal()\n  }\n  readonly parameters: ElementParameters\n  readonly uuid: string\n\n  get defaultParameters() { return ElementDefaultParameters }\n\n  /**\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {ElementParameters} params - component parameters\n   */\n  constructor (readonly stage: Stage, params: Partial<ElementParameters> = {}) {\n    this.parameters = createParams(params, this.defaultParameters)\n    this.uuid = generateUUID()\n  }\n\n  abstract get type (): string\n\n  get name () { return this.parameters.name }\n\n  setStatus (value: string) {\n    this.parameters.status = value\n    this.signals.statusChanged.dispatch(value)\n\n    return this\n  }\n\n  setName (value: string) {\n    this.parameters.name = value\n    this.signals.nameChanged.dispatch(value)\n\n    return this\n  }\n\n  dispose () {\n    this.signals.disposed.dispatch()\n  }\n}\n\nexport default Element\n","/**\n * @file Representation Element\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\nimport { Color } from 'three'\n\nimport Stage from '../stage/stage'\nimport Representation, { RepresentationParameters } from '../representation/representation'\nimport Component from './component'\nimport Element, { ElementDefaultParameters, ElementSignals } from './element'\n\nexport const RepresentationElementDefaultParameters = Object.assign({\n  visible: true\n}, ElementDefaultParameters)\nexport type RepresentationElementParameters = typeof RepresentationElementDefaultParameters\n\nexport interface RepresentationElementSignals extends ElementSignals {\n  visibilityChanged: Signal  // on visibility change\n  parametersChanged: Signal  // on parameters change\n}\n\n/**\n * Element wrapping a {@link Representation} object\n */\nclass RepresentationElement extends Element {\n  signals: RepresentationElementSignals\n  parameters: RepresentationElementParameters\n  get defaultParameters() { return RepresentationElementDefaultParameters }\n\n  repr: Representation\n\n  /**\n   * Create representation component\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {Representation} repr - representation object to wrap\n   * @param {RepresentationParameters} [params] - component parameters\n   * @param {Component} [parent] - parent component\n   */\n  constructor (stage: Stage, repr: Representation, params: Partial<RepresentationElementParameters> = {}, readonly parent: Component) {\n    super(stage, Object.assign({ name: repr.type }, params))\n\n    this.signals = Object.assign({\n      visibilityChanged: new Signal(),\n      parametersChanged: new Signal()\n    }, this.signals)\n\n    this.setRepresentation(repr)\n  }\n\n  get visible () { return this.parameters.visible }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'representation' }\n\n  getType () {\n    return this.repr.type\n  }\n\n  setRepresentation (repr: Representation) {\n    this._disposeRepresentation()\n    this.repr = repr\n    // this.name = repr.type;\n    this.stage.tasks.listen(this.repr.tasks)\n    this.updateVisibility()\n  }\n\n  _disposeRepresentation () {\n    if (this.repr) {\n      this.stage.tasks.unlisten(this.repr.tasks)\n      this.repr.dispose()\n    }\n  }\n\n  dispose () {\n    if (this.parent && this.parent.hasRepresentation(this)) {\n      this.parent.removeRepresentation(this)\n    } else {\n      this._disposeRepresentation()\n      this.signals.disposed.dispatch()\n    }\n  }\n\n  /**\n   * Set the visibility of the component, takes parent visibility into account\n   * @param {Boolean} value - visibility flag\n   * @return {RepresentationElement} this object\n   */\n  setVisibility (value: boolean) {\n    this.parameters.visible = value\n    this.updateVisibility()\n    this.signals.visibilityChanged.dispatch(this.parameters.visible)\n\n    return this\n  }\n\n  getVisibility () {\n    if (this.parent) {\n      return this.parent.parameters.visible && this.parameters.visible\n    } else {\n      return this.parameters.visible\n    }\n  }\n\n  /**\n   * Toggle visibility of the component, takes parent visibility into account\n   * @return {RepresentationElement} this object\n   */\n  toggleVisibility () {\n    return this.setVisibility(!this.parameters.visible)\n  }\n\n  updateVisibility () {\n    this.repr.setVisibility(this.getVisibility())\n  }\n\n  /**\n   * Set selection\n   * @param {Object} what - flags indicating what attributes to update\n   * @param {Boolean} what.position - update position attribute\n   * @param {Boolean} what.color - update color attribute\n   * @param {Boolean} what.radius - update radius attribute\n   * @return {RepresentationElement} this object\n   */\n  update (what: any) {  // TODO\n    (this.repr as any).update(what)  // TODO\n\n    return this\n  }\n\n  build (params?: any) {  // TODO\n    this.repr.build(params)\n\n    return this\n  }\n\n  /**\n   * Set selection\n   * @param {String} string - selection string\n   * @return {RepresentationElement} this object\n   */\n  setSelection (string: string) {\n    const repr: any = this.repr  // TODO\n\n    if (repr.setSelection) {\n      repr.setSelection(string)\n    }\n\n    return this\n  }\n\n  /**\n   * Set representation parameters\n   * @param {RepresentationParameters} params - parameter object\n   * @return {RepresentationElement} this object\n   */\n  setParameters (params: any) {  // TODO\n    this.repr.setParameters(params)\n    this.signals.parametersChanged.dispatch(\n      this.repr.getParameters()\n    )\n\n    return this\n  }\n\n  /**\n   * Get representation parameters\n   * @return {RepresentationParameters} parameter object\n   */\n  getParameters (): Partial<RepresentationParameters> {\n    return this.repr.getParameters()\n  }\n\n  /**\n   * Set color\n   * @param {String|Color|Hex} value - color value\n   * @return {RepresentationElement} this object\n   */\n  setColor (value: string|number|Color) {\n    this.repr.setColor(value)\n\n    return this\n  }\n}\n\nexport default RepresentationElement\n","\n/**\n * @file Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Quaternion, Matrix4, Euler, Box3 } from 'three'\nimport { Signal } from 'signals'\n\nimport { defaults, createParams } from '../utils'\nimport { generateUUID } from '../math/math-utils'\nimport Annotation, { AnnotationParams } from '../component/annotation'\nimport ComponentControls from '../controls/component-controls'\nimport { makeRepresentation } from '../representation/representation-utils'\nimport RepresentationElement from './representation-element'\nimport Stage from '../stage/stage'\nimport Viewer from '../viewer/viewer'\n\nconst _m = new Matrix4()\nconst _v = new Vector3()\n\nexport const ComponentDefaultParameters = {\n  name: '',\n  status: '',\n  visible: true\n}\nexport type ComponentParameters = typeof ComponentDefaultParameters\n\n\nexport interface ComponentSignals {\n  representationAdded: Signal  // when a representation is added\n  representationRemoved: Signal  // when a representation is removed\n  visibilityChanged: Signal  // on visibility change\n  matrixChanged: Signal  // on matrix change\n  statusChanged: Signal  // on status change\n  nameChanged: Signal  // on name change\n  disposed: Signal  // on dispose\n}\n\n/**\n * Base class for components\n */\nabstract class Component {\n  /**\n   * Events emitted by the component\n   */\n  readonly signals: ComponentSignals = {\n    representationAdded: new Signal(),\n    representationRemoved: new Signal(),\n    visibilityChanged: new Signal(),\n    matrixChanged: new Signal(),\n    statusChanged: new Signal(),\n    nameChanged: new Signal(),\n    disposed: new Signal()\n  }\n\n  readonly parameters: ComponentParameters\n  get defaultParameters () { return ComponentDefaultParameters }\n\n  readonly uuid: string\n  readonly viewer: Viewer\n\n  reprList: RepresentationElement[] = []\n  annotationList: Annotation[] = []\n\n  matrix = new Matrix4()\n  position = new Vector3()\n  quaternion = new Quaternion()\n  scale = new Vector3(1, 1, 1)\n  transform = new Matrix4()\n\n  controls: ComponentControls\n\n  /**\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {ComponentParameters} params - parameter object\n   */\n  constructor (readonly stage: Stage, readonly object: any, params: Partial<ComponentParameters> = {}) {\n    this.parameters = createParams(params, this.defaultParameters)\n    this.uuid = generateUUID()\n    this.viewer = stage.viewer\n\n    this.controls = new ComponentControls(this)\n  }\n\n  abstract get type (): string\n\n  get name () { return this.parameters.name }\n  get status () { return this.parameters.status }\n  get visible () { return this.parameters.visible }\n\n  /**\n   * Set position transform\n   *\n   * @example\n   * // translate by 25 angstrom along x axis\n   * component.setPosition([ 25, 0, 0 ]);\n   *\n   * @param {Vector3|Array} p - the coordinates\n   * @return {Component} this object\n   */\n  setPosition (p: [number, number, number]|Vector3) {\n    if (Array.isArray(p)) {\n      this.position.fromArray(p)\n    } else {\n      this.position.copy(p)\n    }\n    this.updateMatrix()\n\n    return this\n  }\n\n  /**\n   * Set local rotation transform\n   * (for global rotation use setTransform)\n   *\n   * @example\n   * // rotate by 2 degree radians on x axis\n   * component.setRotation( [ 2, 0, 0 ] );\n   *\n   * @param {Quaternion|Euler|Array} r - the rotation\n   * @return {Component} this object\n   */\n  setRotation (r: [number, number, number]|Euler|Quaternion) {\n    if (Array.isArray(r)) {\n      if (r.length === 3) {\n        const e = new Euler().fromArray(r)\n        this.quaternion.setFromEuler(e)\n      } else {\n        this.quaternion.fromArray(r)\n      }\n    } else if (r instanceof Euler) {\n      this.quaternion.setFromEuler(r)\n    } else {\n      this.quaternion.copy(r)\n    }\n    this.updateMatrix()\n\n    return this\n  }\n\n  /**\n   * Set scale transform\n   *\n   * @example\n   * // scale by factor of two\n   * component.setScale( 2 );\n   *\n   * @param {Number} s - the scale\n   * @return {Component} this object\n   */\n  setScale (s: number) {\n    this.scale.set(s, s, s)\n    this.updateMatrix()\n\n    return this\n  }\n\n  /**\n   * Set general transform. Is applied before and in addition\n   * to the position, rotation and scale transformations\n   *\n   * @example\n   * component.setTransform( matrix );\n   *\n   * @param {Matrix4} m - the matrix\n   * @return {Component} this object\n   */\n  setTransform (m: Matrix4) {\n    this.transform.copy(m)\n    this.updateMatrix()\n\n    return this\n  }\n\n  updateMatrix () {\n    const c = this.getCenterUntransformed(_v)\n    this.matrix.makeTranslation(-c.x, -c.y, -c.z)\n\n    _m.makeRotationFromQuaternion(this.quaternion)\n    this.matrix.premultiply(_m)\n\n    _m.makeScale(this.scale.x, this.scale.y, this.scale.z)\n    this.matrix.premultiply(_m)\n\n    const p = this.position\n    _m.makeTranslation(p.x + c.x, p.y + c.y, p.z + c.z)\n    this.matrix.premultiply(_m)\n\n    this.matrix.premultiply(this.transform)\n\n    this.updateRepresentationMatrices()\n\n    this.stage.viewer.updateBoundingBox()\n\n    this.signals.matrixChanged.dispatch(this.matrix)\n  }\n\n  /**\n   * Propogates our matrix to each representation\n   */\n  updateRepresentationMatrices () {\n    this.reprList.forEach(repr => {\n      repr.setParameters({ matrix: this.matrix })\n    })\n  }\n\n  /**\n   * Add an anotation object\n   * @param {Vector3} position - the 3d position\n   * @param {String|Element} content - the HTML content\n   * @param {Object} [params] - parameters\n   * @param {Integer} params.offsetX - 2d offset in x direction\n   * @param {Integer} params.offsetY - 2d offset in y direction\n   * @return {Annotation} the added annotation object\n   */\n  addAnnotation (position: Vector3, content: string|HTMLElement, params: AnnotationParams) {\n    const annotation = new Annotation(this, position, content, params)\n    this.annotationList.push(annotation)\n\n    return annotation\n  }\n\n  /**\n   * Iterator over each annotation and executing the callback\n   * @param  {Function} callback - function to execute\n   * @return {undefined}\n   */\n  eachAnnotation (callback: (a: Annotation) => void) {\n    this.annotationList.slice().forEach(callback)\n  }\n\n  /**\n   * Remove the give annotation from the component\n   * @param {Annotation} annotation - the annotation to remove\n   * @return {undefined}\n   */\n  removeAnnotation (annotation: Annotation) {\n    const idx = this.annotationList.indexOf(annotation)\n    if (idx !== -1) {\n      this.annotationList.splice(idx, 1)\n      annotation.dispose()\n    }\n  }\n\n  /**\n   * Remove all annotations from the component\n   * @return {undefined}\n   */\n  removeAllAnnotations () {\n    this.eachAnnotation(annotation => annotation.dispose())\n    this.annotationList.length = 0\n  }\n\n  /**\n   * Add a new representation to the component\n   * @param {String} type - the name of the representation\n   * @param {Object} object - the object on which the representation should be based\n   * @param {RepresentationParameters} [params] - representation parameters\n   * @return {RepresentationElement} the created representation wrapped into\n   *                                   a representation element object\n   */\n  protected _addRepresentation (type: string, object: any, params: any, hidden = false) {  // TODO\n    const p = params || {}\n    const sp = this.stage.getParameters() as any  // TODO\n    p.matrix = this.matrix.clone()\n    p.quality = p.quality || sp.quality\n    p.disableImpostor = defaults(p.disableImpostor, !sp.impostor)\n    p.useWorker = defaults(p.useWorker, sp.workerDefault)\n    p.visible = defaults(p.visible, true)\n\n    const p2 = Object.assign({}, p, { visible: this.parameters.visible && p.visible })\n    const repr = makeRepresentation(type, object, this.viewer, p2)\n    const reprElem = new RepresentationElement(this.stage, repr, p, this)\n\n    if (!hidden) {\n      this.reprList.push(reprElem)\n      this.signals.representationAdded.dispatch(reprElem)\n    }\n    return reprElem\n  }\n\n  abstract addRepresentation (type: any, params: any): any\n\n  addBufferRepresentation (buffer: any, params: any) {  // TODO\n    return this._addRepresentation.call(this, 'buffer', buffer, params)\n  }\n\n  hasRepresentation (repr: RepresentationElement) {\n    return this.reprList.indexOf(repr) !== -1\n  }\n\n  /**\n   * Iterator over each representation and executing the callback\n   * @param  {Function} callback - function to execute\n   * @return {undefined}\n   */\n  eachRepresentation (callback: (repr: RepresentationElement) => void) {\n    this.reprList.slice().forEach(callback)\n  }\n\n  /**\n   * Removes a representation component\n   * @param {RepresentationElement} repr - the representation element\n   * @return {undefined}\n   */\n  removeRepresentation (repr: RepresentationElement) {\n    const idx = this.reprList.indexOf(repr)\n    if (idx !== -1) {\n      this.reprList.splice(idx, 1)\n      repr.dispose()\n      this.signals.representationRemoved.dispatch(repr)\n    }\n  }\n\n  updateRepresentations (what: any) {  // TODO\n    this.reprList.forEach(repr => repr.update(what))\n    this.stage.viewer.requestRender()\n  }\n\n  /**\n   * Removes all representation components\n   * @return {undefined}\n   */\n  removeAllRepresentations () {\n    this.eachRepresentation(repr => repr.dispose())\n  }\n\n  dispose () {\n    this.removeAllAnnotations()\n    this.removeAllRepresentations()\n\n    delete this.annotationList\n    delete this.reprList\n\n    this.signals.disposed.dispatch()\n  }\n\n  /**\n   * Set the visibility of the component, including added representations\n   * @param {Boolean} value - visibility flag\n   * @return {Component} this object\n   */\n  setVisibility (value: boolean) {\n    this.parameters.visible = value\n\n    this.eachRepresentation((repr: RepresentationElement) => repr.updateVisibility())\n    this.eachAnnotation((annotation: Annotation) => annotation.updateVisibility())\n\n    this.signals.visibilityChanged.dispatch(value)\n\n    return this\n  }\n\n  setStatus (value: string) {\n    this.parameters.status = value\n    this.signals.statusChanged.dispatch(value)\n\n    return this\n  }\n\n  setName (value: string) {\n    this.parameters.name = value\n    this.signals.nameChanged.dispatch(value)\n\n    return this\n  }\n\n  /**\n   * @return {Box3} the component's bounding box\n   */\n  getBox (...args: any[]) {\n    return this.getBoxUntransformed(...args)\n              .clone().applyMatrix4(this.matrix)\n  }\n\n  /**\n   * @return {Vector3} the component's center position\n   */\n  getCenter (...args: any[]) {\n    return this.getCenterUntransformed(...args)\n              .clone().applyMatrix4(this.matrix)\n  }\n\n  getZoom (...args: any[]) {\n    return this.stage.getZoomForBox(this.getBox(...args))\n  }\n\n  /**\n   * @abstract\n   * @return {Box3} the untransformed component's bounding box\n   */\n  getBoxUntransformed (...args: any[]): Box3 {\n    return new Box3()\n  }\n\n  getCenterUntransformed (...args: any[]) {\n    return this.getBoxUntransformed().getCenter(new Vector3())\n  }\n\n  /**\n   * Automatically center and zoom the component\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\n   * @return {undefined}\n   */\n  autoView (duration?: number) {\n    this.stage.animationControls.zoomMove(\n      this.getCenter(),\n      this.getZoom(),\n      defaults(duration, 0)\n    )\n  }\n}\n\nexport default Component\n","/**\n * @file Collection\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Component from './component'\nimport Element from './element'\n\nclass Collection<T extends (Component|Element)> {\n  constructor (readonly list: T[] = []) {\n    // remove elements from list when they get disposed\n    const n = list.length\n\n    for (let i = 0; i < n; ++i) {\n      const elm = list[ i ]\n      elm.signals.disposed.add(this._remove, this)\n    }\n  }\n\n  _remove (elm: T) {\n    const idx = this.list.indexOf(elm)\n\n    if (idx !== -1) {\n      this.list.splice(idx, 1)\n    }\n  }\n\n  get first () {\n    return this.list.length > 0 ? this.list[0] : undefined\n  }\n\n  forEach (fn: (x: T) => any) {\n    this.list.forEach(fn)\n\n    return this\n  }\n\n  dispose () {\n    return this.forEach((elm) => elm.dispose())\n  }\n}\n\nexport default Collection\n","/**\n * @file Component Collection\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Color } from 'three'\n\nimport RepresentationElement from './representation-element'\nimport Collection from './collection'\n\nclass RepresentationCollection extends Collection<RepresentationElement> {\n  setParameters (params: any) {\n    return this.forEach((repr) => repr.setParameters(params))\n  }\n\n  setVisibility (value: boolean) {\n    return this.forEach((repr) => repr.setVisibility(value))\n  }\n\n  setSelection (string: string) {\n    return this.forEach((repr) => repr.setSelection(string))\n  }\n\n  setColor (color: number|string|Color) {\n    return this.forEach((repr) => repr.setColor(color))\n  }\n\n  update (what: any) {\n    return this.forEach((repr) => repr.update(what))\n  }\n\n  build (params?: any) {\n    return this.forEach((repr) => repr.build(params))\n  }\n\n  dispose (params?: any) {\n    return this.forEach((repr) => repr.dispose())\n  }\n}\n\nexport default RepresentationCollection\n","/**\n * @file Trajectory Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport Element, { ElementSignals, ElementDefaultParameters } from './element'\nimport Stage from '../stage/stage'\nimport Trajectory, { TrajectoryParameters } from '../trajectory/trajectory'\nimport TrajectoryPlayer, {\n  TrajectoryPlayerDirection, TrajectoryPlayerMode, TrajectoryPlayerInterpolateType\n} from '../trajectory/trajectory-player'\n\n/**\n * Trajectory component parameter object.\n * @typedef {Object} TrajectoryComponentParameters - component parameters\n *\n * @property {String} name - component name\n * @property {Integer} initialFrame - initial frame the trajectory is set to\n * @property {Integer} defaultStep - default step size to be used by trajectory players\n * @property {Integer} defaultTimeout - default timeout to be used by trajectory players\n * @property {String} defaultInterpolateType - one of \"\" (empty string), \"linear\" or \"spline\"\n * @property {Integer} defaultInterpolateStep - window size used for interpolation\n * @property {String} defaultMode - either \"loop\" or \"once\"\n * @property {String} defaultDirection - either \"forward\" or \"backward\"\n */\n\nexport const TrajectoryElementDefaultParameters = Object.assign({\n  defaultStep: 1,\n  defaultTimeout: 50,\n  defaultInterpolateType: '' as TrajectoryPlayerInterpolateType,\n  defaultInterpolateStep: 5,\n  defaultMode: 'loop' as TrajectoryPlayerMode,\n  defaultDirection: 'forward' as TrajectoryPlayerDirection,\n  initialFrame: 0\n}, ElementDefaultParameters)\nexport type TrajectoryElementParameters = typeof TrajectoryElementDefaultParameters\n\nexport interface TrajectoryElementSignals extends ElementSignals {\n  frameChanged: Signal  // on frame change\n  playerChanged: Signal  // on player change\n  countChanged: Signal  // when frame count is available\n  parametersChanged: Signal  // on parameters change\n}\n\n/**\n * Component wrapping a {@link Trajectory} object\n */\nclass TrajectoryElement extends Element {\n  signals: TrajectoryElementSignals\n  parameters: TrajectoryElementParameters\n  get defaultParameters () { return TrajectoryElementDefaultParameters }\n\n  /**\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {Trajectory} trajectory - the trajectory object\n   * @param {TrajectoryComponentParameters} params - component parameters\n   * @param {StructureComponent} parent - the parent structure\n   */\n  constructor (stage: Stage, readonly trajectory: Trajectory, params: Partial<TrajectoryElementParameters> = {}) {\n    super(stage, Object.assign({ name: trajectory.name }, params))\n\n    this.signals = Object.assign(this.signals, {\n      frameChanged: new Signal(),\n      playerChanged: new Signal(),\n      countChanged: new Signal(),\n      parametersChanged: new Signal()\n    })\n\n    // signals\n\n    trajectory.signals.frameChanged.add((i: number) => {\n      this.signals.frameChanged.dispatch(i)\n    })\n\n    trajectory.signals.playerChanged.add((player: TrajectoryPlayer) => {\n      this.signals.playerChanged.dispatch(player)\n    })\n\n    trajectory.signals.countChanged.add((n: number) => {\n      this.signals.countChanged.dispatch(n)\n    })\n\n    //\n\n    if (params.initialFrame !== undefined) {\n      this.setFrame(params.initialFrame)\n    }\n  }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'trajectory' }\n\n  /**\n   * Set the frame of the trajectory\n   * @param {Integer} i - frame number\n   * @return {undefined}\n   */\n  setFrame (i: number) {\n    this.trajectory.setFrame(i)\n  }\n\n  /**\n   * Set trajectory parameters\n   * @param {TrajectoryParameters} params - trajectory parameters\n   * @return {undefined}\n   */\n  setParameters (params: Partial<TrajectoryParameters> = {}) {\n    this.trajectory.setParameters(params)\n    this.signals.parametersChanged.dispatch(params)\n  }\n\n  dispose () {\n    this.trajectory.dispose()\n    super.dispose()\n  }\n}\n\nexport default TrajectoryElement\n","/**\n * @file Frames\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nexport default class Frames {\n  coordinates = []\n  boxes = []\n  times = []\n\n  timeOffset = 0\n  deltaTime = 1\n\n  constructor (readonly name: string, readonly path: string) {}\n\n  get type () { return 'Frames' }\n}\n","/**\n * @file Superposition\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\nimport { Debug, Log } from '../globals'\nimport {\n    Matrix, svd, meanRows, subRows, transpose,\n    multiplyABt, invert3x3, multiply3x3, mat3x3determinant, multiply\n} from '../math/matrix-utils'\nimport Structure from '../structure/structure'\n\nclass Superposition {\n  coords1t: Matrix\n  coords2t: Matrix\n\n  transformationMatrix: Matrix4\n\n  mean1: number[]\n  mean2: number[]\n\n  A = new Matrix(3, 3)\n  W = new Matrix(1, 3)\n  U = new Matrix(3, 3)\n  V = new Matrix(3, 3)\n  VH = new Matrix(3, 3)\n  R = new Matrix(3, 3)\n\n  private tmp = new Matrix(3, 3)\n  private c = new Matrix(3, 3)\n\n  constructor (atoms1: Structure|Float32Array, atoms2: Structure|Float32Array) {\n    // allocate & init data structures\n\n    let n1\n    if (atoms1 instanceof Structure) {\n      n1 = atoms1.atomCount\n    } else if (atoms1 instanceof Float32Array) {\n      n1 = atoms1.length / 3\n    } else {\n      return\n    }\n\n    let n2\n    if (atoms2 instanceof Structure) {\n      n2 = atoms2.atomCount\n    } else if (atoms2 instanceof Float32Array) {\n      n2 = atoms2.length / 3\n    } else {\n      return\n    }\n\n    const n = Math.min(n1, n2)\n\n    const coords1 = new Matrix(3, n)\n    const coords2 = new Matrix(3, n)\n\n    this.coords1t = new Matrix(n, 3)\n    this.coords2t = new Matrix(n, 3)\n\n    this.transformationMatrix = new Matrix4()\n\n    this.c.data.set([ 1, 0, 0, 0, 1, 0, 0, 0, -1 ])\n\n    // prep coords\n\n    this.prepCoords(atoms1, coords1, n, false)\n    this.prepCoords(atoms2, coords2, n, false)\n\n    // superpose\n\n    this._superpose(coords1, coords2)\n  }\n\n  _superpose (coords1: Matrix, coords2: Matrix) {\n    this.mean1 = meanRows(coords1)\n    this.mean2 = meanRows(coords2)\n\n    subRows(coords1, this.mean1)\n    subRows(coords2, this.mean2)\n\n    transpose(this.coords1t, coords1)\n    transpose(this.coords2t, coords2)\n\n    multiplyABt(this.A, this.coords2t, this.coords1t)\n\n    svd(this.A, this.W, this.U, this.V)\n\n    invert3x3(this.V, this.VH)\n    multiply3x3(this.R, this.U, this.VH)\n\n    if (mat3x3determinant(this.R) < 0.0) {\n      if (Debug) Log.log('R not a right handed system')\n\n      multiply3x3(this.tmp, this.c, this.VH)\n      multiply3x3(this.R, this.U, this.tmp)\n    }\n\n    //get the transformation matrix\n\n    const transformMat_ = new Matrix(4,4)\n    const tmp_1 = new Matrix(4,4)\n    const tmp_2 = new Matrix(4,4)\n\n    const sub = new Matrix(4,4)\n    const mult = new Matrix(4,4)\n    const add = new Matrix(4,4)\n\n    const R = this.R.data\n    const M1 = this.mean1\n    const M2 = this.mean2\n\n    sub.data.set([ 1, 0, 0, -M1[0],\n                   0, 1, 0, -M1[1],\n                   0, 0, 1, -M1[2],\n                   0, 0, 0, 1 ])\n\n    mult.data.set([ R[0], R[1], R[2], 0,\n                    R[3], R[4], R[5], 0,\n                    R[6], R[7], R[8], 0,\n                    0, 0, 0, 1 ])\n\n    add.data.set([ 1, 0, 0, M2[0],\n                   0, 1, 0, M2[1],\n                   0, 0, 1, M2[2],\n                   0, 0, 0, 1 ])\n\n    transpose(tmp_1,sub)\n    multiplyABt(transformMat_,mult,tmp_1)\n    transpose(tmp_2,transformMat_)\n    multiplyABt(tmp_1,add,tmp_2)\n\n    transpose(transformMat_,tmp_1)\n    this.transformationMatrix.elements = transformMat_.data as unknown as number[]\n\n  }\n\n  prepCoords (atoms: Structure|Float32Array, coords: Matrix, n: number, is4X4: boolean) {\n    let i = 0\n    const cd = coords.data\n\n    let c = 3\n    let d = n * 3\n\n    if (is4X4) {\n      d = n * 4\n      c = 4\n    }\n    if (atoms instanceof Structure) {\n      atoms.eachAtom(function (a) {\n        if (i < d) {\n          cd[ i + 0 ] = a.x\n          cd[ i + 1 ] = a.y\n          cd[ i + 2 ] = a.z\n          if (is4X4) cd[ i + 3 ] = 1\n\n          i += c\n        }\n      })\n    } else if (atoms instanceof Float32Array) {\n      for (; i < d; i += c){\n        if (i < d) {\n          cd[ i ] = atoms[ i ]\n          cd[ i + 1 ] = atoms[ i + 1 ]\n          cd[ i + 2 ] = atoms[ i + 2 ]\n          if (is4X4) cd[ i + 3 ] = 1\n        }\n      }\n    } else {\n      Log.warn('prepCoords: input type unknown')\n    }\n  }\n\n  transform (atoms: Structure|Float32Array) {\n    // allocate data structures\n\n    let n\n    if (atoms instanceof Structure) {\n      n = atoms.atomCount\n    } else if (atoms instanceof Float32Array) {\n      n = atoms.length / 3\n    } else {\n      return\n    }\n\n    const coords = new Matrix(4, n)\n    const tCoords = new Matrix(n,4)\n\n    // prep coords\n\n    this.prepCoords(atoms, coords, n, true)\n\n    // check for transformation matrix correctness\n\n    const transform = this.transformationMatrix\n    const det = transform.determinant()\n    if (!det){\n      return det\n    }\n\n    // do transform\n\n    const mult = new Matrix(4,4)\n    mult.data = transform.elements as unknown as Float32Array\n    multiply(tCoords,coords,mult)\n\n    let i = 0\n    const cd = tCoords.data\n    if (atoms instanceof Structure) {\n        atoms.eachAtom(function (a) {\n          a.x = cd[ i ]\n          a.y = cd[ i + 1 ]\n          a.z = cd[ i + 2 ]\n          i += 4\n        })\n\n        //update transformation matrices for each assembly\n\n        const invertTrasform = new Matrix4()\n        invertTrasform.getInverse(transform)\n\n        const biomolDict = atoms.biomolDict\n\n        for (let key in biomolDict) {\n\n          if (biomolDict.hasOwnProperty(key)) {\n            let assembly = biomolDict[key]\n\n            assembly.partList.forEach(function(part){\n\n              part.matrixList.forEach(function(mat){\n\n                mat.premultiply(transform)\n                mat.multiply(invertTrasform)\n\n              })\n            })\n          }\n        }\n    } else if (atoms instanceof Float32Array) {\n\n      const n4 = n * 4\n      for (; i < n4; i += 4){\n\n        atoms[ i ] = cd[ i ]\n        atoms[ i + 1 ] = cd[ i + 1 ]\n        atoms[ i + 2 ] = cd[ i + 2 ]\n\n      }\n    } else {\n      Log.warn('transform: input type unknown')\n    }\n\n    return this.transformationMatrix\n  }\n}\nexport default Superposition\n","/**\n * @file Trajectory Player\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { defaults, createParams, updateParams } from '../utils'\nimport Trajectory from './trajectory'\n\nexport type TrajectoryPlayerInterpolateType = ''|'linear'|'spline'\nexport type TrajectoryPlayerMode = 'loop'|'once'\nexport type TrajectoryPlayerDirection = 'forward'|'backward'|'bounce'\n\nexport const TrajectoryPlayerDefaultParameters = {\n  step: 1,  // how many frames to advance when playing\n  timeout: 50,  // how many milliseconds to wait between playing frames\n  start: 0,  // first frame to play\n  end: 0,  // last frame to play\n  interpolateType: '' as TrajectoryPlayerInterpolateType,\n  interpolateStep: 5,  // window size used for interpolation\n  mode: 'loop' as TrajectoryPlayerMode,\n  direction: 'forward' as TrajectoryPlayerDirection\n}\nexport type TrajectoryPlayerParameters = typeof TrajectoryPlayerDefaultParameters\n\nexport interface TrajectoryPlayerSignals {\n  startedRunning: Signal\n  haltedRunning: Signal\n}\n\n/**\n * Trajectory player for animating coordinate frames\n * @example\n * var player = new TrajectoryPlayer(trajectory, {step: 1, timeout: 50});\n * player.play();\n */\nclass TrajectoryPlayer {\n  signals: TrajectoryPlayerSignals = {\n    startedRunning: new Signal(),\n    haltedRunning: new Signal()\n  }\n\n  parameters: TrajectoryPlayerParameters\n  traj: Trajectory\n\n  private _run = false\n  private _previousTime = 0\n  private _currentTime = 0\n  private _currentStep = 1\n  private _currentFrame: number|[number, number, number, number]\n  private _direction: TrajectoryPlayerDirection\n\n  /**\n   * make trajectory player\n   * @param {Trajectory} traj - the trajectory\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\n   */\n  constructor (traj: Trajectory, params: Partial<TrajectoryPlayerParameters> = {}) {\n    traj.signals.playerChanged.add((player: TrajectoryPlayer) => {\n      if (player !== this) {\n        this.pause()\n      }\n    }, this)\n\n    const n = defaults(traj.frameCount, 1)\n\n    this.traj = traj\n    this.parameters = createParams(params, TrajectoryPlayerDefaultParameters)\n    this.parameters.end = Math.min(defaults(params.end, n - 1), n - 1)\n    this.parameters.step = defaults(params.step, Math.ceil((n + 1) / 100))\n\n    this._currentFrame = this.parameters.start\n    this._direction = this.parameters.direction === 'bounce' ? 'forward' : this.parameters.direction\n\n    traj.signals.countChanged.add((n: number) => {\n      this.parameters.end = Math.min(defaults(this.parameters.end, n - 1), n - 1)\n    }, this)\n\n    this._animate = this._animate.bind(this)\n  }\n\n  get isRunning () { return this._run }\n\n  /**\n   * set player parameters\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\n   */\n  setParameters (params: Partial<TrajectoryPlayerParameters> = {}) {\n    updateParams(this.parameters, params)\n\n    if (params.direction !== undefined && this.parameters.direction !== 'bounce') {\n      this._direction = this.parameters.direction\n    }\n  }\n\n  _animate () {\n    if (!this._run) return\n\n    this._currentTime = window.performance.now()\n    const dt = this._currentTime - this._previousTime\n    const step = this.parameters.interpolateType ? this.parameters.interpolateStep : 1\n    const timeout = this.parameters.timeout / step\n    const traj = this.traj\n\n    if (traj && traj.frameCount && !traj.inProgress && dt >= timeout) {\n      if (this.parameters.interpolateType) {\n        if (this._currentStep > this.parameters.interpolateStep) {\n          this._currentStep = 1\n        }\n        if (this._currentStep === 1) {\n          this._currentFrame = this._nextInterpolated()\n        }\n        if (traj.hasFrame(this._currentFrame)) {\n          this._currentStep += 1\n          const t = this._currentStep / (this.parameters.interpolateStep + 1)\n          const [i, ip, ipp, ippp] = this._currentFrame as [number, number, number, number]\n          traj.setFrameInterpolated(\n            i, ip, ipp, ippp, t, this.parameters.interpolateType\n          )\n          this._previousTime = this._currentTime\n        } else {\n          traj.loadFrame(this._currentFrame)\n        }\n      } else {\n        const i = this._next()\n        if (traj.hasFrame(i)) {\n          traj.setFrame(i)\n          this._previousTime = this._currentTime\n        } else {\n          traj.loadFrame(i)\n        }\n      }\n    }\n\n    window.requestAnimationFrame(this._animate)\n  }\n\n  _next () {\n    const p = this.parameters\n    let i\n\n    if (this._direction === 'forward') {\n      i = this.traj.currentFrame + p.step\n    } else {\n      i = this.traj.currentFrame - p.step\n    }\n\n    if (i > p.end || i < p.start) {\n      if (p.direction === 'bounce') {\n        if (this._direction === 'forward') {\n          this._direction = 'backward'\n        } else {\n          this._direction = 'forward'\n        }\n      }\n\n      if (p.mode === 'once') {\n        this.pause()\n\n        if (p.direction === 'forward') {\n          i = p.end\n        } else if (p.direction === 'backward') {\n          i = p.start\n        } else {\n          if (this._direction === 'forward') {\n            i = p.start\n          } else {\n            i = p.end\n          }\n        }\n      } else {\n        if (this._direction === 'forward') {\n          i = p.start\n          if (p.interpolateType) {\n            i = Math.min(p.end, i + p.step)\n          }\n        } else {\n          i = p.end\n          if (p.interpolateType) {\n            i = Math.max(p.start, i - p.step)\n          }\n        }\n      }\n    }\n\n    return i\n  }\n\n  _nextInterpolated () {\n    const p = this.parameters\n    const i = this._next()\n    let ip, ipp, ippp\n\n    if (this._direction === 'forward') {\n      ip = Math.max(p.start, i - p.step)\n      ipp = Math.max(p.start, i - 2 * p.step)\n      ippp = Math.max(p.start, i - 3 * p.step)\n    } else {\n      ip = Math.min(p.end, i + p.step)\n      ipp = Math.min(p.end, i + 2 * p.step)\n      ippp = Math.min(p.end, i + 3 * p.step)\n    }\n\n    return [i, ip, ipp, ippp] as [number, number, number, number]\n  }\n\n  /**\n   * toggle between playing and pausing the animation\n   * @return {undefined}\n   */\n  toggle () {\n    if (this._run) {\n      this.pause()\n    } else {\n      this.play()\n    }\n  }\n\n  /**\n   * start the animation\n   * @return {undefined}\n   */\n  play () {\n    if (!this._run) {\n      if (this.traj.player !== this) {\n        this.traj.setPlayer(this)\n      }\n      this._currentStep = 1\n\n      const p = this.parameters\n      const frame = this.traj.currentFrame\n\n      // snap to the grid implied by this.step division and multiplication\n      // thus minimizing cache misses\n      let i = Math.ceil(frame / p.step) * p.step\n      // wrap when restarting from the limit (i.e. end or start)\n      if (p.direction === 'forward' && frame >= p.end) {\n        i = p.start\n      } else if (p.direction === 'backward' && frame <= p.start) {\n        i = p.end\n      }\n\n      this.traj.setFrame(i)\n\n      this._run = true\n      this._animate()\n      this.signals.startedRunning.dispatch()\n    }\n  }\n\n  /**\n   * pause the animation\n   * @return {undefined}\n   */\n  pause () {\n    this._run = false\n    this.signals.haltedRunning.dispatch()\n  }\n\n  /**\n   * stop the animation (pause and go to start-frame)\n   * @return {undefined}\n   */\n  stop () {\n    this.pause()\n    this.traj.setFrame(this.parameters.start)\n  }\n}\n\nexport default TrajectoryPlayer\n","/**\n * @file Trajectory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { Log } from '../globals'\nimport { defaults } from '../utils'\nimport { NumberArray } from '../types'\nimport { circularMean, arrayMean } from '../math/array-utils'\nimport { lerp, spline } from '../math/math-utils'\nimport Selection from '../selection/selection'\nimport Superposition from '../align/superposition'\nimport Structure from '../structure/structure'\nimport AtomProxy from '../proxy/atom-proxy'\nimport TrajectoryPlayer, { TrajectoryPlayerInterpolateType } from './trajectory-player'\n\n\nfunction centerPbc (coords: NumberArray, mean: number[], box: ArrayLike<number>) {\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\n    return\n  }\n\n  const n = coords.length\n\n  const bx = box[ 0 ]\n  const by = box[ 1 ]\n  const bz = box[ 2 ]\n  const mx = mean[ 0 ]\n  const my = mean[ 1 ]\n  const mz = mean[ 2 ]\n\n  const fx = -mx + bx + bx / 2\n  const fy = -my + by + by / 2\n  const fz = -mz + bz + bz / 2\n\n  for (let i = 0; i < n; i += 3) {\n    coords[ i + 0 ] = (coords[ i + 0 ] + fx) % bx\n    coords[ i + 1 ] = (coords[ i + 1 ] + fy) % by\n    coords[ i + 2 ] = (coords[ i + 2 ] + fz) % bz\n  }\n}\n\nfunction removePbc (x: NumberArray, box: ArrayLike<number>) {\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\n    return\n  }\n\n  // ported from GROMACS src/gmxlib/rmpbc.c:rm_gropbc()\n  // in-place\n\n  const n = x.length\n\n  for (let i = 3; i < n; i += 3) {\n    for (let j = 0; j < 3; ++j) {\n      const dist = x[ i + j ] - x[ i - 3 + j ]\n\n      if (Math.abs(dist) > 0.9 * box[ j * 3 + j ]) {\n        if (dist > 0) {\n          for (let d = 0; d < 3; ++d) {\n            x[ i + d ] -= box[ j * 3 + d ]\n          }\n        } else {\n          for (let d = 0; d < 3; ++d) {\n            x[ i + d ] += box[ j * 3 + d ]\n          }\n        }\n      }\n    }\n  }\n\n  return x\n}\n\nfunction removePeriodicity (x: NumberArray, box: ArrayLike<number>, mean: number[]) {\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\n    return\n  }\n\n  const n = x.length\n  for (let i = 3; i < n; i += 3) {\n    for (let j = 0; j < 3; ++j) {\n      const f = (x[ i + j ] - mean[ j ]) / box[ j * 3 + j ]\n      if (Math.abs(f) > 0.5) {\n        x[ i + j ] -= box[ j * 3 + j ] * Math.round(f)\n      }\n    }\n  }\n\n  return x\n}\n\nfunction circularMean3 (indices: NumberArray, coords: NumberArray, box: ArrayLike<number>) {\n  return [\n    circularMean(coords, box[ 0 ], 3, 0, indices),\n    circularMean(coords, box[ 1 ], 3, 1, indices),\n    circularMean(coords, box[ 2 ], 3, 2, indices)\n  ]\n}\n\nfunction arrayMean3 (coords: NumberArray) {\n  return [\n    arrayMean(coords, 3, 0),\n    arrayMean(coords, 3, 1),\n    arrayMean(coords, 3, 2)\n  ]\n}\n\nfunction interpolateSpline (c: NumberArray, cp: NumberArray, cpp: NumberArray, cppp: NumberArray, t: number) {\n  const m = c.length\n  const coords = new Float32Array(m)\n\n  for (let j0 = 0; j0 < m; j0 += 3) {\n    const j1 = j0 + 1\n    const j2 = j0 + 2\n    coords[ j0 ] = spline(cppp[ j0 ], cpp[ j0 ], cp[ j0 ], c[ j0 ], t, 1)\n    coords[ j1 ] = spline(cppp[ j1 ], cpp[ j1 ], cp[ j1 ], c[ j1 ], t, 1)\n    coords[ j2 ] = spline(cppp[ j2 ], cpp[ j2 ], cp[ j2 ], c[ j2 ], t, 1)\n  }\n\n  return coords\n}\n\nfunction interpolateLerp (c: NumberArray, cp: NumberArray, t: number) {\n  const m = c.length\n  const coords = new Float32Array(m)\n\n  for (let j0 = 0; j0 < m; j0 += 3) {\n    const j1 = j0 + 1\n    const j2 = j0 + 2\n    coords[ j0 ] = lerp(cp[ j0 ], c[ j0 ], t)\n    coords[ j1 ] = lerp(cp[ j1 ], c[ j1 ], t)\n    coords[ j2 ] = lerp(cp[ j2 ], c[ j2 ], t)\n  }\n\n  return coords\n}\n\n/**\n * Trajectory parameter object.\n * @typedef {Object} TrajectoryParameters - parameters\n *\n * @property {Number} deltaTime - timestep between frames in picoseconds\n * @property {Number} timeOffset - starting time of frames in picoseconds\n * @property {String} sele - to restrict atoms used for superposition\n * @property {Boolean} centerPbc - center on initial frame\n * @property {Boolean} removePeriodicity - move atoms into the origin box\n * @property {Boolean} remo - try fixing periodic boundary discontinuities\n * @property {Boolean} superpose - superpose on initial frame\n */\n\n/**\n * @example\n * trajectory.signals.frameChanged.add( function(i){ ... } );\n *\n * @typedef {Object} TrajectorySignals\n * @property {Signal<Integer>} countChanged - when the frame count is changed\n * @property {Signal<Integer>} frameChanged - when the set frame is changed\n * @property {Signal<TrajectoryPlayer>} playerChanged - when the player is changed\n */\n\nexport interface TrajectoryParameters {\n  deltaTime: number  // timestep between frames in picoseconds\n  timeOffset: number  // starting time of frames in picoseconds\n  sele: string  // to restrict atoms used for superposition\n  centerPbc: boolean  // center on initial frame\n  removePbc: boolean  // move atoms into the origin box\n  removePeriodicity: boolean  // try fixing periodic boundary discontinuities\n  superpose: boolean  // superpose on initial frame\n}\n\nexport interface TrajectorySignals {\n  countChanged: Signal\n  frameChanged: Signal\n  playerChanged: Signal\n}\n\n/**\n * Base class for trajectories, tying structures and coordinates together\n * @interface\n */\nclass Trajectory {\n  signals: TrajectorySignals = {\n    countChanged: new Signal(),\n    frameChanged: new Signal(),\n    playerChanged: new Signal()\n  }\n\n  deltaTime: number\n  timeOffset: number\n  sele: string\n  centerPbc: boolean\n  removePbc: boolean\n  removePeriodicity: boolean\n  superpose: boolean\n\n  name: string\n  frame: number\n  trajPath: string\n\n  initialCoords: Float32Array\n  structureCoords: Float32Array\n  selectionIndices: NumberArray\n  backboneIndices: NumberArray\n\n  coords1: Float32Array\n  coords2: Float32Array\n\n  frameCache: { [k: number]: Float32Array } = {}\n  loadQueue: { [k: number]: boolean } = {}\n  boxCache: { [k: number]: ArrayLike<number> } = {}\n  pathCache = {}\n  frameCacheSize = 0\n\n  atomCount: number\n  inProgress: boolean\n\n  selection: Selection  // selection to restrict atoms used for superposition\n  structure: Structure\n  player: TrajectoryPlayer\n\n  private _frameCount = 0\n  private _currentFrame = -1\n  private _disposed = false\n\n  /**\n   * @param {String} trajPath - trajectory source\n   * @param {Structure} structure - the structure object\n   * @param {TrajectoryParameters} params - trajectory parameters\n   */\n  constructor (trajPath: string, structure: Structure, params: Partial<TrajectoryParameters> = {}) {\n    this.deltaTime = defaults(params.deltaTime, 0)\n    this.timeOffset = defaults(params.timeOffset, 0)\n    this.centerPbc = defaults(params.centerPbc, false)\n    this.removePbc = defaults(params.removePbc, false)\n    this.removePeriodicity = defaults(params.removePeriodicity, false)\n    this.superpose = defaults(params.superpose, false)\n\n    this.name = trajPath.replace(/^.*[\\\\/]/, '')\n    this.trajPath = trajPath\n\n    this.selection = new Selection(\n      defaults(params.sele, 'backbone and not hydrogen')\n    )\n\n    this.selection.signals.stringChanged.add(() => {\n      this.selectionIndices = this.structure.getAtomIndices(this.selection)!\n      this._resetCache()\n      this._saveInitialCoords()\n      this.setFrame(this._currentFrame)\n    })\n  }\n\n  /**\n   * Number of frames in the trajectory\n   */\n  get frameCount () {\n    return this._frameCount\n  }\n\n  /**\n   * Currently set frame of the trajectory\n   */\n  get currentFrame () {\n    return this._currentFrame\n  }\n\n  _init (structure: Structure) {\n    this.setStructure(structure)\n    this._loadFrameCount()\n    this.setPlayer(new TrajectoryPlayer(this))\n  }\n\n  _loadFrameCount () {}\n\n  setStructure (structure: Structure) {\n    this.structure = structure\n    this.atomCount = structure.atomCount\n\n    this.backboneIndices = this._getIndices(\n      new Selection('backbone and not hydrogen')\n    )\n    this._makeAtomIndices()\n    this._saveStructureCoords()\n\n    this.selectionIndices = this._getIndices(this.selection)\n    this._resetCache()\n    this._saveInitialCoords()\n    this.setFrame(this._currentFrame)\n  }\n\n  _saveInitialCoords () {\n    if (this.structure.hasCoords()) {\n      this.initialCoords = new Float32Array(this.structureCoords)\n      this._makeSuperposeCoords()\n    } else if (this.frameCache[0]) {\n      this.initialCoords = new Float32Array(this.frameCache[0])\n      this._makeSuperposeCoords()\n    } else {\n      this.loadFrame(0, () => this._saveInitialCoords())\n    }\n  }\n\n  _saveStructureCoords () {\n    const p = { what: { position: true } }\n    this.structureCoords = this.structure.getAtomData(p).position!\n  }\n\n  setSelection (string: string) {\n    this.selection.setString(string)\n    return this\n  }\n\n  _getIndices (selection: Selection) {\n    let i = 0\n    const test = selection.test\n    const indices: number[] = []\n\n    if (test) {\n      this.structure.eachAtom((ap: AtomProxy) => {\n        if (test(ap)) indices.push(i)\n        i += 1\n      })\n    }\n\n    return indices\n  }\n\n  _makeSuperposeCoords () {\n    const n = this.selectionIndices.length * 3\n\n    this.coords1 = new Float32Array(n)\n    this.coords2 = new Float32Array(n)\n\n    const y = this.initialCoords\n    const coords2 = this.coords2\n\n    for (let i = 0; i < n; i += 3) {\n      const j = this.selectionIndices[ i / 3 ] * 3\n\n      coords2[ i + 0 ] = y[ j + 0 ]\n      coords2[ i + 1 ] = y[ j + 1 ]\n      coords2[ i + 2 ] = y[ j + 2 ]\n    }\n  }\n\n  _makeAtomIndices () {\n    Log.error('Trajectory._makeAtomIndices not implemented')\n  }\n\n  _resetCache () {\n    this.frameCache = {}\n    this.loadQueue = {}\n    this.boxCache = {}\n    this.pathCache = {}\n    this.frameCacheSize = 0\n    this.initialCoords = new Float32Array(0)\n  }\n\n  setParameters (params: Partial<TrajectoryParameters> = {}) {\n    let resetCache = false\n\n    if (params.centerPbc !== undefined && params.centerPbc !== this.centerPbc) {\n      this.centerPbc = params.centerPbc\n      resetCache = true\n    }\n\n    if (params.removePeriodicity !== undefined && params.removePeriodicity !== this.removePeriodicity) {\n      this.removePeriodicity = params.removePeriodicity\n      resetCache = true\n    }\n\n    if (params.removePbc !== undefined && params.removePbc !== this.removePbc) {\n      this.removePbc = params.removePbc\n      resetCache = true\n    }\n\n    if (params.superpose !== undefined && params.superpose !== this.superpose) {\n      this.superpose = params.superpose\n      resetCache = true\n    }\n\n    this.deltaTime = defaults(params.deltaTime, this.deltaTime)\n    this.timeOffset = defaults(params.timeOffset, this.timeOffset)\n\n    if (resetCache) {\n      this._resetCache()\n      this.setFrame(this._currentFrame)\n    }\n  }\n\n  /**\n   * Check if a frame is available\n   * @param  {Integer|Integer[]} i - the frame index\n   * @return {Boolean} frame availability\n   */\n  hasFrame (i: number|number[]) {\n    if (Array.isArray(i)) {\n      return i.every(j => !!this.frameCache[j])\n    } else {\n      return !!this.frameCache[i]\n    }\n  }\n\n  /**\n   * Set trajectory to a frame index\n   * @param {Integer} i - the frame index\n   * @param {Function} [callback] - fired when the frame has been set\n   */\n  setFrame (i: number, callback?: Function) {\n    if (i === undefined) return this\n\n    this.inProgress = true\n\n    // i = parseInt(i)  // TODO\n\n    if (i === -1 || this.frameCache[ i ]) {\n      this._updateStructure(i)\n      if (callback) callback()\n    } else {\n      this.loadFrame(i, () => {\n        this._updateStructure(i)\n        if (callback) callback()\n      })\n    }\n\n    return this\n  }\n\n  _interpolate (i: number, ip: number, ipp: number, ippp: number, t: number, type: TrajectoryPlayerInterpolateType) {\n    const fc = this.frameCache\n\n    let coords\n    if (type === 'spline') {\n      coords = interpolateSpline(fc[ i ], fc[ ip ], fc[ ipp ], fc[ ippp ], t)\n    } else {\n      coords = interpolateLerp(fc[ i ], fc[ ip ], t)\n    }\n\n    this.structure.updatePosition(coords)\n    this._currentFrame = i\n    this.signals.frameChanged.dispatch(i)\n  }\n\n  /**\n   * Interpolated and set trajectory to frame indices\n   * @param {Integer} i - the frame index\n   * @param {Integer} ip - one before frame index\n   * @param {Integer} ipp - two before frame index\n   * @param {Integer} ippp - three before frame index\n   * @param {Number} t - interpolation step [0,1]\n   * @param {String} type - interpolation type, '', 'spline' or 'linear'\n   * @param {Function} callback - fired when the frame has been set\n   */\n  setFrameInterpolated (i: number, ip: number, ipp: number, ippp: number, t: number, type: TrajectoryPlayerInterpolateType, callback?: Function) {\n    if (i === undefined) return this\n\n    const fc = this.frameCache\n    const iList: number[] = []\n\n    if (!fc[ ippp ]) iList.push(ippp)\n    if (!fc[ ipp ]) iList.push(ipp)\n    if (!fc[ ip ]) iList.push(ip)\n    if (!fc[ i ]) iList.push(i)\n\n    if (iList.length) {\n      this.loadFrame(iList, () => {\n        this._interpolate(i, ip, ipp, ippp, t, type)\n        if (callback) callback()\n      })\n    } else {\n      this._interpolate(i, ip, ipp, ippp, t, type)\n      if (callback) callback()\n    }\n\n    return this\n  }\n\n  /**\n   * Load frame index\n   * @param {Integer|Integer[]} i - the frame index\n   * @param {Function} callback - fired when the frame has been loaded\n   */\n  loadFrame (i: number|number[], callback?: Function) {\n    if (Array.isArray(i)) {\n      i.forEach(j => {\n        if (!this.loadQueue[j] && !this.frameCache[j]) {\n          this.loadQueue[j] = true\n          this._loadFrame(j, () => {\n            delete this.loadQueue[j]\n          })\n        }\n      })\n    } else {\n      if (!this.loadQueue[i] && !this.frameCache[i]) {\n        this.loadQueue[i] = true\n        this._loadFrame(i, () => {\n          delete this.loadQueue[i]\n          if (callback) callback()\n        })\n      }\n    }\n  }\n\n  /**\n   * Load frame index\n   * @abstract\n   * @param {Integer} i - the frame index\n   * @param {Function} callback - fired when the frame has been loaded\n   */\n  _loadFrame (i: number, callback?: Function) {\n    Log.error('Trajectory._loadFrame not implemented', i, callback)\n  }\n\n  _updateStructure (i: number) {\n    if (this._disposed) {\n      console.error('updateStructure: traj disposed')\n      return\n    }\n\n    if (i === -1) {\n      if (this.structureCoords) {\n        this.structure.updatePosition(this.structureCoords)\n      }\n    } else {\n      this.structure.updatePosition(this.frameCache[ i ])\n    }\n\n    this.structure.trajectory = {\n      name: this.trajPath,\n      frame: i\n    }\n\n    this._currentFrame = i\n    this.inProgress = false\n    this.signals.frameChanged.dispatch(i)\n  }\n\n  _doSuperpose (x: Float32Array) {\n    const n = this.selectionIndices.length * 3\n\n    const coords1 = this.coords1\n    const coords2 = this.coords2\n\n    for (let i = 0; i < n; i += 3) {\n      const j = this.selectionIndices[ i / 3 ] * 3\n\n      coords1[ i + 0 ] = x[ j + 0 ]\n      coords1[ i + 1 ] = x[ j + 1 ]\n      coords1[ i + 2 ] = x[ j + 2 ]\n    }\n\n    // TODO re-use superposition object\n    const sp = new Superposition(coords1, coords2)\n    sp.transform(x)\n  }\n\n  _process (i: number, box: ArrayLike<number>, coords: Float32Array, frameCount: number) {\n    this._setFrameCount(frameCount)\n\n    if (box) {\n      if (this.backboneIndices.length > 0 && this.centerPbc) {\n        const box2 = [ box[ 0 ], box[ 4 ], box[ 8 ] ]\n        const circMean = circularMean3(this.backboneIndices, coords, box2)\n        centerPbc(coords, circMean, box2)\n      }\n\n      if (this.removePeriodicity) {\n        const mean = arrayMean3(coords)\n        removePeriodicity(coords, box, mean)\n      }\n\n      if (this.removePbc) {\n        removePbc(coords, box)\n      }\n    }\n\n    if (this.selectionIndices.length > 0 && this.coords1 && this.superpose) {\n      this._doSuperpose(coords)\n    }\n\n    this.frameCache[ i ] = coords\n    this.boxCache[ i ] = box\n    this.frameCacheSize += 1\n  }\n\n  _setFrameCount (n: number) {\n    if (n !== this._frameCount) {\n      this._frameCount = n\n      this.signals.countChanged.dispatch(n)\n    }\n  }\n\n  /**\n   * Dispose of the trajectory object\n   * @return {undefined}\n   */\n  dispose () {\n    this._resetCache()  // aid GC\n    this._disposed = true\n    if (this.player) this.player.stop()\n  }\n\n  /**\n   * Set player for this trajectory\n   * @param {TrajectoryPlayer} player - the player\n   */\n  setPlayer (player: TrajectoryPlayer) {\n    this.player = player\n    this.signals.playerChanged.dispatch(player)\n  }\n\n  /**\n   * Get time for frame\n   * @param  {Integer} i - frame index\n   * @return {Number} time in picoseconds\n   */\n  getFrameTime (i: number) {\n    return this.timeOffset + i * this.deltaTime\n  }\n}\n\nexport default Trajectory\n","/**\n * @file Frames Trajectory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport Structure from '../structure/structure'\nimport Frames from './frames'\nimport Trajectory, { TrajectoryParameters } from './trajectory'\n\n/**\n * Frames trajectory class. Gets data from a frames object.\n */\nclass FramesTrajectory extends Trajectory {\n  path: string\n\n  frames: ArrayLike<number>[]\n  boxes: ArrayLike<number>[]\n\n  atomIndices?: ArrayLike<number>\n\n  constructor (frames: Frames, structure: Structure, params: TrajectoryParameters) {\n    const p = params || {}\n    p.timeOffset = defaults(p.timeOffset, frames.timeOffset)\n    p.deltaTime = defaults(p.deltaTime, frames.deltaTime)\n\n    super('', structure, p)\n\n    this.name = frames.name\n    this.path = frames.path\n\n    this.frames = frames.coordinates\n    this.boxes = frames.boxes\n\n    this._init(structure)\n  }\n\n  get type () { return 'frames' }\n\n  _makeAtomIndices () {\n    if (this.structure.type === 'StructureView') {\n      this.atomIndices = this.structure.getAtomIndices()\n    } else {\n      this.atomIndices = undefined\n    }\n  }\n\n  _loadFrame (i: number, callback?: Function) {\n    let coords\n    const frame = this.frames[ i ]\n\n    if (this.atomIndices) {\n      const indices = this.atomIndices\n      const m = indices.length\n\n      coords = new Float32Array(m * 3)\n\n      for (let j = 0; j < m; ++j) {\n        const j3 = j * 3\n        const idx3 = indices[ j ] * 3\n\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\n      }\n    } else {\n      coords = new Float32Array(frame)\n    }\n\n    const box = this.boxes[ i ]\n    const frameCount = this.frames.length\n\n    this._process(i, box, coords, frameCount)\n\n    if (typeof callback === 'function') {\n      callback()\n    }\n  }\n\n  _loadFrameCount () {\n    if (this.frames) {\n      this._setFrameCount(this.frames.length)\n    }\n  }\n}\n\nexport default FramesTrajectory\n","/**\n * @file Structure Trajectory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport Trajectory, { TrajectoryParameters } from './trajectory'\n\n/**\n * Structure trajectory class. Gets data from a structure object.\n */\nclass StructureTrajectory extends Trajectory {\n  atomIndices?: ArrayLike<number>\n\n  constructor (trajPath: string, structure: Structure, params: TrajectoryParameters) {\n    super('', structure, params)\n    this._init(structure)\n  }\n\n  get type () { return 'structure' }\n\n  _makeAtomIndices () {\n    if (this.structure.atomSet && this.structure.atomSet.getSize() < this.structure.atomStore.count) {\n      this.atomIndices = this.structure.getAtomIndices()\n    } else {\n      this.atomIndices = undefined\n    }\n  }\n\n  _loadFrame (i: number, callback?: Function) {\n    let coords\n    const structure = this.structure\n    const frame = structure.frames[ i ]\n\n    if (this.atomIndices) {\n      const indices = this.atomIndices\n      const m = indices.length\n\n      coords = new Float32Array(m * 3)\n\n      for (let j = 0; j < m; ++j) {\n        const j3 = j * 3\n        const idx3 = indices[ j ] * 3\n\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\n      }\n    } else {\n      coords = new Float32Array(frame)\n    }\n\n    const box = structure.boxes[ i ]\n    const frameCount = structure.frames.length\n\n    this._process(i, box, coords, frameCount)\n\n    if (typeof callback === 'function') {\n      callback()\n    }\n  }\n\n  _loadFrameCount () {\n    this._setFrameCount(this.structure.frames.length)\n  }\n}\n\nexport default StructureTrajectory\n","/**\n * @file Remote Trajectory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log, TrajectoryDatasource } from '../globals'\nimport Structure from '../structure/structure'\nimport Trajectory, { TrajectoryParameters } from './trajectory'\n\n/**\n * Remote trajectory class. Gets data from an MDsrv instance.\n */\nclass RemoteTrajectory extends Trajectory {\n  atomIndices: number[][]\n\n  constructor (trajPath: string, structure: Structure, params: TrajectoryParameters) {\n    super(trajPath, structure, params)\n    this._init(structure)\n  }\n\n  get type () { return 'remote' }\n\n  _makeAtomIndices () {\n    const atomIndices = []\n\n    if (this.structure.type === 'StructureView') {\n      const indices = this.structure.getAtomIndices()!  // TODO\n      const n = indices.length\n\n      let p = indices[ 0 ]\n      let q = indices[ 0 ]\n\n      for (let i = 1; i < n; ++i) {\n        const r = indices[ i ]\n\n        if (q + 1 < r) {\n          atomIndices.push([ p, q + 1 ])\n          p = r\n        }\n\n        q = r\n      }\n\n      atomIndices.push([ p, q + 1 ])\n    } else {\n      atomIndices.push([ 0, this.atomCount ])\n    }\n\n    this.atomIndices = atomIndices\n  }\n\n  _loadFrame (i: number, callback?: Function) {\n    // TODO implement max frameCache size, re-use arrays\n\n    const request = new XMLHttpRequest()\n\n    const url = TrajectoryDatasource.getFrameUrl(this.trajPath, i)\n    const params = TrajectoryDatasource.getFrameParams(this.trajPath, this.atomIndices)\n\n    request.open('POST', url, true)\n    request.responseType = 'arraybuffer'\n    request.setRequestHeader(\n      'Content-type', 'application/x-www-form-urlencoded'\n    )\n\n    request.addEventListener('load', () => {\n      const arrayBuffer = request.response\n      if (!arrayBuffer) {\n        Log.error(`empty arrayBuffer for '${url}'`)\n        return\n      }\n\n      const frameCount = new Int32Array(arrayBuffer, 0, 1)[ 0 ]\n      // const time = new Float32Array( arrayBuffer, 1 * 4, 1 )[ 0 ];\n      const box = new Float32Array(arrayBuffer, 2 * 4, 9)\n      const coords = new Float32Array(arrayBuffer, 11 * 4)\n\n      this._process(i, box, coords, frameCount)\n      if (typeof callback === 'function') {\n        callback()\n      }\n    }, false)\n\n    request.send(params)\n  }\n\n  _loadFrameCount () {\n    const request = new XMLHttpRequest()\n\n    const url = TrajectoryDatasource.getCountUrl(this.trajPath)\n\n    request.open('GET', url, true)\n    request.addEventListener('load', () => {\n      this._setFrameCount(parseInt(request.response))\n    }, false)\n    request.send()\n  }\n}\n\nexport default RemoteTrajectory\n","/**\n * @file Callback Trajectory\n * @author Tarn W. Burton <twburton@gmail.com>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport Trajectory, { TrajectoryParameters } from './trajectory'\n\ntype RequestCallback = (responseCallback: Function, i?: number, atomIndices?: number[][]) => void\n\n/**\n * Callback trajectory class. Gets data from an JavaScript function.\n */\nclass CallbackTrajectory extends Trajectory {\n  atomIndices: number[][]\n  requestCallback: RequestCallback\n\n  constructor (requestCallback: RequestCallback, structure: Structure, params: TrajectoryParameters) {\n    super('', structure, params)\n    this.requestCallback = requestCallback;\n    this._init(structure)\n  }\n\n  get type () { return 'callback' }\n\n  _makeAtomIndices () {\n    const atomIndices = []\n\n    if (this.structure.type === 'StructureView') {\n      const indices = this.structure.getAtomIndices()!  // TODO\n      const n = indices.length\n\n      let p = indices[ 0 ]\n      let q = indices[ 0 ]\n\n      for (let i = 1; i < n; ++i) {\n        const r = indices[ i ]\n\n        if (q + 1 < r) {\n          atomIndices.push([ p, q + 1 ])\n          p = r\n        }\n\n        q = r\n      }\n\n      atomIndices.push([ p, q + 1 ])\n    } else {\n      atomIndices.push([ 0, this.atomCount ])\n    }\n\n    this.atomIndices = atomIndices\n  }\n\n  _loadFrame (i: number, callback?: Function) {\n    this.requestCallback(\n      (i: number, box: ArrayLike<number>, coords: Float32Array, frameCount: number) => {\n        this._process(i, box, coords, frameCount)\n        if (typeof callback === 'function') {\n          callback()\n        }\n      }, i, this.atomIndices)\n  }\n\n  _loadFrameCount () {\n    this.requestCallback((count: number) => this._setFrameCount(count))\n  }\n}\n\nexport default CallbackTrajectory\n\n","/**\n * @file Structure View\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Box3 } from 'three'\n\nimport { Debug, Log } from '../globals'\nimport Structure from './structure'\nimport Selection from '../selection/selection'\nimport BitArray from '../utils/bitarray'\n\nimport BondProxy from '../proxy/bond-proxy'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueProxy from '../proxy/residue-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\nimport ModelProxy from '../proxy/model-proxy'\nimport SpatialHash from '../geometry/spatial-hash';\nimport BondHash from '../store/bond-hash';\nimport ResidueMap from '../store/residue-map';\nimport AtomMap from '../store/atom-map';\nimport ModelStore from '../store/model-store';\nimport ChainStore from '../store/chain-store';\nimport ResidueStore from '../store/residue-store';\nimport AtomStore from '../store/atom-store';\nimport BondStore from '../store/bond-store';\nimport Validation from './validation';\nimport Unitcell from '../symmetry/unitcell';\nimport Entity from './entity';\nimport Assembly from '../symmetry/assembly';\nimport { Data } from './data';\n\n/**\n * Get view on structure restricted to the selection\n * @param  {Selection} selection - the selection\n * @return {StructureView} the view on the structure\n */\nStructure.prototype.getView = function (this: Structure, selection: Selection) {\n  // added here to avoid cyclic import dependency\n  return new StructureView(this, selection)\n}\n\n/**\n * View on the structure, restricted to the selection\n */\nclass StructureView extends Structure {\n  structure: Structure\n  selection: Selection\n\n  /**\n   * @param {Structure} structure - the structure\n   * @param {Selection} selection - the selection\n   */\n  constructor (structure: Structure, selection: Selection) {\n    super()\n\n    this.structure = structure\n    this.selection = selection\n\n    this.center = new Vector3()\n    this.boundingBox = new Box3()\n\n    this._bp = this.getBondProxy()\n    this._ap = this.getAtomProxy()\n    this._rp = this.getResidueProxy()\n    this._cp = this.getChainProxy()\n\n    if (this.selection) {\n      this.selection.signals.stringChanged.add(this.refresh, this)\n    }\n\n    this.structure.signals.refreshed.add(this.refresh, this)\n\n    this.refresh()\n  }\n\n  init () {}\n\n  get type () { return 'StructureView' }\n\n  get name () { return this.structure.name }\n  get path () { return this.structure.path }\n  get title () { return this.structure.title }\n  get id () { return this.structure.id }\n  get data (): Data { return this.structure.data }\n  get atomSetDict () { return this.structure.atomSetDict }\n  get biomolDict (): {[k: string]: Assembly} { return this.structure.biomolDict }\n  get entityList (): Entity[] { return this.structure.entityList }\n  get unitcell (): Unitcell|undefined { return this.structure.unitcell }\n  get frames () { return this.structure.frames }\n  get boxes () { return this.structure.boxes }\n  get validation (): Validation|undefined { return this.structure.validation }\n  get bondStore () { return this.structure.bondStore }\n  get backboneBondStore () { return this.structure.backboneBondStore }\n  get rungBondStore (): BondStore { return this.structure.rungBondStore }\n  get atomStore (): AtomStore { return this.structure.atomStore }\n  get residueStore (): ResidueStore { return this.structure.residueStore }\n  get chainStore (): ChainStore { return this.structure.chainStore }\n  get modelStore (): ModelStore { return this.structure.modelStore }\n  get atomMap (): AtomMap { return this.structure.atomMap }\n  get residueMap (): ResidueMap { return this.structure.residueMap }\n  get bondHash (): BondHash|undefined { return this.structure.bondHash }\n  get spatialHash (): SpatialHash|undefined { return this.structure.spatialHash }\n\n  get _hasCoords () { return this.structure._hasCoords }\n  set _hasCoords (value) { this.structure._hasCoords = value }\n\n  /**\n   * Updates atomSet, bondSet, atomSetCache, atomCount, bondCount, boundingBox, center.\n   * @emits {Structure.signals.refreshed} when refreshed\n   * @return {undefined}\n   */\n  refresh () {\n    if (Debug) Log.time('StructureView.refresh')\n\n    this.atomSetCache = {}\n    const structure = this.structure\n\n    if (this.selection.isAllSelection() &&\n        structure !== this && structure.atomSet && structure.bondSet\n    ) {\n      this.atomSet = structure.atomSet.clone()\n      this.bondSet = structure.bondSet.clone()\n\n      for (let name in this.atomSetDict) {\n        const atomSet = this.atomSetDict[ name ]\n        this.atomSetCache[ '__' + name ] = atomSet.clone()\n      }\n\n      this.atomCount = structure.atomCount\n      this.bondCount = structure.bondCount\n\n      this.boundingBox.copy(structure.boundingBox)\n      this.center.copy(structure.center)\n    } else if (this.selection.isNoneSelection() &&\n        structure !== this && structure.atomSet && structure.bondSet\n    ) {\n      this.atomSet = new BitArray(structure.atomCount)\n      this.bondSet = new BitArray(structure.bondCount)\n\n      for (let name in this.atomSetDict) {\n        this.atomSetCache[ '__' + name ] = new BitArray(structure.atomCount)\n      }\n\n      this.atomCount = 0\n      this.bondCount = 0\n\n      this.boundingBox.makeEmpty()\n      this.center.set(0, 0, 0)\n    } else {\n      this.atomSet = this.getAtomSet(this.selection, true)\n      if (structure.atomSet) {\n        this.atomSet = this.atomSet.intersection(structure.atomSet)\n      }\n\n      this.bondSet = this.getBondSet()\n\n      for (let name in this.atomSetDict) {\n        const atomSet = this.atomSetDict[ name ]\n        this.atomSetCache[ '__' + name ] = atomSet.makeIntersection(this.atomSet)\n      }\n\n      this.atomCount = this.atomSet.getSize()\n      this.bondCount = this.bondSet.getSize()\n\n      this.boundingBox = this.getBoundingBox()\n      this.center = this.boundingBox.getCenter(new Vector3())\n    }\n\n    if (Debug) Log.timeEnd('StructureView.refresh')\n\n    this.signals.refreshed.dispatch()\n  }\n\n  //\n\n  setSelection (selection: Selection) {\n    this.selection = selection\n\n    this.refresh()\n  }\n\n  getSelection (selection?: Selection) {\n    const seleList: string[] = []\n\n    if (selection && selection.string) {\n      seleList.push(selection.string)\n    }\n\n    const parentSelection = this.structure.getSelection()\n    if (parentSelection && parentSelection.string) {\n      seleList.push(parentSelection.string)\n    }\n\n    if (this.selection && this.selection.string) {\n      seleList.push(this.selection.string)\n    }\n\n    let sele = ''\n    if (seleList.length > 0) {\n      sele = `( ${seleList.join(' ) AND ( ')} )`\n    }\n\n    return new Selection(sele)\n  }\n\n  getStructure () {\n    return this.structure.getStructure()\n  }\n\n  //\n\n  eachBond (callback: (entity: BondProxy) => any, selection?: Selection) {\n    this.structure.eachBond(callback, this.getSelection(selection))\n  }\n\n  eachAtom (callback: (entity: AtomProxy) => any, selection?: Selection) {\n    const ap = this.getAtomProxy()\n    const atomSet = this.getAtomSet(selection)\n    const n = this.atomStore.count\n\n    if (atomSet.getSize() < n) {\n      atomSet.forEach(function (index) {\n        ap.index = index\n        callback(ap)\n      })\n    } else {\n      for (let i = 0; i < n; ++i) {\n        ap.index = i\n        callback(ap)\n      }\n    }\n  }\n\n  eachResidue (callback: (entity: ResidueProxy) => any, selection?: Selection) {\n    this.structure.eachResidue(callback, this.getSelection(selection))\n  }\n\n  /**\n   * Not implemented\n   * @alias StructureView#eachResidueN\n   * @return {undefined}\n   */\n  eachResidueN (n: number, callback: (entity: ResidueProxy) => any) {\n    console.error('StructureView.eachResidueN() not implemented')\n  }\n\n  eachChain (callback: (entity: ChainProxy) => any, selection?: Selection) {\n    this.structure.eachChain(callback, this.getSelection(selection))\n  }\n\n  eachModel (callback: (entity: ModelProxy) => any, selection?: Selection) {\n    this.structure.eachModel(callback, this.getSelection(selection))\n  }\n\n    //\n\n  getAtomSet (selection?: boolean|Selection|BitArray, ignoreView = false) {\n    let atomSet = this.structure.getAtomSet(selection)\n    if (!ignoreView && this.atomSet) {\n      atomSet = atomSet.makeIntersection(this.atomSet)\n    }\n\n    return atomSet\n  }\n\n  //\n\n  getAtomIndices (selection?: Selection) {\n    return this.structure.getAtomIndices(this.getSelection(selection))\n  }\n\n  refreshPosition () {\n    return this.structure.refreshPosition()\n  }\n\n  //\n\n  dispose () {\n    if (this.selection) {\n      this.selection.signals.stringChanged.remove(this.refresh, this)\n    }\n\n    this.structure.signals.refreshed.remove(this.refresh, this)\n\n    delete this.structure\n\n    delete this.atomSet\n    delete this.bondSet\n\n    delete this.atomCount\n    delete this.bondCount\n  }\n}\n\nexport default StructureView\n","/**\n * @file Alignment\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log } from '../globals'\n\n// const nucleotides = 'ACTG';\nconst aminoacidsX = 'ACDEFGHIKLMNPQRSTVWY'\nconst aminoacids = 'ARNDCQEGHILKMFPSTWYVBZ?'\n\nconst blosum62x = [\n  [4, 0, -2, -1, -2, 0, -2, -1, -1, -1, -1, -2, -1, -1, -1, 1, 0, 0, -3, -2],        // A\n  [0, 9, -3, -4, -2, -3, -3, -1, -3, -1, -1, -3, -3, -3, -3, -1, -1, -1, -2, -2],    // C\n  [-2, -3, 6, 2, -3, -1, -1, -3, -1, -4, -3, 1, -1, 0, -2, 0, -1, -3, -4, -3],       // D\n  [-1, -4, 2, 5, -3, -2, 0, -3, 1, -3, -2, 0, -1, 2, 0, 0, -1, -2, -3, -2],          // E\n  [-2, -2, -3, -3, 6, -3, -1, 0, -3, 0, 0, -3, -4, -3, -3, -2, -2, -1, 1, 3],        // F\n  [0, -3, -1, -2, -3, 6, -2, -4, -2, -4, -3, 0, -2, -2, -2, 0, -2, -3, -2, -3],      // G\n  [-2, -3, -1, 0, -1, -2, 8, -3, -1, -3, -2, 1, -2, 0, 0, -1, -2, -3, -2, 2],        // H\n  [-1, -1, -3, -3, 0, -4, -3, 4, -3, 2, 1, -3, -3, -3, -3, -2, -1, 3, -3, -1],       // I\n  [-1, -3, -1, 1, -3, -2, -1, -3, 5, -2, -1, 0, -1, 1, 2, 0, -1, -2, -3, -2],        // K\n  [-1, -1, -4, -3, 0, -4, -3, 2, -2, 4, 2, -3, -3, -2, -2, -2, -1, 1, -2, -1],       // L\n  [-1, -1, -3, -2, 0, -3, -2, 1, -1, 2, 5, -2, -2, 0, -1, -1, -1, 1, -1, -1],        // M\n  [-2, -3, 1, 0, -3, 0, 1, -3, 0, -3, -2, 6, -2, 0, 0, 1, 0, -3, -4, -2],            // N\n  [-1, -3, -1, -1, -4, -2, -2, -3, -1, -3, -2, -2, 7, -1, -2, -1, -1, -2, -4, -3],   // P\n  [-1, -3, 0, 2, -3, -2, 0, -3, 1, -2, 0, 0, -1, 5, 1, 0, -1, -2, -2, -1],           // Q\n  [-1, -3, -2, 0, -3, -2, 0, -3, 2, -2, -1, 0, -2, 1, 5, -1, -1, -3, -3, -2],        // R\n  [1, -1, 0, 0, -2, 0, -1, -2, 0, -2, -1, 1, -1, 0, -1, 4, 1, -2, -3, -2],           // S\n  [0, -1, -1, -1, -2, -2, -2, -1, -1, -1, -1, 0, -1, -1, -1, 1, 5, 0, -2, -2],       // T\n  [0, -1, -3, -2, -1, -3, -3, 3, -2, 1, 1, -3, -2, -2, -3, -2, 0, 4, -3, -1],        // V\n  [-3, -2, -4, -3, 1, -2, -2, -3, -3, -2, -1, -4, -4, -2, -3, -3, -2, -3, 11, 2],    // W\n  [-2, -2, -3, -2, 3, -3, 2, -1, -2, -1, -1, -2, -3, -1, -2, -2, -2, -1, 2, 7]       // Y\n]\n\nconst blosum62 = [\n  // A  R  N  D  C  Q  E  G  H  I  L  K  M  F  P  S  T  W  Y  V  B  Z  X\n  [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0], // A\n  [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1], // R\n  [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1], // N\n  [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1], // D\n  [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2], // C\n  [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1], // Q\n  [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // E\n  [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1], // G\n  [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1], // H\n  [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1], // I\n  [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1], // L\n  [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1], // K\n  [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1], // M\n  [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1], // F\n  [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2], // P\n  [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0], // S\n  [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0], // T\n  [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2], // W\n  [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1], // Y\n  [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1], // V\n  [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1], // B\n  [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // Z\n  [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1]  // X\n]\n\nfunction prepareMatrix (cellNames: string, mat: number[][]) {\n  let j: number\n  let i = 0\n  const matDict: { [k: string]: { [k: string]: number } } = {}\n  mat.forEach(function (row) {\n    j = 0\n    const rowDict: { [k: string]: number } = {}\n    row.forEach(function (elm) {\n      rowDict[ cellNames[ j++ ] ] = elm\n    })\n    matDict[ cellNames[ i++ ] ] = rowDict\n  })\n  return matDict\n}\n\nconst SubstitutionMatrices = (function () {\n  return {\n    blosum62: prepareMatrix(aminoacids, blosum62),\n    blosum62x: prepareMatrix(aminoacidsX, blosum62x)\n  }\n}())\nexport type SubstitutionMatrix = ''|'blosum62'|'blosum62x'\n\nclass Alignment {\n  substMatrix: { [k: string]: { [k: string]: number } }\n\n  n: number\n  m: number\n  score?: number\n  ali: string\n\n  S: number[][]\n  V: number[][]\n  H: number[][]\n\n  ali1: string\n  ali2: string\n\n  constructor (readonly seq1: string, readonly seq2: string, readonly gapPenalty = -10, readonly gapExtensionPenalty = -1, substMatrix: SubstitutionMatrix = 'blosum62') {\n    // TODO try encoding seqs as integers and use array subst matrix, maybe faster\n\n    if (substMatrix) {\n      this.substMatrix = SubstitutionMatrices[ substMatrix ]\n    }\n  }\n\n  initMatrices () {\n    this.n = this.seq1.length\n    this.m = this.seq2.length\n\n    // Log.log(this.n, this.m);\n\n    this.score = undefined\n    this.ali = ''\n\n    this.S = []\n    this.V = []\n    this.H = []\n\n    for (let i = 0; i <= this.n; ++i) {\n      this.S[ i ] = []\n      this.V[ i ] = []\n      this.H[ i ] = []\n\n      for (let j = 0; j <= this.m; ++j) {\n        this.S[ i ][ j ] = 0\n        this.V[ i ][ j ] = 0\n        this.H[ i ][ j ] = 0\n      }\n    }\n\n    for (let i = 0; i <= this.n; ++i) {\n      this.S[ i ][ 0 ] = this.gap(0)\n      this.H[ i ][ 0 ] = -Infinity\n    }\n\n    for (let j = 0; j <= this.m; ++j) {\n      this.S[ 0 ][ j ] = this.gap(0)\n      this.V[ 0 ][ j ] = -Infinity\n    }\n\n    this.S[ 0 ][ 0 ] = 0\n\n    // Log.log(this.S, this.V, this.H);\n  }\n\n  gap (len: number) {\n    return this.gapPenalty + len * this.gapExtensionPenalty\n  }\n\n  makeScoreFn () {\n    const seq1 = this.seq1\n    const seq2 = this.seq2\n\n    const substMatrix = this.substMatrix\n\n    if (substMatrix) {\n      return function score (i: number, j: number) {\n        const c1 = seq1[ i ]\n        const c2 = seq2[ j ]\n\n        try {\n          return substMatrix[ c1 ][ c2 ]\n        } catch (e) {\n          return -4\n        }\n      }\n    } else {\n      Log.warn('Alignment: no subst matrix')\n\n      return function scoreNoSubstMat (i: number, j: number) {\n        const c1 = seq1[ i ]\n        const c2 = seq2[ j ]\n\n        return c1 === c2 ? 5 : -3\n      }\n    }\n  }\n\n  calc () {\n    if (Debug) Log.time('Alignment.calc')\n\n    this.initMatrices()\n\n    const gap0 = this.gap(0)\n    const scoreFn = this.makeScoreFn()\n    const gapExtensionPenalty = this.gapExtensionPenalty\n\n    const V = this.V\n    const H = this.H\n    const S = this.S\n\n    const n = this.n\n    const m = this.m\n\n    let Vi1, Si1, Vi, Hi, Si\n\n    for (let i = 1; i <= n; ++i) {\n      Si1 = S[ i - 1 ]\n      Vi1 = V[ i - 1 ]\n\n      Vi = V[ i ]\n      Hi = H[ i ]\n      Si = S[ i ]\n\n      for (let j = 1; j <= m; ++j) {\n        Vi[j] = Math.max(\n          Si1[ j ] + gap0,\n          Vi1[ j ] + gapExtensionPenalty\n        )\n\n        Hi[j] = Math.max(\n          Si[ j - 1 ] + gap0,\n          Hi[ j - 1 ] + gapExtensionPenalty\n        )\n\n        Si[j] = Math.max(\n          Si1[ j - 1 ] + scoreFn(i - 1, j - 1), // match\n          Vi[ j ], // del\n          Hi[ j ]  // ins\n        )\n      }\n    }\n\n    if (Debug) Log.timeEnd('Alignment.calc')\n\n    if (Debug) Log.log(this.S, this.V, this.H)\n  }\n\n  trace () {\n    if (Debug) Log.time('Alignment.trace')\n\n    this.ali1 = ''\n    this.ali2 = ''\n\n    const scoreFn = this.makeScoreFn()\n\n    let i = this.n\n    let j = this.m\n    let mat\n\n    if (this.S[i][j] >= this.V[i][j]) {\n      mat = 'S'\n      this.score = this.S[i][j]\n    } else if (this.V[i][j] >= this.H[i][j]) {\n      mat = 'V'\n      this.score = this.V[i][j]\n    } else {\n      mat = 'H'\n      this.score = this.H[i][j]\n    }\n\n    if (Debug) Log.log('Alignment: SCORE', this.score)\n    if (Debug) Log.log('Alignment: S, V, H', this.S[i][j], this.V[i][j], this.H[i][j])\n\n    while (i > 0 && j > 0) {\n      if (mat === 'S') {\n        if (this.S[i][j] === this.S[i - 1][j - 1] + scoreFn(i - 1, j - 1)) {\n          this.ali1 = this.seq1[i - 1] + this.ali1\n          this.ali2 = this.seq2[j - 1] + this.ali2\n          --i\n          --j\n          mat = 'S'\n        } else if (this.S[i][j] === this.V[i][j]) {\n          mat = 'V'\n        } else if (this.S[i][j] === this.H[i][j]) {\n          mat = 'H'\n        } else {\n          // Log.debug('Alignment: S');\n          --i\n          --j\n        }\n      } else if (mat === 'V') {\n        if (this.V[i][j] === this.V[i - 1][j] + this.gapExtensionPenalty) {\n          this.ali1 = this.seq1[i - 1] + this.ali1\n          this.ali2 = '-' + this.ali2\n          --i\n          mat = 'V'\n        } else if (this.V[i][j] === this.S[i - 1][j] + this.gap(0)) {\n          this.ali1 = this.seq1[i - 1] + this.ali1\n          this.ali2 = '-' + this.ali2\n          --i\n          mat = 'S'\n        } else {\n          // Log.debug('Alignment: V');\n          --i\n        }\n      } else if (mat === 'H') {\n        if (this.H[i][j] === this.H[i][j - 1] + this.gapExtensionPenalty) {\n          this.ali1 = '-' + this.ali1\n          this.ali2 = this.seq2[j - 1] + this.ali2\n          --j\n          mat = 'H'\n        } else if (this.H[i][j] === this.S[i][j - 1] + this.gap(0)) {\n          this.ali1 = '-' + this.ali1\n          this.ali2 = this.seq2[j - 1] + this.ali2\n          --j\n          mat = 'S'\n        } else {\n          // Log.debug('Alignment: H');\n          --j\n        }\n      } else {\n        Log.error('Alignment: no matrix')\n      }\n    }\n\n    while (i > 0) {\n      this.ali1 = this.seq1[ i - 1 ] + this.ali1\n      this.ali2 = '-' + this.ali2\n      --i\n    }\n\n    while (j > 0) {\n      this.ali1 = '-' + this.ali1\n      this.ali2 = this.seq2[ j - 1 ] + this.ali2\n      --j\n    }\n\n    if (Debug) Log.timeEnd('Alignment.trace')\n\n    if (Debug) Log.log([this.ali1, this.ali2])\n  }\n}\n\nexport default Alignment\n","/**\n * @file Align Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport Selection from '../selection/selection'\nimport Alignment from './alignment'\nimport Superposition from './superposition'\n\n/**\n * Perform structural superposition of two structures,\n * optionally guided by a sequence alignment\n * @param  {Structure|StructureView} s1 - structure 1 which is superposed onto structure 2\n * @param  {Structure|StructureView} s2 - structure 2 onto which structure 1 is superposed\n * @param  {Boolean} [align] - guide the superposition by a sequence alignment\n * @param  {String} [sele1] - selection string for structure 1\n * @param  {String} [sele2] - selection string for structure 2\n * @return {undefined}\n */\nfunction superpose (s1: Structure, s2: Structure, align = false, sele1 = '', sele2 = '') {\n  let i: number\n  let j: number\n  let n: number\n  let atoms1\n  let atoms2\n\n  if (align) {\n    let _s1 = s1\n    let _s2 = s2\n\n    if (sele1 && sele2) {\n      _s1 = s1.getView(new Selection(sele1))\n      _s2 = s2.getView(new Selection(sele2))\n    }\n\n    const seq1 = _s1.getSequence()\n    const seq2 = _s2.getSequence()\n\n    // Log.log( seq1.join(\"\") );\n    // Log.log( seq2.join(\"\") );\n\n    const ali = new Alignment(seq1.join(''), seq2.join(''))\n\n    ali.calc()\n    ali.trace()\n\n    // Log.log( \"superpose alignment score\", ali.score );\n\n    // Log.log( ali.ali1 );\n    // Log.log( ali.ali2 );\n\n    let _i, _j\n    i = 0\n    j = 0\n    n = ali.ali1.length\n    const aliIdx1: boolean[] = []\n    const aliIdx2: boolean[] = []\n\n    for (let l = 0; l < n; ++l) {\n      const x = ali.ali1[ l ]\n      const y = ali.ali2[ l ]\n\n      _i = 0\n      _j = 0\n\n      if (x === '-') {\n        aliIdx2[ j ] = false\n      } else {\n        aliIdx2[ j ] = true\n        _i = 1\n      }\n\n      if (y === '-') {\n        aliIdx1[ i ] = false\n      } else {\n        aliIdx1[ i ] = true\n        _j = 1\n      }\n\n      i += _i\n      j += _j\n    }\n\n    // Log.log( i, j );\n\n    // Log.log( aliIdx1 );\n    // Log.log( aliIdx2 );\n\n    const _atoms1: number[] = []\n    const _atoms2: number[] = []\n    const ap1 = _s1.getAtomProxy()\n    const ap2 = _s2.getAtomProxy()\n\n    i = 0\n    _s1.eachResidue(function (r) {\n      if (r.traceAtomIndex === undefined ||\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\n\n      if (aliIdx1[ i ]) {\n        ap1.index = r.getAtomIndexByName('CA')!  // TODO\n        _atoms1.push(ap1.x, ap1.y, ap1.z)\n      }\n      i += 1\n    })\n\n    i = 0\n    _s2.eachResidue(function (r) {\n      if (r.traceAtomIndex === undefined ||\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\n\n      if (aliIdx2[ i ]) {\n        ap2.index = r.getAtomIndexByName('CA')!  // TODO\n        _atoms2.push(ap2.x, ap2.y, ap2.z)\n      }\n      i += 1\n    })\n\n    atoms1 = new Float32Array(_atoms1)\n    atoms2 = new Float32Array(_atoms2)\n  } else {\n    const sviewCa1 = s1.getView(new Selection(`${sele1} and .CA`))\n    const sviewCa2 = s2.getView(new Selection(`${sele2} and .CA`))\n\n    atoms1 = sviewCa1\n    atoms2 = sviewCa2\n  }\n\n  const superpose = new Superposition(atoms1, atoms2)\n  const result = superpose.transform(s1)\n  s1.refreshPosition()\n  return result\n}\n\nexport {\n  superpose\n}\n","/**\n * @file Sturucture Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Signal } from 'signals'\n\nimport { ComponentRegistry, MeasurementDefaultParams } from '../globals'\nimport {\n  defaults, /*deepEqual, */createRingBuffer, RingBuffer, createSimpleDict, SimpleDict\n} from '../utils'\nimport { smoothstep } from '../math/math-utils'\nimport Component, { ComponentSignals, ComponentDefaultParameters } from './component'\nimport RepresentationCollection from './representation-collection'\nimport TrajectoryElement from './trajectory-element'\nimport RepresentationElement from './representation-element'\nimport { makeTrajectory } from '../trajectory/trajectory-utils'\nimport { TrajectoryParameters } from '../trajectory/trajectory'\nimport Selection from '../selection/selection'\nimport Structure from '../structure/structure'\nimport StructureView from '../structure/structure-view'\nimport { superpose } from '../align/align-utils'\nimport Stage from '../stage/stage'\nimport StructureRepresentation, { StructureRepresentationParameters } from '../representation/structure-representation'\nimport AtomProxy from '../proxy/atom-proxy'\nimport { Vector3, Box3 } from 'three';\nimport { AngleRepresentationParameters } from '../representation/angle-representation';\nimport { AxesRepresentationParameters } from '../representation/axes-representation';\nimport { BallAndStickRepresentationParameters } from '../representation/ballandstick-representation';\nimport { CartoonRepresentationParameters } from '../representation/cartoon-representation';\nimport { ContactRepresentationParameters } from '../representation/contact-representation';\nimport { DihedralRepresentationParameters } from '../representation/dihedral-representation';\nimport { DihedralHistogramRepresentationParameters } from '../representation/dihedral-histogram-representation';\nimport { DistanceRepresentationParameters } from '../representation/distance-representation';\nimport { HyperballRepresentationParameters } from '../representation/hyperball-representation';\nimport { LabelRepresentationParameters } from '../representation/label-representation';\nimport { LineRepresentationParameters } from '../representation/line-representation';\nimport { PointRepresentationParameters } from '../representation/point-representation';\nimport { SurfaceRepresentationParameters } from '../representation/surface-representation';\nimport { RibbonRepresentationParameters } from '../representation/ribbon-representation';\nimport { RocketRepresentationParameters } from '../representation/rocket-representation';\nimport { TraceRepresentationParameters } from '../representation/trace-representation';\nimport { UnitcellRepresentationParameters } from '../representation/unitcell-representation';\nimport { SliceRepresentationParameters } from '../representation/slice-representation'\nimport { MolecularSurfaceRepresentationParameters } from '../representation/molecularsurface-representation'\nimport { DotRepresentationParameters } from '../representation/dot-representation'\n\nexport type StructureRepresentationType = keyof StructureRepresentationParametersMap\n\ninterface StructureRepresentationParametersMap {\n  'angle':  AngleRepresentationParameters,\n  'axes' :  AxesRepresentationParameters,\n  'backbone': BallAndStickRepresentationParameters,\n  'ball+stick': BallAndStickRepresentationParameters,\n  'base': BallAndStickRepresentationParameters,\n  'cartoon': CartoonRepresentationParameters,\n  'contact': ContactRepresentationParameters,\n  'dihedral': DihedralRepresentationParameters,\n  'dihedral-histogram': DihedralHistogramRepresentationParameters,\n  'distance': DistanceRepresentationParameters,\n  'dot': DotRepresentationParameters,\n  'helixorient': StructureRepresentationParameters,\n  'hyperball': HyperballRepresentationParameters,\n  'label': LabelRepresentationParameters,\n  'licorice': BallAndStickRepresentationParameters,\n  'line': LineRepresentationParameters,\n  'molecularsurface': MolecularSurfaceRepresentationParameters,\n  'point': PointRepresentationParameters,\n  'ribbon': RibbonRepresentationParameters,\n  'rocket': RocketRepresentationParameters,\n  'rope': CartoonRepresentationParameters,\n  'slice': SliceRepresentationParameters,\n  'spacefill': BallAndStickRepresentationParameters,\n  'surface': SurfaceRepresentationParameters,\n  'trace': TraceRepresentationParameters,\n  'tube': CartoonRepresentationParameters,\n  'unitcell': UnitcellRepresentationParameters,\n  'validation': StructureRepresentationParameters\n}\n\nexport const StructureComponentDefaultParameters = Object.assign({\n  sele: '',\n  defaultAssembly: ''\n}, ComponentDefaultParameters)\nexport type StructureComponentParameters = typeof StructureComponentDefaultParameters\n\nexport interface StructureComponentSignals extends ComponentSignals {\n  trajectoryAdded: Signal  // when a trajectory is added\n  trajectoryRemoved: Signal  // when a trajectory is removed\n  defaultAssemblyChanged: Signal  // on default assembly change\n}\n\n/**\n * Component wrapping a {@link Structure} object\n *\n * @example\n * // get a structure component by loading a structure file into the stage\n * stage.loadFile( \"rcsb://4opj\" ).then( function( structureComponent ){\n *     structureComponent.addRepresentation( \"cartoon\" );\n *     structureComponent.autoView();\n * } );\n */\nclass StructureComponent extends Component {\n  readonly signals: StructureComponentSignals\n  readonly parameters: StructureComponentParameters\n  get defaultParameters () { return StructureComponentDefaultParameters }\n\n  selection: Selection\n  structureView: StructureView\n  readonly trajList: TrajectoryElement[] = []\n\n  pickBuffer: RingBuffer<number>\n  pickDict: SimpleDict<number[], number[]>\n  lastPick?: number\n\n  spacefillRepresentation: RepresentationElement\n  distanceRepresentation: RepresentationElement\n  angleRepresentation: RepresentationElement\n  dihedralRepresentation: RepresentationElement\n\n  measureRepresentations: RepresentationCollection\n\n  constructor (stage: Stage, readonly structure: Structure, params: Partial<StructureComponentParameters> = {}) {\n    super(stage, structure, Object.assign({ name: structure.name }, params))\n\n    this.signals = Object.assign(this.signals, {\n      trajectoryAdded: new Signal(),\n      trajectoryRemoved: new Signal(),\n      defaultAssemblyChanged: new Signal()\n    })\n\n    this.initSelection(this.parameters.sele)\n\n    //\n\n    this.pickBuffer = createRingBuffer(4)\n    this.pickDict = createSimpleDict()\n\n    this.spacefillRepresentation = this.addRepresentation('spacefill', {\n      sele: 'none',\n      opacity: MeasurementDefaultParams.opacity,\n      color: MeasurementDefaultParams.color,\n      disablePicking: true,\n      radiusType: 'data'\n    }, true)\n\n    this.distanceRepresentation = this.addRepresentation(\n      'distance', MeasurementDefaultParams, true\n    )\n    this.angleRepresentation = this.addRepresentation(\n      'angle', MeasurementDefaultParams, true\n    )\n    this.dihedralRepresentation = this.addRepresentation(\n      'dihedral', MeasurementDefaultParams, true\n    )\n\n    this.measureRepresentations = new RepresentationCollection([\n      this.spacefillRepresentation,\n      this.distanceRepresentation,\n      this.angleRepresentation,\n      this.dihedralRepresentation\n    ])\n\n    //\n\n    this.setDefaultAssembly(this.parameters.defaultAssembly)\n  }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'structure' }\n\n  /**\n   * Initialize selection\n   * @private\n   * @param {String} sele - selection string\n   * @return {undefined}\n   */\n  initSelection (sele: string) {\n    /**\n     * Selection for {@link StructureComponent#structureView}\n     * @private\n     * @type {Selection}\n     */\n    this.selection = new Selection(sele)\n\n    /**\n     * View on {@link StructureComponent#structure}.\n     * Change its selection via {@link StructureComponent#setSelection}.\n     * @type {StructureView}\n     */\n    this.structureView = new StructureView(\n      this.structure, this.selection\n    )\n\n    this.selection.signals.stringChanged.add(() => {\n      this.structureView.setSelection(this.selection)\n\n      this.rebuildRepresentations()\n      this.rebuildTrajectories()\n    })\n  }\n\n  /**\n   * Set selection of {@link StructureComponent#structureView}\n   * @param {String} string - selection string\n   * @return {StructureComponent} this object\n   */\n  setSelection (string: string) {\n    this.parameters.sele = string\n    this.selection.setString(string)\n    return this\n  }\n\n  /**\n   * Set the default assembly\n   * @param {String} value - assembly name\n   * @return {undefined}\n   */\n  setDefaultAssembly (value:string) {\n    // filter out non-exsisting assemblies\n    if (this.structure.biomolDict[value] === undefined) value = ''\n    // only set default assembly when changed\n    if (this.parameters.defaultAssembly !== value) {\n      const reprParams = { defaultAssembly: value }\n      this.reprList.forEach(repr => repr.setParameters(reprParams))\n      this.measureRepresentations.setParameters(reprParams)\n      this.parameters.defaultAssembly = value\n      this.signals.defaultAssemblyChanged.dispatch(value)\n    }\n    return this\n  }\n\n  /**\n   * Rebuild all representations\n   * @return {undefined}\n   */\n  rebuildRepresentations () {\n    this.reprList.forEach((repr: RepresentationElement) => {\n      repr.build()\n    })\n    this.measureRepresentations.build()\n  }\n\n  /**\n   * Rebuild all trajectories\n   * @return {undefined}\n   */\n  rebuildTrajectories () {\n    this.trajList.forEach(trajComp => {\n      trajComp.trajectory.setStructure(this.structureView)\n    })\n  }\n\n  updateRepresentations (what: any) {\n    super.updateRepresentations(what)\n    this.measureRepresentations.update(what)\n  }\n\n  /**\n   * Overrides {@link Component.updateRepresentationMatrices} \n   * to also update matrix for measureRepresentations \n   */\n  updateRepresentationMatrices () {\n    super.updateRepresentationMatrices()\n    this.measureRepresentations.setParameters({ matrix: this.matrix })\n  }\n\n  addRepresentation <K extends keyof StructureRepresentationParametersMap>(\n    type: K,\n    params: Partial<StructureRepresentationParametersMap[K]>|{defaultAssembly: string} = {},\n    hidden = false\n  ) {\n    params.defaultAssembly = this.parameters.defaultAssembly\n\n    const reprComp = this._addRepresentation(type, this.structureView, params, hidden)\n    if (!hidden) {\n      reprComp.signals.parametersChanged.add(() => this.measureUpdate())\n    }\n    return reprComp\n  }\n\n  /**\n   * Add a new trajectory component to the structure\n   */\n  addTrajectory (trajPath = '', params: { [k: string]: any } = {}) {\n    const traj = makeTrajectory(trajPath, this.structureView, params as TrajectoryParameters)\n\n    traj.signals.frameChanged.add(() => {\n      this.updateRepresentations({ 'position': true })\n    })\n\n    const trajComp = new TrajectoryElement(this.stage, traj, params)\n    this.trajList.push(trajComp)\n    this.signals.trajectoryAdded.dispatch(trajComp)\n\n    return trajComp\n  }\n\n  removeTrajectory (traj: TrajectoryElement) {\n    const idx = this.trajList.indexOf(traj)\n    if (idx !== -1) {\n      this.trajList.splice(idx, 1)\n    }\n\n    traj.dispose()\n\n    this.signals.trajectoryRemoved.dispatch(traj)\n  }\n\n  dispose () {\n    // copy via .slice because side effects may change trajList\n    this.trajList.slice().forEach(traj => traj.dispose())\n\n    this.trajList.length = 0\n    this.structure.dispose()\n    this.measureRepresentations.dispose()\n\n    super.dispose()\n  }\n\n  /**\n   * Automatically center and zoom the component\n   * @param  {String|Integer} [sele] - selection string or duration if integer\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\n   * @return {undefined}\n   */\n  autoView (duration?: number): any\n  autoView (sele?: string|number, duration?: number) {\n    if (typeof sele === 'number') {\n      duration = sele\n      sele = ''\n    }\n\n    this.stage.animationControls.zoomMove(\n      this.getCenter(sele),\n      this.getZoom(sele),\n      defaults(duration, 0)\n    )\n  }\n\n  getBoxUntransformed (sele: string): Box3 {\n    let bb\n\n    if (sele) {\n      bb = this.structureView.getBoundingBox(new Selection(sele))\n    } else {\n      bb = this.structureView.boundingBox\n    }\n\n    return bb\n  }\n\n  getCenterUntransformed (sele: string): Vector3 {\n    if (sele && typeof sele === 'string') {\n      return this.structure.atomCenter(new Selection(sele))\n    } else {\n      return this.structure.center\n    }\n  }\n\n  superpose (component: StructureComponent, align: boolean, sele1: string, sele2: string) {\n    superpose(\n      this.structureView, component.structureView, align, sele1, sele2\n    )\n\n    this.updateRepresentations({ 'position': true })\n\n    return this\n  }\n\n  getMaxRepresentationRadius (atomIndex: number) {\n    let maxRadius = 0\n    const atom = this.structure.getAtomProxy(atomIndex)\n    this.eachRepresentation(reprElem => {\n      if (reprElem.getVisibility()) {\n        const repr: StructureRepresentation = reprElem.repr as any  // TODO\n        maxRadius = Math.max(repr.getAtomRadius(atom), maxRadius)\n      }\n    })\n    return maxRadius\n  }\n\n  measurePick (atom: AtomProxy) {\n    const pickCount = this.pickBuffer.count\n\n    if (this.lastPick === atom.index && pickCount >= 1) {\n      if (pickCount > 1) {\n        const atomList = this.pickBuffer.data\n        const atomListSorted = this.pickBuffer.data.sort()\n        if (this.pickDict.has(atomListSorted)) {\n          this.pickDict.del(atomListSorted)\n        } else {\n          this.pickDict.add(atomListSorted, atomList)\n        }\n        if (pickCount === 2) {\n          this.distanceRepresentation.setParameters({\n            atomPair: this.pickDict.values.filter(l => l.length === 2)\n          })\n        } else if (pickCount === 3) {\n          this.angleRepresentation.setParameters({\n            atomTriple: this.pickDict.values.filter(l => l.length === 3)\n          })\n        } else if (pickCount === 4) {\n          this.dihedralRepresentation.setParameters({\n            atomQuad: this.pickDict.values.filter(l => l.length === 4)\n          })\n        }\n      }\n      this.pickBuffer.clear()\n      this.lastPick = undefined\n    } else {\n      if (!this.pickBuffer.has(atom.index)) {\n        this.pickBuffer.push(atom.index)\n      }\n      this.lastPick = atom.index\n    }\n\n    this.measureUpdate()\n  }\n\n  measureClear () {\n    this.pickBuffer.clear()\n    this.lastPick = undefined\n    this.spacefillRepresentation.setSelection('none')\n  }\n\n  measureBuild () {\n    const md = this.measureData()\n    this.distanceRepresentation.setParameters({ atomPair: md.distance })\n    this.angleRepresentation.setParameters({ atomTriple: md.angle })\n    this.dihedralRepresentation.setParameters({ atomQuad: md.dihedral })\n  }\n\n  measureUpdate () {\n    const pickData = this.pickBuffer.data\n    const radiusData: { [k: number]: number } = {}\n    pickData.forEach(ai => {\n      const r = Math.max(0.1, this.getMaxRepresentationRadius(ai))\n      radiusData[ ai ] = r * (2.3 - smoothstep(0.1, 2, r))\n    })\n    this.spacefillRepresentation.setSelection(\n      pickData.length ? ( '@' + pickData.join(',') ) : 'none'\n    )\n    if (pickData.length)\n      this.spacefillRepresentation.setParameters({ radiusData })\n  }\n\n  measureData () {\n    const pv = this.pickDict.values\n    return {\n      distance: pv.filter(l => l.length === 2),\n      angle: pv.filter(l => l.length === 3),\n      dihedral: pv.filter(l => l.length === 4)\n    }\n  }\n\n  /**\n   * Remove all measurements, optionally limit to distance, angle or dihedral\n   */\n  removeAllMeasurements (type?: MeasurementFlags) {\n    const pd = this.pickDict\n    const pv = pd.values\n    const remove = function (len: number) {\n      pv.filter(l => l.length === len).forEach(l => pd.del(l.slice().sort()))\n    }\n    if (!type || type & MeasurementFlags.Distance) remove(2)\n    if (!type || type & MeasurementFlags.Angle) remove(3)\n    if (!type || type & MeasurementFlags.Dihedral) remove(4)\n    this.measureBuild()\n  }\n\n  /**\n   * Remove a measurement given as a pair, triple, quad of atom indices\n   */\n  removeMeasurement (atomList: number[]) {\n    this.pickDict.del(atomList.slice().sort())\n    this.measureBuild()\n  }\n\n  /**\n   * Add a measurement given as a pair, triple, quad of atom indices\n   */\n  addMeasurement (atomList: number[]) {\n    if (atomList.length < 2 || atomList.length > 4) return\n    const atomListSorted = atomList.slice().sort()\n    if (!this.pickDict.has(atomListSorted)) {\n      this.pickDict.add(atomListSorted, atomList)\n    }\n    this.measureBuild()\n  }\n}\n\nexport const enum MeasurementFlags {\n  Distance = 0x1,\n  Angle = 0x2,\n  Dihedral = 0x4\n}\n\nComponentRegistry.add('structure', StructureComponent)\nComponentRegistry.add('structureview', StructureComponent)\n\nexport default StructureComponent\n","/**\n * @file Trajectory Utils\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from '../structure/structure'\nimport Frames from './frames'\nimport { TrajectoryParameters } from './trajectory'\nimport FramesTrajectory from './frames-trajectory'\nimport StructureTrajectory from './structure-trajectory'\nimport RemoteTrajectory from './remote-trajectory'\nimport CallbackTrajectory from './callback-trajectory'\n\nexport function makeTrajectory (trajSrc: string|Frames, structure: Structure, params: TrajectoryParameters) {\n  let traj\n\n  if (trajSrc && trajSrc instanceof Frames) {\n    traj = new FramesTrajectory(trajSrc, structure, params)\n  } else if (!trajSrc && structure.frames) {\n    traj = new StructureTrajectory(trajSrc, structure, params)\n  } else if (trajSrc && typeof trajSrc === 'function') {\n    traj = new CallbackTrajectory(trajSrc, structure, params)\n  } else {\n    traj = new RemoteTrajectory(trajSrc, structure, params)\n  }\n\n  return traj\n}\n\n","/**\n * @file Surface Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ComponentRegistry } from '../globals'\nimport Component, { ComponentParameters } from './component'\nimport Stage from '../stage/stage'\nimport Surface from '../surface/surface'\nimport { Vector3, Box3 } from 'three';\nimport RepresentationElement from './representation-element';\n\nexport type SurfaceRepresentationType = 'surface'|'dot'\n\n/**\n * Component wrapping a {@link Surface} object\n *\n * @example\n * // get a surface component by loading a surface file into the stage\n * stage.loadFile( \"url/for/surface\" ).then( function( surfaceComponent ){\n *     surfaceComponent.addRepresentation( \"surface\" );\n *     surfaceComponent.autoView();\n * } );\n */\nclass SurfaceComponent extends Component {\n  /**\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {Surface} surface - surface object to wrap\n   * @param {ComponentParameters} params - component parameters\n   */\n  constructor (stage: Stage, readonly surface: Surface, params: Partial<ComponentParameters> = {}) {\n    super(stage, surface, Object.assign({ name: surface.name }, params))\n  }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'surface' }\n\n  /**\n   * Add a new surface representation to the component\n   * @param {String} type - the name of the representation, one of:\n   *                        surface, dot.\n   * @param {SurfaceRepresentationParameters} params - representation parameters\n   * @return {RepresentationComponent} the created representation wrapped into\n   *                                   a representation component object\n   */\n  addRepresentation (type: SurfaceRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\n    return this._addRepresentation(type, this.surface, params)\n  }\n\n  getBoxUntransformed (): Box3 {\n    return this.surface.boundingBox\n  }\n\n  getCenterUntransformed (): Vector3 {\n    return this.surface.center\n  }\n\n  dispose () {\n    this.surface.dispose()\n    super.dispose()\n  }\n}\n\nComponentRegistry.add('surface', SurfaceComponent)\n\nexport default SurfaceComponent\n","/**\n * @file Volume Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ComponentRegistry } from '../globals'\nimport Component, { ComponentParameters } from './component'\nimport Stage from '../stage/stage'\nimport Volume from '../surface/volume'\nimport { Box3, Vector3 } from 'three';\nimport RepresentationElement from './representation-element';\n\nexport type VolumeRepresentationType = 'surface'|'slice'|'dot'\n\n/**\n * Component wrapping a {@link Volume} object\n *\n * @example\n * // get a volume component by loading a volume file into the stage\n * stage.loadFile( \"url/for/volume\" ).then(function(volumeComponent){\n *   volumeComponent.addRepresentation('surface');\n *   volumeComponent.autoView();\n * });\n */\nclass VolumeComponent extends Component {\n  /**\n   * @param {Stage} stage - stage object the component belongs to\n   * @param {Volume} volume - volume object to wrap\n   * @param {ComponentParameters} params - component parameters\n   */\n  constructor (stage: Stage, readonly volume: Volume, params: Partial<ComponentParameters> = {}) {\n    super(stage, volume, Object.assign({ name: volume.name }, params))\n  }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'volume' }\n\n  /**\n   * Add a new volume representation to the component\n   */\n  addRepresentation (type: VolumeRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\n    return this._addRepresentation(type, this.volume, params)\n  }\n\n  getBoxUntransformed (): Box3 {\n    return this.volume.boundingBox\n  }\n\n  getCenterUntransformed (): Vector3 {\n    return this.volume.center\n  }\n\n  dispose () {\n    this.volume.dispose()\n\n    super.dispose()\n  }\n}\n\nComponentRegistry.add('volume', VolumeComponent)\n\nexport default VolumeComponent\n","/**\n * @file Component Collection\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Component from './component'\nimport Collection from './collection'\n\nclass ComponentCollection extends Collection<Component> {\n  addRepresentation (name: string, params: any) {\n  \treturn this.forEach((comp) => comp.addRepresentation(name, params))\n  }\n\n  autoView (duration: number) {\n    return this.forEach((comp) => comp.autoView(duration))\n  }\n}\n\nexport default ComponentCollection\n","/**\n * @file Stage\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Box3 } from 'three'\nimport { Signal } from 'signals'\n\nimport {\n  Debug, Log, Mobile, ComponentRegistry, ParserRegistry\n} from '../globals'\nimport { defaults, createParams, updateParams } from '../utils'\nimport { degToRad, clamp, pclamp } from '../math/math-utils'\nimport Counter from '../utils/counter'\nimport Viewer from '../viewer/viewer'\nimport { ImageParameters } from '../viewer/viewer-utils'\nimport MouseObserver from './mouse-observer'\n\nimport TrackballControls from '../controls/trackball-controls'\nimport PickingControls from '../controls/picking-controls'\nimport ViewerControls from '../controls/viewer-controls'\nimport AnimationControls from '../controls/animation-controls'\nimport MouseControls, { MouseControlPreset } from '../controls/mouse-controls'\nimport KeyControls from '../controls/key-controls'\n\nimport PickingBehavior from './picking-behavior'\nimport MouseBehavior from './mouse-behavior'\nimport AnimationBehavior from './animation-behavior'\nimport KeyBehavior from './key-behavior'\n\nimport Component, { ComponentParameters } from '../component/component'\nimport RepresentationElement from '../component/representation-element'\nimport StructureComponent from '../component/structure-component'\nimport SurfaceComponent from '../component/surface-component'\nimport VolumeComponent from '../component/volume-component'\nimport ComponentCollection from '../component/component-collection'\nimport RepresentationCollection from '../component/representation-collection'\nimport { autoLoad, getFileInfo, LoaderParameters } from '../loader/loader-utils'\nimport AtomProxy from '../proxy/atom-proxy'\nimport Animation from '../animation/animation'\nimport Selection from '../selection/selection'\n\nimport Structure from '../structure/structure'\nimport Surface from '../surface/surface'\nimport Volume from '../surface/volume'\nimport Shape from '../geometry/shape'\nimport Script from '../script'\n\nfunction matchName (name: string|RegExp, object: { name: string }) {\n  if (name instanceof RegExp) {\n    return object.name.match(name) !== null\n  } else {\n    return object.name === name\n  }\n}\n\nconst tmpZoomVector = new Vector3()\n\ndeclare global {\n  interface Document {\n    mozFullScreen: boolean\n    mozFullScreenEnabled: boolean\n    mozFullScreenElement: Element\n    mozCancelFullScreen(): void\n\n    msFullscreenEnabled: boolean\n    msFullscreenElement: Element\n    msExitFullscreen(): void\n  }\n\n  interface Element {\n    mozRequestFullScreen(): void\n    msRequestFullscreen(): void\n  }\n}\n\n/**\n * Stage parameter object.\n * @typedef {Object} StageParameters - stage parameters\n * @property {Color} backgroundColor - background color\n * @property {Integer} sampleLevel - sampling level for antialiasing, between -1 and 5;\n *                                   -1: no sampling, 0: only sampling when not moving\n * @property {Boolean} workerDefault - default value for useWorker parameter of representations\n * @property {Float} rotateSpeed - camera-controls rotation speed, between 0 and 10\n * @property {Float} zoomSpeed - camera-controls zoom speed, between 0 and 10\n * @property {Float} panSpeed - camera-controls pan speed, between 0 and 10\n * @property {Float} clipNear - position of camera near/front clipping plane\n *                                in percent of scene bounding box\n * @property {Float} clipFar - position of camera far/back clipping plane\n *                               in percent of scene bounding box\n * @property {Float} clipDist - camera clipping distance in Angstrom\n * @property {String} clipMode - how to interpret clipNear/Far and fogNear/Far values: \"scene\" for scene-relative, \"camera\" for camera-relative\n * @property {String} clipScale - \"relative\" or \"absolute\": interpret clipNear/Far and fogNear/Far as percentage of bounding box or absolute Angstroms (ignored when clipMode==camera)\n * @property {Float} fogNear - position of the start of the fog effect\n *                               in percent of scene bounding box\n * @property {Float} fogFar - position where the fog is in full effect\n *                              in percent of scene bounding box\n * @property {String} cameraType - type of camera, either 'persepective' or 'orthographic'\n * @property {Float} cameraFov - perspective camera field of view in degree, between 15 and 120\n * @property {Float} cameraEyeSep - stereo camera eye seperation\n * @property {Color} lightColor - point light color\n * @property {Float} lightIntensity - point light intensity\n * @property {Color} ambientColor - ambient light color\n * @property {Float} ambientIntensity - ambient light intensity\n * @property {Integer} hoverTimeout - timeout for hovering\n */\n\nexport interface StageSignals {\n  parametersChanged: Signal\n  fullscreenChanged: Signal\n  componentAdded: Signal\n  componentRemoved: Signal\n  clicked: Signal\n  hovered: Signal\n}\n\nexport type RenderQualityType = 'auto'|'low'|'medium'|'high'\n\nexport const StageDefaultParameters = {\n  impostor: true,\n  quality: 'medium' as RenderQualityType,\n  workerDefault: true,\n  sampleLevel: 0,\n  backgroundColor: 'black' as string|number,\n  rotateSpeed: 2.0,\n  zoomSpeed: 1.2,\n  panSpeed: 1.0,\n  clipNear: 0,\n  clipFar: 100,\n  clipDist: 10,\n  clipMode: 'scene',\n  clipScale: 'relative',\n  fogNear: 50,\n  fogFar: 100,\n  cameraFov: 40,\n  cameraEyeSep: 0.3,\n  cameraType: 'perspective' as 'perspective'|'orthographic'|'stereo',\n  lightColor: 0xdddddd as string|number,\n  lightIntensity: 1.0,\n  ambientColor: 0xdddddd as string|number,\n  ambientIntensity: 0.2,\n  hoverTimeout: 0,\n  tooltip: true,\n  mousePreset: 'default' as MouseControlPreset\n}\nexport type StageParameters = typeof StageDefaultParameters\n\nexport interface StageLoadFileParams extends LoaderParameters {\n  defaultRepresentation: boolean,\n  assembly: string\n}\n\n/**\n * Stage class, central for creating molecular scenes with NGL.\n *\n * @example\n * var stage = new Stage( \"elementId\", { backgroundColor: \"white\" } );\n */\nclass Stage {\n  signals: StageSignals = {\n    parametersChanged: new Signal(),\n    fullscreenChanged: new Signal(),\n    componentAdded: new Signal(),\n    componentRemoved: new Signal(),\n    clicked: new Signal(),\n    hovered: new Signal()\n  }\n  parameters: StageParameters\n\n  /**\n   * Counter that keeps track of various potentially long-running tasks,\n   * including file loading and surface calculation.\n   */\n  tasks = new Counter()\n  compList: Component[] = []\n  defaultFileParams = {}\n  logList: string[] = []\n\n  transformComponent?: Component\n  transformAtom?: AtomProxy\n\n  viewer: Viewer\n  tooltip: HTMLElement\n  lastFullscreenElement: HTMLElement\n\n  mouseObserver: MouseObserver\n  viewerControls: ViewerControls\n  trackballControls: TrackballControls\n  pickingControls: PickingControls\n  animationControls: AnimationControls\n  mouseControls: MouseControls\n  keyControls: KeyControls\n\n  pickingBehavior: PickingBehavior\n  mouseBehavior: MouseBehavior\n  animationBehavior: AnimationBehavior\n  keyBehavior: KeyBehavior\n\n  spinAnimation: Animation\n  rockAnimation: Animation\n\n  constructor (idOrElement: string|HTMLElement, params: Partial<StageParameters> = {}) {\n    this.viewer = new Viewer(idOrElement)\n    if (!this.viewer.renderer) return\n\n    this.tooltip = document.createElement('div')\n    Object.assign(this.tooltip.style, {\n      display: 'none',\n      position: 'fixed',\n      zIndex: '1000000',\n      pointerEvents: 'none',\n      backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\n      color: 'lightgrey',\n      padding: '8px',\n      fontFamily: 'sans-serif'\n    })\n    this.viewer.container.appendChild(this.tooltip)\n\n    this.mouseObserver = new MouseObserver(this.viewer.renderer.domElement)\n    this.viewerControls = new ViewerControls(this)\n    this.trackballControls = new TrackballControls(this)\n    this.pickingControls = new PickingControls(this)\n    this.animationControls = new AnimationControls(this)\n    this.mouseControls = new MouseControls(this)\n    this.keyControls = new KeyControls(this)\n\n    this.pickingBehavior = new PickingBehavior(this)\n    this.mouseBehavior = new MouseBehavior(this)\n    this.animationBehavior = new AnimationBehavior(this)\n    this.keyBehavior = new KeyBehavior(this)\n\n    this.spinAnimation = this.animationControls.spin([ 0, 1, 0 ], 0.005)\n    this.spinAnimation.pause(true)\n    this.rockAnimation = this.animationControls.rock([ 0, 1, 0 ], 0.005)\n    this.rockAnimation.pause(true)\n\n    // must come after the viewer has been instantiated\n    this.parameters = createParams(params, StageDefaultParameters)\n    this.setParameters(this.parameters)\n\n    this.viewer.animate()\n  }\n\n  /**\n   * Set stage parameters\n   */\n  setParameters (params: Partial<StageParameters> = {}) {\n    updateParams(this.parameters, params)\n\n    const p = params\n    const tp = this.parameters\n\n    const viewer = this.viewer\n    const controls = this.trackballControls\n\n    // apply parameters\n    if (p.quality !== undefined) this.setQuality(tp.quality)\n    if (p.impostor !== undefined) this.setImpostor(tp.impostor)\n    if (p.rotateSpeed !== undefined) controls.rotateSpeed = tp.rotateSpeed\n    if (p.zoomSpeed !== undefined) controls.zoomSpeed = tp.zoomSpeed\n    if (p.panSpeed !== undefined) controls.panSpeed = tp.panSpeed\n    if (p.mousePreset !== undefined) this.mouseControls.preset(tp.mousePreset)\n    this.mouseObserver.setParameters({ hoverTimeout: tp.hoverTimeout })\n    viewer.setClip(tp.clipNear, tp.clipFar, tp.clipDist, tp.clipMode, tp.clipScale)\n    viewer.setFog(undefined, tp.fogNear, tp.fogFar)\n    viewer.setCamera(tp.cameraType, tp.cameraFov, tp.cameraEyeSep)\n    viewer.setSampling(tp.sampleLevel)\n    viewer.setBackground(tp.backgroundColor)\n    viewer.setLight(tp.lightColor, tp.lightIntensity, tp.ambientColor, tp.ambientIntensity)\n\n    this.signals.parametersChanged.dispatch(this.getParameters())\n\n    return this\n  }\n\n  log (msg: string) {\n    console.log('STAGE LOG', msg)\n    this.logList.push(msg)\n  }\n\n  /**\n   * Get stage parameters\n   */\n  getParameters () {\n    return Object.assign({}, this.parameters)\n  }\n\n  /**\n   * Create default representations for the given component\n   * @param  {StructureComponent|SurfaceComponent} object - component to create the representations for\n   * @return {undefined}\n   */\n  defaultFileRepresentation (component: Component) {\n    if (component instanceof StructureComponent) {\n      component.setSelection('/0')\n\n      let atomCount, residueCount, instanceCount\n      const structure = component.structure\n\n      if (structure.biomolDict.BU1) {\n        const assembly = structure.biomolDict.BU1\n        atomCount = assembly.getAtomCount(structure)\n        residueCount = assembly.getResidueCount(structure)\n        instanceCount = assembly.getInstanceCount()\n        component.setDefaultAssembly('BU1')\n      } else {\n        atomCount = structure.getModelProxy(0).atomCount\n        residueCount = structure.getModelProxy(0).residueCount\n        instanceCount = 1\n      }\n\n      let sizeScore = atomCount\n\n      if (Mobile) {\n        sizeScore *= 4\n      }\n\n      const backboneOnly = structure.atomStore.count / structure.residueStore.count < 2\n      if (backboneOnly) {\n        sizeScore *= 10\n      }\n\n      let colorScheme = 'chainname'\n      let colorScale = 'RdYlBu'\n      let colorReverse = false\n      if (structure.getChainnameCount(new Selection('polymer and /0')) === 1) {\n        colorScheme = 'residueindex'\n        colorScale = 'Spectral'\n        colorReverse = true\n      }\n\n      if (Debug) console.log(sizeScore, atomCount, instanceCount, backboneOnly)\n\n      if (residueCount / instanceCount < 4) {\n        component.addRepresentation('ball+stick', {\n          colorScheme: 'element',\n          radiusScale: 2.0,\n          aspectRatio: 1.5,\n          bondScale: 0.3,\n          bondSpacing: 0.75,\n          quality: 'auto'\n        })\n      } else if ((instanceCount > 5 && sizeScore > 15000) || sizeScore > 700000) {\n        let scaleFactor = (\n          Math.min(\n            2.0,\n            Math.max(\n              0.1,\n              6000 / (sizeScore / instanceCount)\n            )\n          )\n        )\n        if (backboneOnly) scaleFactor = Math.min(scaleFactor, 0.5)\n\n        component.addRepresentation('surface', {\n          colorScheme, colorScale, colorReverse,\n          sele: 'polymer',\n          surfaceType: 'av',\n          probeRadius: 1.4,\n          scaleFactor: scaleFactor,\n          useWorker: false\n        })\n      } else if (sizeScore > 250000) {\n        component.addRepresentation('backbone', {\n          colorScheme, colorScale, colorReverse,\n          lineOnly: true\n        })\n      } else if (sizeScore > 100000) {\n        component.addRepresentation('backbone', {\n          colorScheme, colorScale, colorReverse,\n          quality: 'low',\n          disableImpostor: true,\n          radiusScale: 2.0\n        })\n      } else if (sizeScore > 80000) {\n        component.addRepresentation('backbone', {\n          colorScheme, colorScale, colorReverse,\n          radiusScale: 2.0\n        })\n      } else {\n        component.addRepresentation('cartoon', {\n          colorScheme, colorScale, colorReverse,\n          radiusScale: 0.7,\n          aspectRatio: 5,\n          quality: 'auto'\n        })\n        if (sizeScore < 50000) {\n          component.addRepresentation('base', {\n            colorScheme, colorScale, colorReverse,\n            quality: 'auto'\n          })\n        }\n        component.addRepresentation('ball+stick', {\n          sele: 'ligand',\n          colorScheme: 'element',\n          radiusScale: 2.0,\n          aspectRatio: 1.5,\n          bondScale: 0.3,\n          bondSpacing: 0.75,\n          quality: 'auto'\n        })\n      }\n\n      // add frames as trajectory\n      if (component.structure.frames.length) {\n        component.addTrajectory()\n      }\n    } else if (component instanceof SurfaceComponent) {\n      component.addRepresentation('surface')\n    } else if (component instanceof VolumeComponent) {\n      component.addRepresentation('surface')\n    }\n\n    this.tasks.onZeroOnce(this.autoView, this)\n  }\n\n  /**\n   * Load a file onto the stage\n   *\n   * @example\n   * // load from URL\n   * stage.loadFile( \"http://files.rcsb.org/download/5IOS.cif\" );\n   *\n   * @example\n   * // load binary data in CCP4 format via a Blob\n   * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\n   * stage.loadFile( binaryBlob, { ext: \"ccp4\" } );\n   *\n   * @example\n   * // load string data in PDB format via a Blob\n   * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\n   * stage.loadFile( stringBlob, { ext: \"pdb\" } );\n   *\n   * @example\n   * // load a File object\n   * stage.loadFile( file );\n   *\n   * @example\n   * // load from URL and add a 'ball+stick' representation with double/triple bonds\n   * stage.loadFile( \"http://files.rcsb.org/download/1crn.cif\" ).then( function( comp ){\n   *     comp.addRepresentation( \"ball+stick\", { multipleBond: true } );\n   * } );\n   *\n   * @param  {String|File|Blob} path - either a URL or an object containing the file data\n   * @param  {LoaderParameters} params - loading parameters\n   * @param  {Boolean} params.asTrajectory - load multi-model structures as a trajectory\n   * @return {Promise} A Promise object that resolves to a {@link StructureComponent},\n   *                   a {@link SurfaceComponent} or a {@link ScriptComponent} object,\n   *                   depending on the type of the loaded file.\n   */\n  loadFile (path: string|File|Blob, params: Partial<StageLoadFileParams> = {}) {\n    const p = Object.assign({}, this.defaultFileParams, params)\n    const name = getFileInfo(path).name\n\n    this.tasks.increment()\n    this.log(`loading file '${name}'`)\n\n    const onLoadFn = (object: Structure|Surface|Volume) => {\n      this.log(`loaded '${name}'`)\n\n      const component = this.addComponentFromObject(object, p)\n      if (p.defaultRepresentation) {\n        this.defaultFileRepresentation(component as Component)\n      }\n      this.tasks.decrement()\n\n      return component\n    }\n\n    const onErrorFn = (e: Error|string) => {\n      this.tasks.decrement()\n      const errorMsg = `error loading file: '${e}'`\n      this.log(errorMsg)\n      throw errorMsg  // throw so it can be catched\n    }\n\n    const ext = defaults(p.ext, getFileInfo(path).ext)\n    let promise: Promise<any>\n\n    if (ParserRegistry.isTrajectory(ext)) {\n      promise = Promise.reject(\n        new Error(`loadFile: ext '${ext}' is a trajectory and must be loaded into a structure component`)\n      )\n    } else {\n      promise = autoLoad(path, p)\n    }\n\n    return promise.then(onLoadFn, onErrorFn)\n  }\n\n  loadScript (path: string|File|Blob) {\n    const name = getFileInfo(path).name\n\n    this.log(`loading script '${name}'`)\n\n    return autoLoad(path).then(\n      (script: Script) => {\n        this.tasks.increment()\n        this.log(`running script '${name}'`)\n        script.run(this).then(() => {\n          this.tasks.decrement()\n          this.log(`finished script '${name}'`)\n        })\n        this.log(`called script '${name}'`)\n      },\n      (error: Error|string) => {\n        this.tasks.decrement()\n        const errorMsg = `errored script '${name}' \"${error}\"`\n        this.log(errorMsg)\n        throw errorMsg  // throw so it can be catched\n      }\n    )\n  }\n\n  /**\n   * Add the given component to the stage\n   * @param {Component} component - the component to add\n   * @return {undefined}\n   */\n  addComponent (component: Component) {\n    if (!component) {\n      Log.warn('Stage.addComponent: no component given')\n      return\n    }\n\n    this.compList.push(component)\n    this.signals.componentAdded.dispatch(component)\n  }\n\n  /**\n   * Create a component from the given object and add to the stage\n   */\n  addComponentFromObject (object: Structure|Surface|Volume|Shape, params: Partial<ComponentParameters> = {}): void|Component {\n    const CompClass = ComponentRegistry.get(object.type)\n\n    if (CompClass) {\n      const component = new CompClass(this, object, params)\n      this.addComponent(component)\n      return component\n    }\n\n    Log.warn('no component for object type', object.type)\n  }\n\n  /**\n   * Remove the given component\n   * @param  {Component} component - the component to remove\n   * @return {undefined}\n   */\n  removeComponent (component: Component) {\n    const idx = this.compList.indexOf(component)\n    if (idx !== -1) {\n      this.compList.splice(idx, 1)\n      component.dispose()\n      this.signals.componentRemoved.dispatch(component)\n    }\n  }\n\n  /**\n   * Remove all components from the stage\n   */\n  removeAllComponents () {\n    this.compList.slice().forEach(o => this.removeComponent(o))\n  }\n\n  /**\n   * Handle any size-changes of the container element\n   * @return {undefined}\n   */\n  handleResize () {\n    this.viewer.handleResize()\n  }\n\n  /**\n   * Set width and height\n   * @param {String} width - CSS width value\n   * @param {String} height - CSS height value\n   * @return {undefined}\n   */\n  setSize (width: string, height: string) {\n    const container = this.viewer.container\n\n    if (container !== document.body) {\n      if (width !== undefined) container.style.width = width\n      if (height !== undefined) container.style.height = height\n      this.handleResize()\n    }\n  }\n\n  /**\n   * Toggle fullscreen\n   * @param  {Element} [element] - document element to put into fullscreen,\n   *                               defaults to the viewer container\n   * @return {undefined}\n   */\n  toggleFullscreen (element: HTMLElement) {\n    if (!document.fullscreenEnabled && !document.mozFullScreenEnabled &&\n        !(document as any).webkitFullscreenEnabled && !document.msFullscreenEnabled\n    ) {\n      Log.log('fullscreen mode (currently) not possible')\n      return\n    }\n\n    const self = this\n    element = element || this.viewer.container\n    this.lastFullscreenElement = element\n\n    //\n\n    function getFullscreenElement () {\n      return document.fullscreenElement || document.mozFullScreenElement ||\n        (document as any).webkitFullscreenElement || document.msFullscreenElement\n    }\n\n    function resizeElement () {\n      if (!getFullscreenElement() && self.lastFullscreenElement) {\n        const element = self.lastFullscreenElement\n        element.style.width = element.dataset.normalWidth || ''\n        element.style.height = element.dataset.normalHeight || ''\n\n        document.removeEventListener('fullscreenchange', resizeElement)\n        document.removeEventListener('mozfullscreenchange', resizeElement)\n        document.removeEventListener('webkitfullscreenchange', resizeElement)\n        document.removeEventListener('MSFullscreenChange', resizeElement)\n\n        self.handleResize()\n        self.signals.fullscreenChanged.dispatch(false)\n      }\n    }\n\n    //\n\n    if (!getFullscreenElement()) {\n      element.dataset.normalWidth = element.style.width || ''\n      element.dataset.normalHeight = element.style.height || ''\n      element.style.width = window.screen.width + 'px'\n      element.style.height = window.screen.height + 'px'\n\n      if (element.requestFullscreen) {\n        element.requestFullscreen()\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen()\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen()\n      } else if ((element as any).webkitRequestFullscreen) {\n        (element as any).webkitRequestFullscreen()\n      }\n\n      document.addEventListener('fullscreenchange', resizeElement)\n      document.addEventListener('mozfullscreenchange', resizeElement)\n      document.addEventListener('webkitfullscreenchange', resizeElement)\n      document.addEventListener('MSFullscreenChange', resizeElement)\n\n      this.handleResize()\n      this.signals.fullscreenChanged.dispatch(true)\n\n      // workaround for Safari\n      setTimeout(function () { self.handleResize() }, 100)\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen()\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen()\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen()\n      } else if ((document as any).webkitExitFullscreen) {\n        (document as any).webkitExitFullscreen()\n      }\n    }\n  }\n\n  /**\n   * Set spin\n   * @param {Boolean} flag - if true start rocking and stop spinning\n   * @return {undefined}\n   */\n  setSpin (flag: boolean) {\n    if (flag) {\n      this.spinAnimation.resume(true)\n      this.rockAnimation.pause(true)\n    } else {\n      this.spinAnimation.pause(true)\n    }\n  }\n\n  /**\n   * Set rock\n   * @param {Boolean} flag - if true start rocking and stop spinning\n   * @return {undefined}\n   */\n  setRock (flag: boolean) {\n    if (flag) {\n      this.rockAnimation.resume(true)\n      this.spinAnimation.pause(true)\n    } else {\n      this.rockAnimation.pause(true)\n    }\n  }\n\n  /**\n   * Toggle spin\n   * @return {undefined}\n   */\n  toggleSpin () {\n    this.setSpin(this.spinAnimation.paused)\n  }\n\n  /**\n   * Toggle rock\n   * @return {undefined}\n   */\n  toggleRock () {\n    this.setRock(this.rockAnimation.paused)\n  }\n\n  /**\n   * Get the current focus from the current clipNear value expressed\n   * as 0 (full view) to 100 (completely clipped)\n   * Negative values may be returned in some cases.\n   *\n   * In 'camera' clipMode focus isn't applicable, this method returns 0.0\n   *\n   * @return {number} focus\n   */\n  getFocus () : number {\n    const p = this.parameters\n    if (p.clipMode !== 'scene') return 0.0\n\n    let clipNear = p.clipNear\n    if (p.clipScale === 'absolute') {\n      clipNear = this.viewer.absoluteToRelative(clipNear)\n    }\n    return clipNear * 2\n  }\n\n\n  /**\n   * Set the focus, a value of 0 sets clipping planes to show full scene,\n   * while a value of 100 will compltely clip the scene.\n   *\n   * @param {number} value focus\n   */\n  setFocus (value: number) {\n    if (this.parameters.clipMode !== 'scene') return\n\n    let clipNear\n    let clipFar\n    let fogNear\n    let fogFar\n\n    if (this.parameters.clipScale === 'relative') {\n      clipNear = clamp(value / 2.0, 0.0, 49.9)\n      clipFar = 100 - clipNear\n      fogNear = 50\n      fogFar = pclamp(2 * clipFar - 50)\n\n    } else {\n      clipNear = this.viewer.relativeToAbsolute(value / 2.0)\n      clipFar = clipNear\n      fogNear = 0\n      fogFar = 2 * clipFar\n    }\n\n    this.setParameters({ clipNear, clipFar, fogNear, fogFar })\n  }\n\n  getZoomForBox (boundingBox: Box3) {\n    const bbSize = boundingBox.getSize(tmpZoomVector)\n    const maxSize = Math.max(bbSize.x, bbSize.y, bbSize.z)\n    const minSize = Math.min(bbSize.x, bbSize.y, bbSize.z)\n    let distance = maxSize + Math.sqrt(minSize)\n\n    const fov = degToRad(this.viewer.perspectiveCamera.fov)\n    const width = this.viewer.width\n    const height = this.viewer.height\n    const aspect = width / height\n    const aspectFactor = (height < width ? 1 : aspect)\n\n    distance = Math.abs(\n      ((distance * 0.5) / aspectFactor) / Math.sin(fov / 2)\n    )\n    distance += this.parameters.clipDist\n    return -distance\n  }\n\n  getBox () {\n    return this.viewer.boundingBox\n  }\n\n  getZoom () {\n    return this.getZoomForBox(this.getBox())\n  }\n\n  getCenter (optionalTarget?: Vector3) {\n    return this.getBox().getCenter(optionalTarget || new Vector3())\n  }\n\n  /**\n   * Add a zoom and a move animation with automatic targets\n   * @param  {Integer} duration - animation time in milliseconds\n   * @return {undefined}\n   */\n  autoView (duration?: number) {\n    this.animationControls.zoomMove(\n      this.getCenter(),\n      this.getZoom(),\n      defaults(duration, 0)\n    )\n  }\n\n  /**\n   * Make image from what is shown in a viewer canvas\n   */\n  makeImage (params: Partial<ImageParameters> = {}) {\n    return new Promise<Blob>((resolve, reject) => {\n      this.tasks.onZeroOnce(() => {\n        this.tasks.increment()\n        this.viewer.makeImage(params).then(blob => {\n          this.tasks.decrement()\n          resolve(blob)\n        }).catch(e => {\n          this.tasks.decrement()\n          reject(e)\n        })\n      })\n    })\n  }\n\n  setImpostor (value: boolean) {\n    this.parameters.impostor = value\n\n    const types = [\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\n      'dot'\n    ]\n\n    this.eachRepresentation(function (reprElem) {\n      if (!types.includes(reprElem.getType())) return\n\n      const p = reprElem.getParameters() as any  // TODO\n      p.disableImpostor = !value\n      reprElem.build(p)\n    })\n  }\n\n  setQuality (value: RenderQualityType) {\n    this.parameters.quality = value\n\n    const types = [\n      'tube', 'cartoon', 'ribbon', 'trace', 'rope'\n    ]\n\n    const impostorTypes = [\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\n      'dot'\n    ]\n\n    this.eachRepresentation(function (repr) {\n      const p = repr.getParameters() as any  // TODO\n\n      if (!types.includes(repr.getType())) {\n        if (!impostorTypes.includes(repr.getType())) return\n\n        if (!p.disableImpostor) {\n          (repr.repr as any).quality = value  // TODO\n          return\n        }\n      }\n\n      p.quality = value\n      repr.build(p)\n    })\n  }\n\n  /**\n   * Iterator over each component and executing the callback\n   */\n  eachComponent (callback: (comp: Component) => void, type?: string) {\n    this.compList.slice().forEach(comp => {\n      if (type === undefined || type === comp.type) callback(comp)\n    })\n  }\n\n  /**\n   * Iterator over each representation and executing the callback\n   */\n  eachRepresentation (callback: (reprElem: RepresentationElement, comp: Component) => void, type?: string) {\n    this.eachComponent(comp => {\n      comp.reprList.slice().forEach(reprElem => {\n        if (type === undefined || type === reprElem.getType()) callback(reprElem, comp)\n      })\n    })\n  }\n\n  /**\n   * Get collection of components by name\n   */\n  getComponentsByName (name: string|RegExp) {\n    const compList: Component[] = []\n\n    this.eachComponent(comp => {\n      if (name === undefined || matchName(name, comp)) compList.push(comp)\n    })\n\n    return new ComponentCollection(compList)\n  }\n\n  /**\n   * Get collection of components by object\n   */\n  getComponentsByObject (object: Structure|Surface|Volume|Shape) {\n    const compList: Component[] = []\n\n    this.eachComponent(comp => {\n      if (comp.object === object) compList.push(comp)\n    })\n\n    return new ComponentCollection(compList)\n  }\n\n  /**\n   * Get collection of representations by name\n   */\n  getRepresentationsByName (name: string|RegExp) {\n    const reprList: RepresentationElement[] = []\n\n    this.eachRepresentation((repr, comp) => {\n      if (name === undefined || matchName(name, repr)) reprList.push(repr)\n    })\n\n    return new RepresentationCollection(reprList)\n  }\n\n  measureClear () {\n    this.eachComponent((sc: StructureComponent) => sc.measureClear(), 'structure')\n  }\n\n  measureUpdate () {\n    this.eachComponent((sc: StructureComponent) => sc.measureUpdate(), 'structure')\n  }\n\n  /**\n   * Cleanup when disposing of a stage object\n   */\n  dispose () {\n    this.tasks.dispose()\n    this.viewer.dispose()\n    this.mouseObserver.dispose()\n  }\n}\n\nexport default Stage\n","/**\n * @file Shape Component\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ComponentRegistry } from '../globals'\nimport Component, { ComponentParameters } from './component'\nimport Stage from '../stage/stage'\nimport Shape from '../geometry/shape'\nimport { Vector3, Box3 } from 'three';\nimport RepresentationElement from './representation-element';\n\nexport type ShapeRepresentationType = 'buffer'\n\n/**\n * Component wrapping a {@link Shape} object\n *\n * @example\n * // get a shape component by adding a shape object to the stage\n * var shape = new NGL.Shape( \"shape\" );\n * shape.addSphere( [ 0, 0, 0 ], [ 1, 0, 0 ], 1.5 );\n * var shapeComponent = stage.addComponentFromObject( shape );\n * shapeComponent.addRepresentation( \"buffer\" );\n */\nclass ShapeComponent extends Component {\n  constructor (stage: Stage, readonly shape: Shape, params: Partial<ComponentParameters> = {}) {\n    super(stage, shape, Object.assign({ name: shape.name }, params))\n  }\n\n  /**\n   * Component type\n   * @type {String}\n   */\n  get type () { return 'shape' }\n\n  /**\n   * Add a new shape representation to the component\n   * @param {String} type - the name of the representation, one of:\n   *                        buffer.\n   * @param {BufferRepresentationParameters} params - representation parameters\n   * @return {RepresentationComponent} the created representation wrapped into\n   *                                   a representation component object\n   */\n  addRepresentation (type: ShapeRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\n    return this._addRepresentation(type, this.shape, params)\n  }\n\n  getBoxUntransformed (): Box3 {\n    return this.shape.boundingBox\n  }\n\n  getCenterUntransformed (): Vector3 {\n    return this.shape.center\n  }\n\n  dispose () {\n    this.shape.dispose()\n    super.dispose()\n  }\n}\n\nComponentRegistry.add('shape', ShapeComponent)\n\nexport default ShapeComponent\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * @file Atomindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\n/**\n * Color by atom index. The {@link AtomProxy.index} property is used for coloring.\n * Each {@link ModelProxy} of a {@link Structure} is colored seperately. The\n * `params.domain` parameter is ignored.\n *\n * __Name:__ _atomindex_\n *\n * @example\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"atomindex\" } );\n *     o.autoView();\n * } );\n */\nclass AtomindexColormaker extends Colormaker {\n  scalePerModel: { [k: number]: ColormakerScale }\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'rainbow'\n      this.parameters.reverse = defaults(params.reverse, true)\n    }\n\n    this.scalePerModel = {}\n\n    params.structure.eachModel((mp: ModelProxy) => {\n      this.parameters.domain = [ mp.atomOffset, mp.atomEnd ]\n      this.scalePerModel[ mp.index ] = this.getScale()  // TODO\n    })\n  }\n\n  /**\n   * get color for an atom\n   * @param  {AtomProxy} atom - atom to get color for\n   * @return {Integer} hex atom color\n   */\n  @manageColor\n  atomColor (atom: AtomProxy) {\n    return this.scalePerModel[ atom.modelIndex ](atom.index)\n  }\n}\n\nColormakerRegistry.add('atomindex', AtomindexColormaker as any)  // TODO\n\nexport default AtomindexColormaker\n","/**\n * @file Bfactor Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport Selection from '../selection/selection'\n\n/**\n * Color by b-factor. The {@link AtomProxy.bfactor} property is used for coloring.\n * By default the min and max b-factor values are used for the scale`s domain.\n *\n * __Name:__ _bfactor_\n *\n * @example\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"bfactor\" } );\n *     o.autoView();\n * } );\n */\nclass BfactorColormaker extends Colormaker {\n  bfactorScale: ColormakerScale\n\n  constructor (params: { sele?: string } & StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'OrRd'\n    }\n\n    if (!params.domain) {\n      let selection\n      let min = Infinity\n      let max = -Infinity\n\n      if (params.sele) {\n        selection = new Selection(params.sele)\n      }\n\n      params.structure.eachAtom(function (a) {\n        const bfactor = a.bfactor\n        min = Math.min(min, bfactor)\n        max = Math.max(max, bfactor)\n      }, selection)\n\n      this.parameters.domain = [ min, max ]\n    }\n\n    this.bfactorScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.bfactorScale(a.bfactor)\n  }\n}\n\nColormakerRegistry.add('bfactor', BfactorColormaker as any)\n\nexport default BfactorColormaker\n","/**\n * @file Chainid Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\nexport type ChainidDict = { [k: string]: number }\n\n/**\n * Color by chain id\n */\nclass ChainidColormaker extends Colormaker {\n  chainidDictPerModel: { [k: number]: ChainidDict } = {}\n  scalePerModel: { [k: number]: ColormakerScale } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'Spectral'\n    }\n\n    params.structure.eachModel((mp: ModelProxy) => {\n      let i = 0\n      const chainidDict: ChainidDict = {}\n      mp.eachChain(function (cp: ChainProxy) {\n        if (chainidDict[ cp.chainid ] === undefined) {\n          chainidDict[ cp.chainid ] = i\n          i += 1\n        }\n      })\n      this.parameters.domain = [ 0, i - 1 ]\n      this.chainidDictPerModel[ mp.index ] = chainidDict\n      this.scalePerModel[ mp.index ] = this.getScale()\n    })\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    const chainidDict = this.chainidDictPerModel[ a.modelIndex ]\n    return this.scalePerModel[ a.modelIndex ](chainidDict[ a.chainid ])\n  }\n}\n\nColormakerRegistry.add('chainid', ChainidColormaker as any)\n\nexport default ChainidColormaker\n","/**\n * @file Chainindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\n/**\n * Color by chain index\n */\nclass ChainindexColormaker extends Colormaker {\n  scalePerModel: { [k: number]: ColormakerScale } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'Spectral'\n    }\n\n    params.structure.eachModel((mp: ModelProxy) => {\n      this.parameters.domain = [ mp.chainOffset, mp.chainEnd ]\n      this.scalePerModel[ mp.index ] = this.getScale()\n    })\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.scalePerModel[ a.modelIndex ](a.chainIndex)\n  }\n}\n\nColormakerRegistry.add('chainindex', ChainindexColormaker as any)\n\nexport default ChainindexColormaker\n","/**\n * @file Chainname Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\nimport ModelProxy from '../proxy/model-proxy'\n\nexport type ChainnameDict = { [k: string]: number }\n\n/**\n * Color by chain name\n */\nclass ChainnameColormaker extends Colormaker {\n  chainnameDictPerModel: { [k: number]: ChainnameDict } = {}\n  scalePerModel: { [k: number]: ColormakerScale } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'Spectral'\n    }\n\n    params.structure.eachModel((mp: ModelProxy) => {\n      let i = 0\n      const chainnameDict: ChainnameDict = {}\n      mp.eachChain(function (cp: ChainProxy) {\n        if (chainnameDict[ cp.chainname ] === undefined) {\n          chainnameDict[ cp.chainname ] = i\n          i += 1\n        }\n      })\n      this.parameters.domain = [ 0, i - 1 ]\n      this.chainnameDictPerModel[ mp.index ] = chainnameDict\n      this.scalePerModel[ mp.index ] = this.getScale()\n    })\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    const chainnameDict = this.chainnameDictPerModel[ a.modelIndex ]\n    return this.scalePerModel[ a.modelIndex ](chainnameDict[ a.chainname ])\n  }\n}\n\nColormakerRegistry.add('chainname', ChainnameColormaker as any)\n\nexport default ChainnameColormaker\n","/**\n * @file Densityfit Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by validation density fit\n */\nclass DensityfitColormaker extends Colormaker {\n  rsrzScale: ColormakerScale\n  rsccScale: ColormakerScale\n\n  rsrzDict: { [k: string]: number|undefined } = {}\n  rsccDict: { [k: string]: number|undefined } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'RdYlBu'\n    }\n\n    this.rsrzScale = this.getScale({ domain: [ 2, 0 ] })\n    this.rsccScale = this.getScale({ domain: [ 0.678, 1.0 ] })\n\n    const val = params.structure.validation\n    if (val) {\n      this.rsrzDict = val.rsrzDict\n      this.rsccDict = val.rsccDict\n    }\n\n  }\n\n  @manageColor\n  atomColor (atom: AtomProxy) {\n    let sele = atom.resno + ''\n    if (atom.inscode) sele += '^' + atom.inscode\n    if (atom.chainname) sele += ':' + atom.chainname\n    sele += '/' + atom.modelIndex\n\n    const rsrz = this.rsrzDict[ sele ]\n    if (rsrz !== undefined) {\n      return this.rsrzScale(rsrz)\n    }\n\n    const rscc = this.rsccDict[ sele ]\n    if (rscc !== undefined) {\n      return this.rsccScale(rscc)\n    }\n\n    return 0x909090\n  }\n}\n\nColormakerRegistry.add('densityfit', DensityfitColormaker as any)\n\nexport default DensityfitColormaker\n","/**\n * @file Atomindex Colormaker\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport SpatialHash from '../geometry/spatial-hash'\n\n// from CHARMM\nconst partialCharges: { [k: string]: { [k: string]: number } } = {\n  'ARG': {\n    'CD': 0.1,\n    'CZ': 0.5,\n    'NE': -0.1\n  },\n  'ASN': {\n    'CG': 0.55,\n    'OD1': -0.55\n  },\n  'ASP': {\n    'CB': -0.16,\n    'CG': 0.36,\n    'OD1': -0.6,\n    'OD2': -0.6\n  },\n  'CYS': {\n    'CB': 0.19,\n    'SG': -0.19\n  },\n  'GLN': {\n    'CD': 0.55,\n    'OE1': -0.55\n  },\n  'GLU': {\n    'CD': 0.36,\n    'CG': -0.16,\n    'OE1': -0.6,\n    'OE2': -0.6\n  },\n  'HIS': {\n    'CB': 0.1,\n    'CD2': 0.2,\n    'CE1': 0.45,\n    'CG': 0.15,\n    'ND1': 0.05,\n    'NE2': 0.05\n  },\n  'LYS': {\n    'CE': 0.25,\n    'NZ': 0.75\n  },\n  'MET': {\n    'CE': 0.06,\n    'CG': 0.06,\n    'SD': -0.12\n  },\n  'PTR': {\n    'C': 0.55,\n    'CA': 0.1,\n    'CZ': 0.25,\n    'N': -0.35,\n    'O': -0.55,\n    'O1P': -0.85,\n    'O2P': -0.85,\n    'O3P': -0.85,\n    'OG1': -1.1,\n    'P': 1.4\n  },\n  'SEP': {\n    'C': 0.55,\n    'CA': 0.1,\n    'CB': 0.25,\n    'N': -0.35,\n    'O': -0.55,\n    'O1P': -0.85,\n    'O2P': -0.85,\n    'O3P': -0.85,\n    'OG1': -1.1,\n    'P': 1.4\n  },\n  'SER': {\n    'CB': 0.25,\n    'OG': -0.25\n  },\n  'THR': {\n    'CB': 0.25,\n    'OG1': -0.25\n  },\n  'TPO': {\n    'C': 0.55,\n    'CA': 0.1,\n    'CB': 0.25,\n    'N': -0.35,\n    'O': -0.55,\n    'OG1': -1.1,\n    'O1P': -0.85,\n    'O2P': -0.85,\n    'O3P': -0.85,\n    'P': 1.4\n  },\n  'TRP': {\n    'CD1': 0.06,\n    'CD2': 0.1,\n    'CE2': -0.04,\n    'CE3': -0.03,\n    'CG': -0.03,\n    'NE1': -0.06\n  },\n  'TYR': {\n    'CZ': 0.25,\n    'OH': -0.25\n  },\n  'backbone': {\n    'C': 0.55,\n    'O': -0.55,\n    'N': -0.35,\n    'CA': 0.1\n  }\n}\n\nconst maxRadius = 12.0\nconst nHBondDistance = 1.04\nconst nHCharge = 0.25\n\n/**\n * Populates position vector with location of implicit or explicit H\n * Returns position or undefined if not able to locate H\n *\n * @param {AtomProxy} ap - the nitrogen atom\n * @param {Vector3} [position] - optional target\n * @return {Vectors|undefined} the hydrogen atom position\n */\nfunction backboneNHPosition (ap: AtomProxy, position = new Vector3()) {\n  let h = false\n  let ca = false\n  let c = false\n  position.set(2 * ap.x, 2 * ap.y, 2 * ap.z)\n\n  ap.eachBondedAtom(function (a2: AtomProxy) {\n    // Any time we detect H, reset position and skip\n    // future tests\n    if (h) return\n    if (a2.atomname === 'H') {\n      position.set(a2.x, a2.y, a2.z)\n      h = true\n      return\n    }\n    if (!ca && a2.atomname === 'CA') {\n      position.sub(a2 as any)  // TODO\n      ca = true\n    } else if (!c && a2.atomname === 'C') {\n      c = true\n      position.sub(a2 as any)  // TODO\n    }\n  })\n\n  if (h) { return position }\n\n  if (ca && c) {\n    position.normalize()\n    position.multiplyScalar(nHBondDistance)\n    position.add(ap as any)\n    return position\n  }\n}\n\n/**\n * Takes an array of Vector3 objects and\n * converts to an object that looks like an AtomStore\n *\n * @param {Vector3[]} positions - array of positions\n * @return {Object} AtomStore-like object\n */\nfunction buildStoreLike (positions: Vector3[]) {\n  const n = positions.length\n  const x = new Float32Array(n)\n  const y = new Float32Array(n)\n  const z = new Float32Array(n)\n\n  for (let i = 0; i < positions.length; i++) {\n    const v = positions[ i ]\n    x[ i ] = v.x\n    y[ i ] = v.y\n    z[ i ] = v.z\n  }\n\n  return { x: x, y: y, z: z, count: n }\n}\n\nfunction chargeForAtom (a: AtomProxy): number {\n  if (a.partialCharge !== null) return a.partialCharge\n  if (!a.isProtein()) { return 0.0 }\n  return (\n    (partialCharges[ a.resname ] &&\n        partialCharges[ a.resname ][ a.atomname ]) ||\n    partialCharges[ 'backbone' ][ a.atomname ] || 0.0\n  )\n}\n\n/**\n * Color a surface by electrostatic charge. This is a highly approximate\n * calculation! The partial charges are CHARMM with hydrogens added to heavy\n * atoms and hydrogen positions generated for amides.\n *\n * __Name:__ _electrostatic_\n *\n * @example\n * stage.loadFile( \"rcsb://3dqb\" ).then( function( o ){\n *     o.addRepresentation( \"surface\", { colorScheme: \"electrostatic\" } );\n *     o.autoView();\n * } );\n */\nclass ElectrostaticColormaker extends Colormaker {\n  scale: ColormakerScale\n  hHash: SpatialHash\n  hash: SpatialHash\n  charges: Float32Array\n  hStore: { x: Float32Array, y: Float32Array, z: Float32Array, count: number }\n  atomProxy: AtomProxy\n\n  delta = new Vector3()\n  hCharges: number[] = []\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'rwb'\n    }\n    if (!params.domain) {\n      this.parameters.domain = [ -50, 50 ]\n    }\n\n    this.scale = this.getScale()\n\n    this.charges = new Float32Array(params.structure.atomCount)\n    const hPositions: Vector3[] = []\n\n    params.structure.eachAtom((ap: AtomProxy) => {\n      this.charges[ ap.index ] = chargeForAtom(ap) * ap.occupancy\n      if (ap.atomname === 'N') {\n\n        // In the specific case where N forms two bonds to\n        // CA and C, try and place a dummy hydrogen\n\n        if (ap.bondCount >= 3) return; // Skip if 3 bonds already (e.g. PRO)\n\n        if (ap.bondToElementCount(1)) return; // Skip if any H specificed\n\n        const hPos = backboneNHPosition(ap)\n        if (hPos !== undefined) {\n          hPositions.push(hPos)\n          this.hCharges.push(nHCharge * ap.occupancy)\n        }\n      }\n    })\n\n    const bbox = params.structure.getBoundingBox()\n    bbox.expandByScalar(nHBondDistance) // Worst case\n\n    // SpatialHash requires x,y,z and count\n    this.hStore = buildStoreLike(hPositions)\n    this.hHash = new SpatialHash(this.hStore as any, bbox)  // TODO\n    this.hash = new SpatialHash(params.structure.atomStore, bbox)\n  }\n\n  @manageColor\n  positionColor (v: Vector3) {\n\n    const charges = this.charges\n    const hCharges = this.hCharges\n\n    let p = 0.0\n    this.hash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\n      const charge = charges[atomIndex]\n      if (charge === 0.0) return\n      p += charge / dSq\n    })\n\n    this.hHash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\n      const charge = hCharges[atomIndex]\n      if (charge === 0.0) return\n      p += charge / dSq\n    })\n\n    return this.scale(p * 332) // 332 to convert to kcal/mol\n  }\n}\n\nColormakerRegistry.add('electrostatic', ElectrostaticColormaker as any)\n\nexport default ElectrostaticColormaker\n","/**\n * @file Element Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Colormaker, { ColormakerParameters, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\nconst ElementColors: { [k: string]: number } = {\n  'H': 0xFFFFFF,\n  'HE': 0xD9FFFF,\n  'LI': 0xCC80FF,\n  'BE': 0xC2FF00,\n  'B': 0xFFB5B5,\n  'C': 0x909090,\n  'N': 0x3050F8,\n  'O': 0xFF0D0D,\n  'F': 0x90E050,\n  'NE': 0xB3E3F5,\n  'NA': 0xAB5CF2,\n  'MG': 0x8AFF00,\n  'AL': 0xBFA6A6,\n  'SI': 0xF0C8A0,\n  'P': 0xFF8000,\n  'S': 0xFFFF30,\n  'CL': 0x1FF01F,\n  'AR': 0x80D1E3,\n  'K': 0x8F40D4,\n  'CA': 0x3DFF00,\n  'SC': 0xE6E6E6,\n  'TI': 0xBFC2C7,\n  'V': 0xA6A6AB,\n  'CR': 0x8A99C7,\n  'MN': 0x9C7AC7,\n  'FE': 0xE06633,\n  'CO': 0xF090A0,\n  'NI': 0x50D050,\n  'CU': 0xC88033,\n  'ZN': 0x7D80B0,\n  'GA': 0xC28F8F,\n  'GE': 0x668F8F,\n  'AS': 0xBD80E3,\n  'SE': 0xFFA100,\n  'BR': 0xA62929,\n  'KR': 0x5CB8D1,\n  'RB': 0x702EB0,\n  'SR': 0x00FF00,\n  'Y': 0x94FFFF,\n  'ZR': 0x94E0E0,\n  'NB': 0x73C2C9,\n  'MO': 0x54B5B5,\n  'TC': 0x3B9E9E,\n  'RU': 0x248F8F,\n  'RH': 0x0A7D8C,\n  'PD': 0x006985,\n  'AG': 0xC0C0C0,\n  'CD': 0xFFD98F,\n  'IN': 0xA67573,\n  'SN': 0x668080,\n  'SB': 0x9E63B5,\n  'TE': 0xD47A00,\n  'I': 0x940094,\n  'XE': 0x940094,\n  'CS': 0x57178F,\n  'BA': 0x00C900,\n  'LA': 0x70D4FF,\n  'CE': 0xFFFFC7,\n  'PR': 0xD9FFC7,\n  'ND': 0xC7FFC7,\n  'PM': 0xA3FFC7,\n  'SM': 0x8FFFC7,\n  'EU': 0x61FFC7,\n  'GD': 0x45FFC7,\n  'TB': 0x30FFC7,\n  'DY': 0x1FFFC7,\n  'HO': 0x00FF9C,\n  'ER': 0x00E675,\n  'TM': 0x00D452,\n  'YB': 0x00BF38,\n  'LU': 0x00AB24,\n  'HF': 0x4DC2FF,\n  'TA': 0x4DA6FF,\n  'W': 0x2194D6,\n  'RE': 0x267DAB,\n  'OS': 0x266696,\n  'IR': 0x175487,\n  'PT': 0xD0D0E0,\n  'AU': 0xFFD123,\n  'HG': 0xB8B8D0,\n  'TL': 0xA6544D,\n  'PB': 0x575961,\n  'BI': 0x9E4FB5,\n  'PO': 0xAB5C00,\n  'AT': 0x754F45,\n  'RN': 0x428296,\n  'FR': 0x420066,\n  'RA': 0x007D00,\n  'AC': 0x70ABFA,\n  'TH': 0x00BAFF,\n  'PA': 0x00A1FF,\n  'U': 0x008FFF,\n  'NP': 0x0080FF,\n  'PU': 0x006BFF,\n  'AM': 0x545CF2,\n  'CM': 0x785CE3,\n  'BK': 0x8A4FE3,\n  'CF': 0xA136D4,\n  'ES': 0xB31FD4,\n  'FM': 0xB31FBA,\n  'MD': 0xB30DA6,\n  'NO': 0xBD0D87,\n  'LR': 0xC70066,\n  'RF': 0xCC0059,\n  'DB': 0xD1004F,\n  'SG': 0xD90045,\n  'BH': 0xE00038,\n  'HS': 0xE6002E,\n  'MT': 0xEB0026,\n  'DS': 0xFFFFFF,\n  'RG': 0xFFFFFF,\n  'CN': 0xFFFFFF,\n  'UUT': 0xFFFFFF,\n  'FL': 0xFFFFFF,\n  'UUP': 0xFFFFFF,\n  'LV': 0xFFFFFF,\n  'UUH': 0xFFFFFF,\n\n  'D': 0xFFFFC0,\n  'T': 0xFFFFA0\n}\nconst DefaultElementColor = 0xFFFFFF\n\n/**\n * Color by element\n */\nclass ElementColormaker extends Colormaker {\n  constructor (params: ColormakerParameters) {\n    params.value = defaults(params.value, ElementColors.C)\n\n    super(params)\n  }\n\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    const element = a.element\n\n    if (element === 'C') {\n      return this.parameters.value\n    } else {\n      return ElementColors[ element ] || DefaultElementColor\n    }\n  }\n}\n\nColormakerRegistry.add('element', ElementColormaker as any)\n\nexport default ElementColormaker\n","/**\n * @file Entityindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by entity index\n */\nclass EntityindexColormaker extends Colormaker {\n  entityindexScale: ColormakerScale\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'Spectral'\n    }\n    if (!params.domain) {\n      this.parameters.domain = [ 0, params.structure.entityList.length - 1 ]\n    }\n\n    this.entityindexScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.entityindexScale(a.entityIndex)\n  }\n}\n\nColormakerRegistry.add('entityindex', EntityindexColormaker as any)\n\nexport default EntityindexColormaker\n","/**\n * @file Entitytype Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\nimport {\n    PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\n} from '../structure/structure-constants'\n\n/**\n * Color by entity type\n */\nclass EntitytypeColormaker extends Colormaker {\n  @manageColor\n  atomColor (a: AtomProxy) {\n    const e = a.entity\n    const et = e ? e.entityType : undefined\n    switch (et) {\n      case PolymerEntity:\n        return 0x7fc97f\n      case NonPolymerEntity:\n        return 0xfdc086\n      case MacrolideEntity:\n        return 0xbeaed4\n      case WaterEntity:\n        return 0x386cb0\n      default:\n        return 0xffff99\n    }\n  }\n}\n\nColormakerRegistry.add('entitytype', EntitytypeColormaker as any)\n\nexport default EntitytypeColormaker\n","/**\n * @file Geoquality Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport { countSetBits } from '../math/math-utils'\n\n/**\n * Color by validation gometry quality\n */\nclass GeoqualityColormaker extends Colormaker {\n  geoAtomDict: { [k: string]: { [k: string]: number } } = {}\n  geoDict: { [k: string]: number|undefined } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    const val = params.structure.validation\n    if (val) {\n      this.geoAtomDict = val.geoAtomDict\n      this.geoDict = val.geoDict\n    }\n  }\n\n  @manageColor\n  atomColor (atom: AtomProxy) {\n    let sele = atom.resno + ''\n    if (atom.inscode) sele += '^' + atom.inscode\n    if (atom.chainname) sele += ':' + atom.chainname\n    sele += '/' + atom.modelIndex\n\n    let geoProblemCount\n    const geoAtom = this.geoAtomDict[ sele ]\n    if (geoAtom !== undefined) {\n      const atomProblems: number = geoAtom[ atom.atomname ] || 0\n      geoProblemCount = countSetBits(atomProblems)\n    } else {\n      geoProblemCount = this.geoDict[ sele ] || 0\n    }\n\n    if (geoProblemCount === 0) {\n      return 0x2166ac\n    } else if (geoProblemCount === 1) {\n      return 0xfee08b\n    } else if (geoProblemCount === 2) {\n      return 0xf46d43\n    } else if (geoProblemCount >= 3) {\n      return 0xa50026\n    }\n    return 0x909090\n  }\n}\n\nColormakerRegistry.add('geoquality', GeoqualityColormaker as any)\n\nexport default GeoqualityColormaker\n","/**\n * @file Hydrophobicity Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\nimport {\n    ResidueHydrophobicity, DefaultResidueHydrophobicity\n} from '../structure/structure-constants'\n\n/**\n * Color by hydrophobicity\n */\nclass HydrophobicityColormaker extends Colormaker {\n  hfScale: ColormakerScale\n  resHF: { [k: string]: number } = {}\n  defaultResidueHydrophobicity: number\n\n  constructor (params: ColormakerParameters) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'RdYlGn'\n    }\n\n    const idx = 0  // 0: DGwif, 1: DGwoct, 2: Oct-IF\n\n    for (const name in ResidueHydrophobicity) {\n      this.resHF[ name ] = ResidueHydrophobicity[ name ][ idx ]\n    }\n    this.defaultResidueHydrophobicity = DefaultResidueHydrophobicity[idx]\n\n    if (!params.domain) {\n      let min = Infinity\n      let max = -Infinity\n\n      for (const name in this.resHF) {\n        const val = this.resHF[ name ]\n        min = Math.min(min, val)\n        max = Math.max(max, val)\n      }\n\n      this.parameters.domain = [ min, 0, max ]\n    }\n\n    this.hfScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.hfScale(this.resHF[ a.resname ] || this.defaultResidueHydrophobicity)\n  }\n}\n\nColormakerRegistry.add('hydrophobicity', HydrophobicityColormaker as any)\n\nexport default HydrophobicityColormaker\n","/**\n * @file Modelindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by model index\n */\nclass ModelindexColormaker extends Colormaker {\n  modelindexScale: ColormakerScale\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'rainbow'\n    }\n    if (!params.domain) {\n      this.parameters.domain = [ 0, params.structure.modelStore.count ]\n    }\n\n    this.modelindexScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.modelindexScale(a.modelIndex)\n  }\n}\n\nColormakerRegistry.add('modelindex', ModelindexColormaker as any)\n\nexport default ModelindexColormaker\n","/**\n * @file Moleculetype Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\nimport {\n    WaterType, IonType, ProteinType, RnaType, DnaType, SaccharideType\n} from '../structure/structure-constants'\n\n/**\n * Color by molecule type\n */\nclass MoleculetypeColormaker extends Colormaker {\n  @manageColor\n  atomColor (a: AtomProxy) {\n    switch (a.residueType.moleculeType) {\n      case WaterType:\n        return 0x386cb0\n      case IonType:\n        return 0xf0027f\n      case ProteinType:\n        return 0xbeaed4\n      case RnaType:\n        return 0xfdc086\n      case DnaType:\n        return 0xbf5b17\n      case SaccharideType:\n        return 0x7fc97f\n      default:\n        return 0xffff99\n    }\n  }\n}\n\nColormakerRegistry.add('moleculetype', MoleculetypeColormaker as any)\n\nexport default MoleculetypeColormaker\n","/**\n * @file Occupancy Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by occupancy\n */\nclass OccupancyColormaker extends Colormaker {\n  occupancyScale: ColormakerScale\n\n  constructor (params: ColormakerParameters) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'PuBu'\n    }\n\n    if (!params.domain) {\n      this.parameters.domain = [ 0.0, 1.0 ]\n    }\n\n    this.occupancyScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.occupancyScale(a.occupancy)\n  }\n}\n\nColormakerRegistry.add('occupancy', OccupancyColormaker as any)\n\nexport default OccupancyColormaker\n","/**\n * @file Partialcharge Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by partial charge. The {@link AtomProxy.partialCharge} property is used for coloring.\n * The default domain is [-1, 1].\n *\n * __Name:__ _partialCharge_\n *\n * @example\n * stage.loadFile(\"rcsb://1crn\").then(function (o) {\n *   o.addRepresentation(\"ball+stick\", {colorScheme: \"partialCharge\"});\n *   o.autoView();\n * });\n */\nclass PartialchargeColormaker extends Colormaker {\n  partialchargeScale: ColormakerScale\n\n  constructor (params: ColormakerParameters) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'rwb'\n    }\n\n    if (!params.domain) {\n      this.parameters.domain = [-1, 1]\n    }\n\n    this.partialchargeScale = this.getScale()\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.partialchargeScale(a.partialCharge || 0)\n  }\n}\n\nColormakerRegistry.add('partialcharge', PartialchargeColormaker as any)\n\nexport default PartialchargeColormaker\n","/**\n * @file Random Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { manageColor } from './colormaker'\n\nfunction randomColor () {\n  return Math.random() * 0xFFFFFF\n}\n\n/**\n * Class by random color\n */\nclass RandomColormaker extends Colormaker {\n  /**\n   * get color for an atom\n   * @return {Integer} random hex color\n   */\n  @manageColor\n  atomColor () {\n    return randomColor()\n  }\n\n  /**\n   * get color for volume cell\n   * @return {Integer} random hex color\n   */\n  @manageColor\n  volumeColor () {\n    return randomColor()\n  }\n\n  /**\n   * get color for coordinates in space\n   * @return {Integer} random hex color\n   */\n  @manageColor\n  positionColor () {\n    return randomColor()\n  }\n}\n\nColormakerRegistry.add('random', RandomColormaker as any)\n\nexport default RandomColormaker\n","/**\n * @file Randomcoilindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n/**\n * Color by random coil index\n */\nclass RandomcoilindexColormaker extends Colormaker {\n  rciScale: ColormakerScale\n  rciDict: { [k: string]: number|undefined } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'RdYlBu'\n    }\n\n    this.rciScale = this.getScale({ domain: [ 0.6, 0 ] })\n\n    const val = params.structure.validation\n    if (val) this.rciDict = val.rciDict\n\n  }\n\n  @manageColor\n  atomColor (atom: AtomProxy) {\n    let sele = `[${atom.resname}]${atom.resno}`\n    if (atom.chainname) sele += ':' + atom.chainname\n\n    const rci = this.rciDict[ sele ]\n    return rci !== undefined ? this.rciScale(rci) : 0x909090\n  }\n}\n\nColormakerRegistry.add('randomcoilindex', RandomcoilindexColormaker as any)\n\nexport default RandomcoilindexColormaker\n","/**\n * @file Residueindex Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ChainProxy from '../proxy/chain-proxy'\n\n/**\n * Color by residue index\n */\nclass ResidueindexColormaker extends Colormaker {\n  scalePerChain: { [k: number]: ColormakerScale } = {}\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    if (!params.scale) {\n      this.parameters.scale = 'rainbow'\n      this.parameters.reverse = defaults(params.reverse, true)\n    }\n\n    params.structure.eachChain((cp: ChainProxy) => {\n      this.parameters.domain = [ cp.residueOffset, cp.residueEnd ]\n      this.scalePerChain[ cp.index ] = this.getScale()\n    })\n  }\n\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return this.scalePerChain[ a.chainIndex ](a.residueIndex)\n  }\n}\n\nColormakerRegistry.add('residueindex', ResidueindexColormaker as any)\n\nexport default ResidueindexColormaker\n","/**\n * @file Resname Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\n\n// protein colors from Jmol http://jmol.sourceforge.net/jscolors/\nconst ResidueColors: { [k: string]: number } = {\n  'ALA': 0x8CFF8C,\n  'ARG': 0x00007C,\n  'ASN': 0xFF7C70,\n  'ASP': 0xA00042,\n  'CYS': 0xFFFF70,\n  'GLN': 0xFF4C4C,\n  'GLU': 0x660000,\n  'GLY': 0xFFFFFF,\n  'HIS': 0x7070FF,\n  'ILE': 0x004C00,\n  'LEU': 0x455E45,\n  'LYS': 0x4747B8,\n  'MET': 0xB8A042,\n  'PHE': 0x534C52,\n  'PRO': 0x525252,\n  'SER': 0xFF7042,\n  'THR': 0xB84C00,\n  'TRP': 0x4F4600,\n  'TYR': 0x8C704C,\n  'VAL': 0xFF8CFF,\n\n  'ASX': 0xFF00FF,\n  'GLX': 0xFF00FF,\n  'ASH': 0xFF00FF,\n  'GLH': 0xFF00FF,\n\n  'A': 0xDC143C,  // Crimson Red\n  'G': 0x32CD32,  // Lime Green\n  'I': 0x9ACD32,  // Yellow Green\n  'X': 0x7CFC00,  // Lawn Green\n  'C': 0xFFD700,  // Gold Yellow\n  'T': 0x4169E1,  // Royal Blue\n  'U': 0x40E0D0,  // Turquoise Cyan\n  'D': 0x008B8B,  // Dark Cyan\n\n  'DA': 0xDC143C,\n  'DG': 0x32CD32,\n  'DI': 0x9ACD32,\n  'DX': 0x7CFC00,\n  'DC': 0xFFD700,\n  'DT': 0x4169E1,\n  'DU': 0x40E0D0,\n  'DD': 0x008B8B\n}\nconst DefaultResidueColor = 0xFF00FF\n\n/**\n * Color by residue name\n */\nclass ResnameColormaker extends Colormaker {\n  @manageColor\n  atomColor (a: AtomProxy) {\n    return ResidueColors[ a.resname ] || DefaultResidueColor\n  }\n}\n\nColormakerRegistry.add('resname', ResnameColormaker as any)\n\nexport default ResnameColormaker\n","/**\n * @file Sstruc Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { StuctureColormakerParams, manageColor } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport ResidueProxy from '../proxy/residue-proxy'\n\n// from Jmol http://jmol.sourceforge.net/jscolors/ (shapely)\nconst StructureColors = {\n  'alphaHelix': 0xFF0080,\n  'threeTenHelix': 0xA00080,\n  'piHelix': 0x600080,\n  'betaStrand': 0xFFC800,\n  'betaTurn': 0x6080FF,\n  'coil': 0xFFFFFF,\n\n  'dna': 0xAE00FE,\n  'rna': 0xFD0162,\n\n  'carbohydrate': 0xA6A6FA\n}\nconst DefaultStructureColor = 0x808080\n\n/**\n * Color by secondary structure\n */\nclass SstrucColormaker extends Colormaker {\n  residueProxy: ResidueProxy\n\n  constructor (params: StuctureColormakerParams) {\n    super(params)\n\n    this.residueProxy = params.structure.getResidueProxy()\n  }\n\n  @manageColor\n  atomColor (ap: AtomProxy) {\n    const sstruc = ap.sstruc\n    const rp = this.residueProxy\n\n    if (sstruc === 'h') {\n      return StructureColors.alphaHelix\n    } else if (sstruc === 'g') {\n      return StructureColors.threeTenHelix\n    } else if (sstruc === 'i') {\n      return StructureColors.piHelix\n    } else if (sstruc === 'e' || sstruc === 'b') {\n      return StructureColors.betaStrand\n    } else if (sstruc === 't') {\n      return StructureColors.betaTurn\n    } else {\n      rp.index = ap.residueIndex\n      if (rp.isDna()) {\n        return StructureColors.dna\n      } else if (rp.isRna()) {\n        return StructureColors.rna\n      } else if (rp.isSaccharide()) {\n        return StructureColors.carbohydrate\n      } else if (rp.isProtein() || sstruc === 's' || sstruc === 'l') {\n        return StructureColors.coil\n      } else {\n        return DefaultStructureColor\n      }\n    }\n  }\n}\n\nColormakerRegistry.add('sstruc', SstrucColormaker as any)\n\nexport default SstrucColormaker\n","/**\n * @file Colordata Colormaker\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { ColorData, ColormakerScale, manageColor, StuctureColormakerParams } from './colormaker'\nimport AtomProxy from '../proxy/atom-proxy'\nimport BondProxy from '../proxy/bond-proxy'\n\n\nclass StructuredataColormaker extends Colormaker {\n  atomData?: ColorData['atomData']\n  bondData?: ColorData['bondData']\n  scale: ColormakerScale\n\n  constructor(params: StuctureColormakerParams) {\n    super(params)\n    if (!params.scale) {\n      this.parameters.scale = 'rwb'\n    }\n    this.atomData = this.parameters.data?.atomData\n    this.bondData = this.parameters.data?.bondData\n    this.scale = this.getScale(this.parameters)\n  }\n\n  @manageColor\n  atomColor(a: AtomProxy) {\n    const val = this.atomData?.[a.index]\n    return  (val !== undefined) ? this.scale(val) : this.parameters.value\n  }\n\n  @manageColor\n  bondColor(bond: BondProxy, fromTo: boolean) {\n      const val = this.bondData?.[bond.index]\n      \n      // Explicit bond data?\n      if (val !== undefined) return this.scale(val)\n      \n      \n      if (this.atomProxy) {\n        this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2\n        return this.atomColor(this.atomProxy)\n      } \n      \n      // Fallback\n      return this.parameters.value\n  }\n}\n\nColormakerRegistry.add('structuredata', StructuredataColormaker)\n\nexport default StructuredataColormaker","/**\n * @file Uniform Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { manageColor } from './colormaker'\n\n/**\n * Color by uniform color\n */\nclass UniformColormaker extends Colormaker {\n  @manageColor\n  atomColor () {\n    return this.parameters.value\n  }\n\n  @manageColor\n  bondColor () {\n    return this.parameters.value\n  }\n\n  @manageColor\n  valueColor () {\n    return this.parameters.value\n  }\n\n  @manageColor\n  volumeColor () {\n    return this.parameters.value\n  }\n}\n\nColormakerRegistry.add('uniform', UniformColormaker as any)\n\nexport default UniformColormaker\n","/**\n * @file Value Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { VolumeColormakerParams, ColormakerScale, manageColor } from './colormaker'\n\n/**\n * Color by volume value\n */\nclass ValueColormaker extends Colormaker {\n  valueScale: ColormakerScale\n\n  constructor (params: VolumeColormakerParams) {\n    super(params)\n    this.valueScale = this.getScale()\n  }\n\n  /**\n   * return the color for a volume cell\n   * @param  {Integer} index - volume cell index\n   * @return {Integer} hex cell color\n   */\n  @manageColor\n  volumeColor (index: number) {\n    return this.valueScale((this.parameters.volume! as any).data[ index ])  // TODO\n  }\n}\n\nColormakerRegistry.add('value', ValueColormaker as any)\n\nexport default ValueColormaker\n","/**\n * @file Volume Colormaker\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\nimport { lerp } from '../math/math-utils'\n\nimport { ColormakerRegistry } from '../globals'\nimport Colormaker, { VolumeColormakerParams, ColormakerScale, manageColor } from './colormaker'\n\n/**\n * Color by volume position\n */\nclass VolumeColormaker extends Colormaker {\n  valueScale: ColormakerScale\n  vec = new Vector3()\n\n  constructor (params: VolumeColormakerParams) {\n    super(params)\n    this.valueScale = this.getScale()\n  }\n\n  /**\n   * return the color for coordinates in space\n   * @param  {Vector3} coords - xyz coordinates\n   * @return {Integer} hex coords color\n   */\n  @manageColor\n  positionColor (coords: Vector3) {\n    const volume = this.parameters.volume as any  // TODO\n\n    if (!volume || !volume.inverseMatrix) {\n      return this.parameters.value\n    }\n\n    const vec = this.vec\n    const data = volume.data\n    const nx = volume.nx\n    const ny = volume.ny\n    const nxy = nx * ny\n\n    vec.copy(coords)\n    vec.applyMatrix4(volume.inverseMatrix)\n\n    // position of grid cell\n    const x0 = Math.floor(vec.x)\n    const y0 = Math.floor(vec.y)\n    const z0 = Math.floor(vec.z)\n\n    // Indices\n    const i = ((((z0 * ny) + y0) * nx) + x0)\n    const i1 = i + 1\n    const iy = i + nx\n    const iz = i + nxy\n    const i1y = iy + 1\n    const i1z = iz + 1\n    const iyz = iy + nxy\n    const i1yz = iyz + 1\n\n    // Values\n    const v = data[ i ]\n    const v1 = data[ i1 ]\n    const vy = data[ iy ]\n    const vz = data[ iz ]\n    const v1y = data[ i1y ]\n    const v1z = data[ i1z ]\n    const vyz = data[ iyz ]\n    const v1yz = data[ i1yz ]\n\n    // Position of point in fraction of grid\n    const xd = vec.x - x0\n    const yd = vec.y - y0\n    const zd = vec.z - z0\n\n    // 1st Dimension\n    const c00 = lerp(v, v1, xd)\n    const c01 = lerp(vz, v1z, xd)\n    const c10 = lerp(vy, v1y, xd)\n    const c11 = lerp(vyz, v1yz, xd)\n\n    // 2nd Dimension\n    const c0 = lerp(c00, c10, yd)\n    const c1 = lerp(c01, c11, yd)\n\n    // 3rd Dimension\n    const c = lerp(c0, c1, zd)\n\n    return this.valueScale(c)\n  }\n}\n\nColormakerRegistry.add('volume', VolumeColormaker as any)\n\nexport default VolumeColormaker\n","/**\n * @file Structure Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ExtensionFragDepth, Mobile } from '../globals'\nimport { defaults } from '../utils'\nimport { RepresentationParameters, default as Representation } from './representation'\nimport Selection from '../selection/selection'\nimport RadiusFactory, { RadiusFactoryTypes, RadiusType } from '../utils/radius-factory'\nimport Structure from '../structure/structure'\nimport Viewer from '../viewer/viewer'\n// @ts-ignore: unused import Volume required for declaration only\nimport { Assembly, Volume } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport AtomProxy from '../proxy/atom-proxy';\nimport Polymer from '../proxy/polymer';\nimport Buffer from '../buffer/buffer';\nimport { AtomDataFields, BondDataFields, AtomDataParams, BondDataParams } from '../structure/structure-data';\n// @ts-ignore: unused import Surface required for declaration only\nimport Surface from '../surface/surface'\n\n/**\n * Structure representation parameter object.\n * @typedef {Object} StructureRepresentationParameters - structure representation parameters\n * @mixes RepresentationParameters\n *\n * @property {String} radiusType - A list of possible sources of the radius used for rendering the representation. The radius can be based on the *vdW radius*, the *covalent radius* or the *B-factor* value of the corresponding atom. Additionally the radius can be based on the *secondary structure*. Alternatively, when set to *size*, the value from the *radius* parameter is used for all atoms.\n * @property {Float} radius - A number providing a fixed radius used for rendering the representation.\n * @property {Float} scale - A number that scales the value defined by the *radius* or the *radiusType* parameter.\n * @property {String} assembly - name of an assembly object. Included are the asymmetric unit (*AU*) corresponding to the coordinates given in the structure file, biological assemblies from *PDB*, *mmCIF* or *MMTF* files (*BU1*, *BU2*, ...), a filled (crystallographic) unitcell of a given space group (*UNITCELL*), a supercell consisting of a center unitcell and its 26 direct neighbors (*SUPERCELL*). Set to *default* to use the default asemmbly of the structure object.\n */\nexport interface StructureRepresentationParameters extends RepresentationParameters {\n  radiusType: string\n  radius: number\n  scale: number\n  assembly: string\n}\nexport interface StructureRepresentationData {\n  bufferList: Buffer[]\n  polymerList?: Polymer[]\n  sview?: StructureView | Structure\n  [k: string]: any\n}\n/**\n * Structure representation\n * @interface\n */\nabstract class StructureRepresentation extends Representation {\n\n  protected selection: Selection\n  protected dataList: StructureRepresentationData[]\n  structure: Structure\n  structureView: StructureView\n\n  protected radiusType: RadiusType\n  protected radiusData: {[k: number]: number}\n  protected radiusSize: number\n  protected radiusScale: number\n  protected assembly: string\n  protected defaultAssembly: string\n  protected needsBuild: boolean\n\n  /**\n   * Create Structure representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {StructureRepresentationParameters} params - structure representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\n    const p = params || {}\n\n    super(structure, viewer, p)\n\n    this.type = 'structure'\n\n    this.parameters = Object.assign({\n      radiusType: {\n        type: 'select', options: RadiusFactory.types\n      },\n      radiusData: {\n        type: 'hidden'\n      },\n      radiusSize: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      radiusScale: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      assembly: null,\n      defaultAssembly: {\n        type: 'hidden'\n      }\n    }, this.parameters)\n\n    /**\n     * @type {Selection}\n     * @private\n     */\n    this.selection = new Selection(p.sele)\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dataList = []\n\n    /**\n     * @type {Structure}\n     */\n    this.structure = structure\n\n    /**\n     * @type {StructureView}\n     */\n    this.structureView = this.structure.getView(this.selection)\n\n    if (structure.biomolDict) {\n      const biomolOptions:{[key: string]: string} = {\n        'default': 'default',\n        '': (structure.unitcell ? 'AU' : 'FULL')\n      }\n      Object.keys(structure.biomolDict).forEach(function (k) {\n        biomolOptions[ k ] = k\n      })\n      this.parameters.assembly = {\n        type: 'select',\n        options: biomolOptions,\n        rebuild: true\n      }\n    } else {\n      this.parameters.assembly = null\n    }\n  }\n\n  get defaultScale () {\n    return {\n      'vdw': 1.0,\n      'covalent': 1.0,\n      'bfactor': 0.01,\n      'sstruc': 1.0\n    }\n  }\n\n  init (params: Partial<StructureRepresentationParameters>) {\n    const p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'element')\n\n    this.setRadius(p.radius, p)\n\n    this.radiusType = defaults(p.radiusType, 'vdw')\n    this.radiusData = defaults(p.radiusData, {})\n    this.radiusSize = defaults(p.radiusSize, 1.0)\n    this.radiusScale = defaults(p.radiusScale, 1.0)\n    this.assembly = defaults(p.assembly, 'default')\n    this.defaultAssembly = defaults(p.defaultAssembly, '')\n\n    if (p.quality === 'auto') {\n      p.quality = this.getQuality()\n    }\n\n    super.init(p)\n\n    this.selection.signals.stringChanged.add((/* sele */) => {\n      this.build()\n    })\n\n    this.build()\n  }\n\n  setRadius (value: string | number | undefined, p: Partial<StructureRepresentationParameters>) {\n    const types = Object.keys(RadiusFactoryTypes)\n\n    if (typeof value === 'string' && types.includes(value.toLowerCase())) {\n      p.radiusType = value\n    } else if (value !== undefined) {\n      p.radiusType = 'size'\n      p.radiusSize = value\n    }\n\n    return this\n  }\n\n  getAssembly (): Assembly {\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\n    return this.structure.biomolDict[ name ]\n  }\n\n  getQuality () {\n    let atomCount\n    const s = this.structureView\n    const assembly = this.getAssembly()\n    if (assembly) {\n      atomCount = assembly.getAtomCount(s)\n    } else {\n      atomCount = s.atomCount\n    }\n    if (Mobile) {\n      atomCount *= 4\n    }\n    const backboneOnly = s.atomStore.count / s.residueStore.count < 2\n    if (backboneOnly) {\n      atomCount *= 10\n    }\n\n    if (atomCount < 15000) {\n      return 'high'\n    } else if (atomCount < 80000) {\n      return 'medium'\n    } else {\n      return 'low'\n    }\n  }\n\n  create () {\n    if (this.structureView.atomCount === 0) return\n\n    if (!this.structureView.hasCoords()) {\n      this.needsBuild = true\n      return\n    } else {\n      this.needsBuild = false\n    }\n\n    const assembly = this.getAssembly()\n\n    if (assembly) {\n      assembly.partList.forEach((part, i) => {\n        const sview = <StructureView>part.getView(this.structureView)\n        if (sview.atomCount === 0) return\n        const data = this.createData(sview, i)\n        if (data) {\n          data.sview = sview\n          data.instanceList = part.getInstanceList()\n          this.dataList.push(data)\n        }\n      })\n    } else {\n      const data = this.createData(this.structureView, 0)\n      if (data) {\n        data.sview = this.structureView\n        this.dataList.push(data)\n      }\n    }\n  }\n\n  abstract createData (sview: StructureView, k?: number): StructureRepresentationData|undefined\n\n  update (what: AtomDataFields|BondDataFields) {\n    if (this.lazy && !this.visible) {\n      Object.assign(this.lazyProps.what, what)\n      return\n    }\n\n    if (this.needsBuild) {\n      this.build()\n      return\n    }\n\n    this.dataList.forEach((data) => {\n      if (data.bufferList.length > 0) {\n        this.updateData(what, data)\n      }\n    }, this)\n  }\n\n  updateData (what?: AtomDataFields|BondDataFields, data?: any) {\n    this.build()\n  }\n\n  getColorParams () {\n    return {\n      ...super.getColorParams(),\n      structure: this.structure\n    }\n  }\n\n  getRadiusParams (param?: any) {\n    return {\n      type: this.radiusType,\n      scale: this.radiusScale,\n      size: this.radiusSize,\n      data: this.radiusData\n    }\n  }\n\n  getAtomParams (what?: AtomDataFields, params?: AtomDataParams) {\n    return Object.assign({\n      what: what,\n      colorParams: this.getColorParams(),\n      radiusParams: this.getRadiusParams()\n    }, params)\n  }\n\n  getBondParams (what?: BondDataFields, params?: BondDataParams) {\n    return Object.assign({\n      what: what,\n      colorParams: this.getColorParams(),\n      radiusParams: this.getRadiusParams()\n    }, params)\n  }\n\n  getAtomRadius (atom: AtomProxy) {\n    if (this.structureView.atomSet!.isSet(atom.index)) {\n      const radiusFactory = new RadiusFactory(this.getRadiusParams())\n      return radiusFactory.atomRadius(atom)\n    }\n    return 0\n  }\n\n  /**\n   * Set representation parameters\n   * @alias StructureRepresentation#setSelection\n   * @param {String} string - selection string, see {@tutorial selection-language}\n   * @param {Boolean} [silent] - don't trigger a change event in the selection\n   * @return {StructureRepresentation} this object\n   */\n  setSelection (string: string, silent?: boolean) {\n    this.selection.setString(string, silent)\n\n    return this\n  }\n\n  /**\n   * Set representation parameters\n   * @alias StructureRepresentation#setParameters\n   * @param {StructureRepresentationParameters} params - structure parameter object\n   * @param {Object} [what] - buffer data attributes to be updated,\n   *                        note that this needs to be implemented in the\n   *                        derived classes. Generally it allows more\n   *                        fine-grained control over updating than\n   *                        forcing a rebuild.\n   * @param {Boolean} what.position - update position data\n   * @param {Boolean} what.color - update color data\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\n   * @return {StructureRepresentation} this object\n   */\n  setParameters (params: Partial<StructureRepresentationParameters>, what: AtomDataFields = {}, rebuild = false) {\n    const p = params || {}\n\n    this.setRadius(p.radius, p)\n\n    if (p.radiusType !== undefined || p.radiusData !== undefined || p.radiusSize !== undefined || p.radiusScale !== undefined) {\n      what.radius = true\n      if (!ExtensionFragDepth || this.disableImpostor) {\n        rebuild = true\n      }\n    }\n\n    if (p.defaultAssembly !== undefined &&\n        p.defaultAssembly !== this.defaultAssembly &&\n        ((this.assembly === 'default' && p.assembly === undefined) ||\n          p.assembly === 'default')\n    ) {\n      rebuild = true\n    }\n\n    super.setParameters(p, what, rebuild)\n\n    return this\n  }\n\n  getParameters () {\n    const params = Object.assign(\n      super.getParameters(),\n      {\n        sele: this.selection ? this.selection.string : undefined,\n        defaultAssembly: this.defaultAssembly\n      }\n    )\n\n    return params\n  }\n\n  attach (callback: ()=> void) {\n    const viewer = this.viewer\n    const bufferList = this.bufferList\n\n    this.dataList.forEach(function (data) {\n      data.bufferList.forEach(function (buffer) {\n        bufferList.push(buffer)\n        viewer.add(buffer, data.instanceList)\n      })\n    })\n\n    this.setVisibility(this.visible)\n    callback()\n  }\n\n  clear () {\n    this.dataList.length = 0\n\n    super.clear()\n  }\n\n  dispose () {\n    this.structureView.dispose()\n\n    delete this.structure\n    delete this.structureView\n\n    super.dispose()\n  }\n}\n\nexport default StructureRepresentation\n","/**\n * @file Measurement Representation\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\nimport { Color, Vector3, Matrix4 } from 'three'\n\nimport Selection from '../selection/selection'\nimport { Browser } from '../globals'\nimport { defaults } from '../utils'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport { LabelRepresentationParameters } from './label-representation';\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer';\n\nexport interface LabelDataField {\n  position?: boolean\n  labelColor?: boolean\n  labelSize?: boolean\n  radius?: boolean\n  labelText?: boolean\n}\n\n/**\n * Measurement representation parameter object.\n * @typedef {Object} MeasurementRepresentationParameters - measurement representation parameters\n * @mixes RepresentationParameters\n * @mixes StructureRepresentationParameters\n *\n * @property {Float} labelSize - size of the distance label\n * @property {Color} labelColor - color of the distance label\n * @property {Boolean} labelVisible - visibility of the distance label\n * @property {Float} labelZOffset - offset in z-direction (i.e. in camera direction)\n */\nexport interface MeasurementRepresentationParameters extends StructureRepresentationParameters {\n  labelVisible: boolean\n  labelSize: number\n  labelColor: number\n  labelType: 'atomname'|'atomindex'|'occupancy'|'bfactor'|'serial'|'element'|'atom'|'resname'|'resno'|'res'|'text'|'qualified'\n  labelText: string\n  labelFormat: string\n  labelGrouping: 'atom'|'residue'\n  labelFontFamily: 'sans-serif'|'monospace'|'serif'\n  labelFontStyle: 'normal'|'italic'\n  labelFontWeight: 'normal'|'bold'\n  labelsdf: boolean\n  labelXOffset: number\n  labelYOffset: number\n  labelZOffset: number\n  labelAttachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\n  labelBorder: boolean\n  labelBorderColor: number\n  labelBorderWidth: number\n  labelBackground: boolean\n  labelBackgroundColor: number\n  labelBackgroundMargin: number\n  labelBackgroundOpacity: number\n  labelFixedSize: boolean\n  lineOpacity: number\n  linewidth: number\n}\n\n/**\n * Measurement representation\n * @interface\n */\nabstract class MeasurementRepresentation extends StructureRepresentation {\n  protected n: number\n  protected labelVisible: boolean\n  protected labelSize: number\n  protected labelColor: number\n  protected labelType: 'atomname'|'atomindex'|'occupancy'|'bfactor'|'serial'|'element'|'atom'|'resname'|'resno'|'res'|'text'|'qualified'\n  protected labelText: string\n  protected labelFormat: string\n  protected labelGrouping: 'atom'|'residue'\n  protected labelFontFamily: 'sans-serif'|'monospace'|'serif'\n  protected labelFontStyle: 'normal'|'italic'\n  protected labelFontWeight: 'normal'|'bold'\n  protected labelsdf: boolean\n  protected labelXOffset: number\n  protected labelYOffset: number\n  protected labelZOffset: number\n  protected labelAttachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\n  protected labelBorder: boolean\n  protected labelBorderColor: number\n  protected labelBorderWidth: number\n  protected labelBackground: boolean\n  protected labelBackgroundColor: number\n  protected labelBackgroundMargin: number\n  protected labelBackgroundOpacity: number\n  protected labelFixedSize: boolean\n  protected lineOpacity: number\n  protected linewidth: number\n  protected lineVisible: boolean\n\n  protected textBuffer: TextBuffer\n  /**\n   * Handles common label settings and position logic for\n   * distance, angle and dihedral representations\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<MeasurementRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.n = 0 // Subclass create sets value\n    this.parameters = Object.assign({\n      labelVisible: {\n        type: 'boolean'\n      },\n      labelSize: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      labelColor: {\n        type: 'color'\n      },\n      labelFontFamily: {\n        type: 'select',\n        options: {\n          'sans-serif': 'sans-serif',\n          'monospace': 'monospace',\n          'serif': 'serif'\n        },\n        buffer: 'fontFamily'\n      },\n      labelFontStyle: {\n        type: 'select',\n        options: {\n          'normal': 'normal',\n          'italic': 'italic'\n        },\n        buffer: 'fontStyle'\n      },\n      labelFontWeight: {\n        type: 'select',\n        options: {\n          'normal': 'normal',\n          'bold': 'bold'\n        },\n        buffer: 'fontWeight'\n      },\n      labelsdf: {\n        type: 'boolean', buffer: 'sdf'\n      },\n      labelXOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'xOffset'\n      },\n      labelYOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'yOffset'\n      },\n      labelZOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'zOffset'\n      },\n      labelAttachment: {\n        type: 'select',\n        options: {\n          'bottom-left': 'bottom-left',\n          'bottom-center': 'bottom-center',\n          'bottom-right': 'bottom-right',\n          'middle-left': 'middle-left',\n          'middle-center': 'middle-center',\n          'middle-right': 'middle-right',\n          'top-left': 'top-left',\n          'top-center': 'top-center',\n          'top-right': 'top-right'\n        },\n        rebuild: true\n      },\n      labelBorder: {\n        type: 'boolean', buffer: 'showBorder'\n      },\n      labelBorderColor: {\n        type: 'color', buffer: 'borderColor'\n      },\n      labelBorderWidth: {\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: 'borderWidth'\n      },\n      labelBackground: {\n        type: 'boolean', rebuild: true\n      },\n      labelBackgroundColor: {\n        type: 'color', buffer: 'backgroundColor'\n      },\n      labelBackgroundMargin: {\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\n      },\n      labelBackgroundOpacity: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: 'backgroundOpacity'\n      },\n      labelFixedSize: {\n        type: 'boolean', buffer: 'fixedSize'\n      },\n      lineOpacity: {\n        type: 'range', min: 0.0, max: 1.0, step: 0.01\n      },\n      linewidth: {\n        type: 'integer', max: 50, min: 1, buffer: true\n      }\n    }, this.parameters, {\n      flatShaded: null\n    })\n  }\n\n  init (params: Partial<MeasurementRepresentationParameters>) {\n    const p = params || {}\n    this.labelVisible = defaults(p.labelVisible, true)\n    this.labelSize = defaults(p.labelSize, 2.0)\n    this.labelColor = defaults(p.labelColor, 0xFFFFFF)\n    this.labelFontFamily = defaults(p.labelFontFamily, 'sans-serif')\n    this.labelFontStyle = defaults(p.labelFontstyle, 'normal')\n    this.labelFontWeight = defaults(p.labelFontWeight, 'bold')\n    this.labelsdf = defaults(p.labelsdf, Browser === 'Chrome')\n    this.labelXOffset = defaults(p.labelXOffset, 0.0)\n    this.labelYOffset = defaults(p.labelYOffset, 0.0)\n    this.labelZOffset = defaults(p.labelZOffset, 0.5)\n    this.labelAttachment = defaults(p.labelAttachment, 'bottom-left')\n    this.labelBorder = defaults(p.labelBorder, false)\n    this.labelBorderColor = defaults(p.labelBorderColor, 'lightgrey')\n    this.labelBorderWidth = defaults(p.labelBorderWidth, 0.15)\n    this.labelBackground = defaults(p.labelBackground, false)\n    this.labelBackgroundColor = defaults(p.labelBackgroundColor, 'lightgrey')\n    this.labelBackgroundMargin = defaults(p.labelBackgroundMargin, 0.5)\n    this.labelBackgroundOpacity = defaults(p.labelBackgroundOpacity, 1.0)\n    this.labelFixedSize = defaults(p.labelFixedSize, false)\n    this.lineOpacity = defaults(p.lineOpacity, 1.0)\n    this.linewidth = defaults(p.linewidth, 2)\n\n    super.init(p)\n  }\n\n  // All measurements need to rebuild on position change\n  update (what: LabelDataField) {\n    if (what.position) {\n      this.build()\n    } else {\n      super.update(what)\n    }\n  }\n\n  updateData (what: LabelDataField & {[k: string]: any}, data: any) {\n    const textData: TextBufferData | {} = {}\n    if (!what || what.labelSize) {\n      Object.assign(textData, {size: uniformArray(this.n, this.labelSize)})\n    }\n\n    if (!what || what.labelColor) {\n      const c = new Color(this.labelColor)\n      Object.assign(textData, {color: uniformArray3(this.n, c.r, c.g, c.b)})\n    }\n\n    this.textBuffer.setAttributes(textData as TextBufferData)\n  }\n\n  setParameters (params: Partial<MeasurementRepresentationParameters>, what: LabelDataField = {}, rebuild = false) {\n    if (params && params.labelSize) {\n      what.labelSize = true\n    }\n\n    if (params && (params.labelColor || params.labelColor === 0x000000)) {\n      what.labelColor = true\n      rebuild = true\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    if (params && params.opacity !== undefined) {\n      this.textBuffer.setParameters({ opacity: 1.0 }) // only opaque labels\n    }\n\n    if (params && params.labelVisible !== undefined) {\n      this.setVisibility(this.visible)\n    }\n\n    return this\n  }\n\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\n    super.setVisibility(value, true)\n    if (this.textBuffer) {\n      this.textBuffer.setVisibility(\n        this.labelVisible && this.visible\n      )\n    }\n\n    if (!noRenderRequest) this.viewer.requestRender()\n\n    return this\n  }\n\n  getLabelBufferParams (params: Partial<LabelRepresentationParameters> = {}) {\n    return super.getBufferParams(Object.assign({\n      fontFamily: this.labelFontFamily,\n      fontStyle: this.labelFontStyle,\n      fontWeight: this.labelFontWeight,\n      sdf: this.labelsdf,\n      xOffset: this.labelXOffset,\n      yOffset: this.labelYOffset,\n      zOffset: this.labelZOffset,\n      attachment: this.labelAttachment,\n      showBorder: this.labelBorder,\n      borderColor: this.labelBorderColor,\n      borderWidth: this.labelBorderWidth,\n      showBackground: this.labelBackground,\n      backgroundColor: this.labelBackgroundColor,\n      backgroundMargin: this.labelBackgroundMargin,\n      backgroundOpacity: this.labelBackgroundOpacity,\n      fixedSize: this.labelFixedSize,\n      disablePicking: true,\n      visible: this.labelVisible\n    }, params, {\n      opacity: 1.0 // only opaque labels\n    }))\n  }\n\n  getAtomRadius () {\n    return 0\n  }\n}\n\n/**\n * MeasurementRepresentations take atom[Pair|Triple|Quad] parameters.\n *\n * Parses nested array of either integer atom indices or selection\n * expressions into a flat array of coordinates.\n *\n * @param  {Structure} sview The structure to which the atoms refer\n * @param  {Array} atoms Nested array of atom pairs|triples|quads as\n *   Integer indices or selection expressions\n * @return {Float32Array} Flattened array of position coordinates\n */\nfunction parseNestedAtoms (sview: StructureView, atoms: (number|string)[][]) {\n  const ap = sview.getAtomProxy()\n  const sele = new Selection()\n\n  const nSets = atoms.length\n  if (nSets === 0) return new Float32Array(0)\n\n  // Peek-ahead at first item to determine order and parse mode\n  const order = atoms[ 0 ].length\n  const selected = sview.getAtomSet()\n\n  const a = new Float32Array(nSets * order * 3)\n\n  let p = 0\n  atoms.forEach(function (group) {\n    let _break = false\n    for (let j = 0; j < order; j++) {\n      const value = group[ j ]\n      if (typeof (value) === 'number' && Number.isInteger(value)) {\n        if (selected.get(value)) {\n          ap.index = value\n        } else {\n          _break = true\n          break\n        }\n      } else {\n        sele.setString(value as string)\n        const atomIndices = sview.getAtomIndices(sele)\n        if (atomIndices!.length) {\n          ap.index = atomIndices![ 0 ]\n        } else {\n          _break = true\n          break\n        }\n      }\n\n      let offset = p + j * 3\n      a[ offset++ ] = ap.x\n      a[ offset++ ] = ap.y\n      a[ offset++ ] = ap.z\n    }\n    if (!_break) p += 3 * order\n  })\n\n  return a.subarray(0, p)\n}\n\n/* out = v1 * cos(angle) + v2 * sin(angle) */\nfunction calcArcPoint (out: Float32Array, center: Float32Array, v1: Float32Array, v2: Float32Array, angle: number) {\n  const x = Math.cos(angle)\n  const y = Math.sin(angle)\n  out[ 0 ] = center[ 0 ] + v1[ 0 ] * x + v2[ 0 ] * y\n  out[ 1 ] = center[ 1 ] + v1[ 1 ] * x + v2[ 1 ] * y\n  out[ 2 ] = center[ 2 ] + v1[ 2 ] * x + v2[ 2 ] * y\n}\n\nexport {\n  MeasurementRepresentation as default,\n  calcArcPoint,\n  parseNestedAtoms\n}\n","/**\n * @file Edt\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { NumberArray } from '../types'\n\n// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nexport function edt(data: NumberArray, width: number, height: number, f: NumberArray, d: NumberArray, v: NumberArray, z: NumberArray) {\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            f[y] = data[y * width + x]\n        }\n        edt1d(f, d, v, z, height)\n        for (let y = 0; y < height; y++) {\n            data[y * width + x] = d[y]\n        }\n    }\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            f[x] = data[y * width + x]\n        }\n        edt1d(f, d, v, z, width)\n        for (let x = 0; x < width; x++) {\n            data[y * width + x] = Math.sqrt(d[x])\n        }\n    }\n}\n\n// 1D squared distance transform\nfunction edt1d(f: NumberArray, d: NumberArray, v: NumberArray, z: NumberArray, n: number) {\n    v[0] = 0\n    z[0] = Number.MIN_SAFE_INTEGER\n    z[1] = Number.MAX_SAFE_INTEGER\n\n    for (let q = 1, k = 0; q < n; q++) {\n        let s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\n        while (s <= z[k]) {\n            k--\n            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\n        }\n        k++\n        v[k] = q\n        z[k] = s\n        z[k + 1] = Number.MAX_SAFE_INTEGER\n    }\n\n    for (let q = 0, k = 0; q < n; q++) {\n        while (z[k + 1] < q) k++\n        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]]\n    }\n}\n","/**\n * @file Text Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\nimport { Color, CanvasTexture, Vector3, Matrix4 } from 'three'\n\nimport '../shader/SDFFont.vert'\nimport '../shader/SDFFont.frag'\n\nimport { BufferRegistry } from '../globals'\nimport { createParams } from '../utils'\nimport MappedQuadBuffer from './mappedquad-buffer'\nimport { IgnorePicker } from '../utils/picker'\nimport { edt } from '../utils/edt'\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferTypes } from './buffer'\n\nconst TextAtlasCache: { [k: string]: TextAtlas } = {}\n\nfunction getTextAtlas (params: Partial<TextAtlasParams>) {\n  const hash = JSON.stringify(params)\n  if (TextAtlasCache[ hash ] === undefined) {\n    TextAtlasCache[ hash ] = new TextAtlas(params)\n  }\n  return TextAtlasCache[ hash ]\n}\n\ntype TextFonts = 'sans-serif'|'monospace'|'serif'\ntype TextStyles = 'normal'|'italic'\ntype TextVariants = 'normal'\ntype TextWeights = 'normal'|'bold'\n\nexport const TextAtlasDefaultParams = {\n  font: 'sans-serif' as TextFonts,\n  size: 36,\n  style: 'normal' as TextStyles,\n  variant: 'normal' as TextVariants,\n  weight: 'normal' as TextWeights,\n  outline: 3,\n  width: 1024,\n  height: 1024\n}\nexport type TextAtlasParams = typeof TextAtlasDefaultParams\n\nexport type TextAtlasMap = { x: number, y: number, w: number, h: number }\n\nexport class TextAtlas {\n  parameters: TextAtlasParams\n\n  gamma = 1\n  mapped: { [k: string]: TextAtlasMap } = {}\n  scratchW = 0\n  scratchH = 0\n  currentX = 0\n  currentY = 0\n\n  cutoff = 0.25\n  padding: number\n  radius: number\n\n  gridOuter: Float64Array\n  gridInner: Float64Array\n  f: Float64Array\n  d: Float64Array\n  z: Float64Array\n  v: Int16Array\n\n  paddedSize: number\n  middle: number\n\n  texture: CanvasTexture\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n\n  lineHeight: number\n  maxWidth: number\n  colors: string[]\n  scratch: Uint8Array\n  canvas2: HTMLCanvasElement\n  context2: CanvasRenderingContext2D\n  data: Uint8Array\n\n  placeholder: TextAtlasMap\n\n  constructor (params: Partial<TextAtlasParams> = {}) {\n    this.parameters = createParams(params, TextAtlasDefaultParams)\n    const p = this.parameters\n\n    this.radius = p.size / 8\n    this.padding = p.size / 3\n\n    // Prepare line-height with room for outline and descenders/ascenders\n    const lineHeight = this.lineHeight = p.size + 2 * p.outline + Math.round(p.size / 4)\n    const maxWidth = this.maxWidth = p.width / 4\n\n    // Prepare scratch canvas\n    const canvas = this.canvas = document.createElement('canvas')\n    canvas.width = maxWidth\n    canvas.height = lineHeight\n\n    const ctx = this.context = this.canvas.getContext('2d')!\n    ctx.font = `${p.style} ${p.variant} ${p.weight} ${p.size}px ${p.font}`\n    ctx.fillStyle = 'black'\n    ctx.textAlign = 'left'\n    ctx.textBaseline = 'bottom'\n    ctx.lineJoin = 'round'\n\n    // temporary arrays for the distance transform\n    this.gridOuter = new Float64Array(lineHeight * maxWidth)\n    this.gridInner = new Float64Array(lineHeight * maxWidth)\n    this.f = new Float64Array(Math.max(lineHeight, maxWidth))\n    this.d = new Float64Array(Math.max(lineHeight, maxWidth))\n    this.z = new Float64Array(Math.max(lineHeight, maxWidth) + 1)\n    this.v = new Int16Array(Math.max(lineHeight, maxWidth))\n\n    //\n    this.data = new Uint8Array(p.width * p.height * 4)\n    this.canvas2 = document.createElement('canvas')\n    this.canvas2.width = p.width\n    this.canvas2.height = p.height\n    this.context2 = this.canvas2.getContext('2d')!\n\n    // Replacement Character\n    this.placeholder = this.map(String.fromCharCode(0xFFFD))\n\n    // Basic Latin (subset)\n    for (let i = 0x0020; i <= 0x007E; ++i) {\n      this.map(String.fromCharCode(i))\n    }\n\n    // TODO: to slow to always prepare them\n    // // Latin-1 Supplement (subset)\n    // for (let i = 0x00A1; i <= 0x00FF; ++i) {\n    //   this.map(String.fromCharCode(i))\n    // }\n\n    // Degree sign\n    this.map(String.fromCharCode(0x00B0))\n\n    // // Greek and Coptic (subset)\n    // for (let i = 0x0391; i <= 0x03C9; ++i) {\n    //   this.map(String.fromCharCode(i))\n    // }\n\n    // // Cyrillic (subset)\n    // for (let i = 0x0400; i <= 0x044F; ++i) {\n    //   this.map(String.fromCharCode(i))\n    // }\n\n    // Angstrom Sign\n    this.map(String.fromCharCode(0x212B))\n\n    this.texture = new CanvasTexture(this.canvas2)\n    this.texture.flipY = false\n    this.texture.needsUpdate = true\n  }\n\n  map (text: string) {\n    const p = this.parameters\n\n    if (this.mapped[ text ] === undefined) {\n      this.draw(text)\n\n      if (this.currentX + this.scratchW > p.width) {\n        this.currentX = 0\n        this.currentY += this.scratchH\n      }\n      if (this.currentY + this.scratchH > p.height) {\n        console.warn('canvas to small')\n      }\n\n      this.mapped[ text ] = {\n        x: this.currentX,\n        y: this.currentY,\n        w: this.scratchW,\n        h: this.scratchH\n      }\n\n      this.context2.drawImage(\n        this.canvas,\n        0, 0,\n        this.scratchW, this.scratchH,\n        this.currentX, this.currentY,\n        this.scratchW, this.scratchH\n      )\n\n      this.currentX += this.scratchW\n    }\n\n    return this.mapped[ text ]\n  }\n\n  get (text: string) {\n    return this.mapped[ text ] || this.placeholder\n  }\n\n  draw (text: string) {\n    const p = this.parameters\n\n    const h = this.lineHeight\n    const o = p.outline\n    const ctx = this.context\n    // const dst = this.scratch\n    const max = this.maxWidth\n    // const colors = this.colors\n\n    // Bottom aligned, take outline into account\n    const x = o\n    const y = h - p.outline\n\n    // Measure text\n    const m = ctx.measureText(text)\n    const w = Math.min(max, Math.ceil(m.width + 2 * x + 1))\n\n    const n = w * h\n\n    // Clear scratch area\n    ctx.clearRect(0, 0, w, h)\n\n    // Draw text\n    ctx.fillText(text, x, y)\n\n    const imageData = ctx.getImageData(0, 0, w, h)\n    const data = imageData.data\n\n    for (let i = 0; i < n; i++) {\n        const a = imageData.data[i * 4 + 3] / 255; // alpha value\n        this.gridOuter[i] = a === 1 ? 0 : a === 0 ? Number.MAX_SAFE_INTEGER : Math.pow(Math.max(0, 0.5 - a), 2);\n        this.gridInner[i] = a === 1 ? Number.MAX_SAFE_INTEGER : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\n    }\n\n    edt(this.gridOuter, w, h, this.f, this.d, this.v, this.z);\n    edt(this.gridInner, w, h, this.f, this.d, this.v, this.z);\n\n    for (let i = 0; i < n; i++) {\n        const d = this.gridOuter[i] - this.gridInner[i];\n        data[i * 4 + 3] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\n    }\n\n    ctx.putImageData(imageData, 0, 0)\n    this.scratchW = w\n    this.scratchH = h\n  }\n}\n\n/**\n * Text buffer parameter object.\n * @typedef {Object} TextBufferParameters - text buffer parameters\n *\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\n * @property {Integer} clipNear - position of camera near/front clipping plane\n *                                in percent of scene bounding box\n * @property {String} labelType - type of the label, one of:\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\n *                                 `labelText` list is used.\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\n *                                   to take effect\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\n * @property {Float} xOffset - offset in x-direction\n * @property {Float} yOffset - offset in y-direction\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\n * @property {String} attachment - attachment of the label, one of:\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\n *                                 \"top-left\", \"top-center\", \"top-right\"\n * @property {Boolean} showBorder - show border/outline\n * @property {Color} borderColor - color of the border/outline\n * @property {Float} borderWidth - width of the border/outline\n * @property {Boolean} showBackground - show background rectangle\n * @property {Color} backgroundColor - color of the background\n * @property {Float} backgroundMargin - width of the background\n * @property {Float} backgroundOpacity - opacity of the background\n * @property {Boolean} fixedSize - show text with a fixed pixel size\n */\n\nexport interface TextBufferData extends BufferData {\n  size: Float32Array\n  text: string[]\n}\n\ntype TextAttachments = 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\n\nexport const TextBufferDefaultParameters = Object.assign({\n  fontFamily: 'sans-serif' as TextFonts,\n  fontStyle: 'normal' as TextStyles,\n  fontWeight: 'bold' as TextWeights,\n  fontSize: 36,\n  xOffset: 0.0,\n  yOffset: 0.0,\n  zOffset: 0.5,\n  attachment: 'bottom-left' as TextAttachments,\n  showBorder: false,\n  borderColor: 'lightgrey' as number|string,\n  borderWidth: 0.15,\n  showBackground: false,\n  backgroundColor: 'lightgrey' as number|string,\n  backgroundMargin: 0.5,\n  backgroundOpacity: 1.0,\n  forceTransparent: true,\n  fixedSize: false\n}, BufferDefaultParameters)\nexport type TextBufferParameters = typeof TextBufferDefaultParameters\n\nconst TextBufferParameterTypes = Object.assign({\n  fontFamily: { uniform: true },\n  fontStyle: { uniform: true },\n  fontWeight: { uniform: true },\n  fontSize: { uniform: true },\n  xOffset: { uniform: true },\n  yOffset: { uniform: true },\n  zOffset: { uniform: true },\n  showBorder: { uniform: true },\n  borderColor: { uniform: true },\n  borderWidth: { uniform: true },\n  backgroundColor: { uniform: true },\n  backgroundOpacity: { uniform: true },\n  fixedSize: { updateShader: true }\n}, BufferParameterTypes)\n\nfunction getCharCount (data: TextBufferData, params: Partial<TextBufferParameters>) {\n  const n = data.position!.length / 3\n  let charCount = 0\n  for (let i = 0; i < n; ++i) {\n    charCount += data.text[ i ].length\n  }\n  if (params.showBackground) charCount += n\n\n  return charCount\n}\n\n/**\n * Text buffer. Renders screen-aligned text strings.\n *\n * @example\n * var textBuffer = new TextBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   size: new Float32Array([ 2 ]),\n *   text: [ \"Hello\" ]\n * });\n */\nclass TextBuffer extends MappedQuadBuffer {\n  parameterTypes = TextBufferParameterTypes\n  get defaultParameters() { return TextBufferDefaultParameters }\n  parameters: TextBufferParameters\n\n  alwaysTransparent = true\n  hasWireframe = false\n  isText = true\n  vertexShader = 'SDFFont.vert'\n  fragmentShader = 'SDFFont.frag'\n\n  text: string[]\n  positionCount: number\n  texture: CanvasTexture\n  textAtlas: TextAtlas\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.color - colors\n   * @param  {Float32Array} data.size - sizes\n   * @param  {String[]} data.text - text strings\n   * @param  {TextBufferParameters} params - parameters object\n   */\n  constructor (data: TextBufferData, params: Partial<TextBufferParameters> = {}) {\n    super({\n      position: new Float32Array(getCharCount(data, params) * 3),\n      color: new Float32Array(getCharCount(data, params) * 3),\n      picking: new IgnorePicker()\n    }, params)\n\n    this.text = data.text\n    this.positionCount = data.position!.length / 3\n\n    this.addUniforms({\n      'fontTexture': { value: null },\n      'xOffset': { value: this.parameters.xOffset },\n      'yOffset': { value: this.parameters.yOffset },\n      'zOffset': { value: this.parameters.zOffset },\n      'ortho': { value: false },\n      'showBorder': { value: this.parameters.showBorder },\n      'borderColor': { value: new Color(this.parameters.borderColor as number) },\n      'borderWidth': { value: this.parameters.borderWidth },\n      'backgroundColor': { value: new Color(this.parameters.backgroundColor as number) },\n      'backgroundOpacity': { value: this.parameters.backgroundOpacity },\n      'canvasHeight': { value: 1.0 },\n      'pixelRatio': { value: 1.0 }\n    })\n\n    this.addAttributes({\n      'inputTexCoord': { type: 'v2', value: null },\n      'inputSize': { type: 'f', value: null }\n    })\n\n    this.setAttributes(data)\n\n    this.makeTexture()\n    this.makeMapping()\n  }\n\n  makeMaterial () {\n    super.makeMaterial()\n\n    const tex = this.texture\n\n    const m = this.material\n    m.transparent = true\n    m.extensions.derivatives = true\n    m.lights = false\n    m.uniforms.fontTexture.value = tex\n    m.needsUpdate = true\n\n    const wm = this.wireframeMaterial\n    wm.transparent = true\n    wm.extensions.derivatives = true\n    wm.lights = false\n    wm.uniforms.fontTexture.value = tex\n    wm.needsUpdate = true\n\n    const pm = this.pickingMaterial\n    pm.extensions.derivatives = true\n    pm.lights = false\n    pm.uniforms.fontTexture.value = tex\n    pm.needsUpdate = true\n  }\n\n  setAttributes (data: Partial<TextBufferData> = {}) {\n    let position, size, color\n    let aPosition, inputSize, aColor\n\n    const text = this.text\n    const attributes = this.geometry.attributes as any  // TODO\n\n    if (data.position) {\n      position = data.position\n      aPosition = attributes.position.array\n      attributes.position.needsUpdate = true\n    }\n\n    if (data.size) {\n      size = data.size\n      inputSize = attributes.inputSize.array\n      attributes.inputSize.needsUpdate = true\n    }\n\n    if (data.color) {\n      color = data.color\n      aColor = attributes.color.array\n      attributes.color.needsUpdate = true\n    }\n\n    const n = this.positionCount\n\n    let j, o\n    let iCharAll = 0\n    let txt, iChar, nChar\n\n    for (let v = 0; v < n; ++v) {\n      o = 3 * v\n      txt = text[ v ]\n      nChar = txt.length\n      if (this.parameters.showBackground) nChar += 1\n\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\n        for (let m = 0; m < 4; m++) {\n          j = iCharAll * 4 * 3 + (3 * m)\n\n          if (position) {\n            aPosition[ j ] = position[ o ]\n            aPosition[ j + 1 ] = position[ o + 1 ]\n            aPosition[ j + 2 ] = position[ o + 2 ]\n          }\n\n          if (size) {\n            inputSize[ (iCharAll * 4) + m ] = size[ v ]\n          }\n\n          if (color) {\n            aColor[ j ] = color[ o ]\n            aColor[ j + 1 ] = color[ o + 1 ]\n            aColor[ j + 2 ] = color[ o + 2 ]\n          }\n        }\n      }\n    }\n  }\n\n  makeTexture () {\n    this.textAtlas = getTextAtlas({\n      font: this.parameters.fontFamily,\n      style: this.parameters.fontStyle,\n      weight: this.parameters.fontWeight,\n      size: this.parameters.fontSize\n    })\n\n    this.texture = this.textAtlas.texture\n  }\n\n  makeMapping () {\n    const ta = this.textAtlas\n    const text = this.text\n    const attachment = this.parameters.attachment\n    const margin = (ta.lineHeight * this.parameters.backgroundMargin * 0.1) - 10\n\n    const attribs = this.geometry.attributes as any  // TODO\n    const inputTexCoord = attribs.inputTexCoord.array\n    const inputMapping = attribs.mapping.array\n\n    const n = this.positionCount\n    let iCharAll = 0\n    let c, i, txt, xadvance, iChar, nChar, xShift, yShift\n\n    for (let v = 0; v < n; ++v) {\n      txt = text[ v ]\n      xadvance = 0\n      nChar = txt.length\n\n      // calculate width\n      for (iChar = 0; iChar < nChar; ++iChar) {\n        c = ta.get(txt[ iChar ])\n        xadvance += c.w - 2 * ta.parameters.outline\n      }\n\n      // attachment\n      if (attachment.startsWith('top')) {\n        yShift = ta.lineHeight / 1.25\n      } else if (attachment.startsWith('middle')) {\n        yShift = ta.lineHeight / 2.5\n      } else {\n        yShift = 0  // \"bottom\"\n      }\n      if (attachment.endsWith('right')) {\n        xShift = xadvance\n      } else if (attachment.endsWith('center')) {\n        xShift = xadvance / 2\n      } else {\n        xShift = 0  // \"left\"\n      }\n      xShift += ta.parameters.outline\n      yShift += ta.parameters.outline\n\n      // background\n      if (this.parameters.showBackground) {\n        i = iCharAll * 2 * 4\n        inputMapping[ i + 0 ] = -ta.lineHeight / 6 - xShift - margin  // top left\n        inputMapping[ i + 1 ] = ta.lineHeight - yShift + margin\n        inputMapping[ i + 2 ] = -ta.lineHeight / 6 - xShift - margin  // bottom left\n        inputMapping[ i + 3 ] = 0 - yShift - margin\n        inputMapping[ i + 4 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin  // top right\n        inputMapping[ i + 5 ] = ta.lineHeight - yShift + margin\n        inputMapping[ i + 6 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin  // bottom right\n        inputMapping[ i + 7 ] = 0 - yShift - margin\n        inputTexCoord[ i + 0 ] = 10\n        inputTexCoord[ i + 2 ] = 10\n        inputTexCoord[ i + 4 ] = 10\n        inputTexCoord[ i + 6 ] = 10\n        iCharAll += 1\n      }\n\n      xadvance = 0\n\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\n        c = ta.get(txt[ iChar ])\n        i = iCharAll * 2 * 4\n\n        inputMapping[ i + 0 ] = xadvance - xShift  // top left\n        inputMapping[ i + 1 ] = c.h - yShift\n        inputMapping[ i + 2 ] = xadvance - xShift  // bottom left\n        inputMapping[ i + 3 ] = 0 - yShift\n        inputMapping[ i + 4 ] = xadvance + c.w - xShift  // top right\n        inputMapping[ i + 5 ] = c.h - yShift\n        inputMapping[ i + 6 ] = xadvance + c.w - xShift  // bottom right\n        inputMapping[ i + 7 ] = 0 - yShift\n\n        const texWidth = ta.parameters.width\n        const texHeight = ta.parameters.height\n\n        const texCoords = [\n          c.x / texWidth, c.y / texHeight,             // top left\n          c.x / texWidth, (c.y + c.h) / texHeight,       // bottom left\n          (c.x + c.w) / texWidth, c.y / texHeight,       // top right\n          (c.x + c.w) / texWidth, (c.y + c.h) / texHeight  // bottom right\n        ]\n        inputTexCoord.set(texCoords, i)\n\n        xadvance += c.w - 2 * ta.parameters.outline\n      }\n    }\n\n    attribs.inputTexCoord.needsUpdate = true\n    attribs.mapping.needsUpdate = true\n  }\n\n  getDefines (type: BufferTypes) {\n    const defines = super.getDefines(type)\n\n    if (this.parameters.fixedSize) {\n      defines.FIXED_SIZE = 1\n    }\n\n    return defines\n  }\n\n  setUniforms (data: any) {  // TODO\n    if (data && (\n      data.fontFamily !== undefined ||\n      data.fontStyle !== undefined ||\n      data.fontWeight !== undefined ||\n      data.fontSize !== undefined\n    )) {\n      this.makeTexture()\n      this.makeMapping()\n      this.texture.needsUpdate = true\n      data.fontTexture = this.texture\n    }\n\n    super.setUniforms(data)\n  }\n}\n\nBufferRegistry.add('text', TextBuffer)\n\nexport default TextBuffer\n","/**\n * @file Wide Line Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3 required for declaration only\nimport { Vector2, Vector3, Matrix4 } from 'three'\n\nimport '../shader/WideLine.vert'\nimport '../shader/WideLine.frag'\n\nimport { BufferRegistry } from '../globals'\nimport MappedQuadBuffer from './mappedquad-buffer'\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData } from './buffer'\n\nexport interface WideLineBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  color2: Float32Array\n}\n\nexport const WideLineBufferDefaultParameters = Object.assign({\n  linewidth: 2\n}, BufferDefaultParameters)\nexport type WideLineBufferParameters = typeof WideLineBufferDefaultParameters\n\nconst WideLineBufferParameterTypes = Object.assign({\n  linewidth: { uniform: true }\n}, BufferParameterTypes)\n\n/**\n * Wide Line buffer. Draws lines with a fixed width in pixels.\n *\n * @example\n * var lineBuffer = new WideLineBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 1, 1, 1 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ])\n * });\n */\nclass WideLineBuffer extends MappedQuadBuffer {\n  parameterTypes = WideLineBufferParameterTypes\n  get defaultParameters() { return WideLineBufferDefaultParameters }\n  parameters: WideLineBufferParameters\n\n  vertexShader = 'WideLine.vert'\n  fragmentShader ='WideLine.frag'\n\n  constructor (data: Partial<WideLineBufferData>, params: Partial<WideLineBufferParameters> = {}) {\n    super(data, params)\n\n    if (!data.color2 && data.color) data.color2 = data.color\n\n    this.addUniforms({\n      'linewidth': { value: this.parameters.linewidth },\n      'resolution': { value: new Vector2() },\n      'projectionMatrixInverse': { value: new Matrix4() }\n    })\n\n    this.addAttributes({\n      'position1': { type: 'v3', value: null },\n      'position2': { type: 'v3', value: null },\n      'color2': { type: 'c', value: null }\n    })\n\n    this.setAttributes(data)\n    this.makeMapping()\n  }\n\n  setParameters (params: Partial<WideLineBufferParameters>) {\n    super.setParameters(params)\n  }\n}\n\nBufferRegistry.add('wideline', WideLineBuffer)\n\nexport default WideLineBuffer\n","/**\n * @file Angle Representation\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\nimport { Color } from 'three'\n\nimport { RepresentationRegistry } from '../globals'\nimport MeasurementRepresentation, { parseNestedAtoms, calcArcPoint, MeasurementRepresentationParameters, LabelDataField } from './measurement-representation'\nimport { defaults } from '../utils'\n\nimport MeshBuffer from '../buffer/mesh-buffer'\nimport TextBuffer, { TextBufferData, TextBufferParameters } from '../buffer/text-buffer'\nimport WideLineBuffer, { WideLineBufferData } from '../buffer/wideline-buffer'\n\nimport { v3add, v3cross, v3dot, v3fromArray, v3length, v3new,\n  v3normalize, v3sub, v3toArray } from '../math/vector-utils'\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils'\nimport { RAD2DEG } from '../math/math-constants'\nimport { getFixedLengthWrappedDashData } from '../geometry/dash'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport { BufferData } from '../buffer/buffer';\nimport { StructureRepresentationData, StructureRepresentationParameters } from './structure-representation';\n\n/**\n * @typedef {Object} AngleRepresentationParameters - angle representation parameters\n * @mixes RepresentationParameters\n * @mixes StructureRepresentationParameters\n * @mixes MeasurementRepresentationParameters\n *\n * @property {String} atomTriple - list of triplets of selection strings\n *                                 or atom indices\n * @property {Boolean} vectorVisible - Indicate the 3 points for each angle by drawing lines 1-2-3\n * @property {Boolean} arcVisible - Show the arc outline for each angle\n * @property {Number}  lineOpacity - opacity for the line part of the representation\n * @property {Number} linewidth - width for line part of representation\n * @property {Boolean} sectorVisible - Show the filled arc for each angle\n */\n\nexport interface AngleRepresentationParameters extends MeasurementRepresentationParameters {\n  atomTriple: (number|string)[][]\n  vectorVisible: boolean\n  arcVisible: boolean\n  lineOpacity: number\n  lineWidth: number\n  sectorVisible: boolean\n}\n\n/**\n * Angle representation object\n *\n * Reperesentation consists of four parts, visibility can be set for each\n * label - the text label with the angle size\n * vectors - lines joining the three points\n * sector - triangles representing the angle\n * arc - line bordering the sector\n *\n * @param {Structure} structure - the structure to measure angles in\n * @param {Viewer} viewer - a viewer object\n * @param {AngleRepresentationParameters} params - angle representation parameters\n */\nclass AngleRepresentation extends MeasurementRepresentation {\n  protected atomTriple: (number|string)[][]\n  protected vectorVisible: boolean\n  protected arcVisible: boolean\n  protected lineOpacity: number\n  protected lineWidth: number\n  protected sectorVisible: boolean\n  protected vectorBuffer: WideLineBuffer\n  arcLength: number\n  sectorLength: number\n  arcBuffer: WideLineBuffer\n  sectorBuffer: MeshBuffer\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<AngleRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'angle'\n\n    this.parameters = Object.assign({\n      atomTriple: {\n        type: 'hidden', rebuild: true\n      },\n      vectorVisible: {\n        type: 'boolean', default: true\n      },\n      arcVisible: {\n        type: 'boolean', default: true\n      },\n      sectorVisible: {\n        type: 'boolean', default: true\n      }\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<AngleRepresentationParameters>) {\n    const p = params || {}\n    p.side = defaults(p.side, 'double')\n    p.opacity = defaults(p.opacity, 0.5)\n\n    this.atomTriple = defaults(p.atomTriple, [])\n    this.arcVisible = defaults(p.arcVisible, true)\n    this.sectorVisible = defaults(p.sectorVisible, true)\n    this.vectorVisible = defaults(p.vectorVisible, true)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    if (!sview.atomCount || !this.atomTriple.length) return\n\n    const atomPosition = atomTriplePositions(sview, this.atomTriple)\n    const angleData = getAngleData(atomPosition)\n    const n = this.n = angleData.labelPosition.length / 3\n\n    const labelColor = new Color(this.labelColor)\n\n    // Create buffers\n    this.textBuffer = new TextBuffer({\n      position: angleData.labelPosition,\n      size: uniformArray(n, this.labelSize),\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\n      text: angleData.labelText\n    } as TextBufferData, this.getLabelBufferParams() as TextBufferParameters)\n\n    const c = new Color(this.colorValue)\n\n    this.vectorBuffer = new WideLineBuffer(\n      getFixedLengthWrappedDashData({\n        position1: angleData.vectorPosition1,\n        position2: angleData.vectorPosition2,\n        color: uniformArray3(2 * n, c.r, c.g, c.b),\n        color2: uniformArray3(2 * n, c.r, c.g, c.b)\n      } as WideLineBufferData),\n      this.getBufferParams({\n        linewidth: this.linewidth,\n        visible: this.vectorVisible,\n        opacity: this.lineOpacity\n      })\n    )\n\n    this.arcLength = angleData.arcPosition1.length / 3\n\n    this.arcBuffer = new WideLineBuffer(\n      getFixedLengthWrappedDashData({\n        position1: angleData.arcPosition1,\n        position2: angleData.arcPosition2,\n        color: uniformArray3(this.arcLength, c.r, c.g, c.b),\n        color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\n      } as WideLineBufferData), this.getBufferParams({\n        linewidth: this.linewidth,\n        visible: this.arcVisible,\n        opacity: this.lineOpacity\n      }))\n\n    this.sectorLength = angleData.sectorPosition.length / 3\n\n    this.sectorBuffer = new MeshBuffer({\n      position: angleData.sectorPosition,\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\n    } as BufferData, this.getBufferParams({\n      visible: this.sectorVisible\n    }))\n\n    return {\n      bufferList: [\n        this.textBuffer,\n        this.vectorBuffer,\n        this.arcBuffer,\n        this.sectorBuffer\n      ]\n    }\n  }\n\n  updateData (what: LabelDataField & {color?: boolean}, data: StructureRepresentationData) {\n    super.updateData(what, data)\n    const vectorData = {}\n    const arcData = {}\n    const sectorData = {}\n\n    if (what.color) {\n      const c = new Color(this.colorValue)\n      Object.assign(vectorData, {\n        color: uniformArray3(this.n * 2, c.r, c.g, c.b),\n        color2: uniformArray3(this.n * 2, c.r, c.g, c.b)\n      })\n      Object.assign(arcData, {\n        color: uniformArray3(this.arcLength, c.r, c.g, c.b),\n        color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\n      })\n      Object.assign(sectorData, {\n        color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\n      })\n    }\n\n    // if (what.sectorOpacity) {\n    //   this.sectorBuffer.opacity = what.sectorOpacity\n    // }\n\n    this.vectorBuffer.setAttributes(vectorData)\n    this.arcBuffer.setAttributes(arcData)\n    this.sectorBuffer.setAttributes(sectorData)\n  }\n\n  setParameters (params: Partial<AngleRepresentationParameters>) {\n    var rebuild = false\n    var what = {}\n\n    super.setParameters(params, what, rebuild)\n\n    if (params && (\n      params.vectorVisible !== undefined ||\n      params.arcVisible !== undefined ||\n      params.sectorVisible !== undefined)) {\n      this.setVisibility(this.visible)\n    }\n\n    if (params && params.lineOpacity) {\n      this.vectorBuffer.setParameters({ opacity: params.lineOpacity })\n      this.arcBuffer.setParameters({ opacity: params.lineOpacity })\n    }\n\n    if (params && params.opacity !== undefined) {\n      this.vectorBuffer.setParameters({ opacity: this.lineOpacity })\n      this.arcBuffer.setParameters({ opacity: this.lineOpacity })\n    }\n\n    if (params && params.linewidth) {\n      this.vectorBuffer.setParameters({ linewidth: params.linewidth })\n      this.arcBuffer.setParameters({ linewidth: params.linewidth })\n    }\n\n    return this\n  }\n\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\n    super.setVisibility(value, true)\n\n    if (this.vectorBuffer) {\n      this.vectorBuffer.setVisibility(this.vectorVisible && this.visible)\n    }\n\n    if (this.arcBuffer) {\n      this.arcBuffer.setVisibility(this.arcVisible && this.visible)\n    }\n\n    if (this.sectorBuffer) {\n      this.sectorBuffer.setVisibility(this.sectorVisible && this.visible)\n    }\n\n    if (!noRenderRequest) this.viewer.requestRender()\n\n    return this\n  }\n}\n\n/**\n * Ensure mid point does not coincide with first or second\n * @param  {Float32Array} position 9*nAngle array of coordinates\n * @return {Float32Array}          Filtered position array, may be shorter\n */\nfunction validatePositions (position: Float32Array) {\n  const include = []\n  const n = position.length / 9\n  for (let i = 0; i < n; i++) {\n    // Check that first point not same as second and that second not same as third\n    let okay = true\n    for (let j = i; j < i + 3; j += 3) {\n      if (position[j] === position[j + 3] &&\n        position[j + 1] === position[j + 4] &&\n        position[j + 2] === position[j + 5]) {\n        okay = false\n      }\n    }\n    if (okay) include.push(i)\n  }\n  const outPosition = new Float32Array(include.length * 9)\n  let outIdx = 0\n  include.forEach(function (i) {\n    copyArray(position, outPosition, i * 9, outIdx * 9, 9)\n    outIdx++\n  })\n  return outPosition\n}\n\nfunction atomTriplePositions (sview: StructureView, atomTriple: (number|string)[][]) {\n  return validatePositions(parseNestedAtoms(sview, atomTriple))\n}\n\n/**\n * Converts triple positions into data required to build various buffers.\n */\nfunction getAngleData (position: Float32Array, params: Partial<StructureRepresentationParameters> = {}) {\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\n  const n = position.length / 9\n  const angles = new Float32Array(n)\n  const labelPosition = new Float32Array(n * 3)\n  const labelText = new Array(n)\n\n  const vectorPosition1 = new Float32Array(n * 6) // Two lines per angle\n  const vectorPosition2 = new Float32Array(n * 6)\n\n  const arcPositionTmp1 = new Array(n) // Start points for arc lines\n  const arcPositionTmp2 = new Array(n) // End points for arc lines\n  const sectorPositionTmp = new Array(n) // Triangle points\n\n  let totalSegments = 0\n\n  // Re-used vectors etc\n  const p1 = v3new() // Positions of points for each angel\n  const p2 = v3new()\n  const p3 = v3new()\n  const v21 = v3new() // Vectors\n  const v23 = v3new()\n  const cross = v3new() // Cross product v21xv23\n  const cross2 = v3new() // In-plane cross product v21 x (v21 x v23)\n  const labelTmp = v3new()\n  const arcPoint = v3new()\n\n  for (var i = 0; i < n; i++) {\n    let p = 9 * i\n    v3fromArray(p1, position, p)\n    v3fromArray(p2, position, p + 3)\n    v3fromArray(p3, position, p + 6)\n\n    let v = 6 * i\n    v3toArray(p1, vectorPosition1, v)\n    v3toArray(p2, vectorPosition2, v)\n    v3toArray(p2, vectorPosition1, v + 3)\n    v3toArray(p3, vectorPosition2, v + 3)\n\n    v3sub(v21, p1, p2)\n    v3sub(v23, p3, p2)\n\n    v3normalize(v21, v21) // validatePositions ensures valid\n    v3normalize(v23, v23)\n\n    v3cross(cross, v21, v23)\n    const crossLength = v3length(cross)\n    const dot = v3dot(v21, v23)\n\n    const angle = angles[i] = Math.atan2(crossLength, dot)\n    labelText[i] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\n\n    if (v3length(cross) === 0.0) {\n      // Angle exactly 0/180, pick an arbitrary direction\n      cross[ 0 ] = 1.0\n      cross[ 1 ] = 0.0\n      cross[ 2 ] = 0.0\n    }\n    v3cross(cross2, cross, v21)\n    v3normalize(cross2, cross2)\n\n    calcArcPoint(labelTmp, p2, v21, cross2, angle / 2.0)\n    // TODO: Scale label position?\n    v3toArray(labelTmp, labelPosition, 3 * i)\n\n    // Build the arc and sector\n\n    const nSegments = Math.ceil(angle / angleStep)\n    const sectorVertices = new Float32Array(nSegments * 9)\n    sectorPositionTmp[ i ] = sectorVertices\n    const arcVertices1 = new Float32Array(nSegments * 3)\n    const arcVertices2 = new Float32Array(nSegments * 3)\n    arcPositionTmp1[ i ] = arcVertices1\n    arcPositionTmp2[ i ] = arcVertices2\n\n    v3add(arcPoint, p2, v21) // Our initial arc point\n\n    const appendArcSection = function (a: number, j: number) {\n      const si = j * 9\n      const ai = j * 3\n      v3toArray(p2, sectorVertices, si)\n      v3toArray(arcPoint, sectorVertices, si + 3)\n      v3toArray(arcPoint, arcVertices1, ai)\n\n      calcArcPoint(arcPoint, p2, v21, cross2, a)\n\n      v3toArray(arcPoint, sectorVertices, si + 6)\n      v3toArray(arcPoint, arcVertices2, ai)\n    }\n\n    let j = 0\n    for (let a = angleStep; a < angle; a += angleStep) {\n      appendArcSection(a, j)\n      j++\n    }\n    appendArcSection(angle, j)\n    totalSegments += nSegments\n  }\n\n  // Flatten nested arrays of arc/segment points\n  const arcSize = totalSegments * 3\n  const sectorSize = totalSegments * 9\n  const arcPosition1 = new Float32Array(arcSize)\n  const arcPosition2 = new Float32Array(arcSize)\n  const sectorPosition = new Float32Array(sectorSize)\n\n  let sectorOffset = 0\n  let arcOffset = 0\n  for (let i = 0; i < n; i++) {\n    const ap1 = arcPositionTmp1[ i ]\n    const ap2 = arcPositionTmp2[ i ]\n    copyArray(ap1, arcPosition1, 0, arcOffset, ap1.length)\n    copyArray(ap2, arcPosition2, 0, arcOffset, ap2.length)\n    arcOffset += ap1.length // === ap2.length\n\n    const sp = sectorPositionTmp[ i ]\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\n    sectorOffset += sp.length\n  }\n\n  return {\n    labelPosition,\n    labelText,\n    vectorPosition1,\n    vectorPosition2,\n    arcPosition1,\n    arcPosition2,\n    sectorPosition\n  }\n}\n\nRepresentationRegistry.add('angle', AngleRepresentation)\n\nexport default AngleRepresentation\n","/**\n * @file Cylinder Geometry Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Vector3, CylinderBufferGeometry } from 'three'\n\nimport { defaults } from '../utils'\nimport { calculateCenterArray, serialBlockArray } from '../math/array-utils'\nimport GeometryBuffer from './geometry-buffer'\nimport { CylinderBufferData } from './cylinder-buffer'\nimport { BufferDefaultParameters } from './buffer'\n\nconst scale = new Vector3()\nconst eye = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3(0, 1, 0)\n\nexport const CylinderGeometryBufferDefaultParameters = Object.assign({\n  radialSegments: 1,\n  openEnded: true\n}, BufferDefaultParameters)\nexport type CylinderGeometryBufferParameters = typeof CylinderGeometryBufferDefaultParameters\n\nfunction getData (data: CylinderBufferData, params: Partial<CylinderGeometryBufferParameters> = {}) {\n  const geo = getGeo(params)\n\n  const n = data.position1.length\n\n  const geoLength = (geo.attributes as any).position.array.length / 3\n  const count = n / 3\n  const primitiveId = new Float32Array(count * 2 * geoLength)\n  serialBlockArray(count, geoLength, 0, primitiveId)\n  serialBlockArray(count, geoLength, count * geoLength, primitiveId)\n\n  const position = new Float32Array(n * 2)\n  const color = new Float32Array(n * 2)\n\n  return {\n    position, color, primitiveId, picking: data.picking\n  }\n}\n\nfunction getGeo (params: Partial<CylinderGeometryBufferParameters> = {}) {\n  const radialSegments = defaults(params.radialSegments, 10)\n  const openEnded = defaults(params.openEnded, true)\n  const matrix = new Matrix4().makeRotationX(Math.PI / 2)\n\n  const geo = new CylinderBufferGeometry(\n    1,  // radiusTop,\n    1,  // radiusBottom,\n    1,  // height,\n    radialSegments,  // radialSegments,\n    1,  // heightSegments,\n    openEnded  // openEnded\n  )\n  geo.applyMatrix4(matrix)\n\n  return geo\n}\n\n/**\n * Cylinder geometry buffer.\n *\n * @example\n * var cylinderGeometryBuffer = new CylinderGeometryBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 1, 1, 1 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\nclass CylinderGeometryBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  get defaultParameters() { return CylinderGeometryBufferDefaultParameters }\n  parameters: CylinderGeometryBufferParameters\n\n  __center: Float32Array\n  _position: Float32Array\n  _color: Float32Array\n  _from: Float32Array\n  _to: Float32Array\n  _radius: Float32Array\n\n  /**\n   * @param {Object} data - buffer data\n   * @param {Float32Array} data.position1 - from positions\n   * @param {Float32Array} data.position2 - to positions\n   * @param {Float32Array} data.color - from colors\n   * @param {Float32Array} data.color2 - to colors\n   * @param {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} [params] - parameters object\n   */\n  constructor (data: CylinderBufferData, params: Partial<CylinderGeometryBufferParameters> = {}) {\n    super(getData(data, params), params, getGeo(params))\n\n    const n = data.position1.length\n    const m = data.radius.length\n\n    this.__center = new Float32Array(n)\n    this._position = new Float32Array(n * 2)\n    this._color = new Float32Array(n * 2)\n    this._from = new Float32Array(n * 2)\n    this._to = new Float32Array(n * 2)\n    this._radius = new Float32Array(m * 2)\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    eye.fromArray(this._from as any, i3)\n    target.fromArray(this._to as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    const r = this._radius[ i ]\n    scale.set(r, r, eye.distanceTo(target))\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<CylinderBufferData> = {}, initNormals?: boolean) {\n    const meshData: Partial<CylinderBufferData> = {}\n\n    if (data.position1 && data.position2) {\n      calculateCenterArray(\n        data.position1, data.position2, this.__center\n      )\n      calculateCenterArray(\n        data.position1, this.__center, this._position\n      )\n      calculateCenterArray(\n        this.__center, data.position2, this._position, data.position1.length\n      )\n      this._from.set(data.position1)\n      this._from.set(this.__center, data.position1.length)\n      this._to.set(this.__center)\n      this._to.set(data.position2, this.__center.length)\n      meshData.position = this._position\n    }\n\n    if (data.color && data.color2) {\n      this._color.set(data.color)\n      this._color.set(data.color2, data.color.length)\n      meshData.color = this._color\n    }\n\n    if (data.radius) {\n      this._radius.set(data.radius)\n      this._radius.set(data.radius, data.radius.length)\n      meshData.radius = this._radius\n    }\n\n    super.setAttributes(meshData, initNormals)\n  }\n}\n\nexport default CylinderGeometryBuffer\n","/**\n * @file Mapped Aligned Box Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { BufferParameters, BufferData } from './buffer'\nimport MappedBuffer from './mapped-buffer'\n\n//       +Y   /\n//    0**********2\n//    *   | /   **\n//    *   |/   * *\n// -----------3---- +X\n//    *  /|   *  *\n//    * / |   *  *\n//    1/**|******4\n//    /   |   * *\n//   /    |   **  \n//  +Z    |   5 \nconst mapping = new Float32Array([\n  -1.0, 1.0, -1.0,\n  -1.0, -1.0, -1.0,\n  1.0, 1.0, -1.0,\n  1.0, 1.0, 1.0,\n  1.0, -1.0, -1.0,\n  1.0, -1.0, 1.0\n])\n\nconst mappingIndices = new Uint16Array([\n  0, 1, 2,\n  1, 4, 2,\n  2, 4, 3,\n  4, 5, 3\n])\n\n/**\n * Mapped Aligned box buffer. Draws boxes where one side is always screen-space aligned.\n * Used to render cylinder imposters.\n * @interface\n */\nclass MappedAlignedBoxBuffer extends MappedBuffer {\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\n    super('v3', data, params)\n  }\n  get mapping () { return mapping }\n  get mappingIndices () { return mappingIndices }\n  get mappingIndicesSize () { return 12 }\n  get mappingSize () { return 6 }\n  get mappingItemSize () { return 3 }\n}\n\nexport default MappedAlignedBoxBuffer\n","/**\n * @file Cylinder Impostor Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3 required for declaration only\nimport { Matrix4, Vector3 } from 'three'\n\nimport '../shader/CylinderImpostor.vert'\nimport '../shader/CylinderImpostor.frag'\n\nimport MappedAlignedBoxBuffer from './mappedalignedbox-buffer'\nimport { BufferDefaultParameters, BufferParameterTypes, BufferTypes } from './buffer'\nimport { CylinderBufferData } from './cylinder-buffer'\n\nexport const CylinderImpostorBufferDefaultParameters = Object.assign({\n  openEnded: false\n}, BufferDefaultParameters)\nexport type CylinderImpostorBufferParameters = typeof CylinderImpostorBufferDefaultParameters\n\nconst CylinderImpostorBufferParameterTypes = Object.assign({\n  openEnded: { updateShader: true }\n}, BufferParameterTypes)\n\n/**\n * Cylinder impostor buffer.\n *\n * @example\n * var cylinderimpostorBuffer = new CylinderImpostorBuffer({\n *     position1: new Float32Array([ 0, 0, 0 ]),\n *     position2: new Float32Array([ 1, 1, 1 ]),\n *     color: new Float32Array([ 1, 0, 0 ]),\n *     color2: new Float32Array([ 0, 1, 0 ]),\n *     radius: new Float32Array([ 1 ])\n * });\n */\nclass CylinderImpostorBuffer extends MappedAlignedBoxBuffer {\n  parameterTypes = CylinderImpostorBufferParameterTypes\n  get defaultParameters() { return CylinderImpostorBufferDefaultParameters }\n  parameters: CylinderImpostorBufferParameters\n\n  isImpostor = true\n  vertexShader = 'CylinderImpostor.vert'\n  fragmentShader = 'CylinderImpostor.frag'\n\n  /**\n   * make cylinder impostor buffer\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position1 - from positions\n   * @param  {Float32Array} data.position2 - to positions\n   * @param  {Float32Array} data.color - from colors\n   * @param  {Float32Array} data.color2 - to colors\n   * @param  {Float32Array} data.radius - radii\n   * @param  {Picker} data.picking - picking ids\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: CylinderBufferData, params: Partial<CylinderImpostorBufferParameters> = {}) {\n    super(data, params)\n\n    this.addUniforms({\n      'modelViewMatrixInverse': { value: new Matrix4() },\n      'ortho': { value: 0.0 }\n    })\n\n    this.addAttributes({\n      'position1': { type: 'v3', value: null },\n      'position2': { type: 'v3', value: null },\n      'color2': { type: 'c', value: null },\n      'radius': { type: 'f', value: null }\n    })\n\n    this.setAttributes(data)\n    this.makeMapping()\n  }\n\n  getDefines (type?: BufferTypes) {\n    const defines = MappedAlignedBoxBuffer.prototype.getDefines.call(this, type)\n\n    if (!this.parameters.openEnded) {\n      defines.CAP = 1\n    }\n\n    return defines\n  }\n}\n\nexport default CylinderImpostorBuffer\n","/**\n * @file Cylinder Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import required for declaration only\nimport { Vector3, Matrix4 } from 'three'\nimport { BufferRegistry, ExtensionFragDepth } from '../globals'\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters } from './cylindergeometry-buffer'\nimport CylinderImpostorBuffer, { CylinderImpostorBufferDefaultParameters } from './cylinderimpostor-buffer'\nimport { BufferData } from './buffer'\n\nexport interface CylinderBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  color2: Float32Array\n  radius: Float32Array\n}\n\nexport const CylinderBufferDefaultParameters = Object.assign({\n  disableImpostor: false\n}, CylinderGeometryBufferDefaultParameters, CylinderImpostorBufferDefaultParameters)\nexport type CylinderBufferParameters = typeof CylinderBufferDefaultParameters\n\nclass CylinderBufferImpl {\n  constructor (data: CylinderBufferData, params: Partial<CylinderBufferParameters> = {}) {\n    if (!data.color2 && data.color) data.color2 = data.color\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\n      return new CylinderGeometryBuffer(data, params)\n    } else {\n      return new CylinderImpostorBuffer(data, params)\n    }\n  }\n}\n\n/**\n * Cylinder buffer. Depending on the value {@link ExtensionFragDepth} and\n * `params.disableImpostor` the constructor returns either a\n * {@link CylinderGeometryBuffer} or a {@link CylinderImpostorBuffer}\n * @implements {Buffer}\n *\n * @example\n * var cylinderBuffer = new CylinderBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 1, 1, 1 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\n//@ts-expect-error Incompatible constructor signatures\nconst CylinderBuffer: {\n  new(data: CylinderBufferData, params: Partial<CylinderBufferParameters>): CylinderGeometryBuffer | CylinderImpostorBuffer;\n} = CylinderBufferImpl;\n\ntype CylinderBuffer = CylinderGeometryBuffer | CylinderImpostorBuffer;\n\nBufferRegistry.add('cylinder', CylinderBuffer)\n\nexport default CylinderBuffer\n","/**\n * @file Axes Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Color, Vector3 } from 'three'\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { AxesPicker } from '../utils/picker'\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\nimport StructureView from '../structure/structure-view';\nimport Viewer from '../viewer/viewer';\nimport { Structure } from '../ngl';\nimport { AtomDataFields } from '../structure/structure-data';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\nimport PrincipalAxes from '../math/principal-axes';\n\nexport interface AxesRepresentationParameters extends StructureRepresentationParameters {\n  showAxes: boolean\n  showBox: boolean\n}\n\n/**\n * Axes representation. Show principal axes and/or a box aligned with them\n * that fits the structure or selection.\n *\n * __Name:__ _axes_\n *\n * @example\n * stage.loadFile( \"rcsb://3pqr\", {\n *     assembly: \"BU1\"\n * } ).then( function( o ){\n *     o.addRepresentation( \"cartoon\" );\n *     o.addRepresentation( \"axes\", {\n *         sele: \"RET\", showAxes: false, showBox: true, radius: 0.2\n *     } );\n *     o.addRepresentation( \"ball+stick\", { sele: \"RET\" } );\n *     o.addRepresentation( \"axes\", {\n *         sele: \":B and backbone\", showAxes: false, showBox: true, radius: 0.2\n *     } );\n *     stage.autoView();\n *     var pa = o.structure.getPrincipalAxes();\n *     stage.animationControls.rotate( pa.getRotationQuaternion(), 1500 );\n * } );\n */\nclass AxesRepresentation extends StructureRepresentation {\n  \n  protected showAxes: boolean\n  protected showBox: boolean\n  protected sphereBuffer: SphereBuffer\n  protected cylinderBuffer: CylinderBuffer\n  /**\n   * @param  {Structure} structure - the structure object\n   * @param  {Viewer} viewer - the viewer object\n   * @param  {StructureRepresentationParameters} params - parameters object\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<AxesRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'axes'\n\n    this.parameters = Object.assign({\n\n      radiusSize: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      sphereDetail: true,\n      radialSegments: true,\n      disableImpostor: true,\n      showAxes: {\n        type: 'boolean', rebuild: true\n      },\n      showBox: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters, {\n      assembly: null\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<AxesRepresentationParameters>) {\n    const p = params || {}\n    p.radiusSize = defaults(p.radiusSize, 0.5)\n    p.colorValue = defaults(p.colorValue, 'lightgreen')\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.showAxes = defaults(p.showAxes, true)\n    this.showBox = defaults(p.showBox, false)\n\n    super.init(p)\n  }\n\n  getPrincipalAxes (): PrincipalAxes {\n    let selection\n    const assembly = this.getAssembly()\n\n    if (assembly) {\n      selection = assembly.partList[ 0 ].getSelection()\n    }\n\n    return this.structureView.getPrincipalAxes(selection)\n  }\n\n  getAxesData (sview: StructureView) {\n    const pa = this.getPrincipalAxes()\n    const c = new Color(this.colorValue)\n\n    let vn = 0\n    let en = 0\n\n    if (this.showAxes) {\n      vn += 6\n      en += 3\n    }\n\n    if (this.showBox) {\n      vn += 8\n      en += 12\n    }\n\n    const vertexPosition = new Float32Array(3 * vn)\n    const vertexColor = uniformArray3(vn, c.r, c.g, c.b)\n    const vertexRadius = uniformArray(vn, this.radiusSize)\n\n    const edgePosition1 = new Float32Array(3 * en)\n    const edgePosition2 = new Float32Array(3 * en)\n    const edgeColor = uniformArray3(en, c.r, c.g, c.b)\n    const edgeRadius = uniformArray(en, this.radiusSize)\n\n    let offset = 0\n\n    if (this.showAxes) {\n      const addAxis = function (v1: Vector3, v2: Vector3) {\n        v1.toArray(vertexPosition as any, offset * 2)\n        v2.toArray(vertexPosition as any, offset * 2 + 3)\n        v1.toArray(edgePosition1 as any, offset)\n        v2.toArray(edgePosition2 as any, offset)\n        offset += 3\n      }\n\n      addAxis(pa.begA, pa.endA)\n      addAxis(pa.begB, pa.endB)\n      addAxis(pa.begC, pa.endC)\n    }\n\n    if (this.showBox) {\n      const v = new Vector3()\n      const { d1a, d2a, d3a, d1b, d2b, d3b } = pa.getProjectedScaleForAtoms(sview)\n\n      // console.log(d1a, d2a, d3a, d1b, d2b, d3b)\n\n      let offset2 = offset * 2\n      const addCorner = function (d1: number, d2: number, d3: number) {\n        v.copy(pa.center)\n          .addScaledVector(pa.normVecA, d1)\n          .addScaledVector(pa.normVecB, d2)\n          .addScaledVector(pa.normVecC, d3)\n        v.toArray(vertexPosition as any, offset2)\n        offset2 += 3\n      }\n      addCorner(d1a, d2a, d3a)\n      addCorner(d1a, d2a, d3b)\n      addCorner(d1a, d2b, d3b)\n      addCorner(d1a, d2b, d3a)\n      addCorner(d1b, d2b, d3b)\n      addCorner(d1b, d2b, d3a)\n      addCorner(d1b, d2a, d3a)\n      addCorner(d1b, d2a, d3b)\n\n      let edgeOffset = offset\n      const addEdge = function (a: number, b: number) {\n        v.fromArray(vertexPosition as any, offset * 2 + a * 3)\n          .toArray(edgePosition1 as any, edgeOffset)\n        v.fromArray(vertexPosition as any, offset * 2 + b * 3)\n          .toArray(edgePosition2 as any, edgeOffset)\n        edgeOffset += 3\n      }\n      addEdge(0, 1)\n      addEdge(0, 3)\n      addEdge(0, 6)\n      addEdge(1, 2)\n      addEdge(1, 7)\n      addEdge(2, 3)\n      addEdge(2, 4)\n      addEdge(3, 5)\n      addEdge(4, 5)\n      addEdge(4, 7)\n      addEdge(5, 6)\n      addEdge(6, 7)\n    }\n\n    const picker = new AxesPicker(pa)\n\n    return {\n      vertex: {\n        position: vertexPosition,\n        color: vertexColor,\n        radius: vertexRadius,\n        picking: picker\n      },\n      edge: {\n        position1: edgePosition1,\n        position2: edgePosition2,\n        color: edgeColor,\n        color2: edgeColor,\n        radius: edgeRadius,\n        picking: picker\n      }\n    }\n  }\n\n  create () {\n    const axesData = this.getAxesData(this.structureView)\n\n    this.sphereBuffer = new SphereBuffer(\n      axesData.vertex as SphereBufferData,\n      this.getBufferParams({\n        sphereDetail: this.sphereDetail,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      }) as SphereBufferParameters\n    )\n\n    this.cylinderBuffer = new CylinderBuffer(\n      axesData.edge as CylinderBufferData,\n      this.getBufferParams({\n        openEnded: true,\n        radialSegments: this.radialSegments,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      })\n    )\n\n    this.dataList.push({\n      sview: this.structureView,\n      bufferList: [ this.sphereBuffer as SphereGeometryBuffer, this.cylinderBuffer as CylinderGeometryBuffer]\n    })\n  }\n\n  createData (sview: StructureView): undefined {\n    return\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    const axesData = this.getAxesData(data.sview as StructureView)\n    const sphereData = {}\n    const cylinderData = {}\n\n    if (!what || what.position) {\n      Object.assign(sphereData, {\n        position: axesData.vertex.position\n      })\n      Object.assign(cylinderData, {\n        position1: axesData.edge.position1,\n        position2: axesData.edge.position2\n      })\n    }\n\n    if (!what || what.color) {\n      Object.assign(sphereData, {\n        color: axesData.vertex.color as Float32Array\n      })\n      Object.assign(cylinderData, {\n        color: axesData.edge.color as Float32Array,\n        color2: axesData.edge.color as Float32Array\n      })\n    }\n\n    if (!what || what.radius) {\n      Object.assign(sphereData, {\n        radius: axesData.vertex.radius as Float32Array\n      })\n      Object.assign(cylinderData, {\n        radius: axesData.edge.radius as Float32Array\n      })\n    }\n\n    (this.sphereBuffer as SphereGeometryBuffer).setAttributes(sphereData);\n    (this.cylinderBuffer as CylinderGeometryBuffer).setAttributes(cylinderData)\n  }\n}\n\nRepresentationRegistry.add('axes', AxesRepresentation)\n\nexport default AxesRepresentation\n","/**\n * @file Ball And Stick Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { ExtensionFragDepth, RepresentationRegistry } from '../globals'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\nimport WideLineBuffer from '../buffer/wideline-buffer'\nimport Viewer from '../viewer/viewer';\n// @ts-ignore: unused import Volume required for declaration only\nimport { Structure, Volume } from '../ngl';\nimport AtomProxy from '../proxy/atom-proxy';\nimport { AtomDataParams, BondDataParams, BondDataFields, AtomDataFields, BondData, AtomData } from '../structure/structure-data';\nimport StructureView from '../structure/structure-view';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\n// @ts-ignore: unused import Surface required for declaration only\nimport Surface from '../surface/surface';\n\nexport interface BallAndStickRepresentationParameters extends StructureRepresentationParameters {\n  sphereDetail: number\n  radialSegments: number\n  openEnded: boolean\n  disableImpostor: boolean\n  aspectRatio: number\n  lineOnly: boolean\n  lineWidth: number\n  cylinderOnly: boolean\n  multipleBond: 'off' | 'symmetric' | 'offset'\n  bondSpacing: number\n  bondScale: number\n  linewidth: number\n}\n\n/**\n * Ball And Stick representation parameter object. Extends {@link RepresentationParameters} and\n * {@link StructureRepresentationParameters}.\n *\n * @typedef {Object} BallAndStickRepresentationParameters - ball and stick representation parameters\n *\n * @property {Integer} sphereDetail - sphere quality (icosahedron subdivisions)\n * @property {Integer} radialSegments - cylinder quality (number of segments)\n * @property {Boolean} openEnded - capped or not\n * @property {Boolean} disableImpostor - disable use of raycasted impostors for rendering\n * @property {Float} aspectRatio - size difference between atom and bond radii\n * @property {Boolean} lineOnly - render only bonds, and only as lines\n * @property {Integer} linewidth - width of lines\n * @property {Boolean} cylinderOnly - render only bonds (no atoms)\n * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\n * @property {Float} bondSpacing - spacing for multiple bond rendering\n * @property {Float} bondScale - scale/radius for multiple bond rendering\n */\n\n/**\n * Ball And Stick representation. Show atoms as spheres and bonds as cylinders.\n *\n * __Name:__ _ball+stick_\n *\n * @example\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n *     o.addRepresentation( \"ball+stick\" );\n *     o.autoView();\n * } );\n */\nclass BallAndStickRepresentation extends StructureRepresentation {\n  protected sphereDetail: number\n  protected radialSegments: number\n  protected openEnded: boolean\n  protected disableImpostor: boolean\n  protected aspectRatio: number\n  protected lineOnly: boolean\n  protected lineWidth: number\n  protected cylinderOnly: boolean\n  protected multipleBond: 'off' | 'symmetric' | 'offset'\n  protected bondSpacing: number\n  protected bondScale: number\n  protected linewidth: number\n\n  protected lineBuffer: WideLineBuffer\n  /**\n   * Create Ball And Stick representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'ball+stick'\n\n    this.parameters = Object.assign({\n\n      sphereDetail: true,\n      radialSegments: true,\n      openEnded: true,\n      disableImpostor: true,\n      aspectRatio: {\n        type: 'number', precision: 1, max: 10.0, min: 1.0\n      },\n      lineOnly: {\n        type: 'boolean', rebuild: true\n      },\n      cylinderOnly: {\n        type: 'boolean', rebuild: true\n      },\n      multipleBond: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'off': 'off',\n          'symmetric': 'symmetric',\n          'offset': 'offset'\n        }\n      },\n      bondScale: {\n        type: 'number', precision: 2, max: 1.0, min: 0.01\n      },\n      bondSpacing: {\n        type: 'number', precision: 2, max: 2.0, min: 0.5\n      },\n      linewidth: {\n        type: 'integer', max: 50, min: 1, buffer: true\n      }\n\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<BallAndStickRepresentationParameters>) {\n    var p = params || {}\n    p.radiusType = defaults(p.radiusType, 'size')\n    p.radiusSize = defaults(p.radiusSize, 0.15)\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.aspectRatio = defaults(p.aspectRatio, 2.0)\n    this.lineOnly = defaults(p.lineOnly, false)\n    this.cylinderOnly = defaults(p.cylinderOnly, false)\n    this.multipleBond = defaults(p.multipleBond, 'off')\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\n    this.bondScale = defaults(p.bondScale, 0.4)\n    this.linewidth = defaults(p.linewidth, 2)\n\n    super.init(p)\n  }\n\n  getAtomRadius (atom: AtomProxy) {\n    return this.aspectRatio * super.getAtomRadius(atom)\n  }\n\n  getAtomParams (what?: AtomDataFields, params?: Partial<AtomDataParams>) {\n    var p = super.getAtomParams(what, params)\n    p.radiusParams.scale *= this.aspectRatio\n\n    return p\n  }\n\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: Partial<AtomDataParams>): AtomData {\n    return sview.getAtomData(this.getAtomParams(what, params))\n  }\n\n  getBondParams (what?: BondDataFields, params?: Partial<BondDataParams>) {\n    params = Object.assign({\n      multipleBond: this.multipleBond,\n      bondSpacing: this.bondSpacing,\n      bondScale: this.bondScale\n    }, params)\n\n    return super.getBondParams(what, params)\n  }\n\n  getBondData (sview: StructureView, what?: BondDataFields, params?: Partial<BondDataParams>): BondData {\n    return sview.getBondData(this.getBondParams(what, params))\n  }\n\n  createData (sview: StructureView) {\n    const bufferList: any[] = []\n\n    if (this.lineOnly) {\n      this.lineBuffer = new WideLineBuffer(\n        this.getBondData(sview, { position: true, color: true, picking: true }),\n        this.getBufferParams({ linewidth: this.linewidth })\n      )\n\n      bufferList.push(this.lineBuffer)\n    } else {\n      const cylinderBuffer = new CylinderBuffer(\n        (this.getBondData(sview) as CylinderBufferData),\n        this.getBufferParams({\n          openEnded: this.openEnded,\n          radialSegments: this.radialSegments,\n          disableImpostor: this.disableImpostor,\n          dullInterior: true\n        })\n      )\n\n      bufferList.push(cylinderBuffer as CylinderGeometryBuffer)\n\n      if (!this.cylinderOnly) {\n        const sphereBuffer = new SphereBuffer(\n          (this.getAtomData(sview) as SphereBufferData),\n          (this.getBufferParams({\n            sphereDetail: this.sphereDetail,\n            disableImpostor: this.disableImpostor,\n            dullInterior: true\n          }) as SphereBufferParameters)\n        )\n\n        bufferList.push(sphereBuffer as SphereGeometryBuffer)\n      }\n    }\n\n    return {\n      bufferList: bufferList\n    }\n  }\n\n  updateData (what: BondDataFields | AtomDataFields, data: StructureRepresentationData) {\n    if (this.multipleBond !== 'off' && what && what.radius) {\n      what.position = true\n    }\n\n    const bondData = this.getBondData(data.sview as StructureView, what)\n\n    if (this.lineOnly) {\n      const lineData:Partial<CylinderBufferData> = {}\n\n      if (!what || what.position) {\n        Object.assign(lineData, {\n          position1: bondData.position1,\n          position2: bondData.position2\n        })\n      }\n\n      if (!what || what.color) {\n        Object.assign(lineData, {\n          color: bondData.color,\n          color2: bondData.color2\n        })\n      }\n\n      data.bufferList[ 0 ].setAttributes(lineData)\n    } else {\n      var cylinderData: Partial<CylinderBufferData> = {}\n\n      if (!what || what.position) {\n        Object.assign(cylinderData, {\n          position1: bondData.position1,\n          position2: bondData.position2\n        })\n      }\n\n      if (!what || what.color) {\n        Object.assign(cylinderData, {\n          color: bondData.color,\n          color2: bondData.color2\n        })\n      }\n\n      if (!what || what.radius) {\n        Object.assign(cylinderData, {\n          radius: bondData.radius\n        })\n      }\n\n      data.bufferList[ 0 ].setAttributes(cylinderData)\n\n      if (!this.cylinderOnly) {\n        var atomData = this.getAtomData(data.sview as StructureView, what)\n\n        var sphereData: Partial<SphereBufferData> = {}\n\n        if (!what || what.position) {\n          Object.assign(sphereData, {\n            position: atomData.position\n          })\n        }\n\n        if (!what || what.color) {\n          Object.assign(sphereData, {\n            color: atomData.color\n          })\n        }\n\n        if (!what || what.radius) {\n          Object.assign(sphereData, {\n            radius: atomData.radius\n          })\n        }\n\n        data.bufferList[ 1 ].setAttributes(sphereData)\n      }\n    }\n  }\n\n  setParameters (params: Partial<BallAndStickRepresentationParameters> = {}) {\n    let rebuild = false\n    const what: AtomDataFields = {}\n\n    if (params.aspectRatio || params.bondSpacing || params.bondScale) {\n      Object.assign(what, {radius: true})\n      if (!ExtensionFragDepth || this.disableImpostor) {\n        rebuild = true\n      }\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('ball+stick', BallAndStickRepresentation)\n\nexport default BallAndStickRepresentation\n","/**\n * @file Backbone Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport AtomProxy from '../proxy/atom-proxy';\nimport StructureView from '../structure/structure-view';\nimport { AtomDataFields, AtomDataParams, BondDataFields, BondDataParams, BondData, AtomData } from '../structure/structure-data';\n\n/**\n * Backbone representation. Show cylinders (or lines) connecting .CA (protein)\n * or .C4'/.C3' (RNA/DNA) of polymers.\n *\n * __Name:__ _backbone_\n *\n * @example\n * stage.loadFile( \"rcsb://1sfi\" ).then( function( o ){\n *     o.addRepresentation( \"backbone\" );\n *     o.autoView();\n * } );\n */\nclass BackboneRepresentation extends BallAndStickRepresentation {\n  /**\n   * @param  {Structure} structure - the structure object\n   * @param  {Viewer} viewer - the viewer object\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'backbone'\n\n    this.parameters = Object.assign({\n\n    }, this.parameters, {\n\n      multipleBond: null,\n      bondSpacing: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<BallAndStickRepresentationParameters>) {\n    var p = params || {}\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\n    p.radiusSize = defaults(p.radiusSize, 0.25)\n\n    super.init(p)\n  }\n\n  getAtomRadius (atom: AtomProxy) {\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\n  }\n\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: Partial<AtomDataParams>): AtomData {\n    return sview.getBackboneAtomData(this.getAtomParams(what, params))\n  }\n\n  getBondData (sview: StructureView, what?: BondDataFields, params?: Partial<BondDataParams>): BondData {\n    return sview.getBackboneBondData(this.getBondParams(what, params))\n  }\n}\n\nRepresentationRegistry.add('backbone', BackboneRepresentation)\n\nexport default BackboneRepresentation\n","/**\n * @file Base Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport { AtomDataFields, AtomDataParams, BondDataFields, BondDataParams, BondData, AtomData } from '../structure/structure-data';\n\n/**\n * Base representation. Show cylinders for RNA/DNA ladders.\n *\n * __Name:__ _base_\n *\n * @example\n * stage.loadFile( \"rcsb://1d66\" ).then( function( o ){\n *     o.addRepresentation( \"cartoon\", { sele: \"nucleic\" } );\n *     o.addRepresentation( \"base\", { color: \"resname\" } );\n *     o.autoView( \"nucleic\" );\n * } );\n */\nclass BaseRepresentation extends BallAndStickRepresentation {\n  /**\n   * @param  {Structure} structure - the structure object\n   * @param  {Viewer} viewer - the viewer object\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'base'\n\n    this.parameters = Object.assign({\n\n    }, this.parameters, {\n\n      multipleBond: null,\n      bondSpacing: null\n\n    })\n  }\n\n  init (params: Partial<BallAndStickRepresentationParameters>) {\n    let p = params || {}\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\n    p.radiusSize = defaults(p.radiusSize, 0.3)\n\n    super.init(p)\n  }\n\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: AtomDataParams): AtomData {\n    return sview.getRungAtomData(this.getAtomParams(what, params))\n  }\n\n  getBondData (sview: StructureView, what?: BondDataFields, params?: BondDataParams): BondData {\n    let p = this.getBondParams(what, params)\n    Object.assign(p.colorParams, {rung: true})\n\n    return sview.getRungBondData(p)\n  }\n}\n\nRepresentationRegistry.add('base', BaseRepresentation)\n\nexport default BaseRepresentation\n","/**\n * @file Spline\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3 } from 'three'\n\nimport { ColormakerRegistry } from '../globals'\nimport { AtomPicker } from '../utils/picker'\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\nimport { copyArray } from '../math/array-utils'\nimport { spline } from '../math/math-utils'\nimport Polymer from '../proxy/polymer';\nimport AtomProxy from '../proxy/atom-proxy';\nimport { ColormakerParameters } from '../color/colormaker';\nimport { NumberArray } from '../types';\n\nexport class Interpolator {\n  \n  m: number\n  tension: number\n  dt: number\n  delta: number\n  vec1: Vector3\n  vec2: Vector3\n  vDir: Vector3 \n  vTan: Vector3\n  vNorm: Vector3\n  vBin: Vector3\n  m2: number\n\n  constructor (m: number, tension: number) {\n    this.m = m\n    this.tension = tension\n    this.dt = 1.0 / this.m\n    this.delta = 0.0001\n\n    this.vec1 = new Vector3()\n    this.vec2 = new Vector3()\n\n    this.vDir = new Vector3()\n    this.vTan = new Vector3()\n    this.vNorm = new Vector3()\n    this.vBin = new Vector3()\n  \n    this.m2 = Math.ceil(this.m / 2)\n  }\n\n  private interpolateToArr (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, t: number, arr: Float32Array, offset: number) {\n    arr[ offset + 0 ] = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension)\n    arr[ offset + 1 ] = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension)\n    arr[ offset + 2 ] = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension)\n  }\n\n  private interpolateToVec (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, t: number, vec: Vector3) {\n    vec.x = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension)\n    vec.y = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension)\n    vec.z = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension)\n  }\n\n  private interpolatePosition (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, pos: Float32Array, offset: number) {\n    for (var j = 0; j < this.m; ++j) {\n      var l = offset + j * 3\n      var d = this.dt * j\n      this.interpolateToArr(v0, v1, v2, v3, d, pos, l)\n    }\n  }\n\n  private interpolateTangent (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, tan: Float32Array, offset: number) {\n    for (var j = 0; j < this.m; ++j) {\n      var d = this.dt * j\n      var d1 = d - this.delta\n      var d2 = d + this.delta\n      var l = offset + j * 3\n      // capping as a precaution\n      if (d1 < 0) d1 = 0\n      if (d2 > 1) d2 = 1\n      //\n      this.interpolateToVec(v0, v1, v2, v3, d1, this.vec1)\n      this.interpolateToVec(v0, v1, v2, v3, d2, this.vec2)\n      //\n      this.vec2.sub(this.vec1).normalize()\n      this.vec2.toArray(tan as any, l)\n    }\n  }\n\n  private vectorSubdivide (interpolationFn: (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, array: Float32Array, offset: number) => void,\n                            iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\n    let v0: Vector3\n    let v1 = <Vector3>iterator.next()\n    let v2 = <Vector3>iterator.next()\n    let v3 = <Vector3>iterator.next()\n    //\n    const n = iterator.size\n    const n1 = n - 1\n    let k = offset || 0\n    for (let i = 0; i < n1; ++i) {\n      v0 = v1\n      v1 = v2\n      v2 = v3\n      v3 = <Vector3>iterator.next()\n      interpolationFn.apply(this, [v0, v1, v2, v3, array, k])\n      k += 3 * this.m\n    }\n    if (isCyclic) {\n      v0 = <Vector3>iterator.get(n - 2)\n      v1 = <Vector3>iterator.get(n - 1)\n      v2 = <Vector3>iterator.get(0)\n      v3 = <Vector3>iterator.get(1)\n      interpolationFn.apply(this, [v0, v1, v2, v3, array, k])\n      k += 3 * this.m\n    }\n  }\n\n  //\n\n  public getPosition (iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\n    iterator.reset()\n    this.vectorSubdivide(this.interpolatePosition, iterator, array, offset, isCyclic)\n    var n1 = iterator.size - 1\n    var k = n1 * this.m * 3\n    if (isCyclic) k += this.m * 3\n    var v = iterator.get(isCyclic ? 0 : n1)\n    array[ k ] = v.x\n    array[ k + 1 ] = v.y\n    array[ k + 2 ] = v.z\n  }\n\n  public getTangent (iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\n    iterator.reset()\n    this.vectorSubdivide(this.interpolateTangent, iterator, array, offset, isCyclic)\n    const n1 = iterator.size - 1\n    let k = n1 * this.m * 3\n    if (isCyclic) k += this.m * 3\n    copyArray(array, array, k - 3, k, 3)\n  }\n\n  private interpolateNormalDir (u0: Vector3, u1: Vector3, u2: Vector3, u3: Vector3,\n                                v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3,\n                                tan: Float32Array, norm: Float32Array, bin: Float32Array,\n                                offset: number, shift: boolean) {\n    for (let j = 0; j < this.m; ++j) {\n      let l = offset + j * 3\n      if (shift) l += this.m2 * 3\n      const d = this.dt * j\n      this.interpolateToVec(u0, u1, u2, u3, d, this.vec1)\n      this.interpolateToVec(v0, v1, v2, v3, d, this.vec2)\n      this.vDir.subVectors(this.vec2, this.vec1).normalize()\n      this.vTan.fromArray(tan as any, l)\n      this.vBin.crossVectors(this.vDir, this.vTan).normalize()\n      this.vBin.toArray(bin as any, l)\n      this.vNorm.crossVectors(this.vTan, this.vBin).normalize()\n      this.vNorm.toArray(norm as any, l)\n    }\n  }\n\n  private interpolateNormal (vDir: Vector3, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number) {\n    for (var j = 0; j < this.m; ++j) {\n      var l = offset + j * 3\n      vDir.copy(this.vNorm)\n      this.vTan.fromArray(tan as any, l)\n      this.vBin.crossVectors(vDir, this.vTan).normalize()\n      this.vBin.toArray(bin as any, l)\n      this.vNorm.crossVectors(this.vTan, this.vBin).normalize()\n      this.vNorm.toArray(norm as any, l)\n    }\n  }\n\n  public getNormal (size: number, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number, isCyclic: boolean) {\n    this.vNorm.set(0, 0, 1)\n    const n = size\n    const n1 = n - 1\n    let k = offset || 0\n    for (var i = 0; i < n1; ++i) {\n      this.interpolateNormal(this.vDir, tan, norm, bin, k)\n      k += 3 * this.m\n    }\n    if (isCyclic) {\n      this.interpolateNormal(this.vDir, tan, norm, bin, k)\n      k += 3 * this.m\n    }\n    this.vBin.toArray(bin as any, k)\n    this.vNorm.toArray(norm as any, k)\n  }\n\n  public getNormalDir (iterDir1: AtomIterator, iterDir2: AtomIterator, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number, isCyclic: boolean, shift: boolean) {\n    iterDir1.reset()\n    iterDir2.reset()\n    //\n    const vSub1 = new Vector3()\n    const vSub2 = new Vector3()\n    const vSub3 = new Vector3()\n    const vSub4 = new Vector3()\n    //\n    const d1v1 = new Vector3()\n    const d1v2 = new Vector3().copy(<Vector3>iterDir1.next())\n    const d1v3 = new Vector3().copy(<Vector3>iterDir1.next())\n    const d1v4 = new Vector3().copy(<Vector3>iterDir1.next())\n    const d2v1 = new Vector3()\n    const d2v2 = new Vector3().copy(<Vector3>iterDir2.next())\n    const d2v3 = new Vector3().copy(<Vector3>iterDir2.next())\n    const d2v4 = new Vector3().copy(<Vector3>iterDir2.next())\n    //\n    this.vNorm.set(0, 0, 1)\n    let n = iterDir1.size\n    let n1 = n - 1\n    let k = offset || 0\n    for (var i = 0; i < n1; ++i) {\n      d1v1.copy(d1v2)\n      d1v2.copy(d1v3)\n      d1v3.copy(d1v4)\n      d1v4.copy(<Vector3>iterDir1.next())\n      d2v1.copy(d2v2)\n      d2v2.copy(d2v3)\n      d2v3.copy(d2v4)\n      d2v4.copy(<Vector3>iterDir2.next())\n      //\n      if (i === 0) {\n        vSub1.subVectors(d2v1, d1v1)\n        vSub2.subVectors(d2v2, d1v2)\n        if (vSub1.dot(vSub2) < 0) {\n          vSub2.multiplyScalar(-1)\n          d2v2.addVectors(d1v2, vSub2)\n        }\n        vSub3.subVectors(d2v3, d1v3)\n        if (vSub2.dot(vSub3) < 0) {\n          vSub3.multiplyScalar(-1)\n          d2v3.addVectors(d1v3, vSub3)\n        }\n      } else {\n        vSub3.copy(vSub4)\n      }\n      vSub4.subVectors(d2v4, d1v4)\n      if (vSub3.dot(vSub4) < 0) {\n        vSub4.multiplyScalar(-1)\n        d2v4.addVectors(d1v4, vSub4)\n      }\n      this.interpolateNormalDir(\n        d1v1, d1v2, d1v3, d1v4,\n        d2v1, d2v2, d2v3, d2v4,\n        tan, norm, bin, k, shift\n      )\n      k += 3 * this.m\n    }\n    if (isCyclic) {\n      d1v1.copy(<Vector3>iterDir1.get(n - 2))\n      d1v2.copy(<Vector3>iterDir1.get(n - 1))\n      d1v3.copy(<Vector3>iterDir1.get(0))\n      d1v4.copy(<Vector3>iterDir1.get(1))\n      d2v1.copy(<Vector3>iterDir2.get(n - 2))\n      d2v2.copy(<Vector3>iterDir2.get(n - 1))\n      d2v3.copy(<Vector3>iterDir2.get(0))\n      d2v4.copy(<Vector3>iterDir2.get(1))\n      //\n      vSub3.copy(vSub4)\n      vSub4.subVectors(d2v4, d1v4)\n      if (vSub3.dot(vSub4) < 0) {\n        vSub4.multiplyScalar(-1)\n        d2v4.addVectors(d1v4, vSub4)\n      }\n      this.interpolateNormalDir(\n        d1v1, d1v2, d1v3, d1v4,\n        d2v1, d2v2, d2v3, d2v4,\n        tan, norm, bin, k, shift\n      )\n      k += 3 * this.m\n    }\n    if (shift) {\n      // FIXME shift requires data from one this.more preceeding residue\n      this.vBin.fromArray(bin as any, this.m2 * 3)\n      this.vNorm.fromArray(norm as any, this.m2 * 3)\n      for (var j = 0; j < this.m2; ++j) {\n        this.vBin.toArray(bin as any, j * 3)\n        this.vNorm.toArray(norm as any, j * 3)\n      }\n    } else {\n      this.vBin.toArray(bin as any, k)\n      this.vNorm.toArray(norm as any, k)\n    }\n  }\n\n  //\n\n  private interpolateColor (item1: AtomProxy, item2: AtomProxy, colFn: (...arg: any[]) => void, col: any, offset: number) {\n    var j, l\n    for (j = 0; j < this.m2; ++j) {\n      l = offset + j * 3\n      colFn.apply(this, [item1, col, l]) // itemColorToArray\n    }\n    for (j = this.m2; j < this.m; ++j) {\n      l = offset + j * 3\n      colFn.apply(this, [item2, col, l]) // itemColorToArray\n    }\n  }\n\n  public getColor (iterator: AtomIterator, colFn: (...arg: any[]) => void, col: any, offset: number, isCyclic: boolean) {\n    iterator.reset()\n    iterator.next() // first element not needed\n    let i0: AtomProxy\n    let i1 = <AtomProxy>iterator.next()\n    //\n    var n = iterator.size\n    var n1 = n - 1\n    var k = offset || 0\n    for (var i = 0; i < n1; ++i) {\n      i0 = i1\n      i1 = <AtomProxy>iterator.next()\n      this.interpolateColor(i0, i1, colFn, col, k)\n      k += 3 * this.m\n    }\n    if (isCyclic) {\n      i0 = <AtomProxy>iterator.get(n - 1)\n      i1 = <AtomProxy>iterator.get(0)\n      this.interpolateColor(i0, i1, colFn, col, k)\n      k += 3 * this.m\n    }\n    //\n    col[ k ] = col[ k - 3 ]\n    col[ k + 1 ] = col[ k - 2 ]\n    col[ k + 2 ] = col[ k - 1 ]\n  }\n\n  //\n\n  private interpolatePicking (item1: AtomProxy, item2: AtomProxy, pickFn: (item: AtomProxy) => number, pick: Float32Array, offset: number) {\n    var j\n    for (j = 0; j < this.m2; ++j) {\n      pick[ offset + j ] = pickFn.apply(this, [item1])\n    }\n    for (j = this.m2; j < this.m; ++j) {\n      pick[ offset + j ] = pickFn.apply(this, [item2])\n    }\n  }\n\n  public getPicking (iterator: AtomIterator, pickFn: (item: AtomProxy) => number, pick: Float32Array, offset: number, isCyclic: boolean) {\n    iterator.reset()\n    iterator.next() // first element not needed\n    let i0: AtomProxy\n    let i1 = <AtomProxy>iterator.next()\n    //\n    const n = iterator.size\n    const n1 = n - 1\n    let k = offset || 0\n    for (var i = 0; i < n1; ++i) {\n      i0 = i1\n      i1 = <AtomProxy>iterator.next()\n      this.interpolatePicking(i0, i1, pickFn, pick, k)\n      k += this.m\n    }\n    if (isCyclic) {\n      i0 = <AtomProxy>iterator.get(n - 1)\n      i1 = <AtomProxy>iterator.get(0)\n      this.interpolatePicking(i0, i1, pickFn, pick, k)\n      k += this.m\n    }\n    //\n    pick[ k ] = pick[ k - 1 ]\n  }\n\n  //\n\n  private interpolateSize (item1: AtomProxy, item2: AtomProxy, sizeFn: (item: AtomProxy) => number, size: Float32Array, offset: number) {\n    const s1: number = sizeFn.apply(this, [item1])\n    const s2: number = sizeFn.apply(this, [item2])\n    for (let j = 0; j < this.m; ++j) {\n      // linear interpolation\n      let t = j / this.m\n      size[ offset + j ] = (1 - t) * s1 + t * s2\n    }\n  }\n\n  public getSize (iterator: AtomIterator, sizeFn: (item: AtomProxy) => number, size: Float32Array, offset: number, isCyclic: boolean) {\n    iterator.reset()\n    iterator.next() // first element not needed\n    let i0: AtomProxy\n    let i1: AtomProxy = <AtomProxy>iterator.next()\n    //\n    const n = iterator.size\n    const n1 = n - 1\n    let k = offset || 0\n    for (var i = 0; i < n1; ++i) {\n      i0 = i1\n      i1 = <AtomProxy>iterator.next()\n      this.interpolateSize(i0, i1, sizeFn, size, k)\n      k += this.m\n    }\n    if (isCyclic) {\n      i0 = <AtomProxy>iterator.get(n - 1)\n      i1 = <AtomProxy>iterator.get(0)\n      this.interpolateSize(i0, i1, sizeFn, size, k)\n      k += this.m\n    }\n    //\n    size[ k ] = size[ k - 1 ]\n  }\n}\n\nexport interface SplineParameters {\n  directional?: boolean\n  positionIterator?: boolean\n  subdiv?: number\n  smoothSheet?: boolean\n  tension?: number\n}\nexport interface AtomIterator {\n  size: number,\n  next: () => AtomProxy | Vector3,\n  get: (idx: number) => AtomProxy | Vector3,\n  reset: () => void\n}\nclass Spline {\n\n  polymer: Polymer\n  size: number\n  directional: boolean\n  positionIterator: any\n  subdiv: number\n  smoothSheet: boolean\n  tension: number\n  interpolator: Interpolator\n\n  constructor (polymer: Polymer, params?: SplineParameters) {\n    this.polymer = polymer\n      this.size = polymer.residueCount\n\n      var p = params || {}\n      this.directional = p.directional || false\n      this.positionIterator = p.positionIterator || false\n      this.subdiv = p.subdiv || 1\n      this.smoothSheet = p.smoothSheet || false\n\n      if (!p.tension) {\n        this.tension = this.polymer.isNucleic() ? 0.5 : 0.9\n      } else {\n        this.tension = p.tension\n      }\n\n      this.interpolator = new Interpolator(this.subdiv, this.tension)\n  }\n\n  getAtomIterator (type: string, smooth?: boolean): AtomIterator {\n    const polymer = this.polymer\n    const structure = polymer.structure\n    const n = polymer.residueCount\n\n    let i = 0\n    let j = -1\n\n    const cache = [\n      structure.getAtomProxy(),\n      structure.getAtomProxy(),\n      structure.getAtomProxy(),\n      structure.getAtomProxy()\n    ]\n\n    const cache2 = [\n      new Vector3(),\n      new Vector3(),\n      new Vector3(),\n      new Vector3()\n    ]\n\n    function next () {\n      var atomProxy = get(j)\n      j += 1\n      return atomProxy\n    }\n\n    var apPrev = structure.getAtomProxy()\n    var apNext = structure.getAtomProxy()\n\n    function get (idx: number) {\n      var atomProxy = cache[ i % 4 ]\n      atomProxy.index = polymer.getAtomIndexByType(idx, type) as number\n      if (smooth && idx > 0 && idx < n && atomProxy.sstruc === 'e') {\n        var vec = cache2[ i % 4 ]\n        apPrev.index = polymer.getAtomIndexByType(idx + 1, type) as number\n        apNext.index = polymer.getAtomIndexByType(idx - 1, type) as number\n        vec.addVectors(apPrev as any, apNext as any)\n          .add(atomProxy as any).add(atomProxy as any)\n          .multiplyScalar(0.25)\n        i += 1\n        return vec\n      }\n      i += 1\n      return atomProxy\n    }\n\n    function reset () {\n      i = 0\n      j = -1\n    }\n\n    return {\n      size: n,\n      next: next,\n      get: get,\n      reset: reset\n    }\n  }\n\n  getSubdividedColor (params: {scheme: string, [k: string]: any } & ColormakerParameters) {\n    var m = this.subdiv\n    var polymer = this.polymer\n    var n = polymer.residueCount\n    var n1 = n - 1\n    var nCol = n1 * m * 3 + 3\n    if (polymer.isCyclic) nCol += m * 3\n\n    var col = new Float32Array(nCol)\n    var iterator = this.getAtomIterator('trace')\n\n    var p = params || {}\n    p.structure = polymer.structure\n\n    var colormaker = ColormakerRegistry.getScheme(p)\n\n    function colFn (item: AtomProxy, array: NumberArray, offset: number) {\n      colormaker.atomColorToArray(item, array, offset)\n    }\n\n    this.interpolator.getColor(\n      iterator, colFn, col, 0, polymer.isCyclic\n    )\n\n    return {\n      'color': col\n    }\n  }\n  \n  getSubdividedPicking () {\n    var m = this.subdiv\n    var polymer = this.polymer\n    var n = polymer.residueCount\n    var n1 = n - 1\n    var nCol = n1 * m + 1\n    if (polymer.isCyclic) nCol += m\n\n    var structure = polymer.structure\n    var iterator = this.getAtomIterator('trace')\n    var pick = new Float32Array(nCol)\n\n    function pickFn (item: AtomProxy) {\n      return item.index\n    }\n\n    this.interpolator.getPicking(\n      iterator, pickFn, pick, 0, polymer.isCyclic\n    )\n\n    return {\n      'picking': new AtomPicker(pick, structure)\n    }\n  }\n\n  getSubdividedPosition () {\n    var pos = this.getPosition()\n\n    return {\n      'position': pos\n    }\n  }\n  \n  getSubdividedOrientation () {\n    const tan = this.getTangent()\n    const normals = this.getNormals(tan)\n\n    return {\n      'tangent': tan,\n      'normal': normals.normal,\n      'binormal': normals.binormal\n    }\n  }\n\n  getSubdividedSize (params: RadiusParams) {\n    var m = this.subdiv\n    var polymer = this.polymer\n    var n = polymer.residueCount\n    var n1 = n - 1\n    var nSize = n1 * m + 1\n    if (polymer.isCyclic) nSize += m\n\n    var size = new Float32Array(nSize)\n    var iterator = this.getAtomIterator('trace')\n\n    var radiusFactory = new RadiusFactory(params)\n\n    function sizeFn (item: AtomProxy) {\n      return radiusFactory.atomRadius(item)\n    }\n\n    this.interpolator.getSize(\n      iterator, sizeFn, size, 0, polymer.isCyclic\n    )\n\n    return {\n      'size': size\n    }\n  }\n\n  getPosition () {\n    const m = this.subdiv\n    const polymer = this.polymer\n    const n = polymer.residueCount\n    const n1 = n - 1\n    let nPos = n1 * m * 3 + 3\n    if (polymer.isCyclic) nPos += m * 3\n\n    const pos = new Float32Array(nPos)\n    const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\n\n    this.interpolator.getPosition(iterator, pos, 0, polymer.isCyclic)\n\n    return pos\n  }\n\n  getTangent () {\n    const m = this.subdiv\n    const polymer = this.polymer\n    const n = this.size\n    const n1 = n - 1\n    let nTan = n1 * m * 3 + 3\n    if (polymer.isCyclic) nTan += m * 3\n\n    const tan = new Float32Array(nTan)\n    const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\n\n    this.interpolator.getTangent(iterator, tan, 0, polymer.isCyclic)\n\n    return tan\n  }\n\n  getNormals (tan: Float32Array) {\n    const m = this.subdiv\n    const polymer = this.polymer\n    const isProtein = polymer.isProtein()\n    const n = this.size\n    const n1 = n - 1\n    let nNorm = n1 * m * 3 + 3\n    if (polymer.isCyclic) nNorm += m * 3\n\n    const norm = new Float32Array(nNorm)\n    const bin = new Float32Array(nNorm)\n\n    if (this.directional && !this.polymer.isCg()) {\n      const iterDir1 = this.getAtomIterator('direction1')\n      const iterDir2 = this.getAtomIterator('direction2')\n      this.interpolator.getNormalDir(\n        iterDir1, iterDir2, tan, norm, bin, 0, polymer.isCyclic, isProtein\n      )\n    } else {\n      this.interpolator.getNormal(\n        n, tan, norm, bin, 0, polymer.isCyclic\n      )\n    }\n\n    return {\n      'normal': norm,\n      'binormal': bin\n    }\n  }\n\n}\n\nexport default Spline\n","/**\n * @file Tube Mesh Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Matrix4 required for declaration only\nimport { Vector3, Matrix4 } from 'three'\n\nimport { defaults, getUintArray } from '../utils'\nimport { serialArray } from '../math/array-utils'\nimport MeshBuffer from './mesh-buffer'\nimport { BufferDefaultParameters, BufferData } from './buffer'\nimport {Log} from \"../globals\";\n\nconst vTangent = new Vector3()\nconst vMeshNormal = new Vector3()\n\nexport interface TubeMeshBufferData extends BufferData {\n  binormal: Float32Array\n  tangent: Float32Array\n  size: Float32Array\n}\n\nexport const TubeMeshBufferDefaultParameters = Object.assign({\n  radialSegments: 4,\n  capped: false,\n  aspectRatio: 1.0\n}, BufferDefaultParameters)\nexport type TubeMeshBufferParameters = typeof TubeMeshBufferDefaultParameters\n\nfunction getData (data: TubeMeshBufferData, params: Partial<TubeMeshBufferParameters> = {}) {\n  const radialSegments = defaults(params.radialSegments, 4)\n  const capped = defaults(params.capped, false)\n\n  const capVertices = capped ? radialSegments : 0\n  const capTriangles = capped ? radialSegments - 2 : 0\n\n  const n = data.position!.length / 3\n  const n1 = n - 1\n  const x = n * radialSegments * 3 + 2 * capVertices * 3\n  const xi = n1 * 2 * radialSegments * 3 + 2 * capTriangles * 3\n\n  return {\n    position: new Float32Array(x),\n    color: new Float32Array(x),\n    index: getUintArray(xi, x / 3),\n    normal: new Float32Array(x),\n    picking: data.picking\n  }\n}\n\n/**\n * Tube mesh buffer. Draws a tube.\n */\nclass TubeMeshBuffer extends MeshBuffer {\n  get defaultParameters() { return TubeMeshBufferDefaultParameters }\n  parameters: TubeMeshBufferParameters\n\n  capVertices: number\n  capTriangles: number\n  size2: number\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.normal - normals\n   * @param  {Float32Array} data.binormal - binormals\n   * @param  {Float32Array} data.tangent - tangents\n   * @param  {Float32Array} data.color - colors\n   * @param  {Float32Array} data.size - sizes\n   * @param  {Picker} data.picking - picking ids\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: TubeMeshBufferData, params: Partial<TubeMeshBufferParameters> = {}) {\n    super(getData(data, params), params)\n\n    this.capVertices = this.parameters.capped ? this.parameters.radialSegments : 0\n    this.capTriangles = this.parameters.capped ? this.parameters.radialSegments - 2 : 0\n\n    this.size2 = data.position!.length / 3\n    data.primitiveId = serialArray(this.size2)\n\n    this.setAttributes(data)\n    this.makeIndex()\n  }\n\n  setAttributes (data: Partial<TubeMeshBufferData> = {}) {\n    const aspectRatio = this.parameters.aspectRatio\n\n    const n = this.size2\n    const n1 = n - 1\n    const radialSegments = this.parameters.radialSegments\n\n    const attributes = this.geometry.attributes as any\n\n    let position, normal, binormal, tangent, color, size, primitiveId\n    let meshPosition, meshColor, meshNormal, meshPrimitiveId\n\n    if (data.position) {\n      position = data.position\n      normal = data.normal\n      binormal = data.binormal\n      tangent = data.tangent\n      size = data.size\n\n      meshPosition = attributes.position.array\n      meshNormal = attributes.normal.array\n\n      attributes.position.needsUpdate = true\n      attributes.normal.needsUpdate = true\n    }\n\n    if (data.color) {\n      color = data.color\n      meshColor = attributes.color.array\n      attributes.color.needsUpdate = true\n    }\n\n    if (data.primitiveId) {\n      primitiveId = data.primitiveId\n      meshPrimitiveId = attributes.primitiveId.array\n      attributes.primitiveId.needsUpdate = true\n    }\n\n    let k, l\n    let radius = 0\n\n    let normX = 0\n    let normY = 0\n    let normZ = 0\n    let biX = 0\n    let biY = 0\n    let biZ = 0\n    let posX = 0\n    let posY = 0\n    let posZ = 0\n\n    const cxArr = []\n    const cyArr = []\n    const cx1Arr = []\n    const cy1Arr = []\n    const cx2Arr = []\n    const cy2Arr = []\n\n    if (position) {\n      for (let j = 0; j < radialSegments; ++j) {\n        const v = (j / radialSegments) * 2 * Math.PI\n\n        cxArr[ j ] = aspectRatio * Math.cos(v)\n        cyArr[ j ] = Math.sin(v)\n\n        cx1Arr[ j ] = aspectRatio * Math.cos(v - 0.01)\n        cy1Arr[ j ] = Math.sin(v - 0.01)\n        cx2Arr[ j ] = aspectRatio * Math.cos(v + 0.01)\n        cy2Arr[ j ] = Math.sin(v + 0.01)\n      }\n    }\n\n    for (let i = 0; i < n; ++i) {\n      k = i * 3\n      l = k * radialSegments\n\n      if (position && tangent && normal && binormal && size) {\n        vTangent.set(\n          tangent[ k ], tangent[ k + 1 ], tangent[ k + 2 ]\n        )\n\n        normX = normal[ k ]\n        normY = normal[ k + 1 ]\n        normZ = normal[ k + 2 ]\n\n        biX = binormal[ k ]\n        biY = binormal[ k + 1 ]\n        biZ = binormal[ k + 2 ]\n\n        posX = position[ k ]\n        posY = position[ k + 1 ]\n        posZ = position[ k + 2 ]\n\n        radius = size[ i ]\n      }\n\n      for (let j = 0; j < radialSegments; ++j) {\n        const s = l + j * 3\n\n        if (position) {\n          const cx = -radius * cxArr[ j ] // TODO: Hack: Negating it so it faces outside.\n          const cy = radius * cyArr[ j ]\n\n          const cx1 = -radius * cx1Arr[ j ]\n          const cy1 = radius * cy1Arr[ j ]\n          const cx2 = -radius * cx2Arr[ j ]\n          const cy2 = radius * cy2Arr[ j ]\n\n          meshPosition[ s ] = posX + cx * normX + cy * biX\n          meshPosition[ s + 1 ] = posY + cx * normY + cy * biY\n          meshPosition[ s + 2 ] = posZ + cx * normZ + cy * biZ\n\n                    // TODO half of these are symmetric\n          vMeshNormal.set(\n            // ellipse tangent approximated as vector from/to adjacent points\n            (cx2 * normX + cy2 * biX) - (cx1 * normX + cy1 * biX),\n            (cx2 * normY + cy2 * biY) - (cx1 * normY + cy1 * biY),\n            (cx2 * normZ + cy2 * biZ) - (cx1 * normZ + cy1 * biZ)\n          ).cross(vTangent)\n\n          meshNormal[ s ] = vMeshNormal.x\n          meshNormal[ s + 1 ] = vMeshNormal.y\n          meshNormal[ s + 2 ] = vMeshNormal.z\n        }\n\n        if (color) {\n          meshColor[ s ] = color[ k ]\n          meshColor[ s + 1 ] = color[ k + 1 ]\n          meshColor[ s + 2 ] = color[ k + 2 ]\n        }\n\n        if (primitiveId) {\n          meshPrimitiveId[ i * radialSegments + j ] = primitiveId[ i ]\n        }\n      }\n    }\n\n        // front cap\n\n    k = 0\n    l = n * 3 * radialSegments\n\n    for (let j = 0; j < radialSegments; ++j) {\n      const s = k + j * 3\n      const t = l + j * 3\n\n      if (position && tangent) {\n        meshPosition[ t ] = meshPosition[ s ]\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\n\n        meshNormal[ t ] = tangent[ k ]\n        meshNormal[ t + 1 ] = tangent[ k + 1 ]\n        meshNormal[ t + 2 ] = tangent[ k + 2 ]\n      }\n\n      if (color) {\n        meshColor[ t ] = meshColor[ s ]\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\n      }\n\n      if (primitiveId) {\n        meshPrimitiveId[ n * radialSegments + j ] = meshPrimitiveId[ 0 + j ]\n      }\n    }\n\n        // back cap\n\n    k = (n - 1) * 3 * radialSegments\n    l = (n + 1) * 3 * radialSegments\n\n    for (let j = 0; j < radialSegments; ++j) {\n      const s = k + j * 3\n      const t = l + j * 3\n\n      if (position && tangent) {\n        meshPosition[ t ] = meshPosition[ s ]\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\n\n        meshNormal[ t ] = tangent[ n1 * 3 ]\n        meshNormal[ t + 1 ] = tangent[ n1 * 3 + 1 ]\n        meshNormal[ t + 2 ] = tangent[ n1 * 3 + 2 ]\n      }\n\n      if (color) {\n        meshColor[ t ] = meshColor[ s ]\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\n      }\n\n      if (primitiveId) {\n        meshPrimitiveId[ (n + 1) * radialSegments + j ] = meshPrimitiveId[ (n - 1) * radialSegments + j ]\n      }\n    }\n  }\n\n  makeIndex () {\n    const index = this.geometry.getIndex()\n    if (!index) { Log.error('Index is null'); return; }\n    const meshIndex = index.array as Uint32Array|Uint16Array\n\n    const n = this.size2\n    const n1 = n - 1\n    const capTriangles = this.capTriangles\n    const radialSegments = this.parameters.radialSegments\n    const radialSegments1 = this.parameters.radialSegments + 1\n\n    let k, l\n\n    for (let i = 0; i < n1; ++i) {\n      const k = i * radialSegments * 3 * 2\n\n      const irs = i * radialSegments\n      const irs1 = (i + 1) * radialSegments\n\n      for (let j = 0; j < radialSegments; ++j) {\n        l = k + j * 3 * 2\n\n        // meshIndex[ l + 0 ] = irs + ( ( j + 0 ) % radialSegments );\n        meshIndex[ l ] = irs + j\n        meshIndex[ l + 1 ] = irs + ((j + 1) % radialSegments)\n        // meshIndex[ l + 2 ] = irs1 + ( ( j + 0 ) % radialSegments );\n        meshIndex[ l + 2 ] = irs1 + j\n\n        // meshIndex[ l + 3 ] = irs1 + ( ( j + 0 ) % radialSegments );\n        meshIndex[ l + 3 ] = irs1 + j\n        meshIndex[ l + 4 ] = irs + ((j + 1) % radialSegments)\n        meshIndex[ l + 5 ] = irs1 + ((j + 1) % radialSegments)\n      }\n    }\n\n    // capping\n\n    const strip = [ 0 ]\n\n    for (let j = 1; j < radialSegments1 / 2; ++j) {\n      strip.push(j)\n      if (radialSegments - j !== j) {\n        strip.push(radialSegments - j)\n      }\n    }\n\n    // front cap\n\n    l = n1 * radialSegments * 3 * 2\n    k = n * radialSegments\n\n    for (let j = 0; j < strip.length - 2; ++j) {\n      if (j % 2 === 0) {\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\n      } else {\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\n      }\n    }\n\n    // back cap\n\n    l = n1 * radialSegments * 3 * 2 + 3 * capTriangles\n    k = n * radialSegments + radialSegments\n\n    for (let j = 0; j < strip.length - 2; ++j) {\n      if (j % 2 === 0) {\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\n      } else {\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\n      }\n    }\n  }\n}\n\nexport default TubeMeshBuffer\n","/**\n * @file Cartoon Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { Debug, Log, RepresentationRegistry } from '../globals'\nimport Spline from '../geometry/spline'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport TubeMeshBuffer from '../buffer/tubemesh-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport Polymer from '../proxy/polymer';\nimport AtomProxy from '../proxy/atom-proxy';\nimport StructureView from '../structure/structure-view';\nimport Buffer from '../buffer/buffer';\n\nexport interface CartoonRepresentationParameters extends StructureRepresentationParameters {\n  aspectRatio: number\n  subdiv: number\n  radialSegments: number\n  tension: number\n  capped: boolean\n  smoothSheet: boolean\n}\n\n/**\n * Cartoon representation. Show a thick ribbon that\n * smoothly connecting backbone atoms in polymers.\n *\n * __Name:__ _cartoon_\n *\n * @example\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n *     o.addRepresentation( \"cartoon\" );\n *     o.autoView();\n * } );\n */\nclass CartoonRepresentation extends StructureRepresentation {\n  protected aspectRatio: number\n  protected tension: number\n  protected capped: boolean\n  protected smoothSheet: boolean\n  protected subdiv: number\n  \n  /**\n   * Create Cartoon representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {StructureRepresentationParameters} params - representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'cartoon'\n\n    this.parameters = Object.assign({\n\n      aspectRatio: {\n        type: 'number', precision: 1, max: 10.0, min: 1.0, rebuild: true\n      },\n      subdiv: {\n        type: 'integer', max: 50, min: 1, rebuild: true\n      },\n      radialSegments: {\n        type: 'integer', max: 50, min: 1, rebuild: true\n      },\n      tension: {\n        type: 'number', precision: 1, max: 1.0, min: 0.1\n      },\n      capped: {\n        type: 'boolean', rebuild: true\n      },\n      smoothSheet: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<CartoonRepresentationParameters>) {\n    var p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\n    p.radiusType = defaults(p.radiusType, 'sstruc')\n    p.radiusScale = defaults(p.radiusScale, 0.7)\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.aspectRatio = defaults(p.aspectRatio, 5.0)\n    this.tension = defaults(p.tension, NaN)\n    this.capped = defaults(p.capped, true)\n    this.smoothSheet = defaults(p.smoothSheet, false)\n\n    if (p.quality === 'low') {\n      this.subdiv = 3\n      this.radialSegments = 6\n    } else if (p.quality === 'medium') {\n      this.subdiv = 6\n    } else if (p.quality === 'high') {\n      this.subdiv = 12\n    } else {\n      this.subdiv = defaults(p.subdiv, 6)\n    }\n\n    super.init(p)\n  }\n\n  getSplineParams (params?: Partial<CartoonRepresentationParameters>) {\n    return Object.assign({\n      subdiv: this.subdiv,\n      tension: this.tension,\n      directional: this.aspectRatio !== 1.0,\n      smoothSheet: this.smoothSheet\n    }, params)\n  }\n\n  getSpline (polymer: Polymer): Spline {\n    return new Spline(polymer, this.getSplineParams())\n  }\n\n  getAspectRatio (polymer: Polymer): number {\n    return polymer.isCg() ? 1.0 : this.aspectRatio\n  }\n\n  getAtomRadius (atom: AtomProxy): number {\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\n  }\n\n  createData (sview: StructureView) {\n    let bufferList: Buffer[] = []\n    let polymerList: Polymer[] = []\n\n    this.structure.eachPolymer(polymer => {\n      if (polymer.residueCount < 4) return\n      polymerList.push(polymer)\n\n      const spline = this.getSpline(polymer)\n      const aspectRatio = this.getAspectRatio(polymer)\n\n      const subPos = spline.getSubdividedPosition()\n      const subOri = spline.getSubdividedOrientation()\n      const subCol = spline.getSubdividedColor(this.getColorParams())\n      const subPick = spline.getSubdividedPicking()\n      const subSize = spline.getSubdividedSize(this.getRadiusParams())\n\n      bufferList.push(\n        new TubeMeshBuffer(\n          Object.assign({}, subPos, subOri, subCol, subPick, subSize),\n          this.getBufferParams({\n            radialSegments: this.radialSegments,\n            aspectRatio: aspectRatio,\n            capped: this.capped\n          })\n        )\n      )\n    }, sview.getSelection())\n\n    return {\n      bufferList: bufferList,\n      polymerList: polymerList\n    }\n  }\n\n  updateData (what: any, data: StructureRepresentationData) {\n    if (Debug) Log.time(this.type + ' repr update')\n\n    what = what || {}\n\n    for (var i = 0, il = data.polymerList!.length; i < il; ++i) {\n      var bufferData: {[key: string]: any} = {}\n      var polymer = data.polymerList![ i ]\n      var spline = this.getSpline(polymer)\n      var aspectRatio = this.getAspectRatio(polymer)\n\n      Object.assign(data.bufferList[ i ], {aspectRatio: aspectRatio})\n\n      if (what.position || what.radius) {\n        var subPos = spline.getSubdividedPosition()\n        var subOri = spline.getSubdividedOrientation()\n        var subSize = spline.getSubdividedSize(this.getRadiusParams(aspectRatio))\n\n        bufferData.position = subPos.position\n        bufferData.normal = subOri.normal\n        bufferData.binormal = subOri.binormal\n        bufferData.tangent = subOri.tangent\n        bufferData.size = subSize.size\n      }\n\n      if (what.color) {\n        var subCol = spline.getSubdividedColor(this.getColorParams())\n        bufferData.color = subCol.color\n      }\n\n      if (what.picking) {\n        var subPick = spline.getSubdividedPicking()\n        bufferData.picking = subPick.picking\n      }\n\n      data.bufferList[ i ].setAttributes(bufferData)\n    }\n\n    if (Debug) Log.timeEnd(this.type + ' repr update')\n  }\n\n  setParameters (params: Partial<CartoonRepresentationParameters>) {\n    const rebuild = false\n    var what: {[k: string]: any} = {}\n\n    if (params && params.aspectRatio) {\n      what.radius = true\n    }\n\n    if (params && params.tension) {\n      what.position = true\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('cartoon', CartoonRepresentation)\n\nexport default CartoonRepresentation\n","/**\n * @file Contact Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { RepresentationRegistry } from '../globals'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\nimport { calculateContacts, getContactData, getLabelData } from '../chemistry/interactions/contact'\nimport CylinderBuffer from '../buffer/cylinder-buffer'\nimport TextBuffer from '../buffer/text-buffer'\nimport { getFixedCountDashData } from '../geometry/dash'\nimport Viewer from '../viewer/viewer';\nimport { Structure } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\n// @ts-ignore: unused import ContactPicker required for declaration only\nimport { ContactPicker } from '../utils/picker';\n\nexport interface ContactRepresentationParameters extends StructureRepresentationParameters {\n  hydrogenBond: boolean\n  weakHydrogenBond: boolean\n  waterHydrogenBond: boolean\n  backboneHydrogenBond: boolean\n  hydrophobic: boolean\n  halogenBond: boolean\n  ionicInteraction: boolean\n  metalCoordination: boolean\n  cationPi: boolean\n  piStacking: boolean\n  filterSele: string|[string, string]\n  maxHydrophobicDist: number\n  maxHbondDist: number\n  maxHbondSulfurDist: number\n  maxHbondAccAngle: number\n  maxHbondDonAngle: number\n  maxHbondAccPlaneAngle: number\n  maxHbondDonPlaneAngle: number\n  maxPiStackingDist: number\n  maxPiStackingOffset: number\n  maxPiStackingAngle: number\n  maxCationPiDist: number\n  maxCationPiOffset: number\n  maxIonicDist: number\n  maxHalogenBondDist: number\n  maxHalogenBondAngle: number\n  maxMetalDist: number\n  refineSaltBridges: boolean\n  masterModelIndex: number\n  lineOfSightDistFactor: number\n}\n\n/**\n * Contact representation.\n */\nclass ContactRepresentation extends StructureRepresentation {\n  protected hydrogenBond: boolean\n  protected weakHydrogenBond: boolean\n  protected waterHydrogenBond: boolean\n  protected backboneHydrogenBond: boolean\n  protected hydrophobic: boolean\n  protected halogenBond: boolean\n  protected ionicInteraction: boolean\n  protected metalCoordination: boolean\n  protected cationPi: boolean\n  protected piStacking: boolean\n  protected filterSele: string|[string, string]\n  protected maxHydrophobicDist: number\n  protected maxHbondDist: number\n  protected maxHbondSulfurDist: number\n  protected maxHbondAccAngle: number\n  protected maxHbondDonAngle: number\n  protected maxHbondAccPlaneAngle: number\n  protected maxHbondDonPlaneAngle: number\n  protected maxPiStackingDist: number\n  protected maxPiStackingOffset: number\n  protected maxPiStackingAngle: number\n  protected maxCationPiDist: number\n  protected maxCationPiOffset: number\n  protected maxIonicDist: number\n  protected maxHalogenBondDist: number\n  protected maxHalogenBondAngle: number\n  protected maxMetalDist: number\n  protected refineSaltBridges: boolean\n  protected masterModelIndex: number\n  protected lineOfSightDistFactor: number\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<ContactRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'contact'\n\n    this.parameters = Object.assign({\n      hydrogenBond: {\n        type: 'boolean', rebuild: true\n      },\n      weakHydrogenBond: {\n        type: 'boolean', rebuild: true\n      },\n      waterHydrogenBond: {\n        type: 'boolean', rebuild: true\n      },\n      backboneHydrogenBond: {\n        type: 'boolean', rebuild: true\n      },\n      hydrophobic: {\n        type: 'boolean', rebuild: true\n      },\n      halogenBond: {\n        type: 'boolean', rebuild: true\n      },\n      ionicInteraction: {\n        type: 'boolean', rebuild: true\n      },\n      metalCoordination: {\n        type: 'boolean', rebuild: true\n      },\n      cationPi: {\n        type: 'boolean', rebuild: true\n      },\n      piStacking: {\n        type: 'boolean', rebuild: true\n      },\n\n      filterSele: {\n        type: 'text', rebuild: true\n      },\n\n      labelVisible: {\n        type: 'boolean', rebuild: true\n      },\n\n      labelFixedSize: {\n        type: 'boolean', buffer: 'fixedSize'\n      },\n\n      labelSize: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001, rebuild: true\n      },\n\n      labelUnit: {\n        type: 'select',\n        rebuild: true,\n        options: { '': '', angstrom: 'angstrom', nm: 'nm' }\n      },\n\n      maxHydrophobicDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxHbondDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxHbondSulfurDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxHbondAccAngle: {\n        type: 'integer', max: 180, min: 0, rebuild: true\n      },\n      maxHbondDonAngle: {\n        type: 'integer', max: 180, min: 0, rebuild: true\n      },\n      maxHbondAccPlaneAngle: {\n        type: 'integer', max: 90, min: 0, rebuild: true\n      },\n      maxHbondDonPlaneAngle: {\n        type: 'integer', max: 90, min: 0, rebuild: true\n      },\n      maxPiStackingDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxPiStackingOffset: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxPiStackingAngle: {\n        type: 'integer', max: 180, min: 0, rebuild: true\n      },\n      maxCationPiDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxCationPiOffset: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxIonicDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxHalogenBondDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      maxHalogenBondAngle: {\n        type: 'integer', max: 180, min: 0, rebuild: true\n      },\n      maxMetalDist: {\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\n      },\n      refineSaltBridges: {\n        type: 'boolean', rebuild: true\n      },\n      masterModelIndex: {\n        type: 'integer', max: 1000, min: -1, rebuild: true\n      },\n      lineOfSightDistFactor: {\n        type: 'number', precision: 1, max: 10, min: 0.0, rebuild: true\n      },\n\n      radialSegments: true,\n      disableImpostor: true\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<ContactRepresentationParameters>) {\n    var p = params || {}\n    p.radiusSize = defaults(p.radiusSize, 0.05)\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.hydrogenBond = defaults(p.hydrogenBond, true)\n    this.weakHydrogenBond = defaults(p.weakHydrogenBond, false)\n    this.waterHydrogenBond = defaults(p.waterHydrogenBond, false)\n    this.backboneHydrogenBond = defaults(p.backboneHydrogenBond, false)\n    this.hydrophobic = defaults(p.hydrophobic, false)\n    this.halogenBond = defaults(p.halogenBond, true)\n    this.ionicInteraction = defaults(p.ionicInteraction, true)\n    this.metalCoordination = defaults(p.metalCoordination, true)\n    this.cationPi = defaults(p.cationPi, true)\n    this.piStacking = defaults(p.piStacking, true)\n\n    this.filterSele = defaults(p.filterSele, '')\n    this.labelVisible = defaults(p.labelVisible, false)\n    this.labelFixedSize = defaults(p.labelFixedSize, false)\n    this.labelSize = defaults(p.labelSize, 2.0)\n    this.labelUnit = defaults(p.labelUnit, '')\n\n    this.maxHydrophobicDist = defaults(p.maxHydrophobicDist, 4.0)\n    this.maxHbondDist = defaults(p.maxHbondDist, 3.5)\n    this.maxHbondSulfurDist = defaults(p.maxHbondSulfurDist, 4.1)\n    this.maxHbondAccAngle = defaults(p.maxHbondAccAngle, 45)\n    this.maxHbondDonAngle = defaults(p.maxHbondDonAngle, 45)\n    this.maxHbondAccPlaneAngle = defaults(p.maxHbondAccPlaneAngle, 90)\n    this.maxHbondDonPlaneAngle = defaults(p.maxHbondDonPlaneAngle, 30)\n    this.maxPiStackingDist = defaults(p.maxPiStackingDist, 5.5)\n    this.maxPiStackingOffset = defaults(p.maxPiStackingOffset, 2.0)\n    this.maxPiStackingAngle = defaults(p.maxPiStackingAngle, 30)\n    this.maxCationPiDist = defaults(p.maxCationPiDist, 6.0)\n    this.maxCationPiOffset = defaults(p.maxCationPiOffset, 2.0)\n    this.maxIonicDist = defaults(p.maxIonicDist, 5.0)\n    this.maxHalogenBondDist = defaults(p.maxHalogenBondDist, 3.5)\n    this.maxHalogenBondAngle = defaults(p.maxHalogenBondAngle, 30)\n    this.maxMetalDist = defaults(p.maxMetalDist, 3.0)\n    this.refineSaltBridges = defaults(p.refineSaltBridges, true)\n    this.masterModelIndex = defaults(p.masterModelIndex, -1)\n    this.lineOfSightDistFactor = defaults(p.lineOfSightDistFactor, 1.0)\n\n    super.init(p)\n  }\n\n  getAtomRadius () {\n    return 0\n  }\n\n  getContactData (sview: StructureView) {\n    const params = {\n      maxHydrophobicDist: this.maxHydrophobicDist,\n      maxHbondDist: this.maxHbondDist,\n      maxHbondSulfurDist: this.maxHbondSulfurDist,\n      maxHbondAccAngle: this.maxHbondAccAngle,\n      maxHbondDonAngle: this.maxHbondDonAngle,\n      maxHbondAccPlaneAngle: this.maxHbondAccPlaneAngle,\n      maxHbondDonPlaneAngle: this.maxHbondDonPlaneAngle,\n      maxPiStackingDist: this.maxPiStackingDist,\n      maxPiStackingOffset: this.maxPiStackingOffset,\n      maxPiStackingAngle: this.maxPiStackingAngle,\n      maxCationPiDist: this.maxCationPiDist,\n      maxCationPiOffset: this.maxCationPiOffset,\n      maxIonicDist: this.maxIonicDist,\n      maxHalogenBondDist: this.maxHalogenBondDist,\n      maxHalogenBondAngle: this.maxHalogenBondAngle,\n      maxMetalDist: this.maxMetalDist,\n      refineSaltBridges: this.refineSaltBridges,\n      masterModelIndex: this.masterModelIndex,\n      lineOfSightDistFactor: this.lineOfSightDistFactor\n    }\n\n    const dataParams = {\n      hydrogenBond: this.hydrogenBond,\n      weakHydrogenBond: this.weakHydrogenBond,\n      waterHydrogenBond: this.waterHydrogenBond,\n      backboneHydrogenBond: this.backboneHydrogenBond,\n      hydrophobic: this.hydrophobic,\n      halogenBond: this.halogenBond,\n      ionicInteraction: this.ionicInteraction,\n      metalCoordination: this.metalCoordination,\n      cationPi: this.cationPi,\n      piStacking: this.piStacking,\n      radius: this.radiusSize * this.radiusScale,\n      filterSele: this.filterSele\n    }\n\n    const contacts = calculateContacts(sview, params)\n    return getContactData(contacts, sview, dataParams)\n  }\n\n  createData (sview: StructureView) {\n    const contactData = this.getContactData(sview)\n\n    const bufferList = [\n      new CylinderBuffer(\n        getFixedCountDashData(contactData),\n        this.getBufferParams({\n          sphereDetail: 1,\n          dullInterior: true,\n          disableImpostor: this.disableImpostor\n        })\n      ) as (CylinderGeometryBuffer | CylinderImpostorBuffer | TextBuffer)\n    ]\n\n    if (this.labelVisible) {\n      const labelParams = {\n        size: this.labelSize,\n        unit: this.labelUnit\n      }\n      bufferList.push(new TextBuffer(\n        getLabelData(contactData, labelParams),\n        this.getBufferParams({fixedSize: this.labelFixedSize})\n      ))\n    }\n\n    return { bufferList }\n  }\n}\n\nRepresentationRegistry.add('contact', ContactRepresentation)\n\nexport default ContactRepresentation\n","/**\n * @file Dihedral Representation\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\nimport { Color } from 'three'\n\nimport { RepresentationRegistry } from '../globals'\nimport MeasurementRepresentation, { calcArcPoint, parseNestedAtoms, MeasurementRepresentationParameters, LabelDataField } from './measurement-representation'\nimport { defaults } from '../utils'\n\nimport MeshBuffer from '../buffer/mesh-buffer'\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer'\nimport WideLineBuffer from '../buffer/wideline-buffer'\n\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils'\nimport { v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray, v3length,\n  v3negate, v3new, v3normalize, v3sub, v3toArray } from '../math/vector-utils'\nimport { RAD2DEG } from '../math/math-constants'\nimport { getFixedLengthWrappedDashData } from '../geometry/dash'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport { CylinderBufferData } from '../buffer/cylinder-buffer';\nimport { BufferData } from '../buffer/buffer';\nimport { StructureRepresentationData } from './structure-representation';\n\n/**\n * @typedef {Object} DihedralRepresentationParameters - dihedral representation parameters\n * @mixes RepresentationParameters\n * @mixes StructureRepresentationParameters\n * @mixes MeasurementRepresentationParameters\n *\n * @property {String} atomQuad - list of quadruplets of selection strings\n *                               or atom indices\n * @property {Boolean} extendLine - Extend lines in planes\n * @property {Number} lineOpacity - Opacity for the line part of the representation\n * @property {Boolean} lineVisible - Display the line part of the representation\n * @property {Number} linewidth - width for line part of representation\n * @property {Boolean} planeVisible - Display the two planes corresponding to dihedral\n * @property {Boolean} sectorVisible - Display the filled arc for each angle\n */\n\nexport interface DihedralRepresentationParameters extends MeasurementRepresentationParameters {\n  atomQuad: (number|string)[][]\n  extendLine: boolean\n  lineOpacity: number\n  lineVisible: boolean\n  linewidth: number\n  planeVisible: boolean\n  sectorVisible: boolean\n}\n\n/**\n * Dihedral representation object\n *\n * Reperesentation consists of three parts, visibility can be set for each\n * label - text label indicating dihedral angle\n * line - line indicating four positions that define the dihedral\n * sector - filled arc section\n *\n * @param {Structure} structure - the structure to measure angles in\n * @param {Viewer} viewer - a viewer object\n * @param {AngleRepresentationParameters} params - angle representation parameters\n */\nclass DihedralRepresentation extends MeasurementRepresentation {\n  protected atomQuad: (number|string)[][]\n  protected extendLine: boolean\n  protected lineOpacity: number\n  protected lineVisible: boolean\n  protected linewidth: number\n  protected planeVisible: boolean\n  protected sectorVisible: boolean\n\n  protected lineLength: number\n  protected planeLength: number\n  protected sectorLength: number\n\n  protected lineBuffer: WideLineBuffer\n  protected planeBuffer: MeshBuffer\n  protected sectorBuffer: MeshBuffer\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<DihedralRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'dihedral'\n\n    this.parameters = Object.assign({\n      atomQuad: {\n        type: 'hidden', rebuild: true\n      },\n      extendLine: {\n        type: 'boolean', rebuild: true, default: true\n      },\n      lineVisible: {\n        type: 'boolean', default: true\n      },\n      planeVisible: {\n        type: 'boolean', default: true\n      },\n      sectorVisible: {\n        type: 'boolean', default: true\n      }\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<DihedralRepresentationParameters>) {\n    const p = params || {}\n    p.side = defaults(p.side, 'double')\n    p.opacity = defaults(p.opacity, 0.5)\n\n    this.atomQuad = defaults(p.atomQuad, [])\n    this.extendLine = defaults(p.extendLine, true)\n    this.lineVisible = defaults(p.lineVisible, true)\n    this.planeVisible = defaults(p.planeVisible, true)\n    this.sectorVisible = defaults(p.sectorVisible, true)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    if (!sview.atomCount || !this.atomQuad.length) return\n\n    const atomPosition = parseNestedAtoms(sview, this.atomQuad)\n    const dihedralData = getDihedralData(\n      atomPosition, {\n        extendLine: this.extendLine\n      }\n    )\n\n    const n = this.n = dihedralData.labelText.length\n    const labelColor = new Color(this.labelColor)\n\n    this.textBuffer = new TextBuffer({\n      position: dihedralData.labelPosition,\n      size: uniformArray(n, this.labelSize),\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\n      text: dihedralData.labelText\n    } as TextBufferData, this.getLabelBufferParams())\n\n    const c = new Color(this.colorValue)\n    this.lineLength = dihedralData.linePosition1.length / 3\n    const lineColor = uniformArray3(this.lineLength, c.r, c.g, c.b)\n\n    this.lineBuffer = new WideLineBuffer(\n      getFixedLengthWrappedDashData({\n        position1: dihedralData.linePosition1,\n        position2: dihedralData.linePosition2,\n        color: lineColor,\n        color2: lineColor\n      } as CylinderBufferData) ,\n      this.getBufferParams({\n        linewidth: this.linewidth,\n        visible: this.lineVisible,\n        opacity: this.lineOpacity\n      })\n    )\n\n    this.planeLength = dihedralData.planePosition.length / 3\n    this.planeBuffer = new MeshBuffer({\n      position: dihedralData.planePosition,\n      color: uniformArray3(this.planeLength, c.r, c.g, c.b)\n    } as BufferData, this.getBufferParams({\n      visible: this.planeVisible\n    }))\n\n    this.sectorLength = dihedralData.sectorPosition.length / 3\n    this.sectorBuffer = new MeshBuffer({\n      position: dihedralData.sectorPosition,\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\n    } as BufferData, this.getBufferParams({\n      visible: this.sectorVisible\n    }))\n\n    return {\n      bufferList: [\n        this.textBuffer,\n        this.lineBuffer,\n        this.planeBuffer,\n        this.sectorBuffer\n      ]\n    }\n  }\n\n  updateData (what: LabelDataField & {color?: boolean}, data: StructureRepresentationData) {\n    super.updateData(what, data)\n    const lineData = {}\n    const planeData = {}\n    const sectorData = {}\n\n    if (what.color) {\n      const c = new Color(this.colorValue)\n      Object.assign(lineData, {\n        color: uniformArray3(this.lineLength, c.r, c.g, c.b),\n        color2: uniformArray3(this.lineLength, c.r, c.g, c.b)\n      })\n      Object.assign(planeData, {\n        color: uniformArray3(this.planeLength, c.r, c.g, c.b)\n      })\n      Object.assign(sectorData, {\n        color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\n      })\n    }\n\n    this.lineBuffer.setAttributes(lineData)\n    this.planeBuffer.setAttributes(planeData)\n    this.sectorBuffer.setAttributes(sectorData)\n  }\n\n  setParameters (params: Partial<DihedralRepresentationParameters>) {\n    var rebuild = false\n    var what = {}\n\n    super.setParameters(params, what, rebuild)\n\n    if (params && (\n      params.lineVisible !== undefined ||\n      params.sectorVisible !== undefined ||\n      params.planeVisible !== undefined)) {\n      this.setVisibility(this.visible)\n    }\n\n    if (params && params.lineOpacity) {\n      this.lineBuffer.setParameters({ opacity: params.lineOpacity })\n    }\n\n    if (params && params.opacity !== undefined) {\n      this.lineBuffer.setParameters({ opacity: this.lineOpacity })\n    }\n\n    if (params && params.linewidth) {\n      this.lineBuffer.setParameters({ linewidth: params.linewidth })\n    }\n\n    return this\n  }\n\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\n    super.setVisibility(value, true)\n\n    if (this.lineBuffer) {\n      this.lineBuffer.setVisibility(this.lineVisible && this.visible)\n    }\n\n    if (this.planeBuffer) {\n      this.planeBuffer.setVisibility(this.planeVisible && this.visible)\n    }\n\n    if (this.sectorBuffer) {\n      this.sectorBuffer.setVisibility(this.sectorVisible && this.visible)\n    }\n\n    if (!noRenderRequest) this.viewer.requestRender()\n\n    return this\n  }\n}\n\n/**\n * Build the data required to create {Buffer} objects, given positions\n * @param  {Float32Array} atomPosition 3*4*nDihedral array of coordinates\n * @return {Object}              Arrays for building buffers\n */\nfunction getDihedralData (position: Float32Array, params: Partial<DihedralRepresentationParameters> = {}) {\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\n  const nPos = position.length\n  const n = position.length / 12\n  const angles = new Float32Array(n)\n  const labelPosition = new Float32Array(n * 3)\n  const labelText = new Array(n)\n\n  // Temporary arrays as don't know output length yet\n  const lineTmp1 = new Array(n)\n  const lineTmp2 = new Array(n)\n  const sectorTmp = new Array(n)\n  const planeTmp = new Array(n)\n\n  // Eventual sizes of output arrays\n  let totalLines = 0\n  let totalSegments = 0\n  let totalPlanes = 0\n\n  const p1 = v3new()\n  const p2 = v3new()\n  const p3 = v3new()\n  const p4 = v3new()\n\n  const v21 = v3new()\n  const v23 = v3new()\n  const v34 = v3new()\n\n  const tmp = v3new()\n  const mid = v3new()\n  const inPlane1 = v3new()\n  const inPlane2 = v3new()\n  const start = v3new()\n  const end = v3new()\n\n  const cross = v3new()\n  const arcPoint = v3new()\n\n  let i = 0 // Actual output index (after skipping inappropriate)\n\n  for (var p = 0; p < nPos; p += 12) {\n    // Set Positions\n    v3fromArray(p1, position, p)\n    v3fromArray(p2, position, p + 3)\n    v3fromArray(p3, position, p + 6)\n    v3fromArray(p4, position, p + 9)\n\n    // Vectors between points\n    v3sub(v21, p1, p2)\n    v3sub(v23, p3, p2)\n    if (v3length(v23) === 0.0) {\n      continue // Can't define axis\n    }\n\n    v3sub(v34, p4, p3)\n\n    v3multiplyScalar(tmp, v23, 0.5)\n    v3add(mid, p2, tmp)\n\n    v3normalize(v21, v21)\n    v3normalize(v23, v23)\n    v3normalize(v34, v34)\n\n    // Which side of plane are p1, p4 (are we measuring something that\n    // looks more like an improper? e.g. C, CA, CB, N)\n    v3sub(tmp, p1, mid)\n    const improperStart = v3dot(tmp, v23) > 0.0\n    v3sub(tmp, p4, mid)\n    const improperEnd = v3dot(tmp, v23) < 0.0\n\n    // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\n    v3multiplyScalar(tmp, v23, v3dot(v23, v21))\n    v3sub(inPlane1, v21, tmp)\n\n    v3multiplyScalar(tmp, v23, v3dot(v23, v34))\n    v3sub(inPlane2, v34, tmp)\n\n    if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\n      continue // Indeterminate angle\n    }\n\n    v3normalize(inPlane1, inPlane1)\n    v3normalize(inPlane2, inPlane2)\n\n    // Can use acos as normalized and non-zero\n    const angle = angles[ i ] = Math.acos(v3dot(inPlane1, inPlane2))\n    labelText[ i ] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\n\n    v3cross(cross, inPlane1, v23)\n    v3normalize(cross, cross)\n    if (v3dot(cross, inPlane2) < 0.0) {\n      v3negate(cross, cross) // Ensure cp faces correct way\n    }\n\n    calcArcPoint(tmp, mid, inPlane1, cross, angle / 2.0)\n    v3toArray(tmp, labelPosition, 3 * i)\n\n    const nSegments = Math.ceil(angle / angleStep)\n    // For extended display mode, 4 straight lines plus arc/segment edge\n    // For non-extended, 2 straight lines plus segment edge\n    const nLines = nSegments + ((params.extendLine) ? 4 : 2)\n\n    // Don't draw planes if not extending lines\n    const nPlanes = params.extendLine ? 36 : 0\n\n    const line1 = new Float32Array(nLines * 3)\n    const line2 = new Float32Array(nLines * 3)\n    const sector = new Float32Array(nSegments * 9)\n    // 2 planes, 2 triangles each per dihedral (2*2*9)\n    const plane = new Float32Array(nPlanes)\n\n    lineTmp1[ i ] = line1\n    lineTmp2[ i ] = line2\n    sectorTmp[ i ] = sector\n    planeTmp[ i ] = plane\n\n    // Start points for lines/planes, only required\n    // if extending lines\n    if (params.extendLine) {\n      if (improperStart) { // We'll start on the v3->1 line (tmp)\n        v3sub(tmp, p1, p3)\n        v3normalize(tmp, tmp)\n        v3multiplyScalar(start, tmp, 1.0 / v3dot(inPlane1, tmp))\n        v3add(start, start, p3)\n      } else { // start on the 2->1 line\n        v3multiplyScalar(start, v21, 1.0 / v3dot(inPlane1, v21))\n        v3add(start, start, p2)\n      }\n\n      if (improperEnd) { // Finish on 2->4 line\n        v3sub(tmp, p4, p2)\n        v3normalize(tmp, tmp)\n        v3multiplyScalar(end, tmp, 1.0 / v3dot(inPlane2, tmp))\n        v3add(end, end, p2)\n      } else { // end on the 3->4 line\n        v3multiplyScalar(end, v34, 1.0 / v3dot(inPlane2, v34))\n        v3add(end, end, p3)\n      }\n    }\n\n    v3add(arcPoint, mid, inPlane1)\n\n    // index into line1, line2\n    let li = 0\n    // If extending lines, there's a bit of stuff to do here\n    // figuring out start and end positions\n    if (params.extendLine) {\n      v3toArray(p1, line1, li)\n      v3toArray(start, line2, li)\n      li += 3\n      v3toArray(start, line1, li)\n      v3toArray(arcPoint, line2, li)\n      li += 3\n\n      // Construct plane at start, if not extening lines\n      // this is skipped\n      v3toArray(start, plane, 0)\n      v3toArray(arcPoint, plane, 3)\n      v3toArray(improperStart ? p3 : p2, plane, 6)\n      v3toArray(improperStart ? p3 : p2, plane, 9)\n      v3toArray(arcPoint, plane, 12)\n      v3toArray(mid, plane, 15)\n    } else {\n      // Not extending lines\n      v3toArray(mid, line1, li)\n      v3toArray(arcPoint, line2, li)\n      li += 3\n    }\n\n    const appendArcSection = function (a: number, j: number) {\n      const si = j * 9\n\n      v3toArray(mid, sector, si)\n      v3toArray(arcPoint, sector, si + 3)\n      v3toArray(arcPoint, line1, li)\n\n      calcArcPoint(arcPoint, mid, inPlane1, cross, a)\n\n      v3toArray(arcPoint, sector, si + 6)\n      v3toArray(arcPoint, line2, li)\n      li += 3\n    }\n\n    let j = 0\n    for (let a = angleStep; a < angle; a += angleStep) {\n      appendArcSection(a, j++)\n    }\n    appendArcSection(angle, j++)\n\n    if (params.extendLine) {\n      v3toArray(arcPoint, line1, (nLines - 2) * 3)\n      v3toArray(end, line2, (nLines - 2) * 3)\n      v3toArray(end, line1, (nLines - 1) * 3)\n      v3toArray(p4, line2, (nLines - 1) * 3)\n\n      // Construct plane at end\n      v3toArray(end, plane, 18)\n      v3toArray(arcPoint, plane, 21)\n      v3toArray(improperEnd ? p2 : p3, plane, 24)\n      v3toArray(improperEnd ? p2 : p3, plane, 27)\n      v3toArray(arcPoint, plane, 30)\n      v3toArray(mid, plane, 33)\n    } else {\n      v3toArray(arcPoint, line1, li)\n      v3toArray(mid, line2, li)\n      li += 3\n    }\n\n    totalLines += nLines * 3\n    totalSegments += nSegments * 9\n    totalPlanes += nPlanes\n    i += 1\n  }\n\n  const nSuccess = i\n\n  const linePosition1 = new Float32Array(totalLines)\n  const linePosition2 = new Float32Array(totalLines)\n  const sectorPosition = new Float32Array(totalSegments)\n  const planePosition = new Float32Array(totalPlanes)\n\n  let lineOffset = 0\n  let sectorOffset = 0\n  let planeOffset = 0\n\n  for (let i = 0; i < nSuccess; i++) {\n    const lp1 = lineTmp1[ i ]\n    const lp2 = lineTmp2[ i ]\n    const sp = sectorTmp[ i ]\n    const pp = planeTmp[ i ]\n\n    copyArray(lp1, linePosition1, 0, lineOffset, lp1.length)\n    copyArray(lp2, linePosition2, 0, lineOffset, lp2.length)\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\n    copyArray(pp, planePosition, 0, planeOffset, pp.length)\n\n    lineOffset += lp1.length\n    sectorOffset += sp.length\n    planeOffset += pp.length\n  }\n\n  return {\n    labelPosition: labelPosition.subarray(0, nSuccess * 3),\n    labelText: labelText.slice(0, nSuccess),\n    linePosition1,\n    linePosition2,\n    planePosition,\n    sectorPosition\n  }\n}\n\nRepresentationRegistry.add('dihedral', DihedralRepresentation)\n\nexport default DihedralRepresentation\n","/**\n * @file Dihedral Histogram Representation\n * @author Rudolfs Petrovs <rudolfs.petrovs@astx.com>\n * @private\n */\nimport { Color } from 'three'\n\nimport { calcArcPoint, parseNestedAtoms } from './measurement-representation'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\n\nimport { RepresentationRegistry } from '../globals'\nimport { Structure } from '../ngl'\nimport { defaults } from '../utils'\n\nimport { BufferData } from '../buffer/buffer'\nimport MeshBuffer from '../buffer/mesh-buffer'\nimport WideLineBuffer, { WideLineBufferData } from '../buffer/wideline-buffer'\n\nimport { copyArray, uniformArray3, arraySum } from '../math/array-utils'\nimport {\n  v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray,\n  v3negate, v3new, v3normalize, v3sub, v3toArray, v3length\n} from '../math/vector-utils'\n\nimport StructureView from '../structure/structure-view'\n\nimport Viewer from '../viewer/viewer'\n\n\nconst pointLength = 3 // One Point Length (number of coordinates of one point in 3D)\nconst pointsInTriangle = 3\n\ntype ColorDefinition = Color | string | number | undefined\n\ninterface HistogramColorParameters {\n  histogramBinBorderColor: ColorDefinition\n  adjacentBondArrowColor: ColorDefinition\n  distantBondArrowColor: ColorDefinition\n  frontHistogramColor: ColorDefinition\n  backHistogramColor: ColorDefinition\n  opaqueMiddleDiscColor: ColorDefinition\n}\n\ninterface HistogramInputData extends Partial<HistogramColorParameters> {\n  atomQuad: (number | string)[]\n  histogram360: number[]\n}\n\ninterface HistogramData extends HistogramInputData {\n  atomPositions: Float32Array\n  histogram360Scaled: number[]\n}\n\ninterface WideLineData {\n  startPoints: Float32Array\n  endPoints: Float32Array\n  startColors: Float32Array\n  endColors: Float32Array\n}\n\ninterface MeshData {\n  triangles: Float32Array\n  triangleColors: Float32Array\n}\n\nfunction createUpdatedObject(o: Object, updateSource: Object) {\n  function hasKey<O>(obj: O, key: keyof any): key is keyof O {\n    return key in obj\n  }\n\n  const result = { ...o } // Shallow copy\n  for (const key in result) {\n    if (hasKey(result, key) && hasKey(updateSource, key)) {\n      result[key] = defaults(updateSource[key], result[key])\n    }\n  }\n  return result\n}\n\nfunction createColorArray(color: ColorDefinition, arrayLength: number) {\n  const colorValue = new Color(color)\n  const targetArray = new Float32Array(arrayLength * 3)\n  uniformArray3(arrayLength, colorValue.r, colorValue.g, colorValue.b, targetArray)\n  return targetArray\n}\n\n/**\n * @typedef {Object} DihedralHistogramRepresentationParameters - dihedral representation parameters\n * @mixes RepresentationParameters\n * @mixes StructureRepresentationParameters\n *\n * @property {HistogramInputData[]} histogramsData\n * List of HistogramInputData objects, which properties specifies each particular\n * histogram, and can contain particular histogram-specific parameters.\n * Obligatory properties are:\n * atomQuad - Quadruplet of selection strings or atom indices\n * histogram360 - List of values, representing histogram from 0 to 360 degrees.\n * @property {Boolean} histogramBinBorderVisible - Display the lines that separate circular histogram bins\n * @property {Boolean} scaleBinToSectorArea - Should sector-based histogram bins'\n * area be proportional to the bins' value\n */\n\nexport interface DihedralHistogramRepresentationParameters extends StructureRepresentationParameters {\n  histogramsData: HistogramInputData[]\n\n  histogramBinBorderVisible: boolean\n  scaleBinToSectorArea: boolean\n}\n\n/**\n * Dihedral Histogram representation object\n *\n * Reperesentation consists of several parts:\n * opaqueMiddleDisc - opaque disc in the middle of the dihedral between front and back histograms\n * frontHistogram - circular histogram from the adjacent bond viewpoint\n * backHistogram - circular histogram from the distant bond viewpoint\n * histogramBinBorder - lines, which separate histogram bins\n * bondArrows - lines, which show the actual angle on the histogram disc\n *\n * @param {Structure} structure - the structure to measure angles in\n * @param {Viewer} viewer - a viewer object\n * @param {DihedralHistogramRepresentationParameters} params - Dihedral histogram representation parameters\n */\nclass DihedralHistogramRepresentation extends StructureRepresentation {\n  protected histogramsData: HistogramData[]\n\n  protected histogramBinBorderVisible: boolean\n  protected histogramBinBorderWidth: number\n  protected histogramBinBorderColor: ColorDefinition\n  protected histogramBinBorderOpacity: number\n\n  protected bondArrowVisible: boolean\n  protected bondArrowWidth: number\n  protected bondArrowOpacity: number\n\n  protected adjacentBondArrowColor: ColorDefinition\n  protected distantBondArrowColor: ColorDefinition\n\n  protected histogramOpacity: number\n  protected frontHistogramColor: ColorDefinition\n  protected backHistogramColor: ColorDefinition\n\n  protected opaqueMiddleDiscVisible: boolean\n  protected opaqueMiddleDiscColor: ColorDefinition\n  protected opaqueMiddleDiscOpacity: number\n\n  protected scaleBinToSectorArea: boolean\n\n  constructor(structure: Structure, viewer: Viewer, params: DihedralHistogramRepresentationParameters) {\n    super(structure, viewer, params)\n\n    this.type = 'dihedral-histogram'\n\n    this.parameters = Object.assign({\n      histogramsData: {\n        type: 'hidden', rebuild: true\n      },\n      histogramBinBorderVisible: {\n        type: 'boolean', default: true\n      },\n      scaleBinToSectorArea: {\n        type: 'boolean',\n        rebuild: true,\n        default: false\n      }\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init(params: Partial<DihedralHistogramRepresentationParameters>) {\n    const p = params || {}\n\n    const defaultColorData = {\n      histogramBinBorderColor: 'grey',\n      adjacentBondArrowColor: 'black',\n      distantBondArrowColor: 'magenta',\n      frontHistogramColor: 'green',\n      backHistogramColor: 'blue',\n      opaqueMiddleDiscColor: 'white'\n    }\n\n    const colorData = createUpdatedObject(defaultColorData, p)\n    Object.assign(this, colorData)\n\n    const defaultParameters = {\n      histogramsData: [],\n      histogramOpacity: 1.0,\n\n      opaqueMiddleDiscVisible: true,\n      opaqueMiddleDiscOpacity: 1.0,\n\n      histogramBinBorderVisible: true,\n      histogramBinBorderWidth: 1,\n      histogramBinBorderOpacity: 0.5,\n\n      bondArrowVisible: true,\n      bondArrowWidth: 2,\n      bondArrowOpacity: 1.0,\n\n      scaleBinToSectorArea: false,\n    }\n    const parameters = createUpdatedObject(defaultParameters, p)\n    Object.assign(this, parameters)\n\n    this.histogramsData.forEach(x => {\n      const specificColorData = createUpdatedObject(colorData, x)\n      Object.assign(x, specificColorData)\n    })\n\n    p.side = defaults(p.side, 'double')\n    p.opacity = defaults(p.opacity, 0.5)\n    p.radiusType = defaults(p.radiusType, 'size')\n    p.radiusSize = defaults(p.radiusSize, 0.15)\n\n    super.init(p)\n  }\n\n  getHistogramBinBorderBufferParameters() {\n    return this.getBufferParams({\n      linewidth: this.histogramBinBorderWidth,\n      visible: this.histogramBinBorderVisible,\n      opacity: this.histogramBinBorderOpacity,\n    })\n  }\n\n  getBondArrowsBufferParameters() {\n    return this.getBufferParams({\n      linewidth: this.bondArrowWidth,\n      visible: this.bondArrowVisible,\n      opacity: this.bondArrowOpacity,\n    })\n  }\n\n  getOpaqueMiddleDiscBufferParameters() {\n    return this.getBufferParams({\n      visible: this.opaqueMiddleDiscVisible,\n      opacity: this.opaqueMiddleDiscOpacity\n    })\n  }\n\n  getHistogramBufferParameters() {\n    return this.getBufferParams({\n      visible: true,\n      opacity: this.histogramOpacity,\n      side: \"double\"\n    })\n  }\n\n  createData(sview: StructureView) {\n    if (!sview.atomCount || !this.histogramsData.length) return\n    this.histogramsData.forEach(x => x.atomPositions = parseNestedAtoms(sview, [x.atomQuad]))\n    const scaleData = this.scaleBinToSectorArea ? function (y: number) { return Math.sqrt(y) } : function (y: number) { return y }\n    this.histogramsData.forEach(x => x.histogram360Scaled = x.histogram360.map(scaleData))\n    function Float32Concat(arrays: Float32Array[]) {\n      const lengths = arrays.map(x => x.length)\n      const result = new Float32Array(arraySum(lengths))\n      let accumulatedOffset = 0\n      for (let i = 0; i < arrays.length; i++) {\n        result.set(arrays[i], accumulatedOffset)\n        accumulatedOffset += arrays[i].length\n      }\n      return result\n    }\n\n    function createWideLineBuffer(linesList: WideLineData[], params: {}) {\n      return new WideLineBuffer(\n        {\n          position1: Float32Concat(linesList.map(x => x.startPoints)),\n          position2: Float32Concat(linesList.map(x => x.endPoints)),\n          color: Float32Concat(linesList.map(x => x.startColors)),\n          color2: Float32Concat(linesList.map(x => x.endColors)),\n        } as WideLineBufferData,\n        params)\n    }\n\n    function createMeshBuffer(mesh: MeshData[], params: {}) {\n      return new MeshBuffer(\n        {\n          position: Float32Concat(mesh.map(x => x.triangles)),\n          color: Float32Concat(mesh.map(x => x.triangleColors))\n        } as BufferData,\n        params)\n    }\n\n    const dihedralDataArray = []\n\n    for (let i = 0; i < this.histogramsData.length; i++) {\n      let dihedralData = undefined\n      let currentHistogramData = this.histogramsData[i]\n      let currentHistogram360 = currentHistogramData.histogram360\n      if (currentHistogram360.length >= 3) {\n        dihedralData = calculateDihedralHistogram(currentHistogramData)\n      }\n      if (typeof dihedralData === \"undefined\") continue\n      dihedralDataArray.push(dihedralData)\n    }\n\n    this.frontHistogramBinBordersBuffer = createWideLineBuffer(\n      dihedralDataArray.map(x => x.frontHistogramBinBorders),\n      this.getHistogramBinBorderBufferParameters()\n    )\n\n    this.backHistogramBinBordersBuffer = createWideLineBuffer(\n      dihedralDataArray.map(x => x.backHistogramBinBorders),\n      this.getHistogramBinBorderBufferParameters()\n    )\n\n    this.adjacentBondArrowsBuffer = createWideLineBuffer(\n      dihedralDataArray.map(x => x.adjacentBondArrows),\n      this.getBondArrowsBufferParameters()\n    )\n\n    this.distantBondArrowsBuffer = createWideLineBuffer(\n      dihedralDataArray.map(x => x.distantBondArrows),\n      this.getBondArrowsBufferParameters()\n    )\n\n    this.opaqueMiddleDiscBuffer = createMeshBuffer(\n      dihedralDataArray.map(x => x.opaqueMiddleDisc),\n      this.getOpaqueMiddleDiscBufferParameters()\n    )\n\n    this.frontHistogramBuffer = createMeshBuffer(\n      dihedralDataArray.map(x => x.frontHistogram),\n      this.getHistogramBufferParameters()\n    )\n\n    this.backHistogramBuffer = createMeshBuffer(\n      dihedralDataArray.map(x => x.backHistogram),\n      this.getHistogramBufferParameters()\n    )\n\n    return {\n      bufferList: [].concat(\n        this.frontHistogramBinBordersBuffer,\n        this.backHistogramBinBordersBuffer,\n        this.adjacentBondArrowsBuffer,\n        this.distantBondArrowsBuffer,\n        this.opaqueMiddleDiscBuffer,\n        this.frontHistogramBuffer,\n        this.backHistogramBuffer\n      )\n    }\n  }\n\n  setParameters(params: Partial<DihedralHistogramRepresentationParameters>) {\n    const rebuild = false\n    const what = {}\n    super.setParameters(params, what, rebuild)\n\n    if (params && (params.histogramBinBorderVisible !== undefined)) {\n      this.setVisibility(this.visible)\n    }\n    return this\n  }\n\n  setVisibility(value: boolean, noRenderRequest?: boolean) {\n    super.setVisibility(value, true)\n    if (this.frontHistogramBinBordersBuffer) {\n      this.frontHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible)\n    }\n    if (this.backHistogramBinBordersBuffer) {\n      this.backHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible)\n    }\n    if (!noRenderRequest) this.viewer.requestRender()\n    return this\n  }\n}\n\n/**\n * Calculates the data required to create {Buffer} objects for one histogram, given positions\n * @param  Float32Array positionOfDihedralAtoms 3*4 array of coordinates\n * @param  NumberArray histogram array of coordinates\n * @return Arrays for building buffers\n */\nfunction calculateDihedralHistogram(histogramData: HistogramData) {\n  const positionOfDihedralAtoms = histogramData.atomPositions\n  const histogram = histogramData.histogram360Scaled;\n  const totalSectorTrianglesInOpaqueMiddleDisc = histogram.length <= 180 ? 360 : histogram.length * 2\n  const frontAndBack = 2\n\n  const opaqueMiddleDisc = {\n    triangles: new Float32Array(totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle * pointLength),\n    triangleColors: createColorArray(histogramData.opaqueMiddleDiscColor, totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle)\n  }\n\n  const frontHistogram = {\n    triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\n    triangleColors: createColorArray(histogramData.frontHistogramColor, histogram.length * pointsInTriangle)\n  }\n\n  const backHistogram = {\n    triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\n    triangleColors: createColorArray(histogramData.backHistogramColor, histogram.length * pointsInTriangle)\n  }\n\n  const frontHistogramBinBorders = {\n    startPoints: new Float32Array(histogram.length * pointLength),\n    endPoints: new Float32Array(histogram.length * pointLength),\n    startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\n    endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\n  }\n\n  const backHistogramBinBorders = {\n    startPoints: new Float32Array(histogram.length * pointLength),\n    endPoints: new Float32Array(histogram.length * pointLength),\n    startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\n    endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\n  }\n\n  const adjacentBondArrows = {\n    startPoints: new Float32Array(frontAndBack * pointLength),\n    endPoints: new Float32Array(frontAndBack * pointLength),\n    startColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length),\n    endColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length)\n  }\n  const distantBondArrows = {\n    startPoints: new Float32Array(frontAndBack * pointLength),\n    endPoints: new Float32Array(frontAndBack * pointLength),\n    startColors: createColorArray(histogramData.distantBondArrowColor, histogram.length),\n    endColors: createColorArray(histogramData.distantBondArrowColor, histogram.length)\n  }\n\n  const p1 = v3new()\n  const p2 = v3new()\n  const p3 = v3new()\n  const p4 = v3new()\n\n  const v21 = v3new()\n  const v23 = v3new()\n  const v32 = v3new()\n  const v34 = v3new()\n\n  const mid = v3new()\n  const inPlane1 = v3new()\n  const inPlane2 = v3new()\n\n  const cross1 = v3new()\n  const cross2 = v3new()\n\n  const arcPoint = v3new()\n  const tmp = v3new()\n  const tmp2 = v3new()\n\n  // Set Atom Coordinates\n  const dihedralAtomVectors = [p1, p2, p3, p4]\n\n  for (let i = 0; i < dihedralAtomVectors.length; i++) {\n    v3fromArray(dihedralAtomVectors[i], positionOfDihedralAtoms, i * pointLength)\n  }\n\n  // Vectors between points\n  v3sub(v21, p1, p2)\n  v3sub(v23, p3, p2)\n  v3sub(v34, p4, p3)\n  if (v3length(v23) === 0.0) {\n    return // Can't define axis\n  }\n\n  v3multiplyScalar(tmp, v23, 0.5)\n  v3add(mid, p2, tmp)\n\n  v3normalize(v21, v21)\n  v3normalize(v23, v23)\n  v3normalize(v34, v34)\n\n  v3negate(v32, v23)\n  // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\n  v3multiplyScalar(tmp, v32, v3dot(v32, v21))\n  v3sub(inPlane1, v21, tmp)\n\n  v3multiplyScalar(tmp, v23, v3dot(v23, v34))\n  v3sub(inPlane2, v34, tmp)\n\n  if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\n    return // Indeterminate angle\n  }\n\n  v3normalize(inPlane1, inPlane1)\n  v3normalize(inPlane2, inPlane2)\n\n  // Can use acos as normalized and non-zero\n  const absAngle = Math.acos(v3dot(inPlane1, inPlane2))\n\n  v3cross(cross1, v32, inPlane1)\n  v3cross(cross2, v23, inPlane2)\n  v3normalize(cross1, cross1)\n  v3normalize(cross2, cross2)\n\n  let angle = absAngle\n  if (v3dot(cross1, inPlane2) < 0.0) {\n    angle = -absAngle\n  }\n\n  v3add(arcPoint, mid, inPlane1)\n\n  // Calculate necessary constants\n  const maxHist = Math.max.apply(null, histogram)\n  const histBinAngleStep = (Math.PI * 2) / histogram.length\n\n  function setHistogramBinCoordinates(out: Float32Array, ind: number, zeroDegreeVector: Float32Array, crossVector: Float32Array, histBinAngleStep: number) {\n    const startOffset = ind * pointsInTriangle * pointLength\n    v3toArray(mid, out, startOffset)\n    const scalingFactor = Number(histogram[ind]) / maxHist\n    v3multiplyScalar(tmp, zeroDegreeVector, scalingFactor)\n    v3multiplyScalar(tmp2, crossVector, scalingFactor)\n    calcArcPoint(arcPoint, mid, tmp, tmp2, ind * histBinAngleStep)\n    v3toArray(arcPoint, out, startOffset + 1 * pointLength)\n    calcArcPoint(arcPoint, mid, tmp, tmp2, (ind + 1) * histBinAngleStep)\n    v3toArray(arcPoint, out, startOffset + 2 * pointLength)\n  }\n\n  function setOneSideHistogram(discHistogram: MeshData, binBorders: { startPoints: Float32Array, endPoints: Float32Array }, ind: number, zeroDegreeVector: Float32Array, crossVector: Float32Array) {\n    // Set Bond Arrows\n\n    copyArray(mid, adjacentBondArrows.startPoints, 0, ind * pointLength, mid.length)\n    calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * 0)\n    copyArray(tmp, adjacentBondArrows.endPoints, 0, ind * pointLength, mid.length)\n\n    copyArray(mid, distantBondArrows.startPoints, 0, ind * pointLength, mid.length)\n    calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, angle)\n    copyArray(tmp, distantBondArrows.endPoints, 0, ind * pointLength, mid.length)\n\n    // Set Histogram Bin Borders\n\n    for (let i = 0; i < histogram.length; i++) {\n      copyArray(mid, binBorders.startPoints, 0, i * 3, mid.length)\n      calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * i)\n      copyArray(tmp, binBorders.endPoints, 0, i * 3, tmp.length)\n    }\n\n    // Set Histogram Bins\n\n    for (let sectionIndex = 0; sectionIndex < histogram.length; sectionIndex++) {\n      setHistogramBinCoordinates(discHistogram.triangles, sectionIndex, zeroDegreeVector, crossVector, histBinAngleStep)\n    }\n  }\n\n  // Opaque disc\n  const opaqueCircleSectorAngleStep = Math.PI * 2 / totalSectorTrianglesInOpaqueMiddleDisc\n\n  for (let sectionIndex = 0; sectionIndex < totalSectorTrianglesInOpaqueMiddleDisc; sectionIndex++) {\n    const startOffset = sectionIndex * pointsInTriangle * pointLength\n    v3toArray(mid, opaqueMiddleDisc.triangles, startOffset)\n    calcArcPoint(arcPoint, mid, inPlane1, cross1, sectionIndex * opaqueCircleSectorAngleStep)\n    v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 1 * pointLength)\n    calcArcPoint(arcPoint, mid, inPlane1, cross1, (sectionIndex + 1) * opaqueCircleSectorAngleStep)\n    v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 2 * pointLength)\n  }\n\n  // Front Histogram\n  const distanceToOpaqueDisc = 0.01\n  v3multiplyScalar(tmp, v23, -distanceToOpaqueDisc) // Get a vector to move \"mid\" just a bit from opaque disc\n  v3add(mid, mid, tmp)\n  setOneSideHistogram(frontHistogram, frontHistogramBinBorders, 0, inPlane1, cross1)\n\n  // Back Histogram\n  v3multiplyScalar(tmp, v23, 2 * distanceToOpaqueDisc) // Get a vector to move \"mid\" back and plus just a bit from opaque disc the other way\n  v3add(mid, mid, tmp)\n  setOneSideHistogram(backHistogram, backHistogramBinBorders, 1, inPlane2, cross2)\n\n  return {\n    opaqueMiddleDisc,\n    frontHistogram,\n    backHistogram,\n    frontHistogramBinBorders,\n    backHistogramBinBorders,\n    adjacentBondArrows,\n    distantBondArrows\n  }\n}\n\nRepresentationRegistry.add('dihedral-histogram', DihedralHistogramRepresentation)\n\nexport default DihedralHistogramRepresentation\n","/**\n * @file Distance Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\n\nimport { Color } from 'three'\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { DistancePicker } from '../utils/picker'\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\nimport BitArray from '../utils/bitarray'\nimport MeasurementRepresentation, { MeasurementRepresentationParameters } from './measurement-representation'\nimport Selection from '../selection/selection'\nimport BondStore from '../store/bond-store'\nimport TextBuffer, { TextBufferData, TextBufferParameters } from '../buffer/text-buffer'\nimport WideLineBuffer from '../buffer/wideline-buffer'\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\nimport { getFixedLengthDashData } from '../geometry/dash'\nimport Viewer from '../viewer/viewer';\nimport { Structure } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport { BondDataFields, BondDataParams, BondData } from '../structure/structure-data';\nimport { StructureRepresentationData } from './structure-representation';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\n\n/**\n * Distance representation parameter object.\n * @typedef {Object} DistanceRepresentationParameters - distance representation parameters\n * @mixes RepresentationParameters\n * @mixes StructureRepresentationParameters\n * @mixes MeasurementRepresentationParameters\n *\n * @property {String} labelUnit - distance unit (e.g. \"angstrom\" or \"nm\"). If set, a distance\n *                                symbol is appended to the label (i.e. 'nm' or '\\u00C5'). In case of 'nm', the\n *                                distance value is computed in nanometers instead of Angstroms.\n * @property {Array[]} atomPair - list of pairs of selection strings (see {@link Selection})\n *                                or pairs of atom indices. Using atom indices is much more\n *                                efficient when the representation is updated often, e.g. by\n *                                changing the selection or the atom positions, as there\n *                                are no selection strings to be evaluated.\n */\nexport interface DistanceRepresentationParameters extends MeasurementRepresentationParameters {\n  labelUnit: string\n  atomPair: AtomPair\n  useCylinder: boolean\n}\nexport type AtomPair = (number|string)[][]\n/**\n * Distance representation\n */\nclass DistanceRepresentation extends MeasurementRepresentation {\n  protected labelUnit: string\n  protected atomPair: AtomPair\n  protected useCylinder: boolean\n  protected distanceBuffer: WideLineBuffer|CylinderGeometryBuffer\n  /**\n   * Create Distance representation object\n   * @example\n   * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n   *     o.addRepresentation( \"cartoon\" );\n   *     // either give selections (uses first selected atom) ...\n   *     var atomPair = [ [ \"1.CA\", \"4.CA\" ], [ \"7.CA\", \"13.CA\" ] ];\n   *     // or atom indices\n   *     var atomPair = [ [ 8, 28 ], [ 173, 121 ] ];\n   *     o.addRepresentation( \"distance\", { atomPair: atomPair } );\n   *     stage.autoView();\n   * } );\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {DistanceRepresentationParameters} params - distance representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<DistanceRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'distance'\n\n    this.parameters = Object.assign({\n      radialSegments: true,\n      openEnded: true,\n      disableImpostor: true,\n      labelUnit: {\n        type: 'select',\n        rebuild: true,\n        options: { '': '', angstrom: 'angstrom', nm: 'nm' }\n      },\n      useCylinder: {\n        type: 'boolean', rebuild: true\n      },\n      atomPair: {\n        type: 'hidden', rebuild: true\n      }\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<DistanceRepresentationParameters>) {\n    const p = params || {}\n    p.linewidth = defaults(p.linewidth, 5.0)\n    p.radiusType = defaults(p.radiusType, 'size')\n    p.radiusSize = defaults(p.radiusSize, 0.2)\n\n    this.labelUnit = defaults(p.labelUnit, '')\n    this.useCylinder = defaults(p.useCylinder, false)\n    this.atomPair = defaults(p.atomPair, [])\n\n    super.init(p)\n  }\n\n  getDistanceData (sview: StructureView, atomPair: AtomPair) {\n    let n = atomPair.length\n    const text = new Array(n)\n    let position = new Float32Array(n * 3)\n    const sele1 = new Selection()\n    const sele2 = new Selection()\n\n    const bondStore = new BondStore()\n\n    const ap1 = sview.getAtomProxy()\n    const ap2 = sview.getAtomProxy()\n\n    let j = 0 // Skipped pairs\n    const selected = sview.getAtomSet()\n\n    atomPair.forEach((pair, i) => {\n      let v1 = pair[ 0 ]\n      let v2 = pair[ 1 ]\n\n      if (typeof(v1) === 'number' && Number.isInteger(v1) && typeof(v2) === 'number' && Number.isInteger(v2)) {\n        if (selected.get(v1) && selected.get(v2)) {\n          ap1.index = v1\n          ap2.index = v2\n        } else {\n          j += 1\n          return\n        }\n      } else {\n        sele1.setString(v1 as string)\n        sele2.setString(v2 as string)\n\n        var atomIndices1 = sview.getAtomIndices(sele1)\n        var atomIndices2 = sview.getAtomIndices(sele2)\n\n        if (atomIndices1!.length && atomIndices2!.length) {\n          ap1.index = atomIndices1![ 0 ]\n          ap2.index = atomIndices2![ 0 ]\n        } else {\n          j += 1\n          return\n        }\n      }\n\n      bondStore.addBond(ap1, ap2, 1)\n\n      i -= j\n      var d = ap1.distanceTo(ap2)\n      switch (this.labelUnit) {\n        case 'angstrom':\n          text[ i ] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B)\n          break\n        case 'nm':\n          text[ i ] = (d / 10).toFixed(2) + ' nm'\n          break\n        default:\n          text[ i ] = d.toFixed(2)\n          break\n      }\n\n      var i3 = i * 3\n      position[ i3 + 0 ] = (ap1.x + ap2.x) / 2\n      position[ i3 + 1 ] = (ap1.y + ap2.y) / 2\n      position[ i3 + 2 ] = (ap1.z + ap2.z) / 2\n    })\n\n    if (j > 0) {\n      n -= j\n      position = position.subarray(0, n * 3)\n    }\n\n    var bondSet = new BitArray(bondStore.count, true)\n\n    return {\n      text: text,\n      position: position,\n      bondSet: bondSet,\n      bondStore: bondStore\n    }\n  }\n\n  getBondData (sview: StructureView, what: BondDataFields, params: BondDataParams): BondData {\n    const bondData = sview.getBondData(this.getBondParams(what, params))\n    if (bondData.picking) {\n      bondData.picking = new DistancePicker(\n        bondData.picking.array,\n        bondData.picking.structure,\n        params.bondStore!\n      ) as any\n    }\n    return bondData\n  }\n\n  createData (sview: StructureView) {\n    if (!sview.atomCount || !this.atomPair.length) return\n\n    const n = this.atomPair.length\n    const c = new Color(this.labelColor)\n    const distanceData = this.getDistanceData(sview, this.atomPair)\n\n    this.textBuffer = new TextBuffer({\n      position: distanceData.position,\n      size: uniformArray(n, this.labelSize),\n      color: uniformArray3(n, c.r, c.g, c.b),\n      text: distanceData.text\n    } as TextBufferData, this.getLabelBufferParams() as TextBufferParameters)\n\n    const bondParams = {\n      bondSet: distanceData.bondSet,\n      bondStore: distanceData.bondStore\n    }\n\n    const bondData = this.getBondData(\n      sview,\n      { position: true, color: true, picking: true, radius: this.useCylinder },\n      bondParams\n    )\n\n    if (this.useCylinder) {\n      this.distanceBuffer = new CylinderBuffer(\n        bondData as CylinderBufferData,\n        this.getBufferParams({\n          openEnded: this.openEnded,\n          radialSegments: this.radialSegments,\n          disableImpostor: this.disableImpostor,\n          dullInterior: true\n        }) \n      ) as CylinderGeometryBuffer\n    } else {\n      this.distanceBuffer = new WideLineBuffer(\n        getFixedLengthDashData(bondData as CylinderBufferData),\n        this.getBufferParams({\n          linewidth: this.linewidth,\n          visible: this.lineVisible,\n          opacity: this.lineOpacity\n        })\n      )\n    }\n\n    return {\n      bondSet: distanceData.bondSet,\n      bondStore: distanceData.bondStore,\n      position: distanceData.position,\n      bufferList: [ this.textBuffer, this.distanceBuffer ]\n    }\n  }\n\n  updateData (what: BondDataFields, data: StructureRepresentationData) {\n    super.updateData(what, data)\n\n    const bondParams = {\n      bondSet: data.bondSet,\n      bondStore: data.bondStore\n    }\n\n    const bondData = this.getBondData(data.sview as StructureView, what, bondParams)\n    const distanceData = {}\n\n    if (!what || what.color) {\n      Object.assign( distanceData, {\n        color: bondData.color,\n        color2: bondData.color2\n      })\n    }\n\n    if (!what || what.radius) {\n      Object.assign( distanceData, {radius: bondData.radius})\n    }\n\n    (this.distanceBuffer as CylinderGeometryBuffer).setAttributes(distanceData)\n  }\n\n  setParameters (params: Partial<DistanceRepresentationParameters>) {\n    let rebuild = false\n    const what = {}\n\n    super.setParameters(params, what, rebuild)\n\n    if (!this.useCylinder) {\n      if (params && params.lineOpacity) {\n        (this.distanceBuffer as WideLineBuffer).setParameters({ opacity: params.lineOpacity })\n      }\n      if (params && params.opacity !== undefined) {\n        (this.distanceBuffer as WideLineBuffer).setParameters({ opacity: this.lineOpacity })\n      }\n      if (params && params.linewidth) {\n        (this.distanceBuffer as WideLineBuffer).setParameters({ linewidth: params.linewidth })\n      }\n    }\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('distance', DistanceRepresentation)\n\nexport default DistanceRepresentation\n","/**\n * @file Vector Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\nimport { Color, Matrix4, Vector3 } from 'three'\n\nimport '../shader/Line.vert'\nimport '../shader/Line.frag'\n\nimport { uniformArray3 } from '../math/array-utils'\nimport Buffer, { BufferDefaultParameters, BufferData } from './buffer'\n\nfunction getSize(data: BufferData){\n  const n = data.position!.length / 3\n  return n * 2 * 3\n}\n\nexport interface VectorBufferData extends BufferData {\n  vector: Float32Array\n}\n\nexport const VectorBufferDefaultParameters = Object.assign({\n  scale: 1,\n  color: 'grey'\n}, BufferDefaultParameters)\nexport type VectorBufferParameters = typeof VectorBufferDefaultParameters\n\n/**\n * Vector buffer. Draws vectors as lines.\n */\nclass VectorBuffer extends Buffer {\n  get defaultParameters() { return VectorBufferDefaultParameters }\n  parameters: VectorBufferParameters\n\n  isLine = true\n  vertexShader = 'Line.vert'\n  fragmentShader = 'Line.frag'\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.vector - vectors\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: VectorBufferData, params: Partial<VectorBufferParameters> = {}) {\n    super({\n      position: new Float32Array(getSize(data)),\n      color: new Float32Array(getSize(data))\n    }, params)\n\n    const color = new Color(this.parameters.color)\n    const attributes = this.geometry.attributes as any  // TODO\n    uniformArray3(getSize(data) / 3, color.r, color.g, color.b, attributes.color.array)\n\n    this.setAttributes(data)\n  }\n\n  setAttributes (data: Partial<VectorBufferData> = {}) {\n    const attributes = this.geometry.attributes as any  // TODO\n\n    let position, vector\n    let aPosition\n\n    if (data.position && data.vector) {\n      position = data.position\n      vector = data.vector\n      aPosition = attributes.position.array\n      attributes.position.needsUpdate = true\n    }\n\n    const n = this.size / 2\n    const scale = this.parameters.scale\n\n    if (position && vector) {\n      for (let v = 0; v < n; v++) {\n        const i = v * 2 * 3\n        const j = v * 3\n\n        aPosition[ i + 0 ] = position[ j + 0 ]\n        aPosition[ i + 1 ] = position[ j + 1 ]\n        aPosition[ i + 2 ] = position[ j + 2 ]\n        aPosition[ i + 3 ] = position[ j + 0 ] + vector[ j + 0 ] * scale\n        aPosition[ i + 4 ] = position[ j + 1 ] + vector[ j + 1 ] * scale\n        aPosition[ i + 5 ] = position[ j + 2 ] + vector[ j + 2 ] * scale\n      }\n    }\n  }\n}\n\nexport default VectorBuffer\n","/**\n * @file Helixorient Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Helixorient from '../geometry/helixorient'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport SphereBuffer, { SphereBufferParameters } from '../buffer/sphere-buffer'\nimport VectorBuffer from '../buffer/vector-buffer'\nimport Viewer from '../viewer/viewer';\nimport { Structure } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport Polymer from '../proxy/polymer';\nimport { AtomDataFields } from '../structure/structure-data';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\nimport SphereImpostorBuffer from '../buffer/sphereimpostor-buffer';\nimport { BufferData } from '../buffer/buffer';\n\n/**\n * Helixorient Representation\n */\nclass HelixorientRepresentation extends StructureRepresentation {\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'helixorient'\n\n    this.parameters = Object.assign({\n      sphereDetail: true,\n      disableImpostor: true\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<StructureRepresentationParameters>) {\n    const p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\n    p.radiusType = defaults(p.radiusType, 'size')\n    p.radiusSize = defaults(p.radiusSize, 0.15)\n    p.radiusScale = defaults(p.radiusScale, 1.0)\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    const bufferList: (SphereBuffer|VectorBuffer)[] = []\n    const polymerList: Polymer[] = []\n\n    this.structure.eachPolymer(polymer => {\n      if (polymer.residueCount < 4) return\n      polymerList.push(polymer)\n\n      const helixorient = new Helixorient(polymer)\n      const position = helixorient.getPosition()\n      const color = helixorient.getColor(this.getColorParams())\n      const size = helixorient.getSize(this.getRadiusParams())\n      const picking = helixorient.getPicking()\n\n      bufferList.push(\n        new SphereBuffer(\n          {\n            position: position.center,\n            color: color.color,\n            radius: size.size,\n            picking: picking.picking\n          },\n          this.getBufferParams({\n            sphereDetail: this.sphereDetail,\n            disableImpostor: this.disableImpostor,\n            dullInterior: true\n          }) as SphereBufferParameters\n        ),\n        new VectorBuffer(\n          {\n            position: position.center,\n            vector: position.axis\n          },\n          this.getBufferParams({\n            color: 'skyblue',\n            scale: 1\n          })\n        ),\n        new VectorBuffer(\n          {\n            position: position.center,\n            vector: position.resdir\n          },\n          this.getBufferParams({\n            color: 'lightgreen',\n            scale: 1\n          })\n        )\n      )\n    }, sview.getSelection())\n\n    return {\n      bufferList: bufferList as (SphereGeometryBuffer|SphereImpostorBuffer|VectorBuffer)[],\n      polymerList: polymerList\n    }\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    if (Debug) Log.time(this.type + ' repr update')\n\n    what = what || {}\n\n    for (let i = 0, il = data.polymerList!.length; i < il; ++i) {\n      const j = i * 3\n\n      const bufferData: Partial<BufferData> = {}\n      const polymer = data.polymerList![ i ]\n      const helixorient = new Helixorient(polymer)\n\n      if (what.position) {\n        const position = helixorient.getPosition()\n\n        Object.assign(bufferData, {position: position.center})\n\n        data.bufferList[ j + 1 ].setAttributes({\n          'position': position.center,\n          'vector': position.axis\n        })\n        data.bufferList[ j + 2 ].setAttributes({\n          'position': position.center,\n          'vector': position.resdir\n        })\n      }\n\n      data.bufferList[ j ].setAttributes(bufferData)\n    }\n\n    if (Debug) Log.timeEnd(this.type + ' repr update')\n  }\n}\n\nRepresentationRegistry.add('helixorient', HelixorientRepresentation)\n\nexport default HelixorientRepresentation\n","/**\n * @file Licorice Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\n\n/**\n * Licorice representation object ({@link BallAndStickRepresentation} with `aspectRatio` fixed at 1.0)\n */\nclass LicoriceRepresentation extends BallAndStickRepresentation {\n  /**\n   * Create Licorice representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'licorice'\n\n    this.parameters = Object.assign(\n      {}, this.parameters, { aspectRatio: null }\n    )\n  }\n\n  init (params: Partial<BallAndStickRepresentationParameters>) {\n    var p = params || {}\n    p.aspectRatio = 1.0\n\n    super.init(p)\n  }\n}\n\nRepresentationRegistry.add('licorice', LicoriceRepresentation)\n\nexport default LicoriceRepresentation\n","/**\n * @file Mapped Box Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { BufferParameters, BufferData } from './buffer'\nimport MappedBuffer from './mapped-buffer'\n\nconst mapping = new Float32Array([\n  -1.0, -1.0, -1.0,\n  1.0, -1.0, -1.0,\n  1.0, -1.0, 1.0,\n  -1.0, -1.0, 1.0,\n  -1.0, 1.0, -1.0,\n  1.0, 1.0, -1.0,\n  1.0, 1.0, 1.0,\n  -1.0, 1.0, 1.0\n])\n\nconst mappingIndices = new Uint16Array([\n  0, 1, 2,\n  0, 2, 3,\n  1, 5, 6,\n  1, 6, 2,\n  4, 6, 5,\n  4, 7, 6,\n  0, 7, 4,\n  0, 3, 7,\n  0, 5, 1,\n  0, 4, 5,\n  3, 2, 6,\n  3, 6, 7\n])\n\n/**\n * Mapped Box buffer. Draws boxes. Used to render general imposters.\n * @interface\n */\nclass MappedBoxBuffer extends MappedBuffer {\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\n    super('v3', data, params)\n  }\n  get mapping () { return mapping }\n  get mappingIndices () { return mappingIndices }\n  get mappingIndicesSize () { return 36 }\n  get mappingSize () { return 8 }\n  get mappingItemSize () { return 3 }\n}\n\nexport default MappedBoxBuffer\n","/**\n * @file Hyperball Stick Impostor Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import Vector3 required for declaration only\nimport { Matrix4, Vector3 } from 'three'\n\nimport '../shader/HyperballStickImpostor.vert'\nimport '../shader/HyperballStickImpostor.frag'\n\nimport MappedBoxBuffer from './mappedbox-buffer'\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData } from './buffer'\n\nexport interface HyperballStickImpostorBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  color2: Float32Array\n  radius: Float32Array\n  radius2: Float32Array\n}\n\nexport const HyperballStickImpostorBufferDefaultParameters = Object.assign({\n  shrink: 0.14\n}, BufferDefaultParameters)\nexport type HyperballStickImpostorBufferParameters = typeof HyperballStickImpostorBufferDefaultParameters\n\nconst HyperballStickImpostorBufferParameterTypes = Object.assign({\n  shrink: { uniform: true }\n}, BufferParameterTypes)\n\n/**\n * Hyperball stick impostor buffer.\n *\n * @example\n * var hyperballStickImpostorBuffer = new HyperballStickImpostorBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 2, 2, 2 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ]),\n *   radius: new Float32Array([ 1 ]),\n *   radius2: new Float32Array([ 2 ])\n * });\n */\nclass HyperballStickImpostorBuffer extends MappedBoxBuffer {\n  parameterTypes = HyperballStickImpostorBufferParameterTypes\n  get defaultParameters() { return HyperballStickImpostorBufferDefaultParameters }\n  parameters: HyperballStickImpostorBufferParameters\n\n  isImpostor = true\n  vertexShader = 'HyperballStickImpostor.vert'\n  fragmentShader = 'HyperballStickImpostor.frag'\n\n  constructor (data: HyperballStickImpostorBufferData, params: Partial<HyperballStickImpostorBufferParameters> = {}) {\n    super(data, params)\n\n    this.addUniforms({\n      'modelViewProjectionMatrix': { value: new Matrix4() },\n      'modelViewProjectionMatrixInverse': { value: new Matrix4() },\n      'modelViewMatrixInverseTranspose': { value: new Matrix4() },\n      'shrink': { value: this.parameters.shrink }\n    })\n\n    this.addAttributes({\n      'position1': { type: 'v3', value: null },\n      'position2': { type: 'v3', value: null },\n      'color2': { type: 'c', value: null },\n      'radius': { type: 'f', value: null },\n      'radius2': { type: 'f', value: null }\n    })\n\n    this.setAttributes(data)\n    this.makeMapping()\n  }\n}\n\nexport default HyperballStickImpostorBuffer\n","/**\n * @file Hyperball Stick Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// @ts-ignore: unused import required for declaration only\nimport { Vector3, Matrix4 } from 'three'\nimport { ExtensionFragDepth } from '../globals'\nimport { calculateMinArray } from '../math/array-utils'\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters } from './cylindergeometry-buffer'\nimport HyperballStickImpostorBuffer, { HyperballStickImpostorBufferDefaultParameters } from './hyperballstickimpostor-buffer'\nimport { BufferData } from './buffer'\n\nexport interface HyperballStickBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  color2: Float32Array\n  radius: Float32Array\n  radius2: Float32Array\n}\n\nexport const HyperballStickBufferDefaultParameters = Object.assign({\n  disableImpostor: false\n}, CylinderGeometryBufferDefaultParameters, HyperballStickImpostorBufferDefaultParameters)\nexport type HyperballStickBufferParameters = typeof HyperballStickBufferDefaultParameters\n\n/**\n * Hyperball stick buffer. Depending on the value {@link ExtensionFragDepth} and\n * `params.disableImpostor` the constructor returns either a\n * {@link CylinderGeometryBuffer} or a {@link HyperballStickImpostorBuffer}\n * @implements {Buffer}\n *\n * @example\n * var hyperballStickBuffer = new HyperballStickBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 2, 2, 2 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ]),\n *   radius: new Float32Array([ 1 ]),\n *   radius2: new Float32Array([ 2 ])\n * });\n */\nclass HyperballStickBuffer {\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position1 - from positions\n   * @param  {Float32Array} data.position2 - to positions\n   * @param  {Float32Array} data.color - from colors\n   * @param  {Float32Array} data.color2 - to colors\n   * @param  {Float32Array} data.radius - from radii\n   * @param  {Float32Array} data.radius2 - to radii\n   * @param  {Float32Array} data.picking - picking ids\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: HyperballStickBufferData, params: Partial<HyperballStickBufferParameters> = {}) {\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\n      data.radius = calculateMinArray(data.radius, data.radius2)\n      return new CylinderGeometryBuffer(data, params)\n    } else {\n      return new HyperballStickImpostorBuffer(data, params)\n    }\n  }\n}\n\nexport default HyperballStickBuffer\n","/**\n * @file Hyperball Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { calculateCenterArray } from '../math/array-utils'\nimport LicoriceRepresentation from './licorice-representation'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport HyperballStickBuffer, { HyperballStickBufferData } from '../buffer/hyperballstick-buffer'\nimport { BallAndStickRepresentationParameters } from './ballandstick-representation';\n// @ts-ignore: unused import Volume required for declaration only\nimport { Structure, Volume } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport { BondDataParams, BondDataFields, AtomDataFields } from '../structure/structure-data';\nimport StructureView from '../structure/structure-view';\nimport { StructureRepresentationData } from './structure-representation';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\n// @ts-ignore: unused import Surface required for declaration only\nimport Surface from '../surface/surface';\n\nexport interface HyperballRepresentationParameters extends BallAndStickRepresentationParameters {\n  shrink: number\n}\n\n/**\n * Hyperball Representation\n */\nclass HyperballRepresentation extends LicoriceRepresentation {\n  protected shrink: number\n  protected __center: Float32Array\n  \n  constructor (structure: Structure, viewer: Viewer, params: Partial<HyperballRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'hyperball'\n\n    this.parameters = Object.assign({\n\n      shrink: {\n        type: 'number', precision: 3, max: 1.0, min: 0.001, buffer: true\n      }\n\n    }, this.parameters, {\n\n      multipleBond: null,\n      bondSpacing: null\n\n    })\n  }\n\n  init (params: Partial<HyperballRepresentationParameters>) {\n    var p = params || {}\n    p.radiusScale = defaults(p.radiusScale, 0.2)\n    p.radiusType = defaults(p.radiusType, 'vdw')\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.shrink = defaults(p.shrink, 0.12)\n\n    super.init(p)\n  }\n\n  getBondParams (what?: BondDataFields, params?: BondDataParams) {\n    if (!what || what.radius) {\n      params = Object.assign({ radius2: true }, params)\n    }\n\n    return super.getBondParams(what, params)\n  }\n\n  createData (sview: StructureView) {\n    var sphereBuffer = new SphereBuffer(\n      (sview.getAtomData(this.getAtomParams()) as SphereBufferData),\n      this.getBufferParams({\n        sphereDetail: this.sphereDetail,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      }) as SphereBufferParameters\n    ) as SphereGeometryBuffer\n\n    this.__center = new Float32Array(sview.bondCount * 3)\n\n    var stickBuffer = new HyperballStickBuffer(\n      sview.getBondData(this.getBondParams()) as HyperballStickBufferData,\n      this.getBufferParams({\n        shrink: this.shrink,\n        radialSegments: this.radialSegments,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      })\n    )\n\n    return {\n      bufferList: [ sphereBuffer, stickBuffer ]\n    }\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    var atomData = data.sview!.getAtomData(this.getAtomParams())\n    var bondData = data.sview!.getBondData(this.getBondParams())\n    var sphereData = {}\n    var stickData = {}\n\n    if (!what || what.position) {\n      Object.assign(sphereData, {position: atomData.position})\n      var from = bondData.position1\n      var to = bondData.position2\n      Object.assign(stickData, {\n        position: calculateCenterArray(from!, to!, this.__center),\n        position1: from,\n        position2: to\n      })\n    }\n\n    if (!what || what.color) {\n      Object.assign(sphereData, {color: atomData.color})\n      Object.assign(stickData, {\n        color: bondData.color,\n        color2: bondData.color2\n      })\n    }\n\n    if (!what || what.radius) {\n      Object.assign(sphereData, {radius: atomData.radius})\n      Object.assign(stickData, {\n        radius: bondData.radius,\n        radius2: bondData.radius2\n      })\n    }\n\n    data.bufferList[ 0 ].setAttributes(sphereData)\n    data.bufferList[ 1 ].setAttributes(stickData)\n  }\n}\n\nRepresentationRegistry.add('hyperball', HyperballRepresentation)\n\nexport default HyperballRepresentation\n","/**\n * @file Label Factory\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { AA1 } from '../structure/structure-constants'\nimport AtomProxy from '../proxy/atom-proxy'\nimport { sprintf } from 'sprintf-js'\n\nexport const LabelFactoryTypes = {\n  '': '',\n  'atomname': 'atom name',\n  'atomindex': 'atom index',\n  'occupancy': 'occupancy',\n  'bfactor': 'b-factor',\n  'serial': 'serial',\n  'element': 'element',\n  'atom': 'atom name + index',\n  'resname': 'residue name',\n  'resno': 'residue no',\n  'res': 'one letter code + no',\n  'residue': '[residue name] + no + inscode',\n  'text': 'text',\n  'format': 'format',\n  'qualified': 'qualified name'\n}\nexport type LabelType = keyof typeof LabelFactoryTypes\n\nclass LabelFactory {\n\n  static types = LabelFactoryTypes\n  errorLogged: boolean = false\n\n  constructor(readonly type: LabelType, readonly text: { [k: number]: string } = {},\n    readonly format: string = '') {}\n\n  atomLabel (a: AtomProxy) {\n    const type = this.type\n\n    let l\n\n    switch (type) {\n      case 'atomname':\n        l = a.atomname\n        break\n\n      case 'atomindex':\n        l = `${a.index}`\n        break\n\n      case 'occupancy':\n        l = a.occupancy.toFixed(2)\n        break\n\n      case 'bfactor':\n        l = a.bfactor.toFixed(2)\n        break\n\n      case 'serial':\n        l = `${a.serial}`\n        break\n\n      case 'element':\n        l = a.element\n        break\n\n      case 'atom':\n        l = `${a.atomname}|${a.index}`\n        break\n\n      case 'resname':\n        l = a.resname\n        break\n\n      case 'resno':\n        l = `${a.resno}`\n        break\n\n      case 'res':\n        l = `${(AA1[ a.resname.toUpperCase() ] || a.resname)}${a.resno}`\n        break\n\n      case 'residue':\n        const aa1 = AA1[ a.resname.toUpperCase() ]\n        if (aa1 && !a.inscode) {\n          l = `${aa1}${a.resno}`\n        } else {\n          l = `[${a.resname}]${a.resno}${a.inscode}`\n        }\n        break\n\n      case 'text':\n        l = this.text[ a.index ]\n        break\n\n      case 'format':\n        try {\n          l = sprintf(this.format, a)\n        } catch (e) {\n          if (!this.errorLogged) {\n            this.errorLogged = true\n            console.log(e.message)\n          }\n        }\n        break\n\n      // case \"qualified\":\n      default:\n        l = a.qualifiedName()\n        break\n    }\n\n    return l === undefined ? '' : l\n  }\n}\n\nexport default LabelFactory\n","/**\n * @file Label Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry, ColormakerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport LabelFactory, { LabelType } from '../utils/label-factory'\nimport RadiusFactory from '../utils/radius-factory'\nimport StructureRepresentation, { StructureRepresentationData } from './structure-representation'\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer'\nimport { RepresentationParameters } from './representation';\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\n\nexport interface TextDataField {\n  position?: boolean\n  color?: boolean\n  radius?: boolean\n  text?: boolean\n}\n\n/**\n * Label representation parameter object. Extends {@link RepresentationParameters} and\n * {@link StructureRepresentationParameters}.\n *\n * @typedef {Object} LabelRepresentationParameters - label representation parameters\n *\n * @property {Integer} clipNear - position of camera near/front clipping plane\n *                                in percent of scene bounding box\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\n * @property {String} labelType - type of the label, one of:\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\n *                                 `labelText` list is used.\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\n *                                   to take effect\n * @property {String[]} labelFormat - sprintf-js format string, any attribute of\n *                                  {@link  AtomProxy} can be used\n * @property {String} labelGrouping - grouping of the label, one of:\n *                                 \"atom\", \"residue\".\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\n * @property {Float} xOffset - offset in x-direction\n * @property {Float} yOffset - offset in y-direction\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\n * @property {String} attachment - attachment of the label, one of:\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\n *                                 \"top-left\", \"top-center\", \"top-right\"\n * @property {Boolean} showBorder - show border/outline\n * @property {Color} borderColor - color of the border/outline\n * @property {Float} borderWidth - width of the border/outline\n * @property {Boolean} showBackground - show background rectangle\n * @property {Color} backgroundColor - color of the background\n * @property {Float} backgroundMargin - width of the background\n * @property {Float} backgroundOpacity - opacity of the background\n * @property {Boolean} fixedSize - show text with a fixed pixel size\n */\nexport interface LabelRepresentationParameters extends RepresentationParameters {\n  labelType: LabelType\n  labelText: string\n  labelFormat: string\n  labelGrouping: 'atom'|'residue'\n  fontFamily: 'sans-serif'|'monospace'|'serif'\n  fontStyle: 'normal'|'italic'\n  fontWeight: 'normal'|'bold'\n  xOffset: number\n  yOffset: number\n  zOffset: number\n  attachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\n  showBorder: boolean\n  borderColor: number\n  borderWidth: number\n  showBackground: boolean\n  backgroundColor: number\n  backgroundMargin: number\n  backgroundOpacity: number\n  fixedSize: boolean\n}\n/**\n * Label representation\n */\nclass LabelRepresentation extends StructureRepresentation {\n\n  protected labelType: LabelType\n  protected labelText: string\n  protected labelFormat: string\n  protected labelGrouping: 'atom'|'residue'\n  protected fontFamily: 'sans-serif'|'monospace'|'serif'\n  protected fontStyle: 'normal'|'italic'\n  protected fontWeight: 'normal'|'bold'\n  protected xOffset: number\n  protected yOffset: number\n  protected zOffset: number\n  protected attachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\n  protected showBorder: boolean\n  protected borderColor: number\n  protected borderWidth: number\n  protected showBackground: boolean\n  protected backgroundColor: number\n  protected backgroundMargin: number\n  protected backgroundOpacity: number\n  protected fixedSize: boolean\n\n  /**\n   * Create Label representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {LabelRepresentationParameters} params - label representation parameters\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<LabelRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'label'\n\n    this.parameters = Object.assign({\n\n      labelType: {\n        type: 'select', options: LabelFactory.types, rebuild: true\n      },\n      labelText: {\n        type: 'hidden', rebuild: true\n      },\n      labelFormat: {\n        type: 'text', rebuild: true\n      },\n      labelGrouping: {\n        type: 'select',\n        options: {\n          'atom': 'atom',\n          'residue': 'residue'\n        },\n        rebuild: true\n      },\n      fontFamily: {\n        type: 'select',\n        options: {\n          'sans-serif': 'sans-serif',\n          'monospace': 'monospace',\n          'serif': 'serif'\n        },\n        buffer: true\n      },\n      fontStyle: {\n        type: 'select',\n        options: {\n          'normal': 'normal',\n          'italic': 'italic'\n        },\n        buffer: true\n      },\n      fontWeight: {\n        type: 'select',\n        options: {\n          'normal': 'normal',\n          'bold': 'bold'\n        },\n        buffer: true\n      },\n      xOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\n      },\n      yOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\n      },\n      zOffset: {\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\n      },\n      attachment: {\n        type: 'select',\n        options: {\n          'bottom-left': 'bottom-left',\n          'bottom-center': 'bottom-center',\n          'bottom-right': 'bottom-right',\n          'middle-left': 'middle-left',\n          'middle-center': 'middle-center',\n          'middle-right': 'middle-right',\n          'top-left': 'top-left',\n          'top-center': 'top-center',\n          'top-right': 'top-right'\n        },\n        rebuild: true\n      },\n      showBorder: {\n        type: 'boolean', buffer: true\n      },\n      borderColor: {\n        type: 'color', buffer: true\n      },\n      borderWidth: {\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: true\n      },\n      showBackground: {\n        type: 'boolean', rebuild: true\n      },\n      backgroundColor: {\n        type: 'color', buffer: true\n      },\n      backgroundMargin: {\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\n      },\n      backgroundOpacity: {\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\n      },\n      fixedSize: {\n        type: 'boolean', buffer: true\n      }\n\n    }, this.parameters, {\n\n      side: null,\n      flatShaded: null,\n      wireframe: null,\n      linewidth: null,\n\n      roughness: null,\n      metalness: null,\n      diffuse: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<LabelRepresentationParameters>) {\n    const p = params || {}\n\n    this.labelType = defaults(p.labelType, 'res')\n    this.labelText = defaults(p.labelText, {})\n    this.labelFormat = defaults(p.labelFormat, '')\n    this.labelGrouping = defaults(p.labelGrouping, 'atom')\n    this.fontFamily = defaults(p.fontFamily, 'sans-serif')\n    this.fontStyle = defaults(p.fontStyle, 'normal')\n    this.fontWeight = defaults(p.fontWeight, 'bold')\n    this.xOffset = defaults(p.xOffset, 0.0)\n    this.yOffset = defaults(p.yOffset, 0.0)\n    this.zOffset = defaults(p.zOffset, 0.5)\n    this.attachment = defaults(p.attachment, 'bottom-left')\n    this.showBorder = defaults(p.showBorder, false)\n    this.borderColor = defaults(p.borderColor, 'lightgrey')\n    this.borderWidth = defaults(p.borderWidth, 0.15)\n    this.showBackground = defaults(p.showBackground, false)\n    this.backgroundColor = defaults(p.backgroundColor, 'lightgrey')\n    this.backgroundMargin = defaults(p.backgroundMargin, 0.5)\n    this.backgroundOpacity = defaults(p.backgroundOpacity, 1.0)\n    this.fixedSize = defaults(p.fixedSize, false)\n\n    super.init(p)\n  }\n\n  getTextData (sview: StructureView, what?: TextDataField) {\n    const p = this.getAtomParams(what)\n    const labelFactory = new LabelFactory(this.labelType, this.labelText, this.labelFormat)\n    let position: Float32Array, size: Float32Array, color: Float32Array, text: string[],\n      positionN: number[], sizeN: number[], colorN: number[]\n    if (this.labelGrouping === 'atom') {\n      const atomData = sview.getAtomData(p)\n      position = atomData.position as Float32Array\n      size = atomData.radius as Float32Array\n      color = atomData.color as Float32Array\n      if (!what || what.text) {\n        text = []\n        sview.eachAtom(ap => text.push(labelFactory.atomLabel(ap)))\n      }\n    } else if (this.labelGrouping === 'residue') {\n      if (!what || what.position) positionN = []\n      if (!what || what.color) colorN = []\n      if (!what || what.radius) sizeN = []\n      if (!what || what.text) text = []\n      if (p.colorParams) p.colorParams.structure = sview.getStructure()\n      const colormaker = ColormakerRegistry.getScheme(p.colorParams)\n      const radiusFactory = new RadiusFactory(p.radiusParams)\n      const ap1 = sview.getAtomProxy()\n\n      let i = 0\n      sview.eachResidue(rp => {\n        const i3 = i * 3\n        if (rp.isProtein() || rp.isNucleic()) {\n          ap1.index = rp.traceAtomIndex\n          if (!what || what.position) {\n            ap1.positionToArray(positionN, i3)\n          }\n        } else {\n          ap1.index = rp.atomOffset\n          if (!what || what.position) {\n            rp.positionToArray(positionN, i3)\n          }\n        }\n        if (!what || what.color) {\n          colormaker.atomColorToArray(ap1, colorN, i3)\n        }\n        if (!what || what.radius) {\n          sizeN[ i ] = radiusFactory.atomRadius(ap1)\n        }\n        if (!what || what.text) {\n          text.push(labelFactory.atomLabel(ap1))\n        }\n        ++i\n      })\n\n      if (!what || what.position) position = new Float32Array(positionN!)\n      if (!what || what.color) color = new Float32Array(colorN!)\n      if (!what || what.radius) size = new Float32Array(sizeN!)\n    }\n\n    return { position: position!, size: size!, color: color!, text: text! }\n  }\n\n  createData (sview: StructureView) {\n    const what: TextDataField = { position: true, color: true, radius: true, text: true }\n\n    const textBuffer = new TextBuffer(\n      this.getTextData(sview, what) as TextBufferData,\n      this.getBufferParams({\n        fontFamily: this.fontFamily,\n        fontStyle: this.fontStyle,\n        fontWeight: this.fontWeight,\n        xOffset: this.xOffset,\n        yOffset: this.yOffset,\n        zOffset: this.zOffset,\n        attachment: this.attachment,\n        showBorder: this.showBorder,\n        borderColor: this.borderColor,\n        borderWidth: this.borderWidth,\n        showBackground: this.showBackground,\n        backgroundColor: this.backgroundColor,\n        backgroundMargin: this.backgroundMargin,\n        backgroundOpacity: this.backgroundOpacity,\n        fixedSize: this.fixedSize\n      })\n    )\n\n    return { bufferList: [ textBuffer ] }\n  }\n\n  updateData (what: TextDataField, data: StructureRepresentationData) {\n    data.bufferList[ 0 ].setAttributes(this.getTextData(data.sview as StructureView, what))\n  }\n\n  getAtomRadius () {\n    return 0\n  }\n}\n\nRepresentationRegistry.add('label', LabelRepresentation)\n\nexport default LabelRepresentation\n","/**\n * @file Line Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { RepresentationRegistry } from '../globals'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport WideLineBuffer from '../buffer/wideline-buffer'\nimport { AtomPicker } from '../utils/picker'\n// @ts-ignore: unused import Volume required for declaration only\nimport { Structure, Volume } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport Viewer from '../viewer/viewer';\nimport AtomProxy from '../proxy/atom-proxy';\n// @ts-ignore: unused import Surface required for declaration only\nimport Surface from '../surface/surface';\n// @ts-ignore: unused import BondDataFields, BondDataParams required for declaration only\nimport { BondDataFields, BondDataParams } from '../structure/structure-data';\n\n/**\n * Determine which atoms in  a Structure[View] form no bonds to any other atoms\n * in that Structure.\n *\n * This differs from setting the selection to \"nonbonded\" as it finds atoms\n * that have no bonds within the current selection.\n * @param  {Structure} structure - The Structure or StructureView object\n * @return {AtomSet} AtomSet of lone atoms\n */\nfunction getLoneAtomSet (structure: Structure | StructureView) {\n  const atomSet = structure.getAtomSet()\n  const bondSet = structure.getBondSet()\n  const bp = structure.getBondProxy()\n  bondSet.forEach(function (idx) {\n    bp.index = idx\n    atomSet.clear(bp.atomIndex1)\n    atomSet.clear(bp.atomIndex2)\n  })\n  return atomSet\n}\n\nexport interface LineRepresentationParameters extends StructureRepresentationParameters {\n  multipleBond: 'off' | 'symmetric' | 'offset'\n  bondSpacing: number\n  linewidth: number\n  lines: boolean\n  crosses: 'off' | 'all' | 'lone'\n  crossSize: number\n}\n\nexport interface CrossData {\n  position1?: Float32Array\n  position2?: Float32Array\n  color?: Float32Array\n  color2?: Float32Array\n  picking?: AtomPicker\n}\n\n/**\n * Line representation\n */\nclass LineRepresentation extends StructureRepresentation {\n  protected multipleBond: 'off' | 'symmetric' | 'offset'\n  protected bondSpacing: number\n  protected linewidth: number\n  protected lines: boolean\n  protected crosses: 'off' | 'all' | 'lone'\n  protected crossSize: number\n  /**\n   * Create Line representation object\n   * @param {Structure} structure - the structure to be represented\n   * @param {Viewer} viewer - a viewer object\n   * @param {RepresentationParameters} params - representation parameters, plus the properties listed below\n   * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\n   * @param {Float} params.bondSpacing - spacing for multiple bond rendering\n   * @param {Integer} params.linewidth - width of lines\n   * @param {Boolean} params.lines - render bonds as lines\n   * @param {String} params.crosses - render atoms as crosses: \"off\", \"all\" or \"lone\" (default)\n   * @param {Float} params.crossSize - size of cross\n   * @param {null} params.flatShaded - not available\n   * @param {null} params.side - not available\n   * @param {null} params.wireframe - not available\n   * @param {null} params.roughness - not available\n   * @param {null} params.metalness - not available\n   * @param {null} params.diffuse - not available\n   */\n  constructor (structure: Structure, viewer: Viewer, params: Partial<LineRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'line'\n\n    this.parameters = Object.assign({\n\n      multipleBond: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'off': 'off',\n          'symmetric': 'symmetric',\n          'offset': 'offset'\n        }\n      },\n      bondSpacing: {\n        type: 'number', precision: 2, max: 2.0, min: 0.5\n      },\n      linewidth: {\n        type: 'integer', max: 50, min: 1, buffer: true\n      },\n      lines: {\n        type: 'boolean', rebuild: true\n      },\n      crosses: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'off': 'off',\n          'lone': 'lone',\n          'all': 'all'\n        }\n      },\n      crossSize: {\n        type: 'number', precision: 2, max: 2.0, min: 0.1\n      }\n\n    }, this.parameters, {\n\n      flatShaded: null,\n      side: null,\n      wireframe: null,\n\n      roughness: null,\n      metalness: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<LineRepresentationParameters>) {\n    var p = params || {}\n\n    this.multipleBond = defaults(p.multipleBond, 'off')\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\n    this.linewidth = defaults(p.linewidth, 2)\n    this.lines = defaults(p.lines, true)\n    this.crosses = defaults(p.crosses, 'lone')\n    this.crossSize = defaults(p.crossSize, 0.4)\n\n    super.init(p)\n  }\n\n  getAtomRadius (atom:AtomProxy) {\n    return 0.1\n  }\n\n  getBondParams (what: any, params?: Partial<LineRepresentationParameters>) {\n    params = Object.assign({\n      multipleBond: this.multipleBond,\n      bondSpacing: this.bondSpacing,\n      radiusParams: { 'type': 'size', 'size': 0.1, 'scale': 1 }\n    }, params)\n\n    return super.getBondParams(what, params)\n  }\n\n  _crossData (what: any, sview: StructureView) {\n    if (what) {\n      if (!what.position && !what.color) return\n    }\n\n    const p = {}\n    if (this.crosses === 'lone') {\n      Object.assign(p, {atomSet : getLoneAtomSet(sview)})\n    }\n\n    const atomData = sview.getAtomData(this.getAtomParams(what, p))\n    const crossData: CrossData = {}\n    const position = atomData.position\n    const color = atomData.color\n    const picking = atomData.picking\n\n    const size = (position! || color).length\n    const attrSize = size * 3\n\n    let cPosition1 = new Float32Array(0)\n    let cPosition2 = new Float32Array(0)\n    let cColor = new Float32Array(0)\n    let cColor2 = new Float32Array(0)\n    let cOffset: number = 0\n\n    let pickingArray = new Float32Array(0)\n\n    if (!what || what.position) {\n      cPosition1 = crossData.position1 = new Float32Array(attrSize)\n      cPosition2 = crossData.position2 = new Float32Array(attrSize)\n      cOffset = this.crossSize / 2\n    }\n    if (!what || what.color) {\n      cColor = crossData.color = new Float32Array(attrSize)\n      cColor2 = crossData.color2 = new Float32Array(attrSize)\n    }\n    if (!what || what.picking) {\n      pickingArray = new Float32Array(atomData.picking!.array!.length * 3) // Needs padding??\n    }\n\n    for (let v = 0; v < size; v++) {\n      const j = v * 3\n      const i = j * 3\n\n      if (!what || what.position) {\n        const x = position![ j ]\n        const y = position![ j + 1 ]\n        const z = position![ j + 2 ]\n\n        cPosition1[ i ] = x - cOffset!\n        cPosition1[ i + 1 ] = y\n        cPosition1[ i + 2 ] = z\n        cPosition2[ i ] = x + cOffset\n        cPosition2[ i + 1 ] = y\n        cPosition2[ i + 2 ] = z\n\n        cPosition1[ i + 3 ] = x\n        cPosition1[ i + 4 ] = y - cOffset\n        cPosition1[ i + 5 ] = z\n        cPosition2[ i + 3 ] = x\n        cPosition2[ i + 4 ] = y + cOffset\n        cPosition2[ i + 5 ] = z\n\n        cPosition1[ i + 6 ] = x\n        cPosition1[ i + 7 ] = y\n        cPosition1[ i + 8 ] = z - cOffset\n        cPosition2[ i + 6 ] = x\n        cPosition2[ i + 7 ] = y\n        cPosition2[ i + 8 ] = z + cOffset\n      }\n\n      if (!what || what.color) {\n        const cimax = i + 9\n        for (let ci = i; ci < cimax; ci += 3) {\n          cColor[ ci ] = cColor2[ ci ] = color![ j ]\n          cColor[ ci + 1 ] = cColor2[ ci + 1 ] = color![ j + 1 ]\n          cColor[ ci + 2 ] = cColor2[ ci + 2 ] = color![ j + 2 ]\n        }\n      }\n\n      if (!what || what.picking) {\n        pickingArray[ j ] =\n        pickingArray[ j + 1 ] =\n        pickingArray[ j + 2 ] = picking!.array![ v ]\n      }\n    }\n\n    if (!what || what.picking) {\n      crossData.picking = new AtomPicker(\n        pickingArray, picking!.structure\n      )\n    }\n\n    return crossData\n  }\n\n  createData (sview: StructureView) {\n    const what = { position: true, color: true, picking: true }\n\n    const bufferList = []\n\n    if (this.lines) {\n      const bondData = sview.getBondData(this.getBondParams(what))\n\n      const lineBuffer = new WideLineBuffer(\n        bondData, this.getBufferParams({ linewidth: this.linewidth })\n      )\n\n      bufferList.push(lineBuffer)\n    }\n\n    if (this.crosses !== 'off') {\n      const crossBuffer = new WideLineBuffer(\n        (this._crossData(what, sview) as CrossData),\n        this.getBufferParams({linewidth: this.linewidth})\n      )\n      bufferList.push(crossBuffer)\n    }\n\n    return {\n      bufferList: bufferList\n    }\n  }\n\n  updateData (what: any, data: StructureRepresentationData) {\n    let bufferIdx = 0\n\n    if (this.lines) {\n      const bondData = data.sview!.getBondData(this.getBondParams(what))\n      const lineAttributes = {}\n\n      if (!what || what.position) {\n        Object.assign(lineAttributes, {\n          position1: bondData.position1,\n          position2: bondData.position2\n        })\n      }\n\n      if (!what || what.color) {\n        Object.assign(lineAttributes, {\n          color: bondData.color,\n          color2: bondData.color2\n        })\n      }\n\n      data.bufferList[ bufferIdx++ ].setAttributes(lineAttributes)\n    }\n\n    if (this.crosses !== 'off') {\n      const crossData = this._crossData(what, (data.sview as StructureView))\n      const crossAttributes = {}\n\n      if (!what || what.position) {\n        Object.assign(crossAttributes, {\n          position1: crossData!.position1,\n          position2: crossData!.position2\n        })\n      }\n      if (!what || what.color) {\n        Object.assign(crossAttributes, {\n          color: crossData!.color,\n          color2: crossData!.color2\n        })\n      }\n\n      data.bufferList[ bufferIdx++ ].setAttributes(crossAttributes)\n    }\n  }\n\n  setParameters (params: Partial<LineRepresentationParameters>) {\n    var rebuild = false\n    var what = {}\n\n    if (params && (params.bondSpacing || params.crossSize)) {\n      Object.assign(what, { position: true })\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('line', LineRepresentation)\n\nexport default LineRepresentation\n","import { NumberArray, TypedArray } from \"../types\";\n\n/**\n * @file Grid\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\nexport interface iGrid {\n  data: TypedArray\n  index: (x: number, y: number, z: number) => number\n  set: (x: number, y: number, z: number, ...arg: number[]) => void\n  toArray: (x: number, y: number, z: number, array?: NumberArray, offset?: number) => void\n  fromArray: (x: number, y: number, z: number, array: NumberArray, offset?: number) => void\n  copy: (grid: iGrid) => void\n  // clone: () => iGrid\n}\n\nfunction makeGrid (length: number, width: number, height: number, DataCtor: any, elemSize: number) : iGrid {\n  DataCtor = DataCtor || Int32Array\n  elemSize = elemSize || 1\n\n  const data = new DataCtor(length * width * height * elemSize)\n\n  function index (x: number, y: number, z: number) {\n    return ((((x * width) + y) * height) + z) * elemSize\n  }\n\n  function set (x: number, y: number, z: number, ...args: number[]) {\n    const i = index(x, y, z)\n\n    for (let j = 0; j < elemSize; ++j) {\n      data[ i + j ] = args[ j ]\n    }\n  }\n\n  function toArray (x: number, y: number, z: number, array: NumberArray = [], offset: number = 0) {\n    const i = index(x, y, z)\n\n    for (let j = 0; j < elemSize; ++j) {\n      array[ offset + j ] = data[ i + j ]\n    }\n  }\n\n  function fromArray(x: number, y: number, z: number, array: NumberArray, offset: number = 0) {\n    const i = index(x, y, z)\n\n    for (let j = 0; j < elemSize; ++j) {\n      data[ i + j ] = array[ offset + j ]\n    }\n  }\n\n  function copy(grid: iGrid) {\n    data.set(grid.data)\n  }\n\n  // function clone() {\n  //   return makeGrid(\n  //     length, width, height, DataCtor, elemSize\n  //   ).copy(this)\n  // }\n  return { data, index, set, toArray, fromArray, copy }\n}\n\nexport { makeGrid }","/**\n * @file EDT Surface\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { VolumeSurface } from './volume'\nimport { iGrid, makeGrid } from '../geometry/grid'\nimport { computeBoundingBox } from '../math/vector-utils'\nimport { getRadiusDict, getSurfaceGrid } from './surface-utils'\nimport { TypedArray } from '../types';\n\ninterface EDTSurface {\n  getVolume: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean) => {\n    data: TypedArray\n    nx: number\n    ny: number\n    nz: number\n    atomindex: TypedArray\n  }\n  getSurface: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) => any\n}\n\nfunction EDTSurface (this: EDTSurface, coordList: Float32Array, radiusList: Float32Array, indexList: Uint16Array|Uint32Array) {\n  // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\n  // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n  //\n  // Permission to use, copy, modify, and distribute this program for\n  // any purpose, with or without fee, is hereby granted, provided that\n  // the notices on the head, the reference information, and this\n  // copyright notice appear in all copies or substantial portions of\n  // the Software. It is provided \"as is\" without express or implied\n  // warranty.\n  //\n  // ported to JavaScript by biochem_fan (http://webglmol.sourceforge.jp/)\n  // refactored by dkoes (https://github.com/dkoes)\n  //\n  // adapted to NGL by Alexander Rose\n\n  var radiusDict = getRadiusDict(radiusList as any)\n  var bbox = computeBoundingBox(coordList)\n  if (coordList.length === 0) {\n    bbox[ 0 ].set([ 0, 0, 0 ])\n    bbox[ 1 ].set([ 0, 0, 0 ])\n  }\n  var min = bbox[ 0 ]\n  var max = bbox[ 1 ]\n\n  var probeRadius: number, scaleFactor: number, cutoff: number\n  var pLength: number, pWidth: number, pHeight: number\n  var matrix: Float32Array, ptran: Float32Array\n  var depty: {[k: string]: TypedArray}, widxz: {[k: string]: number}\n  var cutRadius: number\n  var setAtomID: boolean\n  var vpBits: TypedArray, vpDistance: TypedArray, vpAtomID: TypedArray\n\n  function init (btype: boolean, _probeRadius: number, _scaleFactor: number, _cutoff: number, _setAtomID: boolean) {\n    probeRadius = _probeRadius || 1.4\n    scaleFactor = _scaleFactor || 2.0\n    setAtomID = _setAtomID || true\n\n    var maxRadius = 0\n    for (var radius in radiusDict) {\n      maxRadius = Math.max(maxRadius, radius as any)\n    }\n\n    var grid = getSurfaceGrid(\n      min, max, maxRadius, scaleFactor, btype ? probeRadius : 0\n    )\n\n    pLength = grid.dim[0]\n    pWidth = grid.dim[1]\n    pHeight = grid.dim[2]\n\n    matrix = grid.matrix\n    ptran = grid.tran\n    scaleFactor = grid.scaleFactor\n\n    // boundingatom caches\n    depty = {}\n    widxz = {}\n    boundingatom(btype)\n\n    cutRadius = probeRadius * scaleFactor\n\n    if (_cutoff) {\n      cutoff = _cutoff\n    } else {\n      // cutoff = Math.max( 0.1, -1.2 + scaleFactor * probeRadius );\n      cutoff = probeRadius / scaleFactor\n    }\n\n    vpBits = new Uint8Array(pLength * pWidth * pHeight)\n    if (btype) {\n      vpDistance = new Float64Array(pLength * pWidth * pHeight)\n    }\n    if (setAtomID) {\n      vpAtomID = new Int32Array(pLength * pWidth * pHeight)\n    }\n  }\n\n  // constants for vpBits bitmasks\n  var INOUT = 1\n  var ISDONE = 2\n  var ISBOUND = 4\n\n  var nb = [\n    new Int32Array([ 1, 0, 0 ]), new Int32Array([ -1, 0, 0 ]),\n    new Int32Array([ 0, 1, 0 ]), new Int32Array([ 0, -1, 0 ]),\n    new Int32Array([ 0, 0, 1 ]), new Int32Array([ 0, 0, -1 ]),\n    new Int32Array([ 1, 1, 0 ]), new Int32Array([ 1, -1, 0 ]),\n    new Int32Array([ -1, 1, 0 ]), new Int32Array([ -1, -1, 0 ]),\n    new Int32Array([ 1, 0, 1 ]), new Int32Array([ 1, 0, -1 ]),\n    new Int32Array([ -1, 0, 1 ]), new Int32Array([ -1, 0, -1 ]),\n    new Int32Array([ 0, 1, 1 ]), new Int32Array([ 0, 1, -1 ]),\n    new Int32Array([ 0, -1, 1 ]), new Int32Array([ 0, -1, -1 ]),\n    new Int32Array([ 1, 1, 1 ]), new Int32Array([ 1, 1, -1 ]),\n    new Int32Array([ 1, -1, 1 ]), new Int32Array([ -1, 1, 1 ]),\n    new Int32Array([ 1, -1, -1 ]), new Int32Array([ -1, -1, 1 ]),\n    new Int32Array([ -1, 1, -1 ]), new Int32Array([ -1, -1, -1 ])\n  ]\n\n  //\n\n  this.getVolume = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean) {\n    console.time('EDTSurface.getVolume')\n\n    var btype = type !== 'vws'\n\n    init(btype, probeRadius, scaleFactor, cutoff, setAtomID)\n\n    fillvoxels(btype)\n    buildboundary()\n\n    if (type === 'ms' || type === 'ses') {\n      fastdistancemap()\n    }\n\n    if (type === 'ses') {\n      boundingatom(false)\n      fillvoxelswaals()\n    }\n\n    marchingcubeinit(type)\n\n    // set atomindex in the volume data\n    for (var i = 0, il = vpAtomID.length; i < il; ++i) {\n      vpAtomID[ i ] = indexList[ vpAtomID[ i ] ]\n    }\n\n    console.timeEnd('EDTSurface.getVolume')\n\n    return {\n      data: vpBits,\n      nx: pHeight,\n      ny: pWidth,\n      nz: pLength,\n      atomindex: vpAtomID\n    }\n  }\n\n  this.getSurface = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) {\n    var vd = this.getVolume(\n      type, probeRadius, scaleFactor, cutoff, setAtomID\n    )\n\n    var volsurf = new (VolumeSurface as any)(\n      vd.data, vd.nx, vd.ny, vd.nz, vd.atomindex\n    ) as VolumeSurface\n\n    return (volsurf!.getSurface as any)(1, smooth, undefined, matrix, contour)\n  }\n\n  function boundingatom (btype: boolean) {\n    var r\n    var j\n    var k\n    var txz\n    var tdept\n    var sradius\n    var tradius\n    var widxzR\n    var deptyName\n    var indx\n\n    for (var name in radiusDict) {\n      r = parseFloat(name)\n\n      if (depty[ name ]) continue\n\n      if (!btype) {\n        tradius = r * scaleFactor + 0.5\n      } else {\n        tradius = (r + probeRadius) * scaleFactor + 0.5\n      }\n\n      sradius = tradius * tradius\n      widxzR = Math.floor(tradius) + 1\n      deptyName = new Int32Array(widxzR * widxzR)\n      indx = 0\n\n      for (j = 0; j < widxzR; ++j) {\n        for (k = 0; k < widxzR; ++k) {\n          txz = j * j + k * k\n\n          if (txz > sradius) {\n            deptyName[ indx ] = -1\n          } else {\n            tdept = Math.sqrt(sradius - txz)\n            deptyName[ indx ] = Math.floor(tdept)\n          }\n\n          ++indx\n        }\n      }\n\n      widxz[ name ] = widxzR\n      depty[ name ] = deptyName\n    }\n  }\n\n  function fillatom (idx: number) {\n    var ci = idx * 3\n    var ri = idx\n\n    var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk\n    var ii, jj, kk\n\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\n\n    var at = radiusList[ ri ]\n    var deptyAt = depty[ at ]\n    var nind = 0\n    var pWH = pWidth * pHeight\n    var n = widxz[ at ]\n\n    var deptyAtNind\n\n    for (i = 0; i < n; ++i) {\n      for (j = 0; j < n; ++j) {\n        deptyAtNind = deptyAt[ nind ]\n\n        if (deptyAtNind !== -1) {\n          for (ii = -1; ii < 2; ++ii) {\n            for (jj = -1; jj < 2; ++jj) {\n              for (kk = -1; kk < 2; ++kk) {\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                  mi = ii * i\n                  mk = kk * j\n\n                  for (k = 0; k <= deptyAtNind; ++k) {\n                    mj = k * jj\n                    si = cx + mi\n                    sj = cy + mj\n                    sk = cz + mk\n\n                    if (si < 0 || sj < 0 || sk < 0 ||\n                      si >= pLength || sj >= pWidth || sk >= pHeight\n                    ) {\n                      continue\n                    }\n\n                    var index = si * pWH + sj * pHeight + sk\n\n                    if (!setAtomID) {\n                      vpBits[ index ] |= INOUT\n                    } else {\n                      if (!(vpBits[ index ] & INOUT)) {\n                        vpBits[ index ] |= INOUT\n                        vpAtomID[ index ] = idx\n                      } else if (vpBits[ index ] & INOUT) {\n                        var ci2 = vpAtomID[ index ]\n\n                        if (ci2 !== ci) {\n                          ox = cx + mi - Math.floor(0.5 + scaleFactor * (coordList[ci2] + ptran[0]))\n                          oy = cy + mj - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 1] + ptran[1]))\n                          oz = cz + mk - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 2] + ptran[2]))\n\n                          if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\n                            vpAtomID[ index ] = idx\n                          }\n                        }\n                      }\n                    }\n                  } // k\n                } // if\n              } // kk\n            } // jj\n          } // ii\n        } // if\n\n        nind++\n      } // j\n    } // i\n  }\n\n  function fillvoxels (btype: boolean) {\n    console.time('EDTSurface fillvoxels')\n\n    var i, il\n\n    for (i = 0, il = vpBits.length; i < il; ++i) {\n      vpBits[ i ] = 0\n      if (btype) vpDistance[ i ] = -1.0\n      if (setAtomID) vpAtomID[ i ] = -1\n    }\n\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\n      fillatom(i)\n    }\n\n    for (i = 0, il = vpBits.length; i < il; ++i) {\n      if (vpBits[ i ] & INOUT) {\n        vpBits[ i ] |= ISDONE\n      }\n    }\n\n    console.timeEnd('EDTSurface fillvoxels')\n  }\n\n  function fillAtomWaals (idx: number) {\n    var ci = idx * 3\n    var ri = idx\n\n    var cx\n    var cy\n    var cz\n    var ox\n    var oy\n    var oz\n    var nind = 0\n\n    var mi\n    var mj\n    var mk\n    var si\n    var sj\n    var sk\n    var i\n    var j\n    var k\n    var ii\n    var jj\n    var kk\n    var n\n\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\n\n    var at = radiusList[ ri ]\n    var pWH = pWidth * pHeight\n\n    for (i = 0, n = widxz[at]; i < n; ++i) {\n      for (j = 0; j < n; ++j) {\n        if (depty[ at ][ nind ] !== -1) {\n          for (ii = -1; ii < 2; ++ii) {\n            for (jj = -1; jj < 2; ++jj) {\n              for (kk = -1; kk < 2; ++kk) {\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                  mi = ii * i\n                  mk = kk * j\n\n                  for (k = 0; k <= depty[ at ][ nind ]; ++k) {\n                    mj = k * jj\n                    si = cx + mi\n                    sj = cy + mj\n                    sk = cz + mk\n\n                    if (si < 0 || sj < 0 || sk < 0 ||\n                      si >= pLength || sj >= pWidth || sk >= pHeight\n                    ) {\n                      continue\n                    }\n\n                    var index = si * pWH + sj * pHeight + sk\n\n                    if (!(vpBits[ index ] & ISDONE)) {\n                      vpBits[ index ] |= ISDONE\n                      if (setAtomID) vpAtomID[ index ] = idx\n                    } else if (setAtomID) {\n                      var ci2 = vpAtomID[ index ]\n\n                      ox = Math.floor(0.5 + scaleFactor * (coordList[ ci2 ] + ptran[0]))\n                      oy = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 1 ] + ptran[1]))\n                      oz = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 2 ] + ptran[2]))\n\n                      if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\n                        vpAtomID[ index ] = idx\n                      }\n                    }\n                  } // k\n                } // if\n              } // kk\n            } // jj\n          } // ii\n        } // if\n\n        nind++\n      } // j\n    } // i\n  }\n\n  function fillvoxelswaals () {\n    var i, il\n\n    for (i = 0, il = vpBits.length; i < il; ++i) {\n      vpBits[ i ] &= ~ISDONE // not isdone\n    }\n\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\n      fillAtomWaals(i)\n    }\n  }\n\n  function buildboundary () {\n    var i, j, k\n    var pWH = pWidth * pHeight\n\n    for (i = 0; i < pLength; ++i) {\n      for (j = 0; j < pHeight; ++j) {\n        for (k = 0; k < pWidth; ++k) {\n          var index = i * pWH + k * pHeight + j\n\n          if (vpBits[ index ] & INOUT) {\n            // var flagbound = false;\n            var ii = 0\n\n            // while( !flagbound && ii < 26 ){\n            while (ii < 26) {\n              var ti = i + nb[ ii ][ 0 ]\n              var tj = j + nb[ ii ][ 2 ]\n              var tk = k + nb[ ii ][ 1 ]\n\n              if (ti > -1 && ti < pLength &&\n                        tk > -1 && tk < pWidth &&\n                        tj > -1 && tj < pHeight &&\n                        !(vpBits[ ti * pWH + tk * pHeight + tj ] & INOUT)\n              ) {\n                vpBits[ index ] |= ISBOUND\n                // flagbound = true;\n                break\n              } else {\n                ii++\n              }\n            }\n          }\n        } // k\n      } // j\n    } // i\n  }\n\n  function fastdistancemap () {\n    console.time('EDTSurface fastdistancemap')\n\n    var i, j, k, n\n\n    var boundPoint = makeGrid(\n      pLength, pWidth, pHeight, Uint16Array, 3\n    )\n    var pWH = pWidth * pHeight\n    var cutRSq = cutRadius * cutRadius\n\n    var totalsurfacevox = 0\n    // var totalinnervox = 0;\n\n    var index\n\n    for (i = 0; i < pLength; ++i) {\n      for (j = 0; j < pWidth; ++j) {\n        for (k = 0; k < pHeight; ++k) {\n          index = i * pWH + j * pHeight + k\n\n          vpBits[ index ] &= ~ISDONE\n\n          if (vpBits[ index ] & INOUT) {\n            if (vpBits[ index ] & ISBOUND) {\n              boundPoint.set(\n                i, j, k,\n                i, j, k\n              )\n\n              vpDistance[ index ] = 0\n              vpBits[ index ] |= ISDONE\n\n              totalsurfacevox += 1\n            }/* else{\n                totalinnervox += 1;\n            } */\n          }\n        }\n      }\n    }\n\n    var inarray = new Int32Array(3 * totalsurfacevox)\n    var positin = 0\n    var outarray = new Int32Array(3 * totalsurfacevox)\n    var positout = 0\n\n    for (i = 0; i < pLength; ++i) {\n      for (j = 0; j < pWidth; ++j) {\n        for (k = 0; k < pHeight; ++k) {\n          index = i * pWH + j * pHeight + k\n\n          if (vpBits[ index ] & ISBOUND) {\n            inarray[ positin ] = i\n            inarray[ positin + 1 ] = j\n            inarray[ positin + 2 ] = k\n            positin += 3\n\n            vpBits[ index ] &= ~ISBOUND\n          }\n        }\n      }\n    }\n\n    do {\n      positout = fastoneshell(inarray, boundPoint, positin, outarray)\n      positin = 0\n\n      for (i = 0, n = positout; i < n; i += 3) {\n        index = pWH * outarray[ i ] + pHeight * outarray[ i + 1 ] + outarray[ i + 2 ]\n        vpBits[ index ] &= ~ISBOUND\n\n        if (vpDistance[ index ] <= 1.0404 * cutRSq) {\n          // if( vpDistance[ index ] <= 1.02 * cutRadius ){\n\n          inarray[ positin ] = outarray[ i ]\n          inarray[ positin + 1 ] = outarray[ i + 1 ]\n          inarray[ positin + 2 ] = outarray[ i + 2 ]\n          positin += 3\n        }\n      }\n    } while (positin > 0)\n\n    // var cutsf = Math.max( 0, scaleFactor - 0.5 );\n    // cutoff = cutRadius - 0.5 / ( 0.1 + cutsf );\n    var cutoffSq = cutoff * cutoff\n\n    var index2\n    var bp = new Uint16Array(3)\n\n    for (i = 0; i < pLength; ++i) {\n      for (j = 0; j < pWidth; ++j) {\n        for (k = 0; k < pHeight; ++k) {\n          index = i * pWH + j * pHeight + k\n          vpBits[ index ] &= ~ISBOUND\n\n          // ses solid\n\n          if (vpBits[ index ] & INOUT) {\n            if (!(vpBits[ index ] & ISDONE) ||\n              ((vpBits[ index ] & ISDONE) && vpDistance[ index ] >= cutoffSq)\n            ) {\n              vpBits[ index ] |= ISBOUND\n\n              if (setAtomID && (vpBits[ index ] & ISDONE)) {\n                boundPoint.toArray(i, j, k, bp)\n                index2 = bp[ 0 ] * pWH + bp[ 1 ] * pHeight + bp[ 2 ]\n\n                vpAtomID[ index ] = vpAtomID[ index2 ]\n              }\n            }\n          }\n        }\n      }\n    }\n\n    console.timeEnd('EDTSurface fastdistancemap')\n  }\n\n  function fastoneshell (inarray: Int32Array, boundPoint: iGrid, positin: number, outarray: Int32Array) {\n    // *allocout,voxel2\n    // ***boundPoint, int*\n    // outnum, int *elimi)\n    var tx, ty, tz\n    var dx, dy, dz\n    var i, j, n\n    var square\n    var index\n    var nbj\n    var bp = new Uint16Array(3)\n    var positout = 0\n\n    if (positin === 0) {\n      return positout\n    }\n\n    var tnvix = -1\n    var tnviy = -1\n    var tnviz = -1\n\n    var pWH = pWidth * pHeight\n\n    for (i = 0, n = positin; i < n; i += 3) {\n      tx = inarray[ i ]\n      ty = inarray[ i + 1 ]\n      tz = inarray[ i + 2 ]\n      boundPoint.toArray(tx, ty, tz, bp)\n\n      for (j = 0; j < 6; ++j) {\n        nbj = nb[ j ]\n        tnvix = tx + nbj[ 0 ]\n        tnviy = ty + nbj[ 1 ]\n        tnviz = tz + nbj[ 2 ]\n\n        if (tnvix < pLength && tnvix > -1 &&\n          tnviy < pWidth && tnviy > -1 &&\n          tnviz < pHeight && tnviz > -1\n        ) {\n          index = tnvix * pWH + pHeight * tnviy + tnviz\n\n          if ((vpBits[ index ] & INOUT) && !(vpBits[ index ] & ISDONE)) {\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            vpDistance[ index ] = square\n            vpBits[ index ] |= ISDONE\n            vpBits[ index ] |= ISBOUND\n\n            outarray[ positout ] = tnvix\n            outarray[ positout + 1 ] = tnviy\n            outarray[ positout + 2 ] = tnviz\n            positout += 3\n          } else if ((vpBits[ index ] & INOUT) && (vpBits[ index ] & ISDONE)) {\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            if (square < vpDistance[ index ]) {\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n              vpDistance[ index ] = square\n\n              if (!(vpBits[ index ] & ISBOUND)) {\n                vpBits[ index ] |= ISBOUND\n\n                outarray[ positout ] = tnvix\n                outarray[ positout + 1 ] = tnviy\n                outarray[ positout + 2 ] = tnviz\n                positout += 3\n              }\n            }\n          }\n        }\n      }\n    }\n\n    for (i = 0, n = positin; i < n; i += 3) {\n      tx = inarray[ i ]\n      ty = inarray[ i + 1 ]\n      tz = inarray[ i + 2 ]\n      boundPoint.toArray(tx, ty, tz, bp)\n\n      for (j = 6; j < 18; j++) {\n        nbj = nb[ j ]\n        tnvix = tx + nbj[ 0 ]\n        tnviy = ty + nbj[ 1 ]\n        tnviz = tz + nbj[ 2 ]\n\n        if (tnvix < pLength && tnvix > -1 &&\n          tnviy < pWidth && tnviy > -1 &&\n          tnviz < pHeight && tnviz > -1\n        ) {\n          index = tnvix * pWH + pHeight * tnviy + tnviz\n\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            vpDistance[index] = square\n            vpBits[index] |= ISDONE\n            vpBits[index] |= ISBOUND\n\n            outarray[ positout ] = tnvix\n            outarray[ positout + 1 ] = tnviy\n            outarray[ positout + 2 ] = tnviz\n            positout += 3\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            if (square < vpDistance[index]) {\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n              vpDistance[index] = square\n\n              if (!(vpBits[index] & ISBOUND)) {\n                vpBits[index] |= ISBOUND\n\n                outarray[ positout ] = tnvix\n                outarray[ positout + 1 ] = tnviy\n                outarray[ positout + 2 ] = tnviz\n                positout += 3\n              }\n            }\n          }\n        }\n      }\n    }\n\n    for (i = 0, n = positin; i < n; i += 3) {\n      tx = inarray[ i ]\n      ty = inarray[ i + 1 ]\n      tz = inarray[ i + 2 ]\n      boundPoint.toArray(tx, ty, tz, bp)\n\n      for (j = 18; j < 26; j++) {\n        nbj = nb[ j ]\n        tnvix = tx + nbj[ 0 ]\n        tnviy = ty + nbj[ 1 ]\n        tnviz = tz + nbj[ 2 ]\n\n        if (tnvix < pLength && tnvix > -1 &&\n          tnviy < pWidth && tnviy > -1 &&\n          tnviz < pHeight && tnviz > -1\n        ) {\n          index = tnvix * pWH + pHeight * tnviy + tnviz\n\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            vpDistance[index] = square\n            vpBits[index] |= ISDONE\n            vpBits[index] |= ISBOUND\n\n            outarray[ positout ] = tnvix\n            outarray[ positout + 1 ] = tnviy\n            outarray[ positout + 2 ] = tnviz\n            positout += 3\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\n            dx = tnvix - bp[ 0 ]\n            dy = tnviy - bp[ 1 ]\n            dz = tnviz - bp[ 2 ]\n            square = dx * dx + dy * dy + dz * dz\n            // square = Math.sqrt( square );\n\n            if (square < vpDistance[index]) {\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\n              vpDistance[index] = square\n\n              if (!(vpBits[index] & ISBOUND)) {\n                vpBits[index] |= ISBOUND\n\n                outarray[ positout ] = tnvix\n                outarray[ positout + 1 ] = tnviy\n                outarray[ positout + 2 ] = tnviz\n                positout += 3\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return positout\n  }\n\n  function marchingcubeinit (stype: string) {\n    var i\n    var n = vpBits.length\n\n    if (stype === 'vws') {\n      for (i = 0; i < n; ++i) {\n        vpBits[ i ] &= ~ISBOUND\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\n      }\n    } else if (stype === 'ms') { // ses without vdw => ms\n      for (i = 0; i < n; ++i) {\n        vpBits[ i ] &= ~ISDONE\n        if (vpBits[ i ] & ISBOUND) {\n          vpBits[ i ] |= ISDONE\n        }\n        vpBits[ i ] &= ~ISBOUND\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\n      }\n    } else if (stype === 'ses') {\n      for (i = 0; i < n; ++i) {\n        if ((vpBits[ i ] & ISBOUND) && (vpBits[ i ] & ISDONE)) {\n          vpBits[ i ] &= ~ISBOUND\n        } else if ((vpBits[ i ] & ISBOUND) && !(vpBits[ i ] & ISDONE)) {\n          vpBits[ i ] |= ISDONE\n        }\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\n      }\n    } else if (stype === 'sas') {\n      for (i = 0; i < n; ++i) {\n        vpBits[ i ] &= ~ISBOUND\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\n      }\n    }\n  }\n}\nObject.assign(EDTSurface, {__deps: [\n  getSurfaceGrid, getRadiusDict, VolumeSurface, computeBoundingBox, makeGrid\n]})\n\nexport default EDTSurface\n","/**\n * @file AV Surface\n * @author Fred Ludlow <fred.ludlow@gmail.com>\n * @private\n */\n\nimport { getSurfaceGrid } from './surface-utils'\nimport { VolumeSurface } from './volume'\nimport { uniformArray } from '../math/array-utils'\nimport {\n  computeBoundingBox, v3multiplyScalar, v3cross, v3normalize\n} from '../math/vector-utils'\nimport { defaults } from '../utils'\nimport { NumberArray } from '../types';\n\n\n/**\n * Modifed from SpatialHash\n *\n * Main differences are:\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\n *   (see withinRadii method)\n *\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\n * @class\n * @param {Float32Array} atomsX - x coordinates\n * @param {Float32Array} atomsY - y coordinates\n * @param {Float32Array} atomsZ - z coordinates\n * @param {Float32Array} atomsR - atom radii\n * @param {Float32Array} min - xyz min coordinates\n * @param {Float32Array} max - xyz max coordinates\n * @param {Float} maxDistance - max distance\n */\nexport interface iAVHash {\n  neighbourListLength: number\n  withinRadii: (x: number, y: number, z: number, rExtra: number, out: Int32Array) => void\n}\n\n\nfunction makeAVHash (atomsX: Float32Array, atomsY: Float32Array, atomsZ: Float32Array, atomsR: Float32Array, min: Float32Array, max: Float32Array, maxDistance: number): iAVHash {\n  maxDistance = Math.max(0.1, maxDistance) // Avoid maxDistance of zero, see #802\n  var nAtoms = atomsX.length\n\n  var minX = min[ 0 ]\n  var minY = min[ 1 ]\n  var minZ = min[ 2 ]\n\n  var maxX = max[ 0 ]\n  var maxY = max[ 1 ]\n  var maxZ = max[ 2 ]\n\n  function hashFunc (w: number, minW: number) {\n    return Math.floor((w - minW) / maxDistance)\n  }\n\n  var iDim = hashFunc(maxX, minX) + 1\n  var jDim = hashFunc(maxY, minY) + 1\n  var kDim = hashFunc(maxZ, minZ) + 1\n\n  var nCells = iDim * jDim * kDim\n\n  var jkDim = jDim * kDim\n\n  /* Get cellID for cartesian x,y,z */\n  var cellID = function (x: number, y: number, z: number) {\n    return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ)\n  }\n\n  /* Initial building, could probably be optimized further */\n  var preHash = [] // preHash[ cellID ] = [ atomId1, atomId2 ];\n\n  for (var i = 0; i < nAtoms; i++) {\n    var cid = cellID(atomsX[ i ], atomsY[ i ], atomsZ[ i ])\n\n    if (preHash[ cid ] === undefined) {\n      preHash[ cid ] = [ i ]\n    } else {\n      preHash[ cid ].push(i)\n    }\n  }\n\n  var cellOffsets = new Uint32Array(nCells)\n  var cellLengths = new Uint16Array(nCells)\n  var data = new Uint32Array(nAtoms)\n\n  var offset = 0\n  var maxCellLength = 0\n\n  for (i = 0; i < nCells; i++) {\n    var start = cellOffsets[ i ] = offset\n\n    var subArray = preHash[ i ]\n\n    if (subArray !== undefined) {\n      for (var j = 0; j < subArray.length; j++) {\n        data[ offset ] = subArray[ j ]\n        offset++\n      }\n    }\n\n    var cellLength = offset - start\n    cellLengths[ i ] = cellLength\n\n    if (cellLength > maxCellLength) { maxCellLength = cellLength }\n  }\n\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\n  const neighbourListLength = (27 * maxCellLength) + 1\n\n  /**\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\n   * of x,y,z\n   *\n   * -1 in out array indicates the end of the list\n   *\n   * @param  {Float} x - x coordinate\n   * @param  {Float} y - y coordinate\n   * @param  {Float} z - z coordinate\n   * @param  {Float} rExtra - additional radius\n   * @param  {Float32Array} out - pre-allocated output array\n   * @return {undefined}\n   */\n  const withinRadii = function (x: number, y: number, z: number, rExtra: number, out: Int32Array) {\n    var outIdx = 0\n\n    var nearI = hashFunc(x, minX)\n    var nearJ = hashFunc(y, minY)\n    var nearK = hashFunc(z, minZ)\n\n    var loI = Math.max(0, nearI - 1)\n    var loJ = Math.max(0, nearJ - 1)\n    var loK = Math.max(0, nearK - 1)\n\n    var hiI = Math.min(iDim, nearI + 2)\n    var hiJ = Math.min(jDim, nearJ + 2)\n    var hiK = Math.min(kDim, nearK + 2)\n\n    for (var i = loI; i < hiI; ++i) {\n      var iOffset = i * jkDim\n\n      for (var j = loJ; j < hiJ; ++j) {\n        var jOffset = j * kDim\n\n        for (var k = loK; k < hiK; ++k) {\n          var cid = iOffset + jOffset + k\n\n          var cellStart = cellOffsets[ cid ]\n          var cellEnd = cellStart + cellLengths[ cid ]\n\n          for (var dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\n            var atomIndex = data[ dataIndex ]\n            var dx = atomsX[ atomIndex ] - x\n            var dy = atomsY[ atomIndex ] - y\n            var dz = atomsZ[ atomIndex ] - z\n            var rSum = atomsR[ atomIndex ] + rExtra\n\n            if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\n              out[ outIdx++ ] = data[ dataIndex ]\n            }\n          }\n        }\n      }\n    }\n    // Add terminator\n    out[ outIdx ] = -1\n  }\n  return {\n    neighbourListLength: neighbourListLength,\n    withinRadii: withinRadii\n  }\n}\n\ninterface AVSurface {\n  getSurface: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) => any\n}\nfunction AVSurface (this: AVSurface, coordList: Float32Array, radiusList: Float32Array, indexList: Uint16Array|Uint32Array) {\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\n  // by Fred Ludlow.\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\n  //\n  // Should work as a drop-in alternative to EDTSurface (though some of\n  // the EDT paramters are not relevant in this method).\n\n  const nAtoms = radiusList.length\n\n  const x = new Float32Array(nAtoms)\n  const y = new Float32Array(nAtoms)\n  const z = new Float32Array(nAtoms)\n\n  for (let i = 0; i < nAtoms; i++) {\n    const ci = 3 * i\n    x[ i ] = coordList[ ci ]\n    y[ i ] = coordList[ ci + 1 ]\n    z[ i ] = coordList[ ci + 2 ]\n  }\n\n  let bbox = computeBoundingBox(coordList)\n  if (coordList.length === 0) {\n    bbox[ 0 ].set([ 0, 0, 0 ])\n    bbox[ 1 ].set([ 0, 0, 0 ])\n  }\n  const min = bbox[0]\n  const max = bbox[1]\n\n  let r: Float32Array, r2: Float32Array // Atom positions, expanded radii (squared)\n  let maxRadius: number\n\n  // Parameters\n  let probeRadius: number, scaleFactor: number, setAtomID: boolean, probePositions: number\n\n  // Cache last value for obscured test\n  let lastClip = -1\n\n  // Grid params\n  let dim: Float32Array, matrix: Float32Array, grid: NumberArray, atomIndex: Int32Array\n\n  // grid indices -> xyz coords\n  let gridx: Float32Array, gridy: Float32Array, gridz: Float32Array\n\n  // Lookup tables:\n  let sinTable: Float32Array, cosTable: Float32Array\n\n  // Spatial Hash\n  let hash: iAVHash\n\n  // Neighbour array to be filled by hash\n  let neighbours: Int32Array\n\n  // Vectors for Torus Projection\n  const atob = new Float32Array([ 0.0, 0.0, 0.0 ])\n  const mid = new Float32Array([ 0.0, 0.0, 0.0 ])\n  const n1 = new Float32Array([ 0.0, 0.0, 0.0 ])\n  const n2 = new Float32Array([ 0.0, 0.0, 0.0 ])\n\n  let ngTorus: number\n\n  function init (_probeRadius?: number, _scaleFactor?: number, _setAtomID?: boolean, _probePositions?: number) {\n    probeRadius = defaults(_probeRadius, 1.4)\n    scaleFactor = defaults(_scaleFactor, 2.0)\n    setAtomID = defaults(_setAtomID, true)\n    probePositions = defaults(_probePositions, 30)\n\n    r = new Float32Array(nAtoms)\n    r2 = new Float32Array(nAtoms)\n\n    for (let i = 0; i < r.length; ++i) {\n      var rExt = radiusList[ i ] + probeRadius\n      r[ i ] = rExt\n      r2[ i ] = rExt * rExt\n    }\n\n    maxRadius = 0\n    for (let j = 0; j < r.length; ++j) {\n      if (r[ j ] > maxRadius) maxRadius = r[ j ]\n    }\n\n    initializeGrid()\n    initializeAngleTables()\n    initializeHash()\n\n    lastClip = -1\n  }\n\n  function fillGridDim (a: Float32Array, start: number, step: number) {\n    for (let i = 0; i < a.length; i++) {\n      a[i] = start + (step * i)\n    }\n  }\n\n  function initializeGrid () {\n    const surfGrid = getSurfaceGrid(\n      min, max, maxRadius, scaleFactor, 0.0\n    )\n\n    scaleFactor = surfGrid.scaleFactor\n    dim = surfGrid.dim\n    matrix = surfGrid.matrix\n\n    ngTorus = Math.max(5, 2 + Math.floor(probeRadius * scaleFactor))\n\n    grid = uniformArray(dim[0] * dim[1] * dim[2], -1001.0)\n\n    atomIndex = new Int32Array(grid.length)\n\n    gridx = new Float32Array(dim[0])\n    gridy = new Float32Array(dim[1])\n    gridz = new Float32Array(dim[2])\n\n    fillGridDim(gridx, min[0], 1 / scaleFactor)\n    fillGridDim(gridy, min[1], 1 / scaleFactor)\n    fillGridDim(gridz, min[2], 1 / scaleFactor)\n  }\n\n  function initializeAngleTables () {\n    var theta = 0.0\n    var step = 2 * Math.PI / probePositions\n\n    cosTable = new Float32Array(probePositions)\n    sinTable = new Float32Array(probePositions)\n    for (var i = 0; i < probePositions; i++) {\n      cosTable[ i ] = Math.cos(theta)\n      sinTable[ i ] = Math.sin(theta)\n      theta += step\n    }\n  }\n\n  function initializeHash () {\n    hash = makeAVHash(x, y, z, r, min, max, 2.01 * maxRadius)\n    neighbours = new Int32Array(hash.neighbourListLength)\n  }\n\n  function obscured (x: number, y: number, z: number, a: number, b: number) {\n    // Is the point at x,y,z obscured by any of the atoms\n    // specifeid by indices in neighbours. Ignore indices\n    // a and b (these are the relevant atoms in projectPoints/Torii)\n\n    // Cache the last clipped atom (as very often the same one in\n    // subsequent calls)\n    let ai: number\n\n    if (lastClip !== -1) {\n      ai = lastClip\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\n        return ai\n      } else {\n        lastClip = -1\n      }\n    }\n\n    var ni = 0\n    ai = neighbours[ ni ]\n    while (ai >= 0) {\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\n        lastClip = ai\n        return ai\n      }\n      ai = neighbours[ ++ni ]\n    }\n\n    lastClip = -1\n\n    return -1\n  }\n\n  function singleAtomObscures (ai: number, x: number, y: number, z: number) {\n    var ci = 3 * ai\n    var ra2 = r2[ ai ]\n    var dx = coordList[ ci ] - x\n    var dy = coordList[ ci + 1 ] - y\n    var dz = coordList[ ci + 2 ] - z\n    var d2 = dx * dx + dy * dy + dz * dz\n\n    return d2 < ra2\n  }\n\n  function projectPoints () {\n    // For each atom:\n    //     Iterate over a subsection of the grid, for each point:\n    //         If current value < 0.0, unvisited, set positive\n    //\n    //         In any case: Project this point onto surface of the atomic sphere\n    //         If this projected point is not obscured by any other atom\n    //             Calcualte delta distance and set grid value to minimum of\n    //             itself and delta\n\n    // Should we alias frequently accessed closure variables??\n    // Assume JS engine capable of optimizing this\n    // anyway...\n\n    for (var i = 0; i < nAtoms; i++) {\n      var ax = x[ i ]\n      var ay = y[ i ]\n      var az = z[ i ]\n      var ar = r[ i ]\n      var ar2 = r2[ i ]\n\n      hash.withinRadii(ax, ay, az, ar, neighbours)\n\n      // Number of grid points, round this up...\n      var ng = Math.ceil(ar * scaleFactor)\n\n      // Center of the atom, mapped to grid points (take floor)\n      var iax = Math.floor(scaleFactor * (ax - min[ 0 ]))\n      var iay = Math.floor(scaleFactor * (ay - min[ 1 ]))\n      var iaz = Math.floor(scaleFactor * (az - min[ 2 ]))\n\n      // Extents of grid to consider for this atom\n      var minx = Math.max(0, iax - ng)\n      var miny = Math.max(0, iay - ng)\n      var minz = Math.max(0, iaz - ng)\n\n      // Add two to these points:\n      // - iax are floor'd values so this ensures coverage\n      // - these are loop limits (exclusive)\n      var maxx = Math.min(dim[ 0 ], iax + ng + 2)\n      var maxy = Math.min(dim[ 1 ], iay + ng + 2)\n      var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\n\n      for (var ix = minx; ix < maxx; ix++) {\n        var dx = gridx[ ix ] - ax\n        var xoffset = dim[ 1 ] * dim[ 2 ] * ix\n\n        for (var iy = miny; iy < maxy; iy++) {\n          var dy = gridy[ iy ] - ay\n          var dxy2 = dx * dx + dy * dy\n          var xyoffset = xoffset + dim[ 2 ] * iy\n\n          for (var iz = minz; iz < maxz; iz++) {\n            var dz = gridz[ iz ] - az\n            var d2 = dxy2 + dz * dz\n\n            if (d2 < ar2) {\n              var idx = iz + xyoffset\n\n              if (grid[idx] < 0.0) {\n                // Unvisited, make positive\n                grid[ idx ] = -grid[ idx ]\n              }\n              // Project on to the surface of the sphere\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\n              var d = Math.sqrt(d2)\n              var ap = ar / d\n              var spx = dx * ap\n              var spy = dy * ap\n              var spz = dz * ap\n\n              spx += ax\n              spy += ay\n              spz += az\n\n              if (obscured(spx, spy, spz, i, -1) === -1) {\n                var dd = ar - d\n                if (dd < grid[ idx ]) {\n                  grid[ idx ] = dd\n                  if (setAtomID) atomIndex[ idx ] = i\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function projectTorii () {\n    for (var i = 0; i < nAtoms; i++) {\n      hash.withinRadii(x[ i ], y[ i ], z[ i ], r[ i ], neighbours)\n      var ia = 0\n      var ni = neighbours[ ia ]\n      while (ni >= 0) {\n        if (i < ni) {\n          projectTorus(i, ni)\n        }\n        ni = neighbours[ ++ia ]\n      }\n    }\n  }\n\n  function projectTorus (a: number, b: number) {\n    var r1 = r[ a ]\n    var r2 = r[ b ]\n    var dx = atob[ 0 ] = x[ b ] - x[ a ]\n    var dy = atob[ 1 ] = y[ b ] - y[ a ]\n    var dz = atob[ 2 ] = z[ b ] - z[ a ]\n    var d2 = dx * dx + dy * dy + dz * dz\n\n    // This check now redundant as already done in AVHash.withinRadii\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\n\n    var d = Math.sqrt(d2)\n\n    // Find angle between a->b vector and the circle\n    // of their intersection by cosine rule\n    var cosA = (r1 * r1 + d * d - r2 * r2) / (2.0 * r1 * d)\n\n    // distance along a->b at intersection\n    var dmp = r1 * cosA\n\n    v3normalize(atob, atob)\n\n    // Create normal to line\n    normalToLine(n1 as any, atob)\n    v3normalize(n1, n1)\n\n    // Cross together for second normal vector\n    v3cross(n2, atob, n1)\n    v3normalize(n2, n2)\n\n    // r is radius of circle of intersection\n    var rInt = Math.sqrt(r1 * r1 - dmp * dmp)\n\n    v3multiplyScalar(n1, n1, rInt)\n    v3multiplyScalar(n2, n2, rInt)\n    v3multiplyScalar(atob, atob, dmp)\n\n    mid[ 0 ] = atob[ 0 ] + x[ a ]\n    mid[ 1 ] = atob[ 1 ] + y[ a ]\n    mid[ 2 ] = atob[ 2 ] + z[ a ]\n\n    lastClip = -1\n\n    var ng = ngTorus\n\n    for (var i = 0; i < probePositions; i++) {\n      var cost = cosTable[ i ]\n      var sint = sinTable[ i ]\n\n      var px = mid[ 0 ] + cost * n1[ 0 ] + sint * n2[ 0 ]\n      var py = mid[ 1 ] + cost * n1[ 1 ] + sint * n2[ 1 ]\n      var pz = mid[ 2 ] + cost * n1[ 2 ] + sint * n2[ 2 ]\n\n      if (obscured(px, py, pz, a, b) === -1) {\n        // As above, iterate over our grid...\n        // px, py, pz in grid coords\n        var iax = Math.floor(scaleFactor * (px - min[ 0 ]))\n        var iay = Math.floor(scaleFactor * (py - min[ 1 ]))\n        var iaz = Math.floor(scaleFactor * (pz - min[ 2 ]))\n\n        var minx = Math.max(0, iax - ng)\n        var miny = Math.max(0, iay - ng)\n        var minz = Math.max(0, iaz - ng)\n\n        var maxx = Math.min(dim[ 0 ], iax + ng + 2)\n        var maxy = Math.min(dim[ 1 ], iay + ng + 2)\n        var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\n\n        for (var ix = minx; ix < maxx; ix++) {\n          dx = px - gridx[ ix ]\n          var xoffset = dim[ 1 ] * dim[ 2 ] * ix\n\n          for (var iy = miny; iy < maxy; iy++) {\n            dy = py - gridy[ iy ]\n            var dxy2 = dx * dx + dy * dy\n            var xyoffset = xoffset + dim[ 2 ] * iy\n\n            for (var iz = minz; iz < maxz; iz++) {\n              dz = pz - gridz[ iz ]\n              d2 = dxy2 + dz * dz\n              var idx = iz + xyoffset\n              var current = grid[ idx ]\n\n              if (current > 0.0 && d2 < (current * current)) {\n                grid[ idx ] = Math.sqrt(d2)\n                if (setAtomID) {\n                  // Is this grid point closer to a or b?\n                  // Take dot product of atob and gridpoint->p (dx, dy, dz)\n                  const dp = dx * atob[ 0 ] + dy * atob [ 1 ] + dz * atob[ 2 ]\n                  atomIndex[ idx ] = dp < 0.0 ? b : a\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function normalToLine (out: Int32Array, p: Float32Array) {\n    out[ 0 ] = out[ 1 ] = out[ 2 ] = 1.0\n    if (p[ 0 ] !== 0) {\n      out[ 0 ] = (p[ 1 ] + p[ 2 ]) / -p[ 0 ]\n    } else if (p[ 1 ] !== 0) {\n      out[ 1 ] = (p[ 0 ] + p[ 2 ]) / -p[ 1 ]\n    } else if (p[ 2 ] !== 0) {\n      out[ 2 ] = (p[ 0 ] + p[ 1 ]) / -p[ 2 ]\n    }\n    return out\n  }\n\n  function fixNegatives () {\n    for (var i = 0; i < grid.length; i++) {\n      if (grid[ i ] < 0) grid[ i ] = 0\n    }\n  }\n\n  function fixAtomIDs () {\n    for (var i = 0; i < atomIndex.length; i++) {\n      atomIndex[ i ] = indexList[ atomIndex[ i ] ]\n    }\n  }\n\n  function getVolume (probeRadius: number, scaleFactor: number, setAtomID: boolean) {\n    // Basic steps are:\n    // 1) Initialize\n    // 2) Project points\n    // 3) Project torii\n\n    console.time('AVSurface.getVolume')\n\n    console.time('AVSurface.init')\n    init(probeRadius, scaleFactor, setAtomID)\n    console.timeEnd('AVSurface.init')\n\n    console.time('AVSurface.projectPoints')\n    projectPoints()\n    console.timeEnd('AVSurface.projectPoints')\n\n    console.time('AVSurface.projectTorii')\n    projectTorii()\n    console.timeEnd('AVSurface.projectTorii')\n    fixNegatives()\n    fixAtomIDs()\n\n    console.timeEnd('AVSurface.getVolume')\n  }\n\n  this.getSurface = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) {\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\n    // function signature\n\n    getVolume(probeRadius, scaleFactor, setAtomID)\n\n    var volsurf = new (VolumeSurface as any)(\n      grid, dim[ 2 ], dim[ 1 ], dim[ 0 ], atomIndex\n    ) as VolumeSurface\n\n    return volsurf.getSurface!(probeRadius, false, undefined, matrix, contour)\n  }\n}\nObject.assign(AVSurface, {__deps: [\n  getSurfaceGrid, VolumeSurface, uniformArray, computeBoundingBox,\n  v3multiplyScalar, v3cross, v3normalize,\n  makeAVHash,\n  defaults\n]})\n\nexport { AVSurface, makeAVHash }\n","/**\n * @file Molecular Surface\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { WorkerRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Worker from '../worker/worker'\nimport EDTSurface from './edt-surface'\nimport { AVSurface } from './av-surface'\nimport Surface, { SurfaceData } from './surface'\nimport { Structure } from '../ngl';\nimport { AtomData, RadiusParams } from '../structure/structure-data';\n\nWorkerRegistry.add('molsurf', function func (e: any, callback: (data: any, buffers: any[])=> void) {\n  const a = e.data.args\n  const p = e.data.params\n  if (a && p) {\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\n    const surf = new (SurfClass as any)(a.coordList, a.radiusList, a.indexList) as AVSurface|EDTSurface\n    const sd = surf.getSurface(\n      p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour\n    ) as SurfaceData\n    const transferList = [ sd.position.buffer, sd.index!.buffer ]\n    if (sd.normal) transferList.push(sd.normal.buffer)\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\n    const data = {\n      sd: sd,\n      p: p\n    }\n    callback(data, transferList)\n  }\n}, [ EDTSurface, AVSurface ])\n\n/**\n * Molecular surface parameter object.\n * @typedef {Object} MolecularSurfaceParameters - stage parameters\n * @property {String} type - \"av\" or \"edt\"\n * @property {Number} probeRadius - probe radius\n * @property {Number} scaleFactor - higher for better quality\n * @property {Integer} smooth - number of smoothing cycles to apply\n * @property {String} name - name for created surface\n */\nexport interface MolecularSurfaceParameters {\n  type: 'av'|'edt'\n  probeRadius: number\n  scaleFactor: number\n  smooth: number\n  name: string\n  cutoff: number\n  contour: boolean,\n  radiusParams: RadiusParams\n}\n/**\n * Create Molecular surfaces\n */\nclass MolecularSurface {\n  structure: Structure\n  worker: Worker|undefined\n\n  constructor (structure: Structure) {\n    this.structure = structure\n  }\n\n  _getAtomData (params: Partial<MolecularSurfaceParameters>): AtomData {\n    return this.structure.getAtomData({\n      what: { position: true, radius: true, index: true },\n      radiusParams: defaults(params.radiusParams, {\n        type: 'vdw', scale: 1.0\n      })\n    })\n  }\n\n  _makeSurface (sd: SurfaceData, p: Partial<MolecularSurfaceParameters>) {\n    var surface = new Surface(p.name!, '', sd)\n\n    surface.info.type = p.type\n    surface.info.probeRadius = p.probeRadius\n    surface.info.scaleFactor = p.scaleFactor\n    surface.info.smooth = p.smooth\n    surface.info.cutoff = p.cutoff\n\n    return surface\n  }\n\n  /**\n   * Get molecular surface\n   * @param {MolecularSurfaceParameters} params - parameters for surface creation\n   * @return {Surface} the surface\n   */\n  getSurface (params: Partial<MolecularSurfaceParameters>) {\n    const p = params || {}\n\n    const atomData = this._getAtomData(params)\n    const coordList = atomData.position\n    const radiusList = atomData.radius\n    const indexList = atomData.index\n\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\n    const surf = new (SurfClass as any)(coordList, radiusList, indexList) as AVSurface|EDTSurface\n    const sd = surf.getSurface(\n      p.type!, p.probeRadius!, p.scaleFactor!, p.cutoff!, true, p.smooth!, p.contour!\n    )\n\n    return this._makeSurface(sd, p)\n  }\n\n  /**\n   * Get molecular surface asynchronous\n   * @param {MolecularSurfaceParameters} params - parameters for surface creation\n   * @param {function(surface: Surface)} callback - function to be called after surface is created\n   * @return {undefined}\n   */\n  getSurfaceWorker (params: MolecularSurfaceParameters, callback: (s: Surface) => void) {\n    const p = Object.assign({}, params)\n\n    if (window.hasOwnProperty('Worker')) {\n      if (this.worker === undefined) {\n        this.worker = new Worker('molsurf')\n      }\n\n      const atomData = this._getAtomData(params)\n      const coordList = atomData.position\n      const radiusList = atomData.radius\n      const indexList = atomData.index\n\n      const msg = {\n        args: {\n          coordList: coordList,\n          radiusList: radiusList,\n          indexList: indexList\n        },\n        params: p\n      }\n\n      const transferList = [\n        coordList!.buffer, radiusList!.buffer, indexList!.buffer\n      ]\n\n      this.worker.post(msg, transferList,\n\n        (e: any) => {\n          callback(this._makeSurface(e.data.sd, p))\n        },\n\n        (e: string) => {\n          console.warn(\n            'MolecularSurface.getSurfaceWorker error - trying without worker', e\n          )\n          this.worker!.terminate()\n          this.worker = undefined\n          const surface = this.getSurface(p)\n          callback(surface)\n        }\n\n      )\n    } else {\n      const surface = this.getSurface(p)\n      callback(surface)\n    }\n  }\n\n  /**\n   * Cleanup\n   * @return {undefined}\n   */\n  dispose () {\n    if (this.worker) this.worker.terminate()\n  }\n}\n\nexport default MolecularSurface\n","/**\n * @file Molecular Surface Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport MolecularSurface, { MolecularSurfaceParameters } from '../surface/molecular-surface'\nimport SurfaceBuffer from '../buffer/surface-buffer'\nimport ContourBuffer from '../buffer/contour-buffer'\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\nimport Selection from '../selection/selection'\nimport Viewer from '../viewer/viewer';\n// @ts-ignore: unused import Volume required for declaration only\nimport { Structure, Vector3, Volume } from '../ngl';\nimport StructureView from '../structure/structure-view';\nimport { SurfaceDataFields } from './surface-representation';\nimport Surface, {SurfaceData} from '../surface/surface';\n\nexport interface MolecularSurfaceRepresentationParameters extends StructureRepresentationParameters {\n  surfaceType: 'vws'|'sas'|'ms'|'ses'|'av'\n  probeRadius: number\n  smooth: number\n  scaleFactor: number\n  cutoff: number\n  contour: boolean\n  background: boolean\n  opaqueBack: boolean\n  filterSele: string\n  colorVolume: any\n  useWorker: boolean\n}\n\nexport interface MolecularSurfaceInfo {\n  molsurf?: MolecularSurface\n  sele?: string\n  surface?: Surface\n}\n\n/**\n * Molecular Surface Representation\n */\nclass MolecularSurfaceRepresentation extends StructureRepresentation {\n  protected surfaceType: 'vws'|'sas'|'ms'|'ses'|'av'\n  protected probeRadius: number\n  protected smooth: number\n  protected scaleFactor: number\n  protected cutoff: number\n  protected contour: boolean\n  protected background: boolean\n  protected opaqueBack: boolean\n  protected filterSele: string\n  protected colorVolume: any\n  protected useWorker: boolean\n\n  protected __infoList: MolecularSurfaceInfo[]\n  protected __forceNewMolsurf: boolean\n  protected __sele: string\n  protected __surfaceParams: string\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<MolecularSurfaceRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'surface'\n\n    this.parameters = Object.assign({\n\n      surfaceType: {\n        type: 'select',\n        rebuild: true,\n        options: {\n          'vws': 'vws',\n          'sas': 'sas',\n          'ms': 'ms',\n          'ses': 'ses',\n          'av': 'av'\n        }\n      },\n      probeRadius: {\n        type: 'number',\n        precision: 1,\n        max: 20,\n        min: 0,\n        rebuild: true\n      },\n      smooth: {\n        type: 'integer',\n        precision: 1,\n        max: 10,\n        min: 0,\n        rebuild: true\n      },\n      scaleFactor: {\n        type: 'number',\n        precision: 1,\n        max: 5,\n        min: 0,\n        rebuild: true\n      },\n      cutoff: {\n        type: 'number',\n        precision: 2,\n        max: 50,\n        min: 0,\n        rebuild: true\n      },\n      contour: {\n        type: 'boolean', rebuild: true\n      },\n      background: {\n        type: 'boolean', rebuild: true // FIXME\n      },\n      opaqueBack: {\n        type: 'boolean', buffer: true\n      },\n      filterSele: {\n        type: 'text', rebuild: true\n      },\n      colorVolume: {\n        type: 'hidden'\n      },\n      useWorker: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters, {\n\n      radius: null,\n      scale: null\n\n    })\n\n    this.__infoList = []\n\n    // TODO find a more direct way\n    this.structure.signals.refreshed.add(() => {\n      this.__forceNewMolsurf = true\n    })\n\n    this.toBePrepared = true\n\n    this.init(params)\n  }\n\n  init (params: Partial<MolecularSurfaceRepresentationParameters>) {\n    const p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\n    p.disablePicking = defaults(p.disablePicking, true)\n\n    this.surfaceType = defaults(p.surfaceType, 'ms')\n    this.probeRadius = defaults(p.probeRadius, 1.4)\n    this.smooth = defaults(p.smooth, 2)\n    this.scaleFactor = defaults(p.scaleFactor, 2.0)\n    this.cutoff = defaults(p.cutoff, 0.0)\n    this.contour = defaults(p.contour, false)\n    this.background = defaults(p.background, false)\n    this.opaqueBack = defaults(p.opaqueBack, true)\n    this.filterSele = defaults(p.filterSele, '')\n    this.colorVolume = defaults(p.colorVolume, undefined)\n    this.useWorker = defaults(p.useWorker, true)\n\n    super.init(params)\n  }\n\n  prepareData (sview: StructureView, i: number, callback: (i: number) => void) {\n    let info: MolecularSurfaceInfo = this.__infoList[ i ]\n    if (!info) {\n      info = {}\n      this.__infoList[ i ] = info\n    }\n\n    if (!info.molsurf || info.sele !== sview.selection.string) {\n      if (this.filterSele) {\n        const sviewFilter = sview.structure.getView(new Selection(this.filterSele))\n        const bbSize = sviewFilter.boundingBox.getSize(new Vector3())\n        const maxDim = Math.max(bbSize.x, bbSize.y, bbSize.z)\n        const asWithin = sview.getAtomSetWithinPoint(sviewFilter.center, (maxDim / 2) + 6.0)\n        sview = sview.getView(\n          new Selection(sview.getAtomSetWithinSelection(asWithin, 3).toSeleString())\n        )\n        if (sview.atomCount === 0) {\n          callback(i)\n          return\n        }\n      }\n\n      info.sele = sview.selection.string\n      info.molsurf = new MolecularSurface(sview)\n\n      const p = this.getSurfaceParams()\n      const onSurfaceFinish = (surface: Surface) => {\n        info.surface = surface\n        callback(i)\n      }\n\n      if (this.useWorker) {\n        info.molsurf.getSurfaceWorker(p as MolecularSurfaceParameters, onSurfaceFinish)\n      } else {\n        onSurfaceFinish(info.molsurf.getSurface(p as {name: string, type: 'av'|'edt' } & MolecularSurfaceRepresentationParameters))\n      }\n    } else {\n      callback(i)\n    }\n  }\n\n  prepare (callback: () => void) {\n    if (this.__forceNewMolsurf || this.__sele !== this.selection.string ||\n          this.__surfaceParams !== JSON.stringify(this.getSurfaceParams())) {\n      this.__infoList.forEach((info: MolecularSurfaceInfo) => {\n        if (info && info.molsurf) {\n          info.molsurf.dispose()\n        }\n      })\n      this.__infoList.length = 0\n    }\n\n    if (this.structureView.atomCount === 0) {\n      callback()\n      return\n    }\n\n    const after = () => {\n      this.__sele = this.selection.string\n      this.__surfaceParams = JSON.stringify(this.getSurfaceParams())\n      this.__forceNewMolsurf = false\n      callback()\n    }\n\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\n    const assembly = this.structure.biomolDict[ name ]\n\n    if (assembly) {\n      assembly.partList.forEach((part, i) => {\n        const sview = part.getView(this.structureView)\n        this.prepareData(sview as StructureView, i, (_i) => {\n          if (_i === assembly.partList.length - 1) after()\n        })\n      })\n    } else {\n      this.prepareData(this.structureView, 0, after)\n    }\n  }\n\n  createData (sview: StructureView, i: number) {\n    const info = this.__infoList[ i ]\n    const surface = info.surface\n\n    if (!surface) {\n      // Surface creation bailed (no surface generated for this sview)\n      return\n    }\n\n    const surfaceData = {\n      position: surface!.getPosition(),\n      color: surface!.getColor(this.getColorParams()),\n      index: surface!.getFilteredIndex(this.filterSele, sview)\n    }\n\n    const bufferList = []\n\n    if (surface.contour) {\n      const contourBuffer = new ContourBuffer(\n        surfaceData,\n        this.getBufferParams({\n          wireframe: false\n        })\n      )\n\n      bufferList.push(contourBuffer)\n    } else {\n      Object.assign(surfaceData, {\n        normal: surface.getNormal(),\n        picking: surface.getPicking(sview.getStructure())\n      })\n\n      const surfaceBuffer = new SurfaceBuffer(\n        surfaceData,\n        this.getBufferParams({\n          background: this.background,\n          opaqueBack: this.opaqueBack,\n          dullInterior: false\n        })\n      )\n\n      if (this.getBufferParams().side == 'double') {\n        const doubleSidedBuffer = new DoubleSidedBuffer(surfaceBuffer)\n        bufferList.push(doubleSidedBuffer)\n      }\n      else {\n        bufferList.push(surfaceBuffer)\n      }\n    }\n\n    return { bufferList, info } as StructureRepresentationData\n  }\n\n  updateData (what: SurfaceDataFields, data: StructureRepresentationData) {\n    const surfaceData: Partial<SurfaceData> = {}\n\n    if (what.position || what.radius) {\n      this.__forceNewMolsurf = true\n      this.build()\n      return\n    }\n\n    if (what.color) {\n      surfaceData.color = data.info.surface.getColor(this.getColorParams())\n    }\n\n    if (what.index) {\n      surfaceData.index = data.info.surface.getFilteredIndex(this.filterSele, data.sview)\n    }\n\n    data.bufferList[ 0 ].setAttributes(surfaceData)\n  }\n\n  setParameters (params: Partial<MolecularSurfaceRepresentationParameters>, what: Partial<SurfaceDataFields> = {}, rebuild?: boolean) {\n    if (params && params.filterSele) {\n      what.index = true\n    }\n\n    if (params && params.colorVolume !== undefined) {\n      what.color = true\n    }\n\n    // forbid setting wireframe to true when contour is true\n    if (params && params.wireframe && (\n      params.contour || (params.contour === undefined && this.contour)\n    )\n    ) {\n      params.wireframe = false\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n\n  getSurfaceParams (params: Partial<MolecularSurfaceRepresentationParameters> = {}) {\n    const p = Object.assign({\n      type: this.surfaceType as string,\n      probeRadius: this.probeRadius as number,\n      scaleFactor: this.scaleFactor as number,\n      smooth: this.smooth && !this.contour,\n      cutoff: this.cutoff as number,\n      contour: this.contour as boolean,\n      useWorker: this.useWorker as boolean,\n      radiusParams: this.getRadiusParams()\n    }, params)\n\n    return p\n  }\n\n  getColorParams () {\n    const p = super.getColorParams()\n\n    p.volume = this.colorVolume\n\n    return p\n  }\n\n  getAtomRadius () {\n    return 0\n  }\n\n  clear () {\n    super.clear()\n  }\n\n  dispose () {\n    this.__infoList.forEach((info: MolecularSurfaceInfo) => {\n      if (info && info.molsurf) {\n        info.molsurf.dispose()\n      }\n    })\n    this.__infoList.length = 0\n\n    super.dispose()\n  }\n}\n\nRepresentationRegistry.add('surface', MolecularSurfaceRepresentation)\n\nexport default MolecularSurfaceRepresentation\n","/**\n * @file Point Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport PointBuffer from '../buffer/point-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport { AtomDataFields } from '../structure/structure-data';\n\nexport interface PointRepresentationParameters extends StructureRepresentationParameters {\n  pointSize: number\n  sizeAttenuation: boolean\n  sortParticles: boolean\n  useTexture: boolean\n  alphaTest: number\n  forceTransparent: boolean\n  edgeBleach: number\n}\n\n/**\n * Point Representation\n */\nclass PointRepresentation extends StructureRepresentation {\n  protected pointSize: number\n  protected sizeAttenuation: boolean\n  protected sortParticles: boolean\n  protected useTexture: boolean\n  protected alphaTest: number\n  protected forceTransparent: boolean\n  protected edgeBleach: number\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<PointRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'point'\n\n    this.parameters = Object.assign({\n\n      pointSize: {\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\n      },\n      sizeAttenuation: {\n        type: 'boolean', buffer: true\n      },\n      sortParticles: {\n        type: 'boolean', rebuild: true\n      },\n      useTexture: {\n        type: 'boolean', buffer: true\n      },\n      alphaTest: {\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\n      },\n      forceTransparent: {\n        type: 'boolean', buffer: true\n      },\n      edgeBleach: {\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\n      }\n\n    }, this.parameters, {\n\n      flatShaded: null,\n      wireframe: null,\n      linewidth: null,\n      side: null,\n\n      roughness: null,\n      metalness: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<PointRepresentationParameters>) {\n    var p = params || {}\n\n    this.pointSize = defaults(p.pointSize, 1)\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\n    this.sortParticles = defaults(p.sortParticles, false)\n    this.useTexture = defaults(p.useTexture, false)\n    this.alphaTest = defaults(p.alphaTest, 0.5)\n    this.forceTransparent = defaults(p.forceTransparent, false)\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    var what = { position: true, color: true, picking: true }\n    var atomData = sview.getAtomData(this.getAtomParams(what))\n\n    var pointBuffer = new PointBuffer(\n      atomData,\n      this.getBufferParams({\n        pointSize: this.pointSize,\n        sizeAttenuation: this.sizeAttenuation,\n        sortParticles: this.sortParticles,\n        useTexture: this.useTexture,\n        alphaTest: this.alphaTest,\n        forceTransparent: this.forceTransparent,\n        edgeBleach: this.edgeBleach\n      })\n    )\n\n    return {\n      bufferList: [ pointBuffer ]\n    }\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    var atomData = data.sview!.getAtomData(this.getAtomParams(what))\n    var pointData = {}\n\n    if (!what || what.position) {\n      Object.assign(pointData, {position: atomData.position})\n    }\n\n    if (!what || what.color) {\n      Object.assign(pointData, {color: atomData.color})\n    }\n\n    data.bufferList[ 0 ].setAttributes(pointData)\n  }\n\n  getAtomRadius () {\n    return 0.1\n  }\n}\n\nRepresentationRegistry.add('point', PointRepresentation)\n\nexport default PointRepresentation\n","/**\n * @file Ribbon Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport '../shader/Ribbon.vert'\n\nimport { getUintArray } from '../utils'\nimport { serialArray } from '../math/array-utils'\nimport MeshBuffer from './mesh-buffer'\nimport { BufferParameters, BufferData } from './buffer'\nimport {Log} from \"../globals\";\n\nconst quadIndices = new Uint16Array([\n  0, 1, 2,\n  1, 3, 2\n])\n\nexport interface RibbonBufferData extends BufferData {\n  normal: Float32Array\n  dir: Float32Array\n  size: Float32Array\n}\n\nfunction getSize(data: RibbonBufferData){\n  const n = (data.position!.length / 3) - 1\n  const n4 = n * 4\n  const x = n4 * 3\n  return x\n}\n\n/**\n * Ribbon buffer. Draws a thin ribbon.\n */\nclass RibbonBuffer extends MeshBuffer {\n  vertexShader = 'Ribbon.vert'\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.normal - normals\n   * @param  {Float32Array} data.dir - binormals\n   * @param  {Float32Array} data.color - colors\n   * @param  {Float32Array} data.size - sizes\n   * @param  {Picker} data.picking - picking ids\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: RibbonBufferData, params: Partial<BufferParameters> = {}) {\n    super({\n      position: new Float32Array(getSize(data)),\n      color: new Float32Array(getSize(data)),\n      index: getUintArray(getSize(data), getSize(data) / 3),\n      normal: new Float32Array(getSize(data)),\n      picking: data.picking\n    }, params)\n\n    const n = (data.position!.length / 3) - 1\n    const n4 = n * 4\n    const x = n4 * 3\n\n    this.addAttributes({\n      'dir': { type: 'v3', value: new Float32Array(x) }\n    })\n    this.addAttributes({\n      'size': { type: 'f', value: new Float32Array(n4) }\n    })\n\n    data.primitiveId = serialArray(n)\n    this.setAttributes(data)\n\n    this.makeIndex()\n  }\n\n  setAttributes (data: Partial<RibbonBufferData> = {}) {\n    const n4 = this.size\n    const n = n4 / 4\n\n    const attributes = this.geometry.attributes as any  // TODO\n\n    let position, normal, size, dir, color, primitiveId\n    let aPosition, aNormal, aSize, aDir, aColor, aPrimitiveId\n\n    if (data.position) {\n      position = data.position\n      aPosition = attributes.position.array\n      attributes.position.needsUpdate = true\n    }\n\n    if (data.normal) {\n      normal = data.normal\n      aNormal = attributes.normal.array\n      attributes.normal.needsUpdate = true\n    }\n\n    if (data.size) {\n      size = data.size\n      aSize = attributes.size.array\n      attributes.size.needsUpdate = true\n    }\n\n    if (data.dir) {\n      dir = data.dir\n      aDir = attributes.dir.array\n      attributes.dir.needsUpdate = true\n    }\n\n    if (data.color) {\n      color = data.color\n      aColor = attributes.color.array\n      attributes.color.needsUpdate = true\n    }\n\n    if (data.primitiveId) {\n      primitiveId = data.primitiveId\n      aPrimitiveId = attributes.primitiveId.array\n      attributes.primitiveId.needsUpdate = true\n    }\n\n    let v, i, k, p, l, v3\n    let currSize\n    let prevSize = size ? size[ 0 ] : null\n\n    for (v = 0; v < n; ++v) {\n      v3 = v * 3\n      k = v * 3 * 4\n      l = v * 4\n\n      if (position) {\n        aPosition[ k ] = aPosition[ k + 3 ] = position[ v3 ]\n        aPosition[ k + 1 ] = aPosition[ k + 4 ] = position[ v3 + 1 ]\n        aPosition[ k + 2 ] = aPosition[ k + 5 ] = position[ v3 + 2 ]\n\n        aPosition[ k + 6 ] = aPosition[ k + 9 ] = position[ v3 + 3 ]\n        aPosition[ k + 7 ] = aPosition[ k + 10 ] = position[ v3 + 4 ]\n        aPosition[ k + 8 ] = aPosition[ k + 11 ] = position[ v3 + 5 ]\n      }\n\n      if (normal) {\n        aNormal[ k ] = aNormal[ k + 3 ] = -normal[ v3 ]\n        aNormal[ k + 1 ] = aNormal[ k + 4 ] = -normal[ v3 + 1 ]\n        aNormal[ k + 2 ] = aNormal[ k + 5 ] = -normal[ v3 + 2 ]\n\n        aNormal[ k + 6 ] = aNormal[ k + 9 ] = -normal[ v3 + 3 ]\n        aNormal[ k + 7 ] = aNormal[ k + 10 ] = -normal[ v3 + 4 ]\n        aNormal[ k + 8 ] = aNormal[ k + 11 ] = -normal[ v3 + 5 ]\n      }\n\n      for (i = 0; i < 4; ++i) {\n        p = k + 3 * i\n\n        if (color) {\n          aColor[ p ] = color[ v3 ]\n          aColor[ p + 1 ] = color[ v3 + 1 ]\n          aColor[ p + 2 ] = color[ v3 + 2 ]\n        }\n\n        if (primitiveId) {\n          aPrimitiveId[ l + i ] = primitiveId[ v ]\n        }\n      }\n\n      if (size) {\n        currSize = size[ v ]\n\n        if (prevSize !== size[ v ]) {\n          aSize[ l ] = prevSize\n          aSize[ l + 1 ] = prevSize\n          aSize[ l + 2 ] = currSize\n          aSize[ l + 3 ] = currSize\n        } else {\n          aSize[ l ] = currSize\n          aSize[ l + 1 ] = currSize\n          aSize[ l + 2 ] = currSize\n          aSize[ l + 3 ] = currSize\n        }\n\n        prevSize = currSize\n      }\n\n      if (dir) {\n        aDir[ k ] = dir[ v3 ]\n        aDir[ k + 1 ] = dir[ v3 + 1 ]\n        aDir[ k + 2 ] = dir[ v3 + 2 ]\n\n        aDir[ k + 3 ] = -dir[ v3 ]\n        aDir[ k + 4 ] = -dir[ v3 + 1 ]\n        aDir[ k + 5 ] = -dir[ v3 + 2 ]\n\n        aDir[ k + 6 ] = dir[ v3 + 3 ]\n        aDir[ k + 7 ] = dir[ v3 + 4 ]\n        aDir[ k + 8 ] = dir[ v3 + 5 ]\n\n        aDir[ k + 9 ] = -dir[ v3 + 3 ]\n        aDir[ k + 10 ] = -dir[ v3 + 4 ]\n        aDir[ k + 11 ] = -dir[ v3 + 5 ]\n      }\n    }\n  }\n\n  makeIndex () {\n    const index = this.geometry.getIndex()\n    if (!index) { Log.error('Index is null'); return; }\n    const meshIndex = index.array as Uint32Array|Uint16Array\n    const n = meshIndex.length / 4 / 3\n\n    for (let v = 0; v < n; ++v) {\n      const ix = v * 6\n      const it = v * 4\n\n      meshIndex.set(quadIndices, ix)\n      for (let s = 0; s < 6; ++s) {\n        meshIndex[ ix + s ] += it\n      }\n    }\n  }\n}\n\nexport default RibbonBuffer\n","/**\n * @file Ribbon Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Spline, { SplineParameters } from '../geometry/spline'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\nimport RibbonBuffer from '../buffer/ribbon-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport AtomProxy from '../proxy/atom-proxy';\nimport StructureView from '../structure/structure-view';\nimport Polymer from '../proxy/polymer';\n\nexport interface RibbonRepresentationParameters extends StructureRepresentationParameters {\n  subdiv: number\n  tension: number\n  smoothSheet: boolean\n}\n\n/**\n * Ribbon Representation\n */\nclass RibbonRepresentation extends StructureRepresentation {\n  protected subdiv: number\n  protected tension: number\n  protected smoothSheet: boolean\n  \n  constructor (structure: Structure, viewer: Viewer, params: Partial<RibbonRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'ribbon'\n\n    this.parameters = Object.assign({\n\n      subdiv: {\n        type: 'integer', max: 50, min: 1, rebuild: true\n      },\n      tension: {\n        type: 'number', precision: 1, max: 1.0, min: 0.1\n      },\n      smoothSheet: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters, {\n\n      side: null,\n      wireframe: null,\n      linewidth: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<RibbonRepresentationParameters>) {\n    var p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\n    p.radiusType = defaults(p.radiusType, 'sstruc')\n    p.radiusScale = defaults(p.radiusScale, 4.0)\n\n    if (p.quality === 'low') {\n      this.subdiv = 3\n    } else if (p.quality === 'medium') {\n      this.subdiv = 6\n    } else if (p.quality === 'high') {\n      this.subdiv = 12\n    } else {\n      this.subdiv = defaults(p.subdiv, 6)\n    }\n\n    this.tension = defaults(p.tension, NaN)\n    this.smoothSheet = defaults(p.smoothSheet, false)\n\n    super.init(p)\n  }\n\n  getSplineParams (params?: Partial<SplineParameters>) {\n    return Object.assign({\n      subdiv: this.subdiv,\n      tension: this.tension,\n      directional: true,\n      smoothSheet: this.smoothSheet\n    }, params)\n  }\n\n  getAtomRadius (atom: AtomProxy) {\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\n  }\n\n  createData (sview: StructureView) {\n    var bufferList: RibbonBuffer[] = []\n    var polymerList: Polymer[] = []\n\n    this.structure.eachPolymer(polymer => {\n      if (polymer.residueCount < 4) return\n      polymerList.push(polymer)\n\n      var spline = new Spline(polymer, this.getSplineParams())\n      var subPos = spline.getSubdividedPosition()\n      var subOri = spline.getSubdividedOrientation()\n      var subCol = spline.getSubdividedColor(this.getColorParams())\n      var subPick = spline.getSubdividedPicking()\n      var subSize = spline.getSubdividedSize(this.getRadiusParams())\n\n      bufferList.push(\n        new RibbonBuffer(\n          ({\n            position: subPos.position,\n            normal: subOri.binormal,\n            dir: subOri.normal,\n            color: subCol.color,\n            size: subSize.size,\n            picking: subPick.picking\n          }),\n          this.getBufferParams()\n        )\n      )\n    }, sview.getSelection())\n\n    return {\n      bufferList: bufferList,\n      polymerList: polymerList\n    }\n  }\n\n  updateData (what: {position?: boolean, radius?: boolean, scale?: boolean, color?: boolean}, data: {polymerList: Polymer[], bufferList: RibbonBuffer[]}) {\n    what = what || {}\n\n    var i = 0\n    var n = data.polymerList.length\n\n    for (i = 0; i < n; ++i) {\n      var bufferData = {}\n      var spline = new Spline(data.polymerList[ i ], this.getSplineParams())\n\n      if (what.position) {\n        var subPos = spline.getSubdividedPosition()\n        var subOri = spline.getSubdividedOrientation()\n        Object.assign(bufferData, {\n          position: subPos.position,\n          normal: subOri.binormal,\n          dir: subOri.normal\n        })\n      }\n\n      if (what.radius || what.scale) {\n        var subSize = spline.getSubdividedSize(this.getRadiusParams())\n        Object.assign(bufferData, {size: subSize.size})\n      }\n\n      if (what.color) {\n        var subCol = spline.getSubdividedColor(this.getColorParams())\n        Object.assign(bufferData, {color: subCol.color})\n      }\n\n      data.bufferList[ i ].setAttributes(bufferData)\n    }\n  }\n\n  setParameters (params: Partial<RibbonRepresentationParameters>) {\n    var rebuild = false\n    var what = {}\n\n    if (params && params.tension) {\n      Object.assign(what, {position: true})\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('ribbon', RibbonRepresentation)\n\nexport default RibbonRepresentation\n","/**\n * @file Rocket Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { AtomPicker } from '../utils/picker'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\nimport Helixbundle, { Axis } from '../geometry/helixbundle'\nimport CylinderBuffer from '../buffer/cylinder-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\n\nexport interface RocketRepresentationParameters extends StructureRepresentationParameters {\n  localAngle: number\n  centerDist: number\n  ssBorder: boolean\n  radialSegments: number\n  openEnded: boolean\n  disableImpostor: boolean\n}\n\nexport interface AxisData {\n  begin: Float32Array\n  end: Float32Array\n  size: Float32Array\n  color: Float32Array\n  picking: AtomPicker\n}\n\n/**\n * Rocket Representation\n */\nclass RocketRepresentation extends StructureRepresentation {\n\n  protected localAngle: number\n  protected centerDist: number\n  protected ssBorder: boolean\n  protected radialSegments: number\n  protected openEnded: boolean\n  protected disableImpostor: boolean\n  // protected helixbundleList: Helixbundle[]\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<RocketRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'rocket'\n\n    this.parameters = Object.assign({\n\n      localAngle: {\n        type: 'integer', max: 180, min: 0, rebuild: true\n      },\n      centerDist: {\n        type: 'number', precision: 1, max: 10, min: 0, rebuild: true\n      },\n      ssBorder: {\n        type: 'boolean', rebuild: true\n      },\n      radialSegments: true,\n      openEnded: true,\n      disableImpostor: true\n\n    }, this.parameters)\n\n    // this.helixbundleList = []\n\n    this.init(params)\n  }\n\n  init (params: Partial<RocketRepresentationParameters>) {\n    let p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\n    p.radiusSize = defaults(p.radiusSize, 1.5)\n    p.radiusScale = defaults(p.radiusScale, 1.0)\n    p.openEnded = defaults(p.openEnded, false)\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    this.localAngle = defaults(p.localAngle, 30)\n    this.centerDist = defaults(p.centerDist, 2.5)\n    this.ssBorder = defaults(p.ssBorder, false)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    let length = 0\n    const axisList:Axis[] = []\n    const helixbundleList:Helixbundle[] = []\n\n    this.structure.eachPolymer(polymer => {\n      if (polymer.residueCount < 4 || polymer.isNucleic()) return\n\n      const helixbundle = new Helixbundle(polymer)\n      const axis = helixbundle.getAxis(\n        this.localAngle, this.centerDist, this.ssBorder,\n        this.getColorParams(), this.getRadiusParams()\n      )\n\n      length += axis.size.length\n      axisList.push(axis)\n      helixbundleList.push(helixbundle)\n    }, sview.getSelection())\n\n    const axisData = {\n      begin: new Float32Array(length * 3),\n      end: new Float32Array(length * 3),\n      size: new Float32Array(length),\n      color: new Float32Array(length * 3),\n      picking: <AtomPicker>{}\n    }\n\n    let picking = new Float32Array(length)\n\n    let offset = 0\n\n    axisList.forEach(function (axis) {\n      axisData.begin.set(axis.begin, offset * 3)\n      axisData.end.set(axis.end, offset * 3)\n      axisData.size.set(axis.size, offset)\n      axisData.color.set(axis.color, offset * 3)\n      picking.set(axis.picking.array!, offset)\n      offset += axis.size.length\n    })\n\n    if (length) {\n      axisData.picking = new AtomPicker(\n        picking, sview.getStructure()\n      )\n    }\n\n    const cylinderBuffer = new CylinderBuffer(\n      {\n        position1: axisData.begin,\n        position2: axisData.end,\n        color: axisData.color,\n        color2: axisData.color,\n        radius: axisData.size,\n        picking: axisData.picking\n      },\n      this.getBufferParams({\n        openEnded: this.openEnded,\n        radialSegments: this.radialSegments,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      })\n    )\n\n    return {\n      bufferList: [ cylinderBuffer as CylinderGeometryBuffer|CylinderImpostorBuffer ],\n      axisList: axisList,\n      helixbundleList: helixbundleList,\n      axisData: axisData\n    }\n  }\n\n  \n  updateData (what: any, data: {bufferList: CylinderBuffer[], helixbundleList: Helixbundle[], axisList: Axis[], axisData: AxisData}) {\n    what = what || {}\n\n    if (what.position) {\n      this.build()\n      return\n    }\n\n    var cylinderData = {}\n\n    if (what.color || what.radius) {\n      var offset = 0\n\n      data.helixbundleList.forEach((helixbundle) => {\n        var axis = helixbundle.getAxis(\n          this.localAngle, this.centerDist, this.ssBorder,\n          this.getColorParams(), this.getRadiusParams()\n        )\n        if (what.color) {\n          data.axisData.color.set(axis.color, offset * 3)\n        }\n        if (what.radius || what.scale) {\n          data.axisData.size.set(axis.size, offset)\n        }\n        offset += axis.size.length\n      })\n\n      if (what.color) {\n        Object.assign(cylinderData, {\n          color: data.axisData.color,\n          color2: data.axisData.color\n        })\n      }\n\n      if (what.radius || what.scale) {\n        Object.assign(cylinderData, {\n          radius: data.axisData.size\n        })\n      }\n    }\n\n    (data.bufferList[ 0 ] as CylinderGeometryBuffer).setAttributes(cylinderData)\n  }\n}\n\nRepresentationRegistry.add('rocket', RocketRepresentation)\n\nexport default RocketRepresentation\n","/**\n * @file Rope Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport CartoonRepresentation, { CartoonRepresentationParameters } from './cartoon-representation'\nimport Helixorient from '../geometry/helixorient'\nimport Spline from '../geometry/spline'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport Polymer from '../proxy/polymer';\n\n/**\n * Rope Representation\n */\nclass RopeRepresentation extends CartoonRepresentation {\n  protected smooth: number\n  \n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>&{smooth: number}) {\n    super(structure, viewer, params)\n\n    this.type = 'rope'\n\n    this.parameters = Object.assign({\n\n      smooth: {\n        type: 'integer', max: 15, min: 0, rebuild: true\n      }\n\n    }, this.parameters, {\n      aspectRatio: null,\n      smoothSheet: null\n    })\n  }\n\n  init (params: Partial<CartoonRepresentationParameters>) {\n    var p = params || {}\n    p.aspectRatio = 1.0\n    p.tension = defaults(p.tension, 0.5)\n    p.radiusScale = defaults(p.radiusScale, 5.0)\n    p.smoothSheet = false\n\n    this.smooth = defaults(p.smooth, 2)\n\n    super.init(p)\n  }\n\n  getSpline (polymer: Polymer) {\n    var helixorient = new Helixorient(polymer)\n\n    return new Spline(polymer, this.getSplineParams({\n      directional: false,\n      positionIterator: helixorient.getCenterIterator(this.smooth)\n    }))\n  }\n}\n\nRepresentationRegistry.add('rope', RopeRepresentation)\n\nexport default RopeRepresentation\n","/**\n * @file Spacefill Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { RepresentationRegistry } from '../globals'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\nimport { AtomDataFields } from '../structure/structure-data';\nimport SphereImpostorBuffer from '../buffer/sphereimpostor-buffer';\n\n/**\n * Spacefill Representation\n */\nclass SpacefillRepresentation extends StructureRepresentation {\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'spacefill'\n\n    this.parameters = Object.assign({\n      sphereDetail: true,\n      disableImpostor: true\n    }, this.parameters)\n\n    this.init(params)\n  }\n\n  init (params: Partial<StructureRepresentationParameters>) {\n    var p = params || {}\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    var sphereBuffer = new SphereBuffer(\n      (sview.getAtomData(this.getAtomParams()) as SphereBufferData),\n      (this.getBufferParams({\n        sphereDetail: this.sphereDetail,\n        dullInterior: true,\n        disableImpostor: this.disableImpostor\n      }) as SphereBufferParameters)\n    )\n\n    return {\n      bufferList: [ sphereBuffer as SphereGeometryBuffer|SphereImpostorBuffer ]\n    }\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    var atomData = data.sview!.getAtomData(this.getAtomParams(what))\n    var sphereData: Partial<SphereBufferData> = {}\n\n    if (!what || what.position) {\n      Object.assign(sphereData, {position: atomData.position})\n    }\n\n    if (!what || what.color) {\n      Object.assign(sphereData, {color: atomData.color})\n    }\n\n    if (!what || what.radius) {\n      Object.assign(sphereData, {radius: atomData.radius})\n    }\n\n    data.bufferList[ 0 ].setAttributes(sphereData)\n  }\n}\n\nRepresentationRegistry.add('spacefill', SpacefillRepresentation)\n\nexport default SpacefillRepresentation\n","/**\n * @file Trace Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport '../shader/Line.vert'\nimport '../shader/Line.frag'\n\nimport { Log } from '../globals'\nimport Buffer, { BufferParameters, BufferData } from './buffer'\n\nfunction getSize(data: BufferData){\n  const n = data.position!.length / 3\n  const n1 = n - 1\n  return n1 * 3 * 2\n}\n\n/**\n * Trace buffer. Draws a series of lines.\n */\nclass TraceBuffer extends Buffer {\n  isLine = true\n  vertexShader = 'Line.vert'\n  fragmentShader = 'Line.frag'\n\n  /**\n   * @param  {Object} data - attribute object\n   * @param  {Float32Array} data.position - positions\n   * @param  {Float32Array} data.color - colors\n   * @param  {BufferParameters} params - parameter object\n   */\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\n    super({\n      position: new Float32Array(getSize(data)),\n      color: new Float32Array(getSize(data))\n    }, params)\n\n    this.setAttributes(data)\n  }\n\n  setAttributes (data: Partial<BufferData>) {\n    let position, color\n    let linePosition, lineColor\n\n    const attributes = this.geometry.attributes as any  // TODO\n\n    if (data.position) {\n      position = data.position\n      linePosition = attributes.position.array\n      attributes.position.needsUpdate = true\n    }\n\n    if (data.color) {\n      color = data.color\n      lineColor = attributes.color.array\n      attributes.color.needsUpdate = true\n    }\n\n    if (!position && !color) {\n      Log.warn('TraceBuffer.prototype.setAttributes no data')\n      return\n    }\n\n    let v, v2\n    const n = this.size\n    const n1 = n - 1\n\n    for (let i = 0; i < n1; ++i) {\n      v = 3 * i\n      v2 = 3 * i * 2\n\n      if (position) {\n        linePosition[ v2 ] = position[ v ]\n        linePosition[ v2 + 1 ] = position[ v + 1 ]\n        linePosition[ v2 + 2 ] = position[ v + 2 ]\n\n        linePosition[ v2 + 3 ] = position[ v + 3 ]\n        linePosition[ v2 + 4 ] = position[ v + 4 ]\n        linePosition[ v2 + 5 ] = position[ v + 5 ]\n      }\n\n      if (color) {\n        lineColor[ v2 ] = color[ v ]\n        lineColor[ v2 + 1 ] = color[ v + 1 ]\n        lineColor[ v2 + 2 ] = color[ v + 2 ]\n\n        lineColor[ v2 + 3 ] = color[ v + 3 ]\n        lineColor[ v2 + 4 ] = color[ v + 4 ]\n        lineColor[ v2 + 5 ] = color[ v + 5 ]\n      }\n    }\n  }\n}\n\nexport default TraceBuffer\n","/**\n * @file Trace Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Spline from '../geometry/spline'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport TraceBuffer from '../buffer/trace-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport AtomProxy from '../proxy/atom-proxy';\nimport StructureView from '../structure/structure-view';\nimport Polymer from '../proxy/polymer';\n\nexport interface TraceRepresentationParameters extends StructureRepresentationParameters {\n  subdiv: number\n  tension: number\n  smoothSheet: boolean\n}\n/**\n * Trace Representation\n */\nclass TraceRepresentation extends StructureRepresentation {\n  protected subdiv: number\n  protected tension: number\n  protected smoothSheet: boolean\n  \n  constructor (structure: Structure, viewer: Viewer, params: Partial<TraceRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'trace'\n\n    this.parameters = Object.assign({\n\n      subdiv: {\n        type: 'integer', max: 50, min: 1, rebuild: true\n      },\n      tension: {\n        type: 'number', precision: 1, max: 1.0, min: 0.1\n      },\n      smoothSheet: {\n        type: 'boolean', rebuild: true\n      }\n\n    }, this.parameters, {\n\n      flatShaded: null,\n      side: null,\n      wireframe: null\n\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<TraceRepresentationParameters>) {\n    var p = params || {}\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\n\n    if (p.quality === 'low') {\n      this.subdiv = 3\n    } else if (p.quality === 'medium') {\n      this.subdiv = 6\n    } else if (p.quality === 'high') {\n      this.subdiv = 12\n    } else {\n      this.subdiv = defaults(p.subdiv, 6)\n    }\n\n    this.tension = defaults(p.tension, NaN)\n    this.smoothSheet = defaults(p.smoothSheet, false)\n\n    super.init(p)\n  }\n\n  getSplineParams (params?: {[k:string]: any}) {\n    return Object.assign({\n      subdiv: this.subdiv,\n      tension: this.tension,\n      directional: false,\n      smoothSheet: this.smoothSheet\n    }, params)\n  }\n\n  getAtomRadius (atom: AtomProxy) {\n    return atom.isTrace() ? 0.1 : 0\n  }\n\n  createData (sview: StructureView) {\n    var bufferList: TraceBuffer[] = []\n    var polymerList: Polymer[] = []\n\n    this.structure.eachPolymer(polymer => {\n      if (polymer.residueCount < 4) return\n      polymerList.push(polymer)\n\n      var spline = new Spline(polymer, this.getSplineParams())\n      var subPos = spline.getSubdividedPosition()\n      var subCol = spline.getSubdividedColor(this.getColorParams())\n\n      bufferList.push(\n        new TraceBuffer(\n          Object.assign({}, subPos, subCol),\n          this.getBufferParams()\n        )\n      )\n    }, sview.getSelection())\n\n    return {\n      bufferList: bufferList,\n      polymerList: polymerList\n    }\n  }\n\n  updateData (what: any, data: StructureRepresentationData) {\n    what = what || {}\n\n    var i = 0\n    var n = data.polymerList!.length\n\n    for (i = 0; i < n; ++i) {\n      var bufferData = {}\n      var spline = new Spline(data.polymerList![ i ], this.getSplineParams())\n\n      if (what.position) {\n        var subPos = spline.getSubdividedPosition()\n        Object.assign(bufferData, { position: subPos.position })\n      }\n\n      if (what.color) {\n        var subCol = spline.getSubdividedColor(this.getColorParams())\n        Object.assign(bufferData, { color: subCol.color })\n      }\n\n      data.bufferList[ i ].setAttributes(bufferData)\n    }\n  }\n\n  setParameters (params: Partial<TraceRepresentationParameters>) {\n    var rebuild = false\n    var what = {}\n\n    if (params && params.tension) {\n      Object.assign(what, {position: true})\n    }\n\n    super.setParameters(params, what, rebuild)\n\n    return this\n  }\n}\n\nRepresentationRegistry.add('trace', TraceRepresentation)\n\nexport default TraceRepresentation\n","/**\n * @file Tube Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport CartoonRepresentation, {CartoonRepresentationParameters} from './cartoon-representation'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\n\n/**\n * Tube Representation\n */\nclass TubeRepresentation extends CartoonRepresentation {\n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'tube'\n\n    this.parameters = Object.assign(\n      {}, this.parameters, { aspectRatio: null }\n    )\n  }\n\n  init (params: Partial<CartoonRepresentationParameters>) {\n    var p = params || {}\n    p.aspectRatio = 1.0\n    p.radiusScale = defaults(p.radiusScale, 2.0)\n\n    if (p.quality === 'low') {\n      this.radialSegments = 5\n    }\n\n    super.init(p)\n  }\n\n  getSplineParams (/* params */) {\n    return super.getSplineParams({\n      directional: false\n    })\n  }\n}\n\nRepresentationRegistry.add('tube', TubeRepresentation)\n\nexport default TubeRepresentation\n","/**\n * @file Unitcell Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport { AtomDataFields } from '../structure/structure-data';\nimport StructureView from '../structure/structure-view';\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\n// @ts-ignore: unused import UnitcellPicker required for declaration only\nimport { UnitcellPicker } from '../utils/picker';\n\nexport interface UnitcellRepresentationParameters extends StructureRepresentationParameters {\n  radiusSize: number\n  sphereDetail: number\n  radialSegments: number\n  disableImpostor: boolean\n}\n\n/**\n * Unitcell Representation\n */\nclass UnitcellRepresentation extends StructureRepresentation {\n  sphereBuffer: SphereBuffer\n  cylinderBuffer: CylinderBuffer\n\n  constructor (structure: Structure, viewer: Viewer, params: Partial<UnitcellRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'unitcell'\n\n    this.parameters = Object.assign({\n\n      radiusSize: {\n        type: 'number', precision: 3, max: 10.0, min: 0.001\n      },\n      sphereDetail: true,\n      radialSegments: true,\n      disableImpostor: true\n\n    }, this.parameters, {\n      assembly: null\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<UnitcellRepresentationParameters>) {\n    const p = params || {}\n\n    let defaultRadius = 0.5\n    if (this.structure.unitcell) {\n      defaultRadius = Math.cbrt(this.structure.unitcell.volume) / 200\n    }\n\n    p.radiusSize = defaults(p.radiusSize, defaultRadius)\n    p.colorValue = defaults(p.colorValue, 'orange')\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    super.init(p)\n  }\n\n  getUnitcellData (structure: Structure) {\n    return structure.unitcell!.getData(structure)\n  }\n\n  create () {\n    const structure = this.structureView.getStructure()\n    if (!structure.unitcell) return\n    const unitcellData = this.getUnitcellData(structure)\n\n    this.sphereBuffer = new SphereBuffer(\n      unitcellData.vertex as SphereBufferData,\n      this.getBufferParams({\n        sphereDetail: this.sphereDetail,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      }) as SphereBufferParameters\n    )\n\n    this.cylinderBuffer = new CylinderBuffer(\n      unitcellData.edge as CylinderBufferData,\n      this.getBufferParams({\n        openEnded: true,\n        radialSegments: this.radialSegments,\n        disableImpostor: this.disableImpostor,\n        dullInterior: true\n      })\n    )\n\n    this.dataList.push({\n      sview: this.structureView,\n      bufferList: [ this.sphereBuffer as SphereGeometryBuffer, this.cylinderBuffer as CylinderGeometryBuffer ]\n    })\n  }\n\n  createData (sview: StructureView): undefined {\n    return\n  }\n\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\n    const structure = data.sview!.getStructure()\n    if (!structure.unitcell) return\n    const unitcellData = this.getUnitcellData(structure)\n    const sphereData: Partial<SphereBufferData> = {}\n    const cylinderData: Partial<CylinderBufferData> = {}\n\n    if (!what || what.position) {\n      Object.assign(sphereData, {position: unitcellData.vertex.position})\n      Object.assign(cylinderData, {\n        position1: unitcellData.edge.position1,\n        position2: unitcellData.edge.position2\n      })\n    }\n\n    if (!what || what.color) {\n      Object.assign(sphereData, {color: unitcellData.vertex.color})\n      Object.assign(cylinderData, {\n        color: unitcellData.edge.color,\n        color2: unitcellData.edge.color2\n      })\n    }\n\n    if (!what || what.radius) {\n      Object.assign(sphereData, {radius: unitcellData.vertex.radius})\n      Object.assign(cylinderData, {radius: unitcellData.edge.radius})\n    }\n\n    (this.sphereBuffer as SphereGeometryBuffer).setAttributes(sphereData);\n    (this.cylinderBuffer as CylinderGeometryBuffer).setAttributes(cylinderData)\n  }\n}\n\nRepresentationRegistry.add('unitcell', UnitcellRepresentation)\n\nexport default UnitcellRepresentation\n","/**\n * @file Validation Representation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { RepresentationRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\nimport CylinderBuffer from '../buffer/cylinder-buffer'\nimport { Structure } from '../ngl';\nimport Viewer from '../viewer/viewer';\nimport StructureView from '../structure/structure-view';\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\n\n/**\n * Validation representation\n */\nclass ValidationRepresentation extends StructureRepresentation {\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\n    super(structure, viewer, params)\n\n    this.type = 'validation'\n\n    this.parameters = Object.assign({\n\n    }, this.parameters, {\n      radiusType: null,\n      radiusSize: null,\n      radiusScale: null\n    })\n\n    this.init(params)\n  }\n\n  init (params: Partial<StructureRepresentationParameters>) {\n    const p = params || {}\n    p.colorValue = defaults(p.colorValue, '#f0027f')\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\n\n    super.init(p)\n  }\n\n  createData (sview: StructureView) {\n    if (!sview.validation) return\n\n    const clashData = sview.validation.getClashData({\n      structure: sview,\n      color: this.colorValue\n    })\n\n    const cylinderBuffer = new CylinderBuffer(\n      clashData, this.getBufferParams({ openEnded: false })\n    )\n\n    return {\n      bufferList: [ cylinderBuffer as CylinderGeometryBuffer|CylinderImpostorBuffer ]\n    }\n  }\n}\n\nRepresentationRegistry.add('validation', ValidationRepresentation)\n\nexport default ValidationRepresentation\n","/**\n * @file Cone Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Vector3, ConeBufferGeometry } from 'three'\n\nimport { BufferRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport { calculateCenterArray } from '../math/array-utils'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferData, BufferDefaultParameters } from './buffer'\n\nconst scale = new Vector3()\nconst eye = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3(0, 1, 0)\n\nfunction getGeo (params: Partial<ConeBufferParameters> = {}) {\n  const geo = new ConeBufferGeometry(\n    1,  // radius\n    1,  // height\n    defaults(params.radialSegments, 60),  // radialSegments\n    1,  // heightSegments\n    defaults(params.openEnded, false)  // openEnded\n  )\n  geo.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2))\n\n  return geo\n}\n\nexport interface ConeBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  radius: Float32Array\n}\n\nexport const ConeBufferDefaultParameters = Object.assign({\n  radialSegments: 60,\n  openEnded: false\n}, BufferDefaultParameters)\nexport type ConeBufferParameters = typeof ConeBufferDefaultParameters\n\n\n/**\n * Cone geometry buffer.\n *\n * @example\n * var coneBuffer = new ConeBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 1, 1, 1 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   color2: new Float32Array([ 0, 1, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\nclass ConeBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  get defaultParameters() { return ConeBufferDefaultParameters }\n  parameters: ConeBufferParameters\n\n  _position: Float32Array\n  _position1: Float32Array\n  _position2: Float32Array\n  _radius: Float32Array\n\n  /**\n   * @param {Object} data - buffer data\n   * @param {Float32Array} data.position1 - from positions\n   * @param {Float32Array} data.position2 - to positions\n   * @param {Float32Array} data.color - colors\n   * @param {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} [params] - parameters object\n   */\n  constructor (data: ConeBufferData, params: Partial<ConeBufferParameters> = {}) {\n    super({\n      position: new Float32Array(data.position1.length),\n      color: data.color,\n      picking: data.picking\n    }, params, getGeo(params))\n\n    this._position = new Float32Array(data.position1.length)\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    eye.fromArray(this._position1 as any, i3)\n    target.fromArray(this._position2 as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    const r = this._radius[ i ]\n    scale.set(r, r, eye.distanceTo(target))\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<ConeBufferData> = {}, initNormals?: boolean) {\n    if (data.position1 && data.position2) {\n      calculateCenterArray(data.position1, data.position2, this._position)\n      this._position1 = data.position1\n      this._position2 = data.position2\n      data.position = this._position\n    }\n    if (data.radius) this._radius = data.radius\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('cone', ConeBuffer)\n\nexport default ConeBuffer\n","/**\n * @file Geometry Group\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Box3, BufferGeometry } from 'three'\n\nclass GeometryGroup {\n  geometryList: BufferGeometry[]\n  boundingBox: Box3\n\n  constructor (geometryList: BufferGeometry[] = []) {\n    this.geometryList = geometryList\n  }\n\n  computeBoundingBox () {\n    if (!this.boundingBox) {\n      this.boundingBox = new Box3()\n    } else {\n      this.boundingBox.empty()\n    }\n\n    this.geometryList.forEach(geo => {\n      if (!geo.boundingBox) geo.computeBoundingBox()\n      this.boundingBox.union(geo.boundingBox as Box3)\n    })\n  }\n}\n\nexport default GeometryGroup\n","/**\n * @file Arrow Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Vector3, Group } from 'three'\n\nimport { BufferRegistry } from '../globals'\nimport { createParams, defaults } from '../utils'\nimport { Picker } from '../utils/picker'\nimport Buffer from './buffer'\nimport CylinderBuffer, { CylinderBufferData } from './cylinder-buffer'\nimport CylinderGeometryBuffer from './cylindergeometry-buffer'\nimport ConeBuffer, { ConeBufferData } from './cone-buffer'\nimport GeometryGroup from '../viewer/geometry-group'\nimport { BufferData, BufferDefaultParameters } from './buffer'\n\nexport interface ArrowBufferData extends BufferData {\n  position1: Float32Array\n  position2: Float32Array\n  radius: Float32Array\n}\n\nexport const ArrowBufferDefaultParameters = Object.assign({\n  aspectRatio: 1.5,\n  radialSegments: 50,\n  openEnded: false,\n  disableImpostor: false\n}, BufferDefaultParameters)\nexport type ArrowBufferParameters = typeof ArrowBufferDefaultParameters\n\n/**\n * Arrow buffer. Draws arrows made from a cylinder and a cone.\n * @implements {Buffer}\n *\n * @example\n * var arrowBuffer = new ArrowBuffer({\n *   position1: new Float32Array([ 0, 0, 0 ]),\n *   position2: new Float32Array([ 10, 1, 1 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ])\n * });\n */\nclass ArrowBuffer {\n  parameters: ArrowBufferParameters\n  get defaultParameters() { return ArrowBufferDefaultParameters }\n\n  cylinderBuffer: CylinderGeometryBuffer\n  coneBuffer: ConeBuffer\n\n  splitPosition: Float32Array\n  cylinderRadius: Float32Array\n\n  geometry: GeometryGroup\n  picking?: Picker\n\n  group = new Group()\n  wireframeGroup = new Group()\n  pickingGroup = new Group()\n\n  visible = true\n\n  /**\n   * @param {Object} data - buffer data\n   * @param {Float32Array} data.position1 - from positions\n   * @param {Float32Array} data.position2 - to positions\n   * @param {Float32Array} data.color - colors\n   * @param {Float32Array} data.radius - radii\n   * @param {Picker} [data.picking] - picking ids\n   * @param {BufferParameters} [params] - parameters object\n   */\n  constructor (data: ArrowBufferData, params: Partial<ArrowBufferParameters> = {}) {\n    this.parameters = createParams(params, this.defaultParameters)\n\n    this.splitPosition = new Float32Array(data.position1.length)\n    this.cylinderRadius = new Float32Array(data.radius.length)\n\n    const attr = this.makeAttributes(data)\n    const bufferParams = {\n      radialSegments: this.parameters.radialSegments,\n      openEnded: this.parameters.openEnded,\n      disableImpostor: this.parameters.disableImpostor\n    }\n\n    this.cylinderBuffer = new CylinderBuffer(\n      attr.cylinder as CylinderBufferData, bufferParams\n    ) as CylinderGeometryBuffer\n    this.coneBuffer = new ConeBuffer(\n      attr.cone as ConeBufferData, bufferParams\n    )\n\n    this.geometry = new GeometryGroup([\n      this.cylinderBuffer.geometry,\n      this.coneBuffer.geometry\n    ])\n\n    // requires Group objects to be present\n    this.matrix = defaults(params.matrix, new Matrix4())\n\n    this.picking = data.picking\n  }\n\n  set matrix (m) {\n    Buffer.prototype.setMatrix.call(this, m)\n  }\n  get matrix () {\n    return this.group.matrix.clone()\n  }\n\n  get pickable () {\n    return !!this.picking\n  }\n\n  makeAttributes (data: Partial<ArrowBufferData> = {}) {\n    const splitPosition = this.splitPosition\n    const cylinderRadius = this.cylinderRadius\n\n    const aspectRatio = this.parameters.aspectRatio\n\n    let i, il\n    const cylinder: Partial<CylinderBufferData> = {}\n    const cone: Partial<ConeBufferData> = {}\n\n    if (data.radius) {\n      for (i = 0, il = cylinderRadius.length; i < il; ++i) {\n        cylinderRadius[ i ] = data.radius[ i ] / aspectRatio\n      }\n      cylinder.radius = cylinderRadius\n      cone.radius = data.radius\n    }\n\n    if (data.position1 && data.position2) {\n      const vFrom = new Vector3()\n      const vTo = new Vector3()\n      const vDir = new Vector3()\n      const vSplit = new Vector3()\n      for (i = 0, il = splitPosition.length; i < il; i += 3) {\n        vFrom.fromArray(data.position1 as any, i)\n        vTo.fromArray(data.position2 as any, i)\n        vDir.subVectors(vFrom, vTo)\n        const fullLength = vDir.length()\n        const coneLength = cylinderRadius[ i / 3 ] * aspectRatio * 2\n        const length = Math.min(fullLength, coneLength)\n        vDir.setLength(length)\n        vSplit.copy(vTo).add(vDir)\n        vSplit.toArray(splitPosition as any, i)\n      }\n      cylinder.position1 = data.position1\n      cylinder.position2 = splitPosition\n      cone.position1 = splitPosition\n      cone.position2 = data.position2\n    }\n\n    if (data.color) {\n      cylinder.color = data.color\n      cylinder.color2 = data.color\n      cone.color = data.color\n    }\n\n    return {\n      cylinder: cylinder,\n      cone: cone\n    }\n  }\n\n  getMesh () {\n    return new Group().add(\n      this.cylinderBuffer.getMesh(),\n      this.coneBuffer.getMesh()\n    )\n  }\n\n  getWireframeMesh () {\n    return new Group().add(\n      this.cylinderBuffer.getWireframeMesh(),\n      this.coneBuffer.getWireframeMesh()\n    )\n  }\n\n  getPickingMesh () {\n    return new Group().add(\n      this.cylinderBuffer.getPickingMesh(),\n      this.coneBuffer.getPickingMesh()\n    )\n  }\n\n  setAttributes (data: Partial<ArrowBufferData> = {}) {\n    const attr = this.makeAttributes(data)\n\n    this.cylinderBuffer.setAttributes(attr.cylinder)\n    this.coneBuffer.setAttributes(attr.cone)\n  }\n\n  /**\n   * Set buffer parameters\n   * @param {BufferParameters} params - buffer parameters object\n   * @return {undefined}\n   */\n  setParameters (params: Partial<ArrowBufferParameters> = {}) {\n    params = Object.assign({}, params)\n\n    if (params && params.matrix !== undefined) {\n      this.matrix = params.matrix\n    }\n    delete params.matrix\n\n    if (params && params.wireframe !== undefined) {\n      this.parameters.wireframe = params.wireframe\n      this.setVisibility(this.visible)\n    }\n\n    this.cylinderBuffer.setParameters(params)\n    this.coneBuffer.setParameters(params)\n  }\n\n  setVisibility (value: boolean) {\n    Buffer.prototype.setVisibility.call(this, value)\n  }\n\n  dispose () {\n    this.cylinderBuffer.dispose()\n    this.coneBuffer.dispose()\n  }\n}\n\nBufferRegistry.add('arrow', ArrowBuffer)\n\nexport default ArrowBuffer\n","/**\n * @file Box Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { BoxBufferGeometry, Vector3, Matrix4 } from 'three'\n\nimport { BufferRegistry } from '../globals'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferData, BufferParameters } from './buffer'\n\nconst scale = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3()\nconst eye = new Vector3(0, 0, 0)\n\nexport interface BoxBufferData extends BufferData {\n  heightAxis: Float32Array\n  depthAxis: Float32Array\n  size: Float32Array\n}\n\n/**\n * Box buffer. Draws boxes.\n *\n * @example\n * var boxBuffer = new BoxBuffer({\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n *   size: new Float32Array([ 2, 1.5 ]),\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n * })\n */\nclass BoxBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  _heightAxis: Float32Array\n  _depthAxis: Float32Array\n  _size: Float32Array\n\n  constructor (data: BoxBufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params, new BoxBufferGeometry(1, 1, 1))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    target.fromArray(this._heightAxis as any, i3)\n    up.fromArray(this._depthAxis as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    scale.set(this._size[ i ], up.length(), target.length())\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<BoxBufferData> = {}, initNormals?: boolean) {\n    if (data.size) this._size = data.size\n    if (data.heightAxis) this._heightAxis = data.heightAxis\n    if (data.depthAxis) this._depthAxis = data.depthAxis\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('box', BoxBuffer)\n\nexport default BoxBuffer\n","/**\n * @file Ellipsoid Geometry Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { IcosahedronBufferGeometry, Vector3, Matrix4 } from 'three'\n\nimport { BufferRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferData, BufferDefaultParameters } from './buffer'\n\nconst scale = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3()\nconst eye = new Vector3(0, 0, 0)\n\nexport interface EllipsoidBufferData extends BufferData {\n  majorAxis: Float32Array\n  minorAxis: Float32Array\n  radius: Float32Array\n}\n\nexport const EllipsoidBufferDefaultParameters = Object.assign({\n  sphereDetail: 2,\n}, BufferDefaultParameters)\nexport type EllipsoidBufferParameters = typeof EllipsoidBufferDefaultParameters\n\n/**\n * Ellipsoid buffer. Draws ellipsoids.\n *\n * @example\n * var ellipsoidBuffer = new EllipsoidBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ]),\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\n * });\n */\nclass EllipsoidBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  get defaultParameters() { return EllipsoidBufferDefaultParameters }\n  parameters: EllipsoidBufferParameters\n\n  _majorAxis: Float32Array\n  _minorAxis: Float32Array\n  _radius: Float32Array\n\n  constructor (data: EllipsoidBufferData, params: Partial<EllipsoidBufferParameters> = {}) {\n    super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 2)))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    target.fromArray(this._majorAxis as any, i3)\n    up.fromArray(this._minorAxis as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    scale.set(this._radius[ i ], up.length(), target.length())\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<EllipsoidBufferData> = {}, initNormals?: boolean) {\n    if (data.radius) this._radius = data.radius\n    if (data.majorAxis) this._majorAxis = data.majorAxis\n    if (data.minorAxis) this._minorAxis = data.minorAxis\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('ellipsoid', EllipsoidBuffer)\n\nexport default EllipsoidBuffer\n","/**\n * @file Octahedron Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { OctahedronBufferGeometry, Vector3, Matrix4 } from 'three'\nimport { BufferRegistry } from '../globals'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferData, BufferParameters } from './buffer'\n\nconst scale = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3()\nconst eye = new Vector3(0, 0, 0)\n\nexport interface OctahedronBufferData extends BufferData {\n  heightAxis: Float32Array\n  depthAxis: Float32Array\n  size: Float32Array\n}\n\n/**\n * Octahedron buffer. Draws octahedrons.\n *\n * @example\n * var octahedronBuffer = new OctahedronBuffer({\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n *   size: new Float32Array([ 2, 1.5 ]),\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n * })\n */\nclass OctahedronBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  _heightAxis: Float32Array\n  _depthAxis: Float32Array\n  _size: Float32Array\n\n  constructor (data: OctahedronBufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params, new OctahedronBufferGeometry(1, 0))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    target.fromArray(this._heightAxis as any, i3)\n    up.fromArray(this._depthAxis as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    scale.set(this._size[ i ], up.length(), target.length())\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<OctahedronBufferData> = {}, initNormals?: boolean) {\n    if (data.size) this._size = data.size\n    if (data.heightAxis) this._heightAxis = data.heightAxis\n    if (data.depthAxis) this._depthAxis = data.depthAxis\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('octahedron', OctahedronBuffer)\n\nexport default OctahedronBuffer\n","/**\n * @file Tetrahedron Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { TetrahedronBufferGeometry, Vector3, Matrix4 } from 'three'\nimport { BufferRegistry } from '../globals'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferData, BufferParameters } from './buffer'\n\nconst scale = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3()\nconst eye = new Vector3(0, 0, 0)\n\nexport interface TetrahedronBufferData extends BufferData {\n  heightAxis: Float32Array\n  depthAxis: Float32Array\n  size: Float32Array\n}\n\n/**\n * Tetrahedron buffer. Draws tetrahedrons.\n *\n * @example\n * var tetrahedronBuffer = new TetrahedronBuffer({\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n *   size: new Float32Array([ 2, 1.5 ]),\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n * })\n */\nclass TetrahedronBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  _heightAxis: Float32Array\n  _depthAxis: Float32Array\n  _size: Float32Array\n\n  constructor (data: TetrahedronBufferData, params: Partial<BufferParameters> = {}) {\n    super(data, params, new TetrahedronBufferGeometry(1, 0))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    target.fromArray(this._heightAxis as any, i3)\n    up.fromArray(this._depthAxis as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    scale.set(this._size[ i ], up.length(), target.length())\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<TetrahedronBufferData> = {}, initNormals?: boolean) {\n    if (data.size) this._size = data.size\n    if (data.heightAxis) this._heightAxis = data.heightAxis\n    if (data.depthAxis) this._depthAxis = data.depthAxis\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('tetrahedron', TetrahedronBuffer)\n\nexport default TetrahedronBuffer\n","/**\n * @file Tetrahedron Geometry Buffer\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { TorusBufferGeometry, Vector3, Matrix4 } from 'three'\n\nimport { BufferRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport GeometryBuffer from './geometry-buffer'\nimport { BufferDefaultParameters, BufferData } from './buffer'\n\nconst scale = new Vector3()\nconst target = new Vector3()\nconst up = new Vector3()\nconst eye = new Vector3(0, 0, 0)\n\nexport interface TorusBufferData extends BufferData {\n  majorAxis: Float32Array\n  minorAxis: Float32Array\n  radius: Float32Array\n}\n\nexport const TorusBufferDefaultParameters = Object.assign({\n  radiusRatio: 0.2,\n  radialSegments: 16,\n  tubularSegments: 32\n}, BufferDefaultParameters)\nexport type TorusBufferParameters = typeof TorusBufferDefaultParameters\n\n/**\n * Torus geometry buffer. Draws torii.\n *\n * @example\n * var torusBuffer = new TorusBuffer({\n *   position: new Float32Array([ 0, 0, 0 ]),\n *   color: new Float32Array([ 1, 0, 0 ]),\n *   radius: new Float32Array([ 1 ]),\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\n * });\n */\nclass TorusBuffer extends GeometryBuffer {\n  updateNormals = true\n\n  get defaultParameters() { return TorusBufferDefaultParameters }\n  parameters: TorusBufferParameters\n\n  _majorAxis: Float32Array\n  _minorAxis: Float32Array\n  _radius: Float32Array\n\n  constructor (data: TorusBufferData, params: Partial<TorusBufferParameters> = {}) {\n    super(data, params, new TorusBufferGeometry(\n      1,\n      defaults(params.radiusRatio, 0.2),\n      defaults(params.radialSegments, 16),\n      defaults(params.tubularSegments, 32)\n    ))\n\n    this.setAttributes(data, true)\n  }\n\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\n    target.fromArray(this._majorAxis as any, i3)\n    up.fromArray(this._minorAxis as any, i3)\n    matrix.lookAt(eye, target, up)\n\n    const r = this._radius[ i ]\n    scale.set(r, r, r)\n    matrix.scale(scale)\n  }\n\n  setAttributes (data: Partial<TorusBufferData> = {}, initNormals?: boolean) {\n    if (data.radius) this._radius = data.radius\n    if (data.majorAxis) this._majorAxis = data.majorAxis\n    if (data.minorAxis) this._minorAxis = data.minorAxis\n\n    super.setAttributes(data, initNormals)\n  }\n}\n\nBufferRegistry.add('torus', TorusBuffer)\n\nexport default TorusBuffer\n","/**\n * @file Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log } from '../globals'\nimport { defaults } from '../utils'\nimport Streamer from '../streamer/streamer';\n\nexport interface ParserParameters {\n  name: string\n  path: string\n}\n\nclass Parser {\n  streamer: Streamer\n  name: string\n  path: string\n  [k: string]: any\n  \n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\n    var p = params || {}\n\n    this.streamer = streamer\n\n    this.name = defaults(p.name, '')\n    this.path = defaults(p.path, '')\n  }\n\n  get type () { return '' }\n  get __objName () { return '' }\n  get isBinary () { return false }\n  get isJson () { return false }\n  get isXml () { return false }\n\n  parse () {\n    return this.streamer.read().then(() => {\n      this._beforeParse()\n      this._parse()\n      this._afterParse()\n      return this[ this.__objName ]\n    })\n  }\n\n  _parse () {}\n\n  _beforeParse () {}\n\n  _afterParse () {\n    if (Debug) Log.log(this[ this.__objName ])\n  }\n}\n\nexport default Parser\n","/**\n * @file Structure Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport Parser, { ParserParameters } from './parser'\nimport Structure from '../structure/structure'\nimport StructureBuilder from '../structure/structure-builder'\nimport Streamer from '../streamer/streamer';\n\nexport interface StructureParserParameters extends ParserParameters {\n  firstModelOnly: boolean\n  asTrajectory: boolean\n  cAlphaOnly: boolean\n}\nclass StructureParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<StructureParserParameters>) {\n    var p = params || {}\n\n    super(streamer, p)\n\n    this.firstModelOnly = defaults(p.firstModelOnly, false)\n    this.asTrajectory = defaults(p.asTrajectory, false)\n    this.cAlphaOnly = defaults(p.cAlphaOnly, false)\n\n    this.structure = new Structure(this.name, this.path)\n    this.structureBuilder = new StructureBuilder(this.structure)\n  }\n\n  get type () { return 'structure' }\n  get __objName () { return 'structure' }\n}\n\nexport default StructureParser\n","/**\n * @file Entity\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Structure from './structure'\nimport {\n    UnknownEntity, PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\n} from './structure-constants'\nimport ChainProxy from '../proxy/chain-proxy'\n\nfunction entityTypeFromString (string: string) {\n  string = string.toLowerCase()\n  switch (string) {\n    case 'polymer':\n      return PolymerEntity\n    case 'non-polymer':\n      return NonPolymerEntity\n    case 'macrolide':\n      return MacrolideEntity\n    case 'water':\n      return WaterEntity\n    default:\n      return UnknownEntity\n  }\n}\n\nfunction entityFromType (type: number) {\n  switch (type) {\n    case PolymerEntity:\n      return 'polymer'\n    case NonPolymerEntity:\n      return 'non-polymer'\n    case MacrolideEntity:\n      return 'macrolide'\n    case WaterEntity:\n      return 'water'\n    default:\n      return undefined\n  }\n}\n\nexport const EntityTypeString = {\n  'polymer': PolymerEntity,\n  'non-polymer': NonPolymerEntity,\n  'macrolide': MacrolideEntity,\n  'water': WaterEntity,\n}\nexport type EntityTypeString = keyof typeof EntityTypeString\n\n/**\n * Entity of a {@link Structure}\n */\nexport default class Entity {\n  structure: Structure\n  index: number\n  description: string\n  entityType: number\n  chainIndexList: number[]\n\n  /**\n   * @param {Structure} structure - structure the entity belongs to\n   * @param {Integer} index - index within structure.entityList\n   * @param {String} description - entity description\n   * @param {String} type - entity type\n   * @param {Array} chainIndexList - entity chainIndexList\n   */\n  constructor (structure: Structure, index: number, description = '', type?: EntityTypeString, chainIndexList: number[] = []) {\n    this.structure = structure\n    this.index = index\n    this.description = description\n    this.entityType = entityTypeFromString(type || '')\n    this.chainIndexList = chainIndexList\n\n    chainIndexList.forEach(function (ci: number) {\n      structure.chainStore.entityIndex[ ci ] = index\n    })\n  }\n\n  get type () { return entityFromType(this.entityType) }\n\n  getEntityType () {\n    return this.entityType\n  }\n\n  isPolymer () {\n    return this.entityType === PolymerEntity\n  }\n\n  isNonPolymer () {\n    return this.entityType === NonPolymerEntity\n  }\n\n  isMacrolide () {\n    return this.entityType === MacrolideEntity\n  }\n\n  isWater () {\n    return this.entityType === WaterEntity\n  }\n\n  eachChain (callback: (cp: ChainProxy) => any) {\n    const cp = this.structure.getChainProxy()\n\n    this.chainIndexList.forEach(function (index) {\n      cp.index = index\n      callback(cp)\n    })\n  }\n}","/**\n * @file Unitcell\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Color, Vector3, Matrix4 } from 'three'\n\nimport { defaults } from '../utils'\nimport { degToRad } from '../math/math-utils'\nimport {\n  uniformArray, uniformArray3, centerArray3\n} from '../math/array-utils'\nimport { UnitcellPicker } from '../utils/picker'\nimport Structure from '../structure/structure'\n\nexport interface UnitcellParams {\n  a: number\n  b: number\n  c: number\n  alpha: number\n  beta: number\n  gamma: number\n  spacegroup: string\n  cartToFrac?: Matrix4\n}\n\nconst DefaultBoxParams = {\n  a: 1,\n  b: 1,\n  c: 1,\n  alpha: 90,\n  beta: 90,\n  gamma: 90,\n  spacegroup: 'P 1'\n}\n\nexport interface UnitcellDataParams {\n  colorValue?: string|number,\n  radius?: number\n}\n\n/**\n * Unitcell class\n */\nclass Unitcell {\n  a: number\n  b: number\n  c: number\n  alpha: number\n  beta: number\n  gamma: number\n\n  spacegroup: string\n\n  cartToFrac = new Matrix4()\n  fracToCart = new Matrix4()\n\n  volume: number\n\n  /**\n   * @param  {Object} params - unitcell parameters\n   * @param  {Number} params.a - length a\n   * @param  {Number} params.b - length b\n   * @param  {Number} params.c - length c\n   * @param  {Number} params.alpha - angle alpha\n   * @param  {Number} params.beta - angle beta\n   * @param  {Number} params.gamma - angle gamma\n   * @param  {String} params.spacegroup - spacegroup\n   * @param  {Matrix4} [params.cartToFrac] - transformation matrix from\n   *                                         cartesian to fractional coordinates\n   * @param  {Matrix4} [params.scale] - alias for `params.cartToFrac`\n   */\n  constructor (params: UnitcellParams = DefaultBoxParams) {\n    this.a = params.a\n    this.b = params.b\n    this.c = params.c\n    this.alpha = params.alpha\n    this.beta = params.beta\n    this.gamma = params.gamma\n    this.spacegroup = params.spacegroup\n\n    const alphaRad = degToRad(this.alpha)\n    const betaRad = degToRad(this.beta)\n    const gammaRad = degToRad(this.gamma)\n    const cosAlpha = Math.cos(alphaRad)\n    const cosBeta = Math.cos(betaRad)\n    const cosGamma = Math.cos(gammaRad)\n    const sinBeta = Math.sin(betaRad)\n    const sinGamma = Math.sin(gammaRad)\n\n    this.volume = (\n      this.a * this.b * this.c *\n      Math.sqrt(\n        1 - cosAlpha * cosAlpha - cosBeta * cosBeta - cosGamma * cosGamma +\n        2.0 * cosAlpha * cosBeta * cosGamma\n      )\n    )\n\n    if (params.cartToFrac === undefined) {\n      // https://github.com/biojava/biojava/blob/master/biojava-structure/src/main/java/org/biojava/nbio/structure/xtal/CrystalCell.java\n\n      const cStar = (this.a * this.b * sinGamma) / this.volume\n      const cosAlphaStar = (\n        (cosBeta * cosGamma - cosAlpha) / (sinBeta * sinGamma)\n      )\n\n      this.fracToCart.set(\n        this.a, 0, 0, 0,\n        this.b * cosGamma, this.b * sinGamma, 0, 0,\n        this.c * cosBeta, -this.c * sinBeta * cosAlphaStar, 1.0 / cStar, 0,\n        0, 0, 0, 1\n      ).transpose()\n      this.cartToFrac.getInverse(this.fracToCart)\n    } else {\n      this.cartToFrac.copy(params.cartToFrac)\n      this.fracToCart.getInverse(this.cartToFrac)\n    }\n  }\n\n  getPosition (structure: Structure): Float32Array {\n    const vertexPosition = new Float32Array(3 * 8)\n\n    if (structure.unitcell) {\n      const uc = structure.unitcell\n      const centerFrac = structure.center.clone().applyMatrix4(uc.cartToFrac).floor()\n      const v = new Vector3()\n\n      let cornerOffset = 0\n      const addCorner = function (x: number, y: number, z: number) {\n        v.set(x, y, z)\n          .add(centerFrac)\n          .applyMatrix4(uc.fracToCart)\n          .toArray(vertexPosition as any, cornerOffset)\n        cornerOffset += 3\n      }\n      addCorner(0, 0, 0)\n      addCorner(1, 0, 0)\n      addCorner(0, 1, 0)\n      addCorner(0, 0, 1)\n      addCorner(1, 1, 0)\n      addCorner(1, 0, 1)\n      addCorner(0, 1, 1)\n      addCorner(1, 1, 1)\n    }\n\n    return vertexPosition\n  }\n\n  getCenter (structure: Structure) {\n    return centerArray3(this.getPosition(structure))\n  }\n\n  getData (structure: Structure, params: UnitcellDataParams = {}) {\n    const colorValue = defaults(params.colorValue, 'orange')\n    const radius = defaults(params.radius, Math.cbrt(this.volume) / 200)\n\n    const c = new Color(colorValue)\n    const v = new Vector3()\n\n    const vertexPosition = this.getPosition(structure)\n    const vertexColor = uniformArray3(8, c.r, c.g, c.b)\n    const vertexRadius = uniformArray(8, radius)\n\n    const edgePosition1 = new Float32Array(3 * 12)\n    const edgePosition2 = new Float32Array(3 * 12)\n    const edgeColor = uniformArray3(12, c.r, c.g, c.b)\n    const edgeRadius = uniformArray(12, radius)\n\n    let edgeOffset = 0\n    function addEdge (a: number, b: number) {\n      v.fromArray(vertexPosition as any, a * 3)\n        .toArray(edgePosition1 as any, edgeOffset)\n      v.fromArray(vertexPosition as any, b * 3)\n        .toArray(edgePosition2 as any, edgeOffset)\n      edgeOffset += 3\n    }\n    addEdge(0, 1)\n    addEdge(0, 2)\n    addEdge(0, 3)\n    addEdge(1, 4)\n    addEdge(1, 5)\n    addEdge(2, 6)\n    addEdge(3, 5)\n    addEdge(4, 7)\n    addEdge(5, 7)\n    addEdge(2, 4)\n    addEdge(7, 6)\n    addEdge(3, 6)\n\n    const picker = new UnitcellPicker(this, structure)\n\n    return {\n      vertex: {\n        position: vertexPosition,\n        color: vertexColor,\n        radius: vertexRadius,\n        picking: picker\n      },\n      edge: {\n        position1: edgePosition1,\n        position2: edgePosition2,\n        color: edgeColor,\n        color2: edgeColor,\n        radius: edgeRadius,\n        picking: picker\n      }\n    }\n  }\n}\n\nexport default Unitcell\n","/**\n * @file Pdb Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport StructureParser from './structure-parser'\nimport Entity, { EntityTypeString } from '../structure/entity'\nimport Unitcell, { UnitcellParams } from '../symmetry/unitcell'\nimport Assembly, { AssemblyPart } from '../symmetry/assembly'\nimport { WaterNames } from '../structure/structure-constants'\nimport {\n  assignSecondaryStructure, buildUnitcellAssembly,\n  calculateBonds, calculateChainnames, calculateSecondaryStructure\n} from '../structure/structure-utils'\nimport Streamer from '../streamer/streamer';\nimport { ParserParameters } from './parser';\nimport { NumberArray } from '../types';\nimport { Structure } from '../ngl';\n\n// PDB helix record encoding\nconst HelixTypes: {[k: number]: string} = {\n  1: 'h', // Right-handed alpha (default)\n  2: 'h', // Right-handed omega\n  3: 'i', // Right-handed pi\n  4: 'h', // Right-handed gamma\n  5: 'g', // Right-handed 310\n  6: 'h', // Left-handed alpha\n  7: 'h', // Left-handed omega\n  8: 'h', // Left-handed gamma\n  9: 'h', // 27 ribbon/helix\n  10: 'h', // Polyproline\n  0: 'h' //Used to be ''\n}\n\nconst dAminoAcids = [\n  'DAL', // D-ALANINE\n  'DAR', // D-ARGININE\n  'DSG', // D-ASPARAGINE\n  'DAS', // D-ASPARTIC ACID\n  'DCY', // D-CYSTEINE\n  'DGL', // D-GLUTAMIC ACID\n  'DGN', // D-GLUTAMINE\n  'DHI', // D-HISTIDINE\n  'DIL', // D-ISOLEUCINE\n  'DLE', // D-LEUCINE\n  'DLY', // D-LYSINE\n  'MED', // D-METHIONINE\n  'DPN', // D-PHENYLALANINE\n  'DPR', // D-PROLINE\n  'DSN', // D-SERINE\n  'DTH', // D-THREONINE\n  'DTR', // D-TRYPTOPHAN\n  'DTY', // D-TYROSINE\n  'DVA', // D-VALINE\n\n  'DNE' // D-NORLEUCINE\n\n  // ???  // D-SELENOCYSTEINE\n]\n\nconst entityKeyList = [\n  'MOL_ID', 'MOLECULE', 'CHAIN', 'FRAGMENT', 'SYNONYM',\n  'EC', 'ENGINEERED', 'MUTATION', 'OTHER_DETAILS'\n]\n\nconst reWhitespace = /\\s+/\n\nfunction getModresId (resno: number, chainname?: string, inscode?: string) {\n  let id = `${resno}`\n  if (chainname) id += `:${chainname}`\n  if (inscode) id += `^${inscode}`\n  return id\n}\nexport interface PdbParserParameters extends ParserParameters {\n  hex: boolean\n}\n\nclass PdbParser extends StructureParser {\n  /**\n   * Create a pdb parser\n   * @param  {Streamer} streamer - streamer object\n   * @param  {Object} params - params object\n   * @param  {Boolean} params.hex - hexadecimal parsing of\n   *                                atom numbers >99.999 and\n   *                                residue numbers >9.999\n   * @return {undefined}\n   */\n  constructor (streamer: Streamer, params?: Partial<PdbParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.hex = defaults(p.hex, false)\n  }\n\n  get type () { return 'pdb' }\n\n  _parse () {\n    // http://www.wwpdb.org/documentation/file-format.php\n\n    if (Debug) Log.time('PdbParser._parse ' + this.name)\n\n    let isLegacy = false\n    const headerLine = this.streamer.peekLines(1)[ 0 ]\n    const headerId = headerLine.substr(62, 4)\n    const legacyId = headerLine.substr(72, 4)\n    if (headerId === legacyId && legacyId.trim()) {\n      isLegacy = true\n    }\n\n    const isPqr = this.type === 'pqr'\n    const isPdbqt = this.type === 'pdbqt'\n\n    const s: Structure = this.structure\n    const sb = this.structureBuilder\n\n    const hex = this.hex\n    let serialRadix = 10\n    let resnoRadix = 10\n\n    const firstModelOnly = this.firstModelOnly\n    const asTrajectory = this.asTrajectory\n    const cAlphaOnly = this.cAlphaOnly\n\n    const frames = s.frames\n    const boxes = s.boxes\n    let doFrames = false\n    let currentFrame: NumberArray, currentCoord: number\n\n    const biomolDict = s.biomolDict\n    let currentBiomol: Assembly\n    let currentPart: AssemblyPart\n    let currentMatrix: Matrix4\n\n    let line, recordName\n    let serial, chainname: string, resno: number, resname: string, occupancy: number\n    let inscode: string, atomname, hetero: number, bfactor: number, altloc\n    let formalCharge: number\n\n    let startChain, startResi, startIcode\n    let endChain, endResi, endIcode\n\n    let serialDict: {[k: number]: number} = {}\n    const unitcellDict: Partial<{\n      origx: Matrix4\n      scale: Matrix4\n      a: number\n      b: number\n      c: number\n      alpha: number\n      beta: number\n      gamma: number\n      spacegroup: string\n    }> = {}\n    const bondDict: {[k: string]: boolean} = {}\n\n    const entityDataList: {chainList: string[], name: string}[] = []\n    let currentEntityData: {chainList: string[], name: string}\n    let currentEntityKey: 'MOL_ID'|'MOLECULE'|'CHAIN'|'FRAGMENT'|'SYNONYM'|'EC'|'ENGINEERED'|'MUTATION'|'OTHER_DETAILS'\n    // MOL_ID                 Numbers each component; also used in  SOURCE to associate\n    //                        the information.\n    // MOLECULE               Name of the macromolecule.\n    // CHAIN                  Comma-separated list of chain  identifier(s).\n    // FRAGMENT               Specifies a domain or region of the  molecule.\n    // SYNONYM                Comma-separated list of synonyms for  the MOLECULE.\n    // EC                     The Enzyme Commission number associated  with the molecule.\n    //                        If there is more than one EC number,  they are presented\n    //                        as a comma-separated list.\n    // ENGINEERED             Indicates that the molecule was  produced using\n    //                        recombinant technology or by purely  chemical synthesis.\n    // MUTATION               Indicates if there is a mutation.\n    // OTHER_DETAILS          Additional comments.\n\n    const hetnameDict: {[k: string]: string} = {}\n    const modresDict: {[k: string]: any} = {}\n\n    const chainDict: {[k: string]: number} = {}\n    let chainIdx: number, chainid: string, newChain: boolean\n    let currentChainname: string, currentResno: number, currentResname: string, currentInscode: string\n\n    const seqresDict: {[k: string]: string[]} = {}\n    let currentSeqresChainname: string\n\n    const secStruct = {\n      helices: [] as any[],\n      sheets: [] as any[]\n    }\n    const helices = secStruct.helices\n    const sheets = secStruct.sheets\n\n    const atomMap = s.atomMap\n    const atomStore = s.atomStore\n    atomStore.resize(Math.round(this.streamer.data.length / 80))\n    if (isPqr || isPdbqt) atomStore.addField('partialCharge', 1, 'float32')\n    if (isPqr) atomStore.addField('radius', 1, 'float32')\n\n    const ap1 = s.getAtomProxy()\n    const ap2 = s.getAtomProxy()\n\n    let idx = 0\n    let modelIdx = 0\n    let pendingStart = true\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        line = lines[ i ]\n        recordName = line.substr(0, 6)\n\n        if (recordName === 'ATOM  ' || recordName === 'HETATM') {\n          // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\n          // PQR: Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius\n\n          if (pendingStart) {\n            if (asTrajectory) {\n              if (doFrames) {\n                currentFrame = new Float32Array(atomStore.count * 3)\n                frames.push(currentFrame)\n              } else {\n                currentFrame = []\n              }\n              currentCoord = 0\n            } else {\n              if (!firstModelOnly) serialDict = {}\n            }\n\n            chainIdx = 1\n            chainid = chainIdx.toString()\n            newChain = true\n\n            pendingStart = false\n          }\n\n          if (firstModelOnly && modelIdx > 0) continue\n\n          let x, y, z, ls: string[], dd = 0\n\n          if (isPqr) {\n            ls = line.split(reWhitespace)\n            dd = ls.length === 10 ? 1 : 0\n\n            atomname = ls[ 2 ]\n            if (cAlphaOnly && atomname !== 'CA') continue\n\n            x = parseFloat(ls[ 6 - dd ])\n            y = parseFloat(ls[ 7 - dd ])\n            z = parseFloat(ls[ 8 - dd ])\n          } else {\n            atomname = line.substr(12, 4).trim()\n            if (cAlphaOnly && atomname !== 'CA') continue\n\n            x = parseFloat(line.substr(30, 8))\n            y = parseFloat(line.substr(38, 8))\n            z = parseFloat(line.substr(46, 8))\n          }\n\n          if (asTrajectory) {\n            const j = currentCoord * 3\n\n            currentFrame[ j + 0 ] = x\n            currentFrame[ j + 1 ] = y\n            currentFrame[ j + 2 ] = z\n\n            currentCoord += 1\n\n            if (doFrames) continue\n          }\n\n          let element\n\n          if (isPqr) {\n            serial = parseInt(ls![ 1 ])\n            element = ''\n            hetero = (line[ 0 ] === 'H') ? 1 : 0\n            chainname = dd ? '' : ls![ 4 ]\n            resno = parseInt(ls![ 5 - dd! ])\n            inscode = ''\n            resname = ls![ 3 ]\n            altloc = ''\n            occupancy = 1.0\n          } else {\n            serial = parseInt(line.substr(6, 5), serialRadix)\n            if (hex && serial === 99999) {\n              serialRadix = 16\n            }\n            hetero = (line[ 0 ] === 'H') ? 1 : 0\n            chainname = line[ 21 ].trim()\n            resno = parseInt(line.substr(22, 4), resnoRadix)\n            if (hex && resno === 9999) {\n              resnoRadix = 16\n            }\n            inscode = line[ 26 ].trim()\n            resname = line.substr(17, 4).trim() || 'MOL'\n            bfactor = parseFloat(line.substr(60, 6))\n            altloc = line[ 16 ].trim()\n            occupancy = parseFloat(line.substr(54, 6))\n\n            if (!isLegacy) {\n              if (isPdbqt) {\n                element = line.substr(12, 2).trim()\n              } else {\n                element = line.substr(76, 2).trim()\n                if (!chainname) {\n                  chainname = line.substr(72, 4).trim() // segid\n                }\n              }\n              // Where specified, formalCharge is of form \"2-\" or \"1+\"\n              formalCharge = parseInt((line.substr(79,1) + line.substr(78, 1)).trim())\n            }\n          }\n\n          atomStore.growIfFull()\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\n\n          atomStore.x[ idx ] = x\n          atomStore.y[ idx ] = y\n          atomStore.z[ idx ] = z\n          atomStore.serial[ idx ] = serial\n          atomStore.altloc[ idx ] = altloc.charCodeAt(0)\n          atomStore.occupancy[ idx ] = isNaN(occupancy) ? 0 : occupancy\n\n          if (isPqr) {\n            atomStore.partialCharge![ idx ] = parseFloat(ls![ 9 - dd! ])\n            atomStore.radius[ idx ] = parseFloat(ls![ 10 - dd! ])\n          } else {\n            atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\n            if (isPdbqt) {\n              atomStore.partialCharge![ idx ] = parseFloat(line.substr(70, 6))\n            }\n            // isFinite check will reject undefined (in legacy case) and NaN values\n            if (isFinite(formalCharge)) {\n              if (!atomStore.formalCharge) {\n                atomStore.addField('formalCharge', 1, 'int8')\n              }\n              atomStore.formalCharge![ idx ] = formalCharge\n            }\n          }\n\n          const modresId = getModresId(resno, chainname, inscode)\n\n          // TODO instead of looking at MODRES look at SEQRES and\n          //      missing residues in REMARK 465\n          if (hetero && !modresDict[modresId] && !dAminoAcids.includes(resname)) {\n            if (currentChainname !== chainname || currentResname !== resname ||\n                (!WaterNames.includes(resname) &&\n                  (currentResno !== resno || currentInscode !== inscode))\n            ) {\n              chainIdx += 1\n              chainid = chainIdx.toString()\n\n              currentResno = resno\n              currentResname = resname\n              currentInscode = inscode\n            }\n          } else if (!newChain && currentChainname !== chainname) {\n            chainIdx += 1\n            chainid = chainIdx.toString()\n          }\n\n          sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\n\n          serialDict[ serial ] = idx\n          idx += 1\n          newChain = false\n          currentChainname = chainname\n        } else if (recordName === 'CONECT') {\n          const fromIdx = serialDict[ parseInt(line.substr(6, 5)) ]\n          const pos = [ 11, 16, 21, 26 ]\n          const bondIndex: {[k: number]: number} = {}\n\n          if (fromIdx === undefined) {\n            // Log.log( \"missing CONNECT serial\" );\n            continue\n          }\n\n          for (let j = 0; j < 4; ++j) {\n            let toIdx = parseInt(line.substr(pos[ j ], 5))\n            if (Number.isNaN(toIdx)) continue\n            toIdx = serialDict[ toIdx ]\n            if (toIdx === undefined) {\n              // Log.log( \"missing CONNECT serial\" );\n              continue\n            }/* else if( toIdx < fromIdx ){\n                // likely a duplicate in standard PDB format\n                // but not necessarily, so better remove duplicates\n                // in a pass after parsing (and auto bonding)\n                continue;\n            } */\n\n            if (fromIdx < toIdx) {\n              ap1.index = fromIdx\n              ap2.index = toIdx\n            } else {\n              ap1.index = toIdx\n              ap2.index = fromIdx\n            }\n\n            // interpret records where a 'toIdx' atom is given multiple times\n            // as double/triple bonds, e.g. CONECT 1529 1528 1528 is a double bond\n            if (bondIndex[ toIdx ] !== undefined) {\n              s.bondStore.bondOrder[ bondIndex[ toIdx ] ] += 1\n            } else {\n              const hash = ap1.index + '|' + ap2.index\n              if (bondDict[ hash ] === undefined) {\n                bondDict[ hash ] = true\n                bondIndex[ toIdx ] = s.bondStore.count\n                s.bondStore.addBond(ap1, ap2, 1) // start/assume with single bond\n              }\n            }\n          }\n        } else if (recordName === 'HELIX ') {\n          startChain = line[ 19 ].trim()\n          startResi = parseInt(line.substr(21, 4))\n          startIcode = line[ 25 ].trim()\n          endChain = line[ 31 ].trim()\n          endResi = parseInt(line.substr(33, 4))\n          endIcode = line[ 37 ].trim()\n          let helixType = parseInt(line.substr(39, 1))\n          helixType = (HelixTypes[ helixType ] || HelixTypes[0]).charCodeAt(0)\n          helices.push([\n            startChain, startResi, startIcode,\n            endChain, endResi, endIcode,\n            helixType\n          ])\n        } else if (recordName === 'SHEET ') {\n          startChain = line[ 21 ].trim()\n          startResi = parseInt(line.substr(22, 4))\n          startIcode = line[ 26 ].trim()\n          endChain = line[ 32 ].trim()\n          endResi = parseInt(line.substr(33, 4))\n          endIcode = line[ 37 ].trim()\n          sheets.push([\n            startChain, startResi, startIcode,\n            endChain, endResi, endIcode\n          ])\n        } else if (recordName === 'HETNAM') {\n          hetnameDict[ line.substr(11, 3) ] = line.substr(15).trim()\n        } else if (recordName === 'SEQRES') {\n          const seqresChainname = line[11].trim()\n          if (seqresChainname !== currentSeqresChainname) {\n            seqresDict[ seqresChainname ] = []\n            currentSeqresChainname = seqresChainname\n          }\n          seqresDict[ seqresChainname ].push(\n            ...line.substr(19).trim().split(reWhitespace)\n          )\n        } else if (recordName === 'MODRES') {\n          // MODRES 2SRC PTR A  527  TYR  O-PHOSPHOTYROSINE\n          const resname = line.substr(12, 3).trim()\n          const chainname = line[16].trim()\n          const inscode = line[22].trim()\n          const resno = parseInt(line.substr(18, 4).trim())\n          const id = getModresId(resno, chainname, inscode)\n          modresDict[ id ] = { resname, chainname, inscode, resno }\n        } else if (recordName === 'COMPND') {\n          const comp = line.substr(10, 70).trim()\n          const keyEnd = comp.indexOf(':')\n          const key = comp.substring(0, keyEnd)\n          let value\n\n          if (entityKeyList.includes(key)) {\n            currentEntityKey = key as 'MOL_ID'|'MOLECULE'|'CHAIN'|'FRAGMENT'|'SYNONYM'|'EC'|'ENGINEERED'|'MUTATION'|'OTHER_DETAILS'\n            value = comp.substring(keyEnd + 2)\n          } else {\n            value = comp\n          }\n          value = value.replace(/;$/, '')\n\n          if (currentEntityKey === 'MOL_ID') {\n            currentEntityData = {\n              chainList: [],\n              name: ''\n            }\n            entityDataList.push(currentEntityData)\n          } else if (currentEntityKey === 'MOLECULE') {\n            if (currentEntityData.name) currentEntityData.name += ' '\n            currentEntityData.name += value\n          } else if (currentEntityKey === 'CHAIN') {\n            Array.prototype.push.apply(\n              currentEntityData.chainList,\n              value.split(/\\s*,\\s*/)\n            )\n          }\n        } else if (line.startsWith('TER')) {\n          const cp = s.getChainProxy(s.chainStore.count - 1)\n          chainDict[ cp.chainname ] = cp.index\n          chainIdx += 1\n          chainid = chainIdx.toString()\n          newChain = true\n        } else if (recordName === 'REMARK' && line.substr(7, 3) === '350') {\n          if (line.substr(11, 12) === 'BIOMOLECULE:') {\n            let name = line.substr(23).trim()\n            if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\n\n            currentBiomol = new Assembly(name)\n            biomolDict[ name ] = currentBiomol\n          } else if (line.substr(13, 5) === 'BIOMT') {\n            const biomt = line.split(/\\s+/)\n            const row = parseInt(line[ 18 ]) - 1\n\n            if (row === 0) {\n              currentMatrix = new Matrix4()\n              currentPart.matrixList.push(currentMatrix)\n            }\n\n            const biomtElms = currentMatrix.elements\n\n            biomtElms[ 4 * 0 + row ] = parseFloat(biomt[ 4 ])\n            biomtElms[ 4 * 1 + row ] = parseFloat(biomt[ 5 ])\n            biomtElms[ 4 * 2 + row ] = parseFloat(biomt[ 6 ])\n            biomtElms[ 4 * 3 + row ] = parseFloat(biomt[ 7 ])\n          } else if (\n            line.substr(11, 30) === 'APPLY THE FOLLOWING TO CHAINS:' ||\n            line.substr(11, 30) === '                   AND CHAINS:'\n          ) {\n            if (line.substr(11, 5) === 'APPLY') {\n              currentPart = currentBiomol.addPart()\n            }\n\n            const chainList = line.substr(41, 30).split(',')\n            for (let j = 0, jl = chainList.length; j < jl; ++j) {\n              const c = chainList[ j ].trim()\n              if (c) currentPart.chainList.push(c)\n            }\n          }\n        } else if (recordName === 'HEADER') {\n          s.id = line.substr(62, 4)\n        } else if (recordName === 'TITLE ') {\n          s.title += (s.title ? ' ' : '') + line.substr(10, 70).trim()\n        } else if (recordName === 'MODEL ') {\n          pendingStart = true\n        } else if (recordName === 'ENDMDL' || line.trim() === 'END') {\n          if (pendingStart) continue\n\n          if (asTrajectory && !doFrames) {\n            frames.push(new Float32Array(currentFrame))\n            doFrames = true\n          }\n\n          modelIdx += 1\n          pendingStart = true\n        } else if (line.substr(0, 5) === 'MTRIX') {\n          // ignore 'given' operators\n          if (line[ 59 ] === '1') continue\n\n          if (!currentBiomol || currentBiomol.name !== 'NCS') {\n            const ncsName = 'NCS'\n            currentBiomol = new Assembly(ncsName)\n            biomolDict[ ncsName ] = currentBiomol\n            currentPart = currentBiomol.addPart()\n          }\n\n          const ncs = line.split(/\\s+/)\n          const ncsRow = parseInt(line[ 5 ]) - 1\n\n          if (ncsRow === 0) {\n            currentMatrix = new Matrix4()\n            currentPart.matrixList.push(currentMatrix)\n          }\n\n          const ncsElms = currentMatrix.elements\n\n          ncsElms[ 4 * 0 + ncsRow ] = parseFloat(ncs[ 2 ])\n          ncsElms[ 4 * 1 + ncsRow ] = parseFloat(ncs[ 3 ])\n          ncsElms[ 4 * 2 + ncsRow ] = parseFloat(ncs[ 4 ])\n          ncsElms[ 4 * 3 + ncsRow ] = parseFloat(ncs[ 5 ])\n        } else if (line.substr(0, 5) === 'ORIGX') {\n          if (!unitcellDict.origx) {\n            unitcellDict.origx = new Matrix4()\n          }\n\n          const orgix = line.split(/\\s+/)\n          const origxRow = parseInt(line[ 5 ]) - 1\n          const origxElms = unitcellDict.origx.elements\n\n          origxElms[ 4 * 0 + origxRow ] = parseFloat(orgix[ 1 ])\n          origxElms[ 4 * 1 + origxRow ] = parseFloat(orgix[ 2 ])\n          origxElms[ 4 * 2 + origxRow ] = parseFloat(orgix[ 3 ])\n          origxElms[ 4 * 3 + origxRow ] = parseFloat(orgix[ 4 ])\n        } else if (line.substr(0, 5) === 'SCALE') {\n          if (!unitcellDict.scale) {\n            unitcellDict.scale = new Matrix4()\n          }\n\n          const scale = line.split(/\\s+/)\n          const scaleRow = parseInt(line[ 5 ]) - 1\n          const scaleElms = unitcellDict.scale.elements\n\n          scaleElms[ 4 * 0 + scaleRow ] = parseFloat(scale[ 1 ])\n          scaleElms[ 4 * 1 + scaleRow ] = parseFloat(scale[ 2 ])\n          scaleElms[ 4 * 2 + scaleRow ] = parseFloat(scale[ 3 ])\n          scaleElms[ 4 * 3 + scaleRow ] = parseFloat(scale[ 4 ])\n        } else if (recordName === 'CRYST1') {\n          // CRYST1   55.989   55.989   55.989  90.00  90.00  90.00 P 1           1\n          //  7 - 15       Real(9.3)      a (Angstroms)\n          // 16 - 24       Real(9.3)      b (Angstroms)\n          // 25 - 33       Real(9.3)      c (Angstroms)\n          // 34 - 40       Real(7.2)      alpha         alpha (degrees).\n          // 41 - 47       Real(7.2)      beta          beta (degrees).\n          // 48 - 54       Real(7.2)      gamma         gamma (degrees).\n          // 56 - 66       LString        sGroup        Space group.\n          // 67 - 70       Integer        z             Z value.\n\n          const aLength = parseFloat(line.substr(6, 9))\n          const bLength = parseFloat(line.substr(15, 9))\n          const cLength = parseFloat(line.substr(24, 9))\n\n          const alpha = parseFloat(line.substr(33, 7))\n          const beta = parseFloat(line.substr(40, 7))\n          const gamma = parseFloat(line.substr(47, 7))\n\n          const sGroup = line.substr(55, 11).trim()\n          // const zValue = parseInt( line.substr( 66, 4 ) );\n\n          const box = new Float32Array(9)\n          box[ 0 ] = aLength\n          box[ 4 ] = bLength\n          box[ 8 ] = cLength\n          boxes.push(box)\n\n          if (modelIdx === 0) {\n            unitcellDict.a = aLength\n            unitcellDict.b = bLength\n            unitcellDict.c = cLength\n            unitcellDict.alpha = alpha\n            unitcellDict.beta = beta\n            unitcellDict.gamma = gamma\n            unitcellDict.spacegroup = sGroup\n          }\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n\n    // finalize ensures resname will be defined for all rp.resname\n    // (required in entity handling below)\n    sb.finalize()\n\n    //\n\n    const en = entityDataList.length\n\n    if (en) {\n      s.eachChain(function (cp) {\n        cp.entityIndex = en\n      })\n\n      entityDataList.forEach(function (e, i) {\n        const chainIndexList = e.chainList.map(function (chainname) {\n          return chainDict[ chainname ]\n        })\n        s.entityList.push(new Entity(\n          s, i, e.name, 'polymer', chainIndexList\n        ))\n      })\n\n      let ei = entityDataList.length\n      const rp = s.getResidueProxy()\n      const residueDict: {[k: string]: number[]} = {}\n\n      s.eachChain(function (cp) {\n        if (cp.entityIndex === en) {\n          rp.index = cp.residueOffset\n          if (!residueDict[ rp.resname ]) {\n            residueDict[ rp.resname ] = []\n          }\n          residueDict[ rp.resname ].push(cp.index)\n        }\n      })\n\n      Object.keys(residueDict).forEach(function (resname) {\n        const chainList = residueDict[ resname ]\n        let type: EntityTypeString = 'non-polymer'\n        let name = hetnameDict[ resname ] || resname\n        if (WaterNames.includes(resname)) {\n          name = 'water'\n          type = 'water'\n        }\n        s.entityList.push(new Entity(\n          s, ei, name, type, chainList\n        ))\n        ei += 1\n      })\n    }\n\n    //\n\n    if (unitcellDict.a !== undefined) {\n      s.unitcell = new Unitcell(unitcellDict as UnitcellParams)\n    } else {\n      s.unitcell = undefined\n    }\n\n    if (helices.length || sheets.length) {\n      assignSecondaryStructure(s, secStruct)\n    }\n\n    s.finalizeAtoms()\n    if (!isLegacy) calculateChainnames(s)\n    calculateBonds(s)\n    s.finalizeBonds()\n\n    if (!helices.length && !sheets.length) {\n      calculateSecondaryStructure(s)\n    }\n    buildUnitcellAssembly(s)\n\n    if (Debug) Log.timeEnd('PdbParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('pdb', PdbParser)\nParserRegistry.add('pdb1', PdbParser)\nParserRegistry.add('ent', PdbParser)\n\nexport default PdbParser\n\nexport {\n  HelixTypes\n}\n","/**\n * @file Cif Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport { HelixTypes } from './pdb-parser'\nimport Entity from '../structure/entity'\nimport Unitcell, { UnitcellParams } from '../symmetry/unitcell'\nimport Assembly from '../symmetry/assembly'\nimport Selection from '../selection/selection'\nimport {\n  assignResidueTypeBonds, assignSecondaryStructure, buildUnitcellAssembly,\n  calculateBonds, calculateSecondaryStructure\n} from '../structure/structure-utils'\nimport { Structure } from '../ngl';\nimport StructureBuilder from '../structure/structure-builder';\nimport { NumberArray } from '../types';\n\nconst reWhitespace = /\\s+/\nconst reQuotedWhitespace = /'((?:(?!'\\s).)*)'|\"((?:(?!\"\\s).)*)\"|(\\S+)/g\nconst reDoubleQuote = /\"/g\nconst reTrimQuotes = /^['\"]+|['\"]+$/g\n\ninterface Cif {[k: string]: any}\n\nfunction trimQuotes (str: string) {\n  if (str && str[0] === str[ str.length - 1 ] && (str[0] === \"'\" || str[0] === '\"')) {\n    return str.substring(1, str.length - 1)\n  } else {\n    return str\n  }\n}\n\nfunction ensureArray (dict: {[k: string]: any[]}, field: string) {\n  if (!Array.isArray(dict[ field ])) {\n    Object.keys(dict).forEach(function (key) {\n      dict[ key ] = [ dict[ key ] ]\n    })\n  }\n}\n\nfunction hasValue (d: string) {\n  return d !== '?'\n}\n\nfunction cifDefaults (value: string, defaultValue: string) {\n  return hasValue(value) ? value : defaultValue\n}\n\nfunction getBondOrder (valueOrder: string) {\n  switch (valueOrder.toLowerCase()) {\n    case '?': // assume single bond\n    case 'sing':\n      return 1\n    case 'doub':\n      return 2\n    case 'trip':\n      return 3\n    case 'quad':\n      return 4\n  }\n  return 0\n}\n\nfunction parseChemComp (cif: Cif, structure: Structure, structureBuilder: StructureBuilder) {\n  const atomStore = structure.atomStore\n  const atomMap = structure.atomMap\n\n  let i, n\n  const cc = cif.chem_comp\n  const cca = cif.chem_comp_atom\n  const ccb = cif.chem_comp_bond\n\n  if (cc) {\n    if (cc.name) {\n      structure.title = cc.name.trim().replace(reTrimQuotes, '')\n    }\n    if (cc.id) {\n      structure.id = cc.id.trim().replace(reTrimQuotes, '')\n    }\n  }\n\n  var atomnameDict: {[k: string]: number} = {}\n\n  if (cca) {\n    ensureArray(cca, 'comp_id')\n\n    var atomname, element, resname, resno\n    n = cca.comp_id.length\n\n    for (i = 0; i < n; ++i) {\n      atomStore.growIfFull()\n\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\n      element = cca.type_symbol[ i ]\n\n      atomnameDict[ atomname ] = i\n      atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\n\n      atomStore.x[ i ] = cca.model_Cartn_x[ i ]\n      atomStore.y[ i ] = cca.model_Cartn_y[ i ]\n      atomStore.z[ i ] = cca.model_Cartn_z[ i ]\n      atomStore.serial[ i ] = i\n\n      resname = cca.pdbx_component_comp_id[ i ]\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\n\n      structureBuilder.addAtom(0, '', '', resname, resno, true)\n    }\n\n    for (i = 0; i < n; ++i) {\n      var j = i + n\n\n      atomStore.growIfFull()\n\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\n      element = cca.type_symbol[ i ]\n\n      atomStore.atomTypeId[ j ] = atomMap.add(atomname, element)\n\n      atomStore.x[ j ] = cca.pdbx_model_Cartn_x_ideal[ i ]\n      atomStore.y[ j ] = cca.pdbx_model_Cartn_y_ideal[ i ]\n      atomStore.z[ j ] = cca.pdbx_model_Cartn_z_ideal[ i ]\n      atomStore.serial[ j ] = j\n\n      resname = cca.pdbx_component_comp_id[ i ]\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\n\n      structureBuilder.addAtom(1, '', '', resname, resno, true)\n    }\n  }\n\n  if (cca && ccb) {\n    ensureArray(ccb, 'comp_id')\n\n    var atomname1, atomname2, bondOrder\n    n = ccb.comp_id.length\n    var na = cca.comp_id.length\n\n    var ap1 = structure.getAtomProxy()\n    var ap2 = structure.getAtomProxy()\n\n    for (i = 0; i < n; ++i) {\n      atomname1 = ccb.atom_id_1[ i ].replace(reDoubleQuote, '')\n      atomname2 = ccb.atom_id_2[ i ].replace(reDoubleQuote, '')\n      bondOrder = getBondOrder(ccb.value_order[ i ])\n\n      ap1.index = atomnameDict[ atomname1 ]\n      ap2.index = atomnameDict[ atomname2 ]\n      structure.bondStore.growIfFull()\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\n\n      ap1.index += na\n      ap2.index += na\n      structure.bondStore.growIfFull()\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\n    }\n  }\n}\n\nfunction parseCore (cif: Cif, structure: Structure, structureBuilder: StructureBuilder) {\n  var atomStore = structure.atomStore\n  var atomMap = structure.atomMap\n\n  if (cif.data) {\n    structure.id = cif.data\n    structure.name = cif.data\n  }\n\n  structure.unitcell = new Unitcell({\n    a: parseFloat(cif.cell_length_a),\n    b: parseFloat(cif.cell_length_b),\n    c: parseFloat(cif.cell_length_c),\n    alpha: parseFloat(cif.cell_angle_alpha),\n    beta: parseFloat(cif.cell_angle_beta),\n    gamma: parseFloat(cif.cell_angle_gamma),\n    spacegroup: trimQuotes(cif['symmetry_space_group_name_H-M'])\n  })\n\n  const v = new Vector3()\n  const c = new Vector3()\n  const n = cif.atom_site_type_symbol.length\n\n  for (let i = 0; i < n; ++i) {\n    atomStore.growIfFull()\n\n    const atomname = cif.atom_site_label[ i ]\n    const element = cif.atom_site_type_symbol[ i ]\n\n    atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\n\n    v.set(\n      cif.atom_site_fract_x[ i ],\n      cif.atom_site_fract_y[ i ],\n      cif.atom_site_fract_z[ i ]\n    )\n    v.applyMatrix4(structure.unitcell.fracToCart)\n    c.add(v)\n\n    atomStore.x[ i ] = v.x\n    atomStore.y[ i ] = v.y\n    atomStore.z[ i ] = v.z\n    if (cif.atom_site_occupancy) {\n      atomStore.occupancy[ i ] = parseFloat(cif.atom_site_occupancy[ i ])\n    }\n    atomStore.serial[ i ] = i\n\n    structureBuilder.addAtom(0, '', '', 'HET', 1, true)\n  }\n\n  c.divideScalar(n)\n  structure.center = c\n  buildUnitcellAssembly(structure)\n\n  const v2 = new Vector3()\n  const v3 = new Vector3()\n  const ml = structure.biomolDict.SUPERCELL.partList[ 0 ].matrixList\n\n  let k = n\n\n  function covalent (idx: number) {\n    return atomMap.get(atomStore.atomTypeId[ idx ]).covalent\n  }\n  const identityMatrix = new Matrix4()\n\n  for (let i = 0; i < n; ++i) {\n    const covalentI = covalent(i)\n\n    v.set(\n      atomStore.x[ i ],\n      atomStore.y[ i ],\n      atomStore.z[ i ]\n    )\n\n    ml.forEach(function (m) {\n      if (identityMatrix.equals(m)) return\n\n      v2.copy(v)\n      v2.applyMatrix4(m)\n\n      for (let j = 0; j < n; ++j) {\n        v3.set(\n          atomStore.x[ j ],\n          atomStore.y[ j ],\n          atomStore.z[ j ]\n        )\n\n        const distSquared = v2.distanceToSquared(v3)\n        const d = covalent(j) + covalentI\n        const d1 = d + 0.3\n        const d2 = d - 0.5\n\n        if (distSquared < (d1 * d1) && distSquared > (d2 * d2)) {\n          atomStore.growIfFull()\n\n          atomStore.atomTypeId[ k ] = atomStore.atomTypeId[ i ]\n          atomStore.x[ k ] = v2.x\n          atomStore.y[ k ] = v2.y\n          atomStore.z[ k ] = v2.z\n          atomStore.occupancy[ k ] = atomStore.occupancy[ i ]\n          atomStore.serial[ k ] = k\n          atomStore.altloc[ k ] = 'A'.charCodeAt(0)\n\n          structureBuilder.addAtom(0, '', '', 'HET', 1, true)\n\n          k += 1\n          return\n        }\n      }\n    })\n  }\n}\n\nfunction processSecondaryStructure (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\n  var helices: [string, number, string, string, number, string, number][] = []\n  var sheets: [string, number, string, string, number, string][] = []\n\n  var i, il, begIcode, endIcode\n\n  // get helices\n  var sc = cif.struct_conf\n\n  if (sc) {\n    ensureArray(sc, 'id')\n\n    for (i = 0, il = sc.beg_auth_seq_id.length; i < il; ++i) {\n      var helixType = parseInt(sc.pdbx_PDB_helix_class[ i ])\n      if (!Number.isNaN(helixType)) {\n        begIcode = sc.pdbx_beg_PDB_ins_code[ i ]\n        endIcode = sc.pdbx_end_PDB_ins_code[ i ]\n        helices.push([\n          asymIdDict[ sc.beg_label_asym_id[ i ] ],\n          parseInt(sc.beg_auth_seq_id[ i ]),\n          cifDefaults(begIcode, ''),\n          asymIdDict[ sc.end_label_asym_id[ i ] ],\n          parseInt(sc.end_auth_seq_id[ i ]),\n          cifDefaults(endIcode, ''),\n          (HelixTypes[ helixType ] || HelixTypes[0]).charCodeAt(0)\n        ])\n      }\n    }\n  }\n\n  // get sheets\n  var ssr = cif.struct_sheet_range\n\n  if (ssr) {\n    ensureArray(ssr, 'id')\n\n    for (i = 0, il = ssr.beg_auth_seq_id.length; i < il; ++i) {\n      begIcode = ssr.pdbx_beg_PDB_ins_code[ i ]\n      endIcode = ssr.pdbx_end_PDB_ins_code[ i ]\n      sheets.push([\n        asymIdDict[ ssr.beg_label_asym_id[ i ] ],\n        parseInt(ssr.beg_auth_seq_id[ i ]),\n        cifDefaults(begIcode, ''),\n        asymIdDict[ ssr.end_label_asym_id[ i ] ],\n        parseInt(ssr.end_auth_seq_id[ i ]),\n        cifDefaults(endIcode, '')\n      ])\n    }\n  }\n\n  if (sc || ssr) {\n    return {\n      helices: helices,\n      sheets: sheets\n    }\n  } else {\n    return false\n  }\n}\n\nfunction processSymmetry (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\n  // biomol & ncs processing\n  var operDict: {[k: string]: Matrix4} = {}\n  var biomolDict = structure.biomolDict\n\n  if (cif.pdbx_struct_oper_list) {\n    var biomolOp = cif.pdbx_struct_oper_list\n    ensureArray(biomolOp, 'id')\n\n    biomolOp.id.forEach(function (id: number, i: number) {\n      var m = new Matrix4()\n      var elms = m.elements\n\n      elms[ 0 ] = parseFloat(biomolOp[ 'matrix[1][1]' ][ i ])\n      elms[ 1 ] = parseFloat(biomolOp[ 'matrix[1][2]' ][ i ])\n      elms[ 2 ] = parseFloat(biomolOp[ 'matrix[1][3]' ][ i ])\n\n      elms[ 4 ] = parseFloat(biomolOp[ 'matrix[2][1]' ][ i ])\n      elms[ 5 ] = parseFloat(biomolOp[ 'matrix[2][2]' ][ i ])\n      elms[ 6 ] = parseFloat(biomolOp[ 'matrix[2][3]' ][ i ])\n\n      elms[ 8 ] = parseFloat(biomolOp[ 'matrix[3][1]' ][ i ])\n      elms[ 9 ] = parseFloat(biomolOp[ 'matrix[3][2]' ][ i ])\n      elms[ 10 ] = parseFloat(biomolOp[ 'matrix[3][3]' ][ i ])\n\n      elms[ 3 ] = parseFloat(biomolOp[ 'vector[1]' ][ i ])\n      elms[ 7 ] = parseFloat(biomolOp[ 'vector[2]' ][ i ])\n      elms[ 11 ] = parseFloat(biomolOp[ 'vector[3]' ][ i ])\n\n      m.transpose()\n\n      operDict[ id ] = m\n    })\n  }\n\n  if (cif.pdbx_struct_assembly_gen) {\n    var gen = cif.pdbx_struct_assembly_gen\n    ensureArray(gen, 'assembly_id')\n\n    var getMatrixDict = function (expr: string) {\n      var matDict: {[k: string]: Matrix4} = {}\n\n      var l = expr.replace(/[()']/g, '').split(',')\n\n      l.forEach(function (e) {\n        if (e.includes('-')) {\n          var es = e.split('-')\n\n          var j = parseInt(es[ 0 ])\n          var m = parseInt(es[ 1 ])\n\n          for (; j <= m; ++j) {\n            matDict[ j ] = operDict[ j ]\n          }\n        } else {\n          matDict[ e ] = operDict[ e ]\n        }\n      })\n\n      return matDict\n    }\n\n    gen.assembly_id.forEach(function (id: string, i: number) {\n      var md:{[k: string]: Matrix4} = {}\n      var oe = gen.oper_expression[ i ].replace(/['\"]\\(|['\"]/g, '')\n\n      if (oe.includes(')(') || oe.indexOf('(') > 0) {\n        oe = oe.split('(')\n\n        var md1 = getMatrixDict(oe[ 0 ])\n        var md2 = getMatrixDict(oe[ 1 ])\n\n        Object.keys(md1).forEach(function (k1) {\n          Object.keys(md2).forEach(function (k2) {\n            var mat = new Matrix4()\n\n            mat.multiplyMatrices(md1[ k1 ], md2[ k2 ])\n            md[ k1 + 'x' + k2 ] = mat\n          })\n        })\n      } else {\n        md = getMatrixDict(oe)\n      }\n\n      var matrixList = []\n      for (var k in md) {\n        matrixList.push(md[ k ])\n      }\n\n      var name = id\n      if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\n\n      var chainList = gen.asym_id_list[ i ].split(',')\n      for (var j = 0, jl = chainList.length; j < jl; ++j) {\n        chainList[ j ] = asymIdDict[ chainList[ j ] ]\n      }\n\n      if (biomolDict[ name ] === undefined) {\n        biomolDict[ name ] = new Assembly(name)\n      }\n      biomolDict[ name ].addPart(matrixList, chainList)\n    })\n  }\n\n  // non-crystallographic symmetry operations\n  if (cif.struct_ncs_oper) {\n    var ncsOp = cif.struct_ncs_oper\n    ensureArray(ncsOp, 'id')\n\n    var ncsName = 'NCS'\n    biomolDict[ ncsName ] = new Assembly(ncsName)\n    var ncsPart = biomolDict[ ncsName ].addPart()\n\n    ncsOp.id.forEach(function (id: string, i: number) {\n      // ignore 'given' operators\n      if (ncsOp.code[ i ] === 'given') return\n\n      var m = new Matrix4()\n      var elms = m.elements\n\n      elms[ 0 ] = parseFloat(ncsOp[ 'matrix[1][1]' ][ i ])\n      elms[ 1 ] = parseFloat(ncsOp[ 'matrix[1][2]' ][ i ])\n      elms[ 2 ] = parseFloat(ncsOp[ 'matrix[1][3]' ][ i ])\n\n      elms[ 4 ] = parseFloat(ncsOp[ 'matrix[2][1]' ][ i ])\n      elms[ 5 ] = parseFloat(ncsOp[ 'matrix[2][2]' ][ i ])\n      elms[ 6 ] = parseFloat(ncsOp[ 'matrix[2][3]' ][ i ])\n\n      elms[ 8 ] = parseFloat(ncsOp[ 'matrix[3][1]' ][ i ])\n      elms[ 9 ] = parseFloat(ncsOp[ 'matrix[3][2]' ][ i ])\n      elms[ 10 ] = parseFloat(ncsOp[ 'matrix[3][3]' ][ i ])\n\n      elms[ 3 ] = parseFloat(ncsOp[ 'vector[1]' ][ i ])\n      elms[ 7 ] = parseFloat(ncsOp[ 'vector[2]' ][ i ])\n      elms[ 11 ] = parseFloat(ncsOp[ 'vector[3]' ][ i ])\n\n      m.transpose()\n\n      ncsPart.matrixList.push(m)\n    })\n\n    if (ncsPart.matrixList.length === 0) {\n      delete biomolDict[ ncsName ]\n    }\n  }\n\n  // cell & symmetry\n  const unitcellDict: {\n    a?: number\n    b?: number\n    c?: number\n    alpha?: number\n    beta?: number\n    gamma?: number\n    spacegroup?: string\n    origx?: Matrix4\n    scale?: Matrix4\n  } = {}\n\n  if (cif.cell) {\n    const cell = cif.cell\n\n    const a = parseFloat(cell.length_a)\n    const b = parseFloat(cell.length_b)\n    const c = parseFloat(cell.length_c)\n\n    const box = new Float32Array(9)\n    box[ 0 ] = a\n    box[ 4 ] = b\n    box[ 8 ] = c\n    structure.boxes.push(box)\n\n    unitcellDict.a = a\n    unitcellDict.b = b\n    unitcellDict.c = c\n    unitcellDict.alpha = parseFloat(cell.angle_alpha)\n    unitcellDict.beta = parseFloat(cell.angle_beta)\n    unitcellDict.gamma = parseFloat(cell.angle_gamma)\n  }\n\n  if (cif.symmetry) {\n    unitcellDict.spacegroup = trimQuotes(\n      cif.symmetry[ 'space_group_name_H-M' ]\n    )\n  }\n\n  // origx\n  var origx = new Matrix4()\n\n  if (cif.database_PDB_matrix) {\n    var origxMat = cif.database_PDB_matrix\n    var origxElms = origx.elements\n\n    origxElms[ 0 ] = parseFloat(origxMat[ 'origx[1][1]' ])\n    origxElms[ 1 ] = parseFloat(origxMat[ 'origx[1][2]' ])\n    origxElms[ 2 ] = parseFloat(origxMat[ 'origx[1][3]' ])\n\n    origxElms[ 4 ] = parseFloat(origxMat[ 'origx[2][1]' ])\n    origxElms[ 5 ] = parseFloat(origxMat[ 'origx[2][2]' ])\n    origxElms[ 6 ] = parseFloat(origxMat[ 'origx[2][3]' ])\n\n    origxElms[ 8 ] = parseFloat(origxMat[ 'origx[3][1]' ])\n    origxElms[ 9 ] = parseFloat(origxMat[ 'origx[3][2]' ])\n    origxElms[ 10 ] = parseFloat(origxMat[ 'origx[3][3]' ])\n\n    origxElms[ 3 ] = parseFloat(origxMat[ 'origx_vector[1]' ])\n    origxElms[ 7 ] = parseFloat(origxMat[ 'origx_vector[2]' ])\n    origxElms[ 11 ] = parseFloat(origxMat[ 'origx_vector[3]' ])\n\n    origx.transpose()\n\n    unitcellDict.origx = origx\n  }\n\n  // scale\n  var scale = new Matrix4()\n\n  if (cif.atom_sites) {\n    var scaleMat = cif.atom_sites\n    var scaleElms = scale.elements\n\n    scaleElms[ 0 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][1]' ])\n    scaleElms[ 1 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][2]' ])\n    scaleElms[ 2 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][3]' ])\n\n    scaleElms[ 4 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][1]' ])\n    scaleElms[ 5 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][2]' ])\n    scaleElms[ 6 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][3]' ])\n\n    scaleElms[ 8 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][1]' ])\n    scaleElms[ 9 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][2]' ])\n    scaleElms[ 10 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][3]' ])\n\n    scaleElms[ 3 ] = parseFloat(scaleMat[ 'fract_transf_vector[1]' ])\n    scaleElms[ 7 ] = parseFloat(scaleMat[ 'fract_transf_vector[2]' ])\n    scaleElms[ 11 ] = parseFloat(scaleMat[ 'fract_transf_vector[3]' ])\n\n    scale.transpose()\n\n    unitcellDict.scale = scale\n  }\n\n  if (unitcellDict.a !== undefined) {\n    structure.unitcell = new Unitcell(unitcellDict as UnitcellParams)\n  } else {\n    structure.unitcell = undefined\n  }\n}\n\nfunction processConnections (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\n  // add connections\n  var sc = cif.struct_conn\n\n  if (sc) {\n    ensureArray(sc, 'id')\n\n    var reDoubleQuote = /\"/g\n    var ap1 = structure.getAtomProxy()\n    var ap2 = structure.getAtomProxy()\n    var atomIndicesCache: {[k: string]: Uint32Array|undefined} = {}\n\n    for (var i = 0, il = sc.id.length; i < il; ++i) {\n      // ignore:\n      // hydrog - hydrogen bond\n      // mismat - mismatched base pairs\n      // saltbr - ionic interaction\n\n      var connTypeId = sc.conn_type_id[ i ]\n      if (connTypeId === 'hydrog' ||\n          connTypeId === 'mismat' ||\n          connTypeId === 'saltbr') continue\n\n      // ignore bonds between symmetry mates\n      if (sc.ptnr1_symmetry[ i ] !== '1_555' ||\n          sc.ptnr2_symmetry[ i ] !== '1_555') continue\n\n      // process:\n      // covale - covalent bond\n      // covale_base -\n      //      covalent modification of a nucleotide base\n      // covale_phosphate -\n      //      covalent modification of a nucleotide phosphate\n      // covale_sugar -\n      //      covalent modification of a nucleotide sugar\n      // disulf - disulfide bridge\n      // metalc - metal coordination\n      // modres - covalent residue modification\n\n      var inscode1 = sc.pdbx_ptnr1_PDB_ins_code[ i ]\n      var altloc1 = sc.pdbx_ptnr1_label_alt_id[ i ]\n      var sele1 = (\n        sc.ptnr1_auth_seq_id[ i ] +\n        (hasValue(inscode1) ? ('^' + inscode1) : '') +\n        ':' + asymIdDict[ sc.ptnr1_label_asym_id[ i ] ] +\n        '.' + sc.ptnr1_label_atom_id[ i ].replace(reDoubleQuote, '') +\n        (hasValue(altloc1) ? ('%' + altloc1) : '')\n      )\n      var atomIndices1 = atomIndicesCache[ sele1 ]\n      if (!atomIndices1) {\n        var selection1 = new Selection(sele1)\n        if (selection1.selection.error) {\n          if (Debug) Log.warn('invalid selection for connection', sele1)\n          continue\n        }\n        atomIndices1 = structure.getAtomIndices(selection1)\n        atomIndicesCache[ sele1 ] = atomIndices1\n      }\n\n      var inscode2 = sc.pdbx_ptnr2_PDB_ins_code[ i ]\n      var altloc2 = sc.pdbx_ptnr2_label_alt_id[ i ]\n      var sele2 = (\n        sc.ptnr2_auth_seq_id[ i ] +\n        (hasValue(inscode2) ? ('^' + inscode2) : '') +\n        ':' + asymIdDict[ sc.ptnr2_label_asym_id[ i ] ] +\n        '.' + sc.ptnr2_label_atom_id[ i ].replace(reDoubleQuote, '') +\n        (hasValue(altloc2) ? ('%' + altloc2) : '')\n      )\n      var atomIndices2 = atomIndicesCache[ sele2 ]\n      if (!atomIndices2) {\n        var selection2 = new Selection(sele2)\n        if (selection2.selection.error) {\n          if (Debug) Log.warn('invalid selection for connection', sele2)\n          continue\n        }\n        atomIndices2 = structure.getAtomIndices(selection2)\n        atomIndicesCache[ sele2 ] = atomIndices2\n      }\n\n      // cases with more than one atom per selection\n      // - #altloc1 to #altloc2\n      // - #model to #model\n      // - #altloc1 * #model to #altloc2 * #model\n\n      var k = atomIndices1!.length\n      var l = atomIndices2!.length\n\n      if (k > l) {\n        var tmpA = k\n        k = l\n        l = tmpA\n        var tmpB = atomIndices1\n        atomIndices1 = atomIndices2\n        atomIndices2 = tmpB\n      }\n\n      // console.log( k, l );\n\n      if (k === 0 || l === 0) {\n        if (Debug) Log.warn('no atoms found for', sele1, sele2)\n        continue\n      }\n\n      for (var j = 0; j < l; ++j) {\n        ap1.index = atomIndices1![ j % k ]\n        ap2.index = atomIndices2![ j ]\n\n        if (ap1 && ap2) {\n          structure.bondStore.addBond(\n            ap1, ap2, getBondOrder(sc.pdbx_value_order[ i ])\n          )\n        } else {\n          Log.log('atoms for connection not found')\n        }\n      }\n    }\n  }\n}\n\nfunction processEntities (cif: Cif, structure: Structure, chainIndexDict: {[k: string]: Set<number>}) {\n  if (cif.entity) {\n    ensureArray(cif.entity, 'id')\n    var e = cif.entity\n    var n = e.id.length\n    for (var i = 0; i < n; ++i) {\n      var description = e.pdbx_description[ i ]\n      var type = e.type[ i ]\n      var chainIndexList: number[] = Array.from(chainIndexDict[ e.id[ i ] ])\n      structure.entityList[ i ] = new Entity(\n        structure, i, description, type, chainIndexList\n      )\n    }\n  }\n}\n\n//\n\nclass CifParser extends StructureParser {\n  get type () { return 'cif' }\n\n  _parse () {\n    // http://mmcif.wwpdb.org/\n\n    Log.time('CifParser._parse ' + this.name)\n\n    var s = this.structure\n    var sb = this.structureBuilder\n\n    var firstModelOnly = this.firstModelOnly\n    var asTrajectory = this.asTrajectory\n    var cAlphaOnly = this.cAlphaOnly\n\n    var frames = s.frames\n    var currentFrame: NumberArray, currentCoord: number\n\n    var rawline, line\n\n    //\n\n    var cif: Cif = {}\n    var asymIdDict: {[k: string]: string} = {}\n    var chainIndexDict:{[k: string]: Set<number>} = {}\n\n    var pendingString = false\n    var currentString: string|null = null\n    var pendingValue = false\n    var pendingLoop = false\n    var pendingName = false\n    var loopPointers: string[][] = []\n    var currentLoopIndex: number|null = null\n    var currentCategory: string|null = null\n    var currentName: string|boolean|null = null\n    var first: boolean|null = null\n    var pointerNames: string[] = []\n\n    var authAsymId: number, authSeqId: number, labelSeqId: number,\n      labelAtomId: number, labelCompId: number, labelAsymId: number, labelEntityId: number, labelAltId: number,\n      groupPDB: number, id: number, typeSymbol: number, pdbxPDBmodelNum: number, pdbxPDBinsCode: number,\n      CartnX: number, CartnY: number, CartnZ: number, bIsoOrEquiv: number, occupancy: number\n\n    //\n\n    var atomMap = s.atomMap\n    var atomStore = s.atomStore\n    atomStore.resize(this.streamer.data.length / 100)\n\n    var idx = 0\n    var modelIdx = 0\n    var modelNum: number\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (var i = _i; i < _n; ++i) {\n        rawline = lines[i]\n        line = rawline.trim()\n\n        if ((!line && !pendingString && !pendingLoop) || line[0] === '#') {\n          // Log.log( \"NEW BLOCK\" );\n\n          pendingString = false\n          pendingLoop = false\n          pendingValue = false\n          loopPointers.length = 0\n          currentLoopIndex = null\n          currentCategory = null\n          currentName = null\n          first = null\n          pointerNames.length = 0\n        } else if (line.substring(0, 5) === 'data_') {\n          cif.data = line.substring(5).trim()\n\n          // Log.log( \"DATA\", data );\n        } else if (line[0] === ';') {\n          if (pendingString) {\n            // Log.log( \"STRING END\", currentString );\n\n            if (pendingLoop) {\n              if (currentLoopIndex === loopPointers.length) {\n                currentLoopIndex = 0\n              }\n              loopPointers[ currentLoopIndex as number ].push(currentString as string);\n              (currentLoopIndex as number) += 1\n            } else {\n              if (currentName === false) {\n                cif[ currentCategory as string ] = currentString\n              } else {\n                cif[ currentCategory as string ][ currentName as string ] = currentString //TODO currentname can equals null\n              }\n            }\n\n            pendingString = false\n            currentString = null\n          } else {\n            // Log.log( \"STRING START\" );\n\n            pendingString = true\n            currentString = line.substring(1)\n          }\n        } else if (line === 'loop_') {\n          // Log.log( \"LOOP START\" );\n\n          pendingLoop = true\n          pendingName = true\n          loopPointers.length = 0\n          pointerNames.length = 0\n          currentLoopIndex = 0\n        } else if (line[0] === '_') {\n          var keyParts, category, name\n\n          if (pendingLoop && !pendingName) {\n            pendingLoop = false\n          }\n\n          if (pendingLoop) {\n            // Log.log( \"LOOP KEY\", line );\n\n            keyParts = line.split('.')\n            category = keyParts[ 0 ].substring(1)\n            name = keyParts[ 1 ]\n\n            if (keyParts.length === 1) {\n              name = false\n              if (!cif[ category ]) cif[ category ] = []\n              loopPointers.push(cif[ category ])\n            } else {\n              if (!cif[ category ]) cif[ category ] = {}\n              if (cif[ category ][ name ]) {\n                if (Debug) Log.warn(category, name, 'already exists')\n              } else {\n                cif[ category ][ name ] = []\n                loopPointers.push(cif[ category ][ name ])\n                pointerNames.push(name)\n              }\n            }\n\n            currentCategory = category\n            currentName = name\n            first = true\n          } else {\n            var keyValuePair = line.match(reQuotedWhitespace)\n            var key = keyValuePair![ 0 ]\n            var value = keyValuePair![ 1 ]\n            keyParts = key.split('.')\n            category = keyParts[ 0 ].substring(1)\n            name = keyParts[ 1 ]\n\n            if (keyParts.length === 1) {\n              name = false\n              cif[ category ] = value\n            } else {\n              if (!cif[ category ]) cif[ category ] = {}\n\n              if (cif[ category ][ name ]) {\n                if (Debug) Log.warn(category, name, 'already exists')\n              } else {\n                cif[ category ][ name ] = value\n              }\n            }\n\n            if (!value) pendingValue = true\n\n            currentCategory = category\n            currentName = name\n          }\n        } else {\n          if (pendingString) {\n            // Log.log( \"STRING VALUE\", line );\n\n            currentString += rawline\n          } else if (pendingLoop) {\n            // Log.log( \"LOOP VALUE\", line );\n\n            if (!line) {\n              continue\n            } else if (currentCategory === 'atom_site') {\n              const ls = line.split(reWhitespace)\n\n              if (first) {\n                authAsymId = pointerNames.indexOf('auth_asym_id')\n                authSeqId = pointerNames.indexOf('auth_seq_id')\n                labelSeqId = pointerNames.indexOf('label_seq_id')\n                labelAtomId = pointerNames.indexOf('label_atom_id')\n                labelCompId = pointerNames.indexOf('label_comp_id')\n                labelAsymId = pointerNames.indexOf('label_asym_id')\n                labelEntityId = pointerNames.indexOf('label_entity_id')\n                labelAltId = pointerNames.indexOf('label_alt_id')\n                CartnX = pointerNames.indexOf('Cartn_x')\n                CartnY = pointerNames.indexOf('Cartn_y')\n                CartnZ = pointerNames.indexOf('Cartn_z')\n                id = pointerNames.indexOf('id')\n                typeSymbol = pointerNames.indexOf('type_symbol')\n                groupPDB = pointerNames.indexOf('group_PDB')\n                bIsoOrEquiv = pointerNames.indexOf('B_iso_or_equiv')\n                pdbxPDBmodelNum = pointerNames.indexOf('pdbx_PDB_model_num')\n\n                pdbxPDBinsCode = pointerNames.indexOf('pdbx_PDB_ins_code')\n                occupancy = pointerNames.indexOf('occupancy')\n\n                first = false\n\n                modelNum = parseInt(ls[ pdbxPDBmodelNum ])\n\n                if (asTrajectory) {\n                  currentFrame = []\n                  currentCoord = 0\n                }\n              }\n\n              //\n\n              const _modelNum = parseInt(ls[ pdbxPDBmodelNum ])\n\n              if (modelNum !== _modelNum) {\n                if (asTrajectory) {\n                  if (modelIdx === 0) {\n                    frames.push(new Float32Array(currentFrame))\n                  }\n\n                  currentFrame = new Float32Array(atomStore.count * 3)\n                  frames.push(currentFrame)\n                  currentCoord = 0\n                }\n\n                modelIdx += 1\n              }\n\n              modelNum = _modelNum\n\n              if (firstModelOnly && modelIdx > 0) continue\n\n              //\n\n              const atomname = ls[ labelAtomId ].replace(reDoubleQuote, '')\n              if (cAlphaOnly && atomname !== 'CA') continue\n\n              const x = parseFloat(ls[ CartnX ])\n              const y = parseFloat(ls[ CartnY ])\n              const z = parseFloat(ls[ CartnZ ])\n\n              if (asTrajectory) {\n                const frameOffset = currentCoord * 3\n\n                currentFrame[ frameOffset + 0 ] = x\n                currentFrame[ frameOffset + 1 ] = y\n                currentFrame[ frameOffset + 2 ] = z\n\n                currentCoord += 1\n\n                if (modelIdx > 0) continue\n              }\n\n              //\n\n              const resname = ls[ labelCompId ]\n              const resno = parseInt(ls[ authSeqId !== -1 ? authSeqId : labelSeqId ])\n              let inscode = ls[ pdbxPDBinsCode ]\n              inscode = (inscode === '?') ? '' : inscode\n              const chainname = ls[ authAsymId ]\n              const chainid = ls[ labelAsymId ]\n              const hetero = (ls[ groupPDB ][ 0 ] === 'H') ? 1 : 0\n\n              //\n\n              const element = ls[ typeSymbol ]\n              const bfactor = parseFloat(ls[ bIsoOrEquiv ])\n              const occ = parseFloat(ls[ occupancy ])\n              let altloc = ls[ labelAltId ]\n              altloc = (altloc === '.') ? '' : altloc\n\n              atomStore.growIfFull()\n              atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\n\n              atomStore.x[ idx ] = x\n              atomStore.y[ idx ] = y\n              atomStore.z[ idx ] = z\n              atomStore.serial[ idx ] = parseInt(ls[ id ])\n              atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\n              atomStore.occupancy[ idx ] = isNaN(occ) ? 0 : occ\n              atomStore.altloc[ idx ] = altloc.charCodeAt(0)\n\n              sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\n\n              if (Debug) {\n                // check if one-to-many (chainname-asymId) relationship is\n                // actually a many-to-many mapping\n                const assignedChainname = asymIdDict[ chainid ]\n                if (assignedChainname !== undefined && assignedChainname !== chainname) {\n                  if (Debug) Log.warn(assignedChainname, chainname)\n                }\n              }\n              // chainname mapping: label_asym_id -> auth_asym_id\n              asymIdDict[ chainid ] = chainname\n\n              // entity mapping: chainIndex -> label_entity_id\n              const entityId = ls[ labelEntityId ]\n              if (!chainIndexDict[ entityId ]) {\n                chainIndexDict[ entityId ] = new Set()\n              }\n              chainIndexDict[ entityId ].add(s.chainStore.count - 1)\n\n              idx += 1\n            } else {\n              const ls = line.match(reQuotedWhitespace)\n              const nn = ls!.length\n\n              if (currentLoopIndex === loopPointers.length) {\n                currentLoopIndex = 0\n              }/* else if( currentLoopIndex + nn > loopPointers.length ){\n                Log.warn( \"cif parsing error, wrong number of loop data entries\", nn, loopPointers.length );\n              } */\n\n              for (let j = 0; j < nn; ++j) {\n                loopPointers[ <number>currentLoopIndex + j ].push(ls![ j ])\n              }\n\n              (<number>currentLoopIndex) += nn\n            }\n\n            pendingName = false\n          } else if (line[0] === \"'\" && line[line.length - 1] === \"'\") {\n            // Log.log( \"NEWLINE STRING\", line );\n\n            const str = line.substring(1, line.length - 1)\n\n            if (currentName === false) {\n              cif[ currentCategory as string ] = str\n            } else {\n              cif[ currentCategory as string ][ currentName as string ] = str\n            }\n          } else if (pendingValue) {\n            // Log.log( \"NEWLINE VALUE\", line );\n\n            if (currentName === false) {\n              cif[ currentCategory as string ] = line\n            } else {\n              cif[ currentCategory as string ][ currentName as string ] = line\n            }\n          } else {\n            if (Debug) Log.log('CifParser._parse: unknown state', line)\n          }\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    if (cif.chem_comp && cif.chem_comp_atom) {\n      parseChemComp(cif, s, sb)\n      sb.finalize()\n      s.finalizeAtoms()\n      s.finalizeBonds()\n      assignResidueTypeBonds(s)\n    } else if (cif.atom_site_type_symbol && cif.atom_site_label && cif.atom_site_fract_x) {\n      parseCore(cif, s, sb)\n      sb.finalize()\n      s.finalizeAtoms()\n      calculateBonds(s)\n      s.finalizeBonds()\n      // assignResidueTypeBonds( s );\n    } else {\n      var secStruct = processSecondaryStructure(cif, s, asymIdDict)\n      processSymmetry(cif, s, asymIdDict)\n      processConnections(cif, s, asymIdDict)\n      processEntities(cif, s, chainIndexDict)\n\n      if (cif.struct && cif.struct.title) {\n        s.title = cif.struct.title.trim().replace(reTrimQuotes, '')\n      }\n      if (cif.entry && cif.entry.id) {\n        s.id = cif.entry.id.trim().replace(reTrimQuotes, '')\n      }\n\n      // structure header (mimicking biojava)\n      if (cif.pdbx_audit_revision_history) {\n        if (cif.pdbx_audit_revision_history.revision_date) {\n          ensureArray(cif.pdbx_audit_revision_history, 'revision_date')\n          const dates = cif.pdbx_audit_revision_history.revision_date.filter(hasValue)\n          if (dates.length) {\n            s.header.releaseDate = dates[ 0 ]\n          }\n        }\n        if (cif.pdbx_database_status.recvd_initial_deposition_date) {\n          ensureArray(cif.pdbx_database_status, 'recvd_initial_deposition_date')\n          const depDates = cif.pdbx_database_status.recvd_initial_deposition_date.filter(hasValue)\n          if (depDates.length) {\n            s.header.depositionDate = depDates[ 0 ]\n          }\n        }\n      } else if (cif.database_PDB_rev) {\n        if (cif.database_PDB_rev.date) {\n          ensureArray(cif.database_PDB_rev, 'date')\n          const dates = cif.database_PDB_rev.date.filter(hasValue)\n          if (dates.length) {\n            s.header.releaseDate = dates[ 0 ]\n          }\n        }\n        if (cif.database_PDB_rev.date_original) {\n          ensureArray(cif.database_PDB_rev, 'date_original')\n          const depDates = cif.database_PDB_rev.date_original.filter(hasValue)\n          if (depDates.length) {\n            s.header.depositionDate = depDates[ 0 ]\n          }\n        }\n      }\n      if (cif.reflns && cif.reflns.d_resolution_high) {\n        if (hasValue(cif.reflns.d_resolution_high)) {\n          s.header.resolution = parseFloat(cif.reflns.d_resolution_high)\n        }\n      } else if (cif.refine && cif.refine.ls_d_res_high) {\n        if (hasValue(cif.refine.ls_d_res_high)) {\n          s.header.resolution = parseFloat(cif.refine.ls_d_res_high)\n        }\n      }\n      if (cif.refine && cif.refine.ls_R_factor_R_free) {\n        if (hasValue(cif.refine.ls_R_factor_R_free)) {\n          s.header.rFree = parseFloat(cif.refine.ls_R_factor_R_free)\n        }\n      }\n      if (cif.refine && cif.refine.ls_R_factor_R_work) {\n        if (hasValue(cif.refine.ls_R_factor_R_work)) {\n          s.header.rWork = parseFloat(cif.refine.ls_R_factor_R_work)\n        }\n      }\n      if (cif.exptl && cif.exptl.method) {\n        ensureArray(cif.exptl, 'method')\n        s.header.experimentalMethods = cif.exptl.method.map(function (m: string) {\n          return m.replace(reTrimQuotes, '')\n        })\n      }\n\n      sb.finalize()\n      s.finalizeAtoms()\n      calculateBonds(s)\n      s.finalizeBonds()\n\n      if (!secStruct) {\n        calculateSecondaryStructure(s)\n      } else {\n        assignSecondaryStructure(s, secStruct)\n      }\n      buildUnitcellAssembly(s)\n\n      s.extraData.cif = cif\n    }\n\n    if (Debug) Log.timeEnd('CifParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('cif', CifParser)\nParserRegistry.add('mcif', CifParser)\nParserRegistry.add('mmcif', CifParser)\n\nexport default CifParser\n","/**\n * @file Gro Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport {\n  calculateBonds, calculateChainnames, calculateSecondaryStructure\n} from '../structure/structure-utils'\n\nclass GroParser extends StructureParser {\n  get type () { return 'gro' }\n\n  _parse () {\n    // http://manual.gromacs.org/current/online/gro.html\n\n    if (Debug) Log.time('GroParser._parse ' + this.name)\n\n    var s = this.structure\n    var sb = this.structureBuilder\n\n    var firstModelOnly = this.firstModelOnly\n    var asTrajectory = this.asTrajectory\n    var cAlphaOnly = this.cAlphaOnly\n\n    var frames = s.frames\n    var boxes = s.boxes\n    var currentFrame: Float32Array, currentCoord: number\n\n    var firstLines = this.streamer.peekLines(3)\n\n    s.title = firstLines[ 0 ].trim()\n\n    // determine number of decimal places\n    var ndec = firstLines[ 2 ].length - firstLines[ 2 ].lastIndexOf('.') - 1\n    var lpos = 5 + ndec\n    var xpos = 20\n    var ypos = 20 + lpos\n    var zpos = 20 + 2 * lpos\n\n    //\n\n    var atomname, resname, resno, serial\n\n    var atomCount = parseInt(firstLines[ 1 ])\n    var modelLineCount = atomCount + 3\n\n    var atomMap = s.atomMap\n    var atomStore = s.atomStore\n    atomStore.resize(atomCount)\n\n    var idx = 0\n    var modelIdx = 0\n    var lineNo = 0\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (var i = _i; i < _n; ++i) {\n        ++lineNo\n        var l = lineNo - 1\n\n        var line = lines[ i ]\n\n        if (!line) continue\n\n        if (l % modelLineCount === 0) {\n          // Log.log( \"title\", line )\n\n          if (asTrajectory) {\n            currentFrame = new Float32Array(atomCount * 3)\n            frames.push(currentFrame)\n            currentCoord = 0\n          }\n        } else if (l % modelLineCount === 1) {\n\n          // Log.log( \"atomCount\", line )\n\n        } else if (l % modelLineCount === modelLineCount - 1) {\n          var str = line.trim().split(/\\s+/)\n          var box = new Float32Array(9)\n          box[ 0 ] = parseFloat(str[ 0 ]) * 10\n          box[ 4 ] = parseFloat(str[ 1 ]) * 10\n          box[ 8 ] = parseFloat(str[ 2 ]) * 10\n          boxes.push(box)\n\n          if (firstModelOnly) {\n            return true\n          }\n\n          modelIdx += 1\n        } else {\n          atomname = line.substr(10, 5).trim()\n          if (cAlphaOnly && atomname !== 'CA') continue\n\n          var x = parseFloat(line.substr(xpos, lpos)) * 10\n          var y = parseFloat(line.substr(ypos, lpos)) * 10\n          var z = parseFloat(line.substr(zpos, lpos)) * 10\n\n          if (asTrajectory) {\n            var j = currentCoord * 3\n\n            currentFrame[ j + 0 ] = x\n            currentFrame[ j + 1 ] = y\n            currentFrame[ j + 2 ] = z\n\n            currentCoord += 1\n\n            if (l > modelLineCount) continue\n          }\n\n          resname = line.substr(5, 5).trim()\n          resno = parseInt(line.substr(0, 5))\n          serial = parseInt(line.substr(15, 5))\n\n          atomStore.growIfFull()\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\n\n          atomStore.x[ idx ] = x\n          atomStore.y[ idx ] = y\n          atomStore.z[ idx ] = z\n          atomStore.serial[ idx ] = serial\n\n          sb.addAtom(modelIdx, '', '', resname, resno, 0, 'l')\n\n          idx += 1\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    sb.finalize()\n    s.finalizeAtoms()\n    calculateChainnames(s)\n    calculateBonds(s)\n    s.finalizeBonds()\n\n    calculateSecondaryStructure(s)\n\n    if (Debug) Log.timeEnd('GroParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('gro', GroParser)\n\nexport default GroParser\n","/**\n * @file utf8-utils\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * mostly copied from https://github.com/creationix/msgpack-js-browser\n * by Tim Caswell <tim@creationix.com>, MIT License, Copyright (c) 2013\n */\n\n\n// Encode string as utf8 into dataview at offset\nfunction utf8Write(view, offset, string) {\n  var byteLength = view.byteLength;\n  for(var i = 0, l = string.length; i < l; i++) {\n    var codePoint = string.charCodeAt(i);\n\n    // One byte of UTF-8\n    if (codePoint < 0x80) {\n      view.setUint8(offset++, codePoint >>> 0 & 0x7f | 0x00);\n      continue;\n    }\n\n    // Two bytes of UTF-8\n    if (codePoint < 0x800) {\n      view.setUint8(offset++, codePoint >>> 6 & 0x1f | 0xc0);\n      view.setUint8(offset++, codePoint >>> 0 & 0x3f | 0x80);\n      continue;\n    }\n\n    // Three bytes of UTF-8.\n    if (codePoint < 0x10000) {\n      view.setUint8(offset++, codePoint >>> 12 & 0x0f | 0xe0);\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\n      continue;\n    }\n\n    // Four bytes of UTF-8\n    if (codePoint < 0x110000) {\n      view.setUint8(offset++, codePoint >>> 18 & 0x07 | 0xf0);\n      view.setUint8(offset++, codePoint >>> 12 & 0x3f | 0x80);\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\n      continue;\n    }\n    throw new Error(\"bad codepoint \" + codePoint);\n  }\n}\n\nfunction utf8ByteCount(string) {\n  var count = 0;\n  for(var i = 0, l = string.length; i < l; i++) {\n    var codePoint = string.charCodeAt(i);\n    if (codePoint < 0x80) {\n      count += 1;\n      continue;\n    }\n    if (codePoint < 0x800) {\n      count += 2;\n      continue;\n    }\n    if (codePoint < 0x10000) {\n      count += 3;\n      continue;\n    }\n    if (codePoint < 0x110000) {\n      count += 4;\n      continue;\n    }\n    throw new Error(\"bad codepoint \" + codePoint);\n  }\n  return count;\n}\n\n/**\n * encode data value (recursively) into binary encoded MessagePack v5 (http://msgpack.org/)\n * @param  {Object|Array|String|Number|Boolean|null} value  [description]\n * @param  {DataView} view   [description]\n * @param  {Integer} offset [description]\n * @return {Integer} number of bytes written into view\n */\nfunction encode$1(value, view, offset) {\n  var type = typeof value;\n\n  // Strings Bytes\n  if (type === \"string\") {\n    var length = utf8ByteCount(value);\n    // fix str\n    if (length < 0x20) {\n      view.setUint8(offset, length | 0xa0);\n      utf8Write(view, offset + 1, value);\n      return 1 + length;\n    }\n    // str 8\n    if (length < 0x100) {\n      view.setUint8(offset, 0xd9);\n      view.setUint8(offset + 1, length);\n      utf8Write(view, offset + 2, value);\n      return 2 + length;\n    }\n    // str 16\n    if (length < 0x10000) {\n      view.setUint8(offset, 0xda);\n      view.setUint16(offset + 1, length);\n      utf8Write(view, offset + 3, value);\n      return 3 + length;\n    }\n    // str 32\n    if (length < 0x100000000) {\n      view.setUint8(offset, 0xdb);\n      view.setUint32(offset + 1, length);\n      utf8Write(view, offset + 5, value);\n      return 5 + length;\n    }\n  }\n\n  if (value instanceof Uint8Array) {\n    var length = value.byteLength;\n    var bytes = new Uint8Array(view.buffer);\n    // bin 8\n    if (length < 0x100) {\n      view.setUint8(offset, 0xc4);\n      view.setUint8(offset + 1, length);\n      bytes.set(value, offset + 2);\n      return 2 + length;\n    }\n    // bin 16\n    if (length < 0x10000) {\n      view.setUint8(offset, 0xc5);\n      view.setUint16(offset + 1, length);\n      bytes.set(value, offset + 3);\n      return 3 + length;\n    }\n    // bin 32\n    if (length < 0x100000000) {\n      view.setUint8(offset, 0xc6);\n      view.setUint32(offset + 1, length);\n      bytes.set(value, offset + 5);\n      return 5 + length;\n    }\n  }\n\n  if (type === \"number\") {\n    if (!isFinite(value)) {\n        throw new Error(\"Number not finite: \" + value);\n    }\n\n    // Floating point\n    if (Math.floor(value) !== value) {\n      view.setUint8(offset, 0xcb);\n      view.setFloat64(offset + 1, value);\n      return 9;\n    }\n\n    // Integers\n    if (value >=0) {\n      // positive fixnum\n      if (value < 0x80) {\n        view.setUint8(offset, value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        view.setUint8(offset, 0xcc);\n        view.setUint8(offset + 1, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        view.setUint8(offset, 0xcd);\n        view.setUint16(offset + 1, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        view.setUint8(offset, 0xce);\n        view.setUint32(offset + 1, value);\n        return 5;\n      }\n      throw new Error(\"Number too big 0x\" + value.toString(16));\n    }\n    // negative fixnum\n    if (value >= -0x20) {\n      view.setInt8(offset, value);\n      return 1;\n    }\n    // int 8\n    if (value >= -0x80) {\n      view.setUint8(offset, 0xd0);\n      view.setInt8(offset + 1, value);\n      return 2;\n    }\n    // int 16\n    if (value >= -0x8000) {\n      view.setUint8(offset, 0xd1);\n      view.setInt16(offset + 1, value);\n      return 3;\n    }\n    // int 32\n    if (value >= -0x80000000) {\n      view.setUint8(offset, 0xd2);\n      view.setInt32(offset + 1, value);\n      return 5;\n    }\n    throw new Error(\"Number too small -0x\" + (-value).toString(16).substr(1));\n  }\n\n  // null\n  if (value === null) {\n    view.setUint8(offset, 0xc0);\n    return 1;\n  }\n\n  // Boolean\n  if (type === \"boolean\") {\n    view.setUint8(offset, value ? 0xc3 : 0xc2);\n    return 1;\n  }\n\n  // Container Types\n  if (type === \"object\") {\n    var length, size = 0;\n    var isArray = Array.isArray(value);\n\n    if (isArray) {\n      length = value.length;\n    }\n    else {\n      var keys = Object.keys(value);\n      length = keys.length;\n    }\n\n    var size;\n    if (length < 0x10) {\n      view.setUint8(offset, length | (isArray ? 0x90 : 0x80));\n      size = 1;\n    }\n    else if (length < 0x10000) {\n      view.setUint8(offset, isArray ? 0xdc : 0xde);\n      view.setUint16(offset + 1, length);\n      size = 3;\n    }\n    else if (length < 0x100000000) {\n      view.setUint8(offset, isArray ? 0xdd : 0xdf);\n      view.setUint32(offset + 1, length);\n      size = 5;\n    }\n\n    if (isArray) {\n      for (var i = 0; i < length; i++) {\n        size += encode$1(value[i], view, offset + size);\n      }\n    }\n    else {\n      for (var i = 0; i < length; i++) {\n        var key = keys[i];\n        size += encode$1(key, view, offset + size);\n        size += encode$1(value[key], view, offset + size);\n      }\n    }\n\n    return size;\n  }\n  throw new Error(\"Unknown type \" + type);\n}\n\nfunction encodedSize(value) {\n  var type = typeof value;\n\n  // Raw Bytes\n  if (type === \"string\") {\n    var length = utf8ByteCount(value);\n    if (length < 0x20) {\n      return 1 + length;\n    }\n    if (length < 0x100) {\n      return 2 + length;\n    }\n    if (length < 0x10000) {\n      return 3 + length;\n    }\n    if (length < 0x100000000) {\n      return 5 + length;\n    }\n  }\n\n  if (value instanceof Uint8Array) {\n    var length = value.byteLength;\n    if (length < 0x100) {\n      return 2 + length;\n    }\n    if (length < 0x10000) {\n      return 3 + length;\n    }\n    if (length < 0x100000000) {\n      return 5 + length;\n    }\n  }\n\n  if (type === \"number\") {\n    // Floating Point\n    // double\n    if (Math.floor(value) !== value) return 9;\n\n    // Integers\n    if (value >=0) {\n      // positive fixnum\n      if (value < 0x80) return 1;\n      // uint 8\n      if (value < 0x100) return 2;\n      // uint 16\n      if (value < 0x10000) return 3;\n      // uint 32\n      if (value < 0x100000000) return 5;\n      throw new Error(\"Number too big 0x\" + value.toString(16));\n    }\n    // negative fixnum\n    if (value >= -0x20) return 1;\n    // int 8\n    if (value >= -0x80) return 2;\n    // int 16\n    if (value >= -0x8000) return 3;\n    // int 32\n    if (value >= -0x80000000) return 5;\n    throw new Error(\"Number too small -0x\" + value.toString(16).substr(1));\n  }\n\n  // Boolean, null\n  if (type === \"boolean\" || value === null) return 1;\n\n  // Container Types\n  if (type === \"object\") {\n    var length, size = 0;\n    if (Array.isArray(value)) {\n      length = value.length;\n      for (var i = 0; i < length; i++) {\n        size += encodedSize(value[i]);\n      }\n    }\n    else {\n      var keys = Object.keys(value);\n      length = keys.length;\n      for (var i = 0; i < length; i++) {\n        var key = keys[i];\n        size += encodedSize(key) + encodedSize(value[key]);\n      }\n    }\n    if (length < 0x10) {\n      return 1 + size;\n    }\n    if (length < 0x10000) {\n      return 3 + size;\n    }\n    if (length < 0x100000000) {\n      return 5 + size;\n    }\n    throw new Error(\"Array or object too long 0x\" + length.toString(16));\n  }\n  throw new Error(\"Unknown type \" + type);\n}\n\nfunction encodeMsgpack(value) {\n  var buffer = new ArrayBuffer(encodedSize(value));\n  var view = new DataView(buffer);\n  encode$1(value, view, 0);\n  return new Uint8Array(buffer);\n}\n\n/**\n * @file mmtf-constants\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n\nvar PassThroughFields = [\n    \"mmtfVersion\", \"mmtfProducer\",\n    \"unitCell\", \"spaceGroup\", \"structureId\", \"title\",\n    \"depositionDate\", \"releaseDate\",\n    \"experimentalMethods\", \"resolution\", \"rFree\", \"rWork\",\n    \"bioAssemblyList\", \"ncsOperatorList\", \"entityList\", \"groupList\",\n    \"numBonds\", \"numAtoms\", \"numGroups\", \"numChains\", \"numModels\",\n    \"groupsPerChain\", \"chainsPerModel\",\n];\n\nvar EncodedFields = [\n\t// required\n    \"xCoordList\", \"yCoordList\", \"zCoordList\",\n    \"groupIdList\", \"groupTypeList\",\n    \"chainIdList\",\n    // optional\n    \"bFactorList\", \"atomIdList\", \"altLocList\", \"occupancyList\",\n    \"secStructList\", \"insCodeList\", \"sequenceIndexList\",\n    \"chainNameList\",\n    \"bondAtomList\", \"bondOrderList\"\n];\n\nvar AllFields = PassThroughFields.concat( EncodedFields );\n\n/**\n * @file mmtf-utils\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n/**\n * mmtf utils module.\n * @module MmtfUtils\n */\n\n\nfunction getView( ctor, typedArray, elemSize ){\n    return typedArray ? new ctor(\n        typedArray.buffer,\n        typedArray.byteOffset,\n        typedArray.byteLength / ( elemSize || 1 )\n    ) : undefined;\n}\n\nfunction getDataView( typedArray ){\n    return getView( DataView, typedArray );\n}\n\n/**\n * get an Uint8Array view on the input array memory\n * @static\n * @param  {TypedArray} dataArray - input array\n * @return {Uint8Array} new view on the input array memory\n */\nfunction getUint8View( typedArray ){\n    return getView( Uint8Array, typedArray );\n}\n\n/**\n * get an Int8Array view on the input array memory\n * @static\n * @param  {TypedArray} dataArray - input array\n * @return {Int8Array} new view on the input array memory\n */\nfunction getInt8View( typedArray ){\n    return getView( Int8Array, typedArray );\n}\n\n/**\n * get an Int32Array view on the input array memory\n * @static\n * @param  {TypedArray} dataArray - input array\n * @return {Int32Array} new view on the input array memory\n */\nfunction getInt32View( typedArray ){\n    return getView( Int32Array, typedArray, 4 );\n}\n\nfunction getFloat32View( typedArray ){\n    return getView( Float32Array, typedArray, 4 );\n}\n\n\n/**\n * get an Int16Array copy of the the input array data\n * @static\n * @param  {TypedArray} view - input data in big endian format\n * @param  {Int16Array} [dataArray] - pre-allocated output array\n * @return {Int16Array} copy of the input array data\n */\nfunction decodeInt16( bytes, output ){\n    var n = bytes.length / 2;\n    if( !output ) output = new Int16Array( n );\n    for( var i = 0, i2 = 0; i < n; ++i, i2 += 2 ){\n        output[ i ] = bytes[ i2 ] << 8 ^ bytes[ i2 + 1 ] << 0;\n    }\n    return output;\n}\n\n/**\n * make big endian buffer of an int16 array\n * @static\n * @param  {Array|TypedArray} array - array of int16 values\n * @return {ArrayBuffer} big endian buffer\n */\nfunction encodeInt16( array, output ){\n    var n = array.length;\n    if( !output ) output = new Uint8Array( 2 * n );\n    var dv = getDataView( output );\n    for( var i = 0; i < n; ++i ){\n        dv.setInt16( 2 * i, array[ i ] );\n    }\n    return getUint8View( output );\n}\n\n/**\n * get an Int32Array copy of the the input array data\n * @static\n * @param  {TypedArray} view - input data in big endian format\n * @param  {Int32Array} [dataArray] - pre-allocated output array\n * @return {Int32Array} copy of the input array data\n */\nfunction decodeInt32( bytes, output ){\n    var n = bytes.length / 4;\n    if( !output ) output = new Int32Array( n );\n    for( var i = 0, i4 = 0; i < n; ++i, i4 += 4 ){\n        output[ i ] = (\n            bytes[ i4     ] << 24 ^ bytes[ i4 + 1 ] << 16 ^\n            bytes[ i4 + 2 ] <<  8 ^ bytes[ i4 + 3 ] <<  0\n        );\n    }\n    return output;\n}\n\n/**\n * make big endian buffer of an int32 array\n * @static\n * @param  {Array|TypedArray} array - array of int32 values\n * @return {ArrayBuffer} big endian buffer\n */\nfunction encodeInt32( array, output ){\n    var n = array.length;\n    if( !output ) output = new Uint8Array( 4 * n );\n    var dv = getDataView( output );\n    for( var i = 0; i < n; ++i ){\n        dv.setInt32( 4 * i, array[ i ] );\n    }\n    return getUint8View( output );\n}\n\nfunction decodeFloat32( bytes, output ){\n    var n = bytes.length;\n    if( !output ) output = new Float32Array( n / 4 );\n    var dvOut = getDataView( output );\n    var dvIn = getDataView( bytes );\n    for( var i = 0, i4 = 0, il = n / 4; i < il; ++i, i4 += 4 ){\n        dvOut.setFloat32( i4, dvIn.getFloat32( i4 ), true );\n    }\n    return output;\n}\n\n/**\n * decode integers into floats using given divisor\n * example:\n *     intArray: [ 12, 34, 543, 687, 2, 0, 4689 ]\n *     divisor: 100\n *     return: [ 0.12, 0.34, 5.43, 6.87, 0.02, 0.00, 46.89 ]\n * @static\n * @param  {TypedArray|Array} intArray - input array containing integers\n * @param  {Number} divisor - number to devide the integers to obtain floats\n * @param  {Float32Array} [dataArray] - pre-allocated output array\n * @return {Float32Array} decoded array\n */\nfunction decodeInteger( intArray, divisor, output ){\n    var n = intArray.length;\n    var invDiv = 1/divisor;\n    if( !output ) output = new Float32Array( n );\n    for( var i = 0; i < n; ++i ){\n        // multiply by inverse of the divisor which is faster then division\n        output[ i ] = intArray[ i ] * invDiv;\n    }\n    return output;\n}\n\nfunction encodeInteger( floatArray, factor, output ){\n    var n = floatArray.length;\n    if( !output ) output = new Int32Array( n );\n    for( var i = 0; i < n; ++i ){\n        output[ i ] = Math.round( floatArray[ i ] * factor );\n    }\n    return output;\n}\n\n\n\n/**\n * perform run-length decoding of input array\n * example:\n *     array: [ 0, 2, 3, 5 ]  // pairs of values and length of a run\n *     return: [ 0, 0, 3, 3, 3, 3, 3 ]\n * @static\n * @param  {TypedArray|Array} array - run-length encoded input array\n * @param  {TypedArray|Array} [dataArray] - pre-allocated output array\n * @return {TypedArray|Array} decoded array\n */\nfunction decodeRun( array, output ){\n    var i, il;\n    if( !output ){\n        // calculate the length the decoded array will have\n        var fullLength = 0;\n        for( i = 0, il = array.length; i < il; i+=2 ){\n            fullLength += array[ i + 1 ];\n        }\n        // create a new array of the same type of the input array\n        output = new array.constructor( fullLength );\n    }\n    var dataOffset = 0;\n    for( i = 0, il = array.length; i < il; i+=2 ){\n        var value = array[ i ];  // value to be repeated\n        var length = array[ i + 1 ];  // number of repeats\n        for( var j = 0; j < length; ++j ){\n            output[ dataOffset ] = value;\n            ++dataOffset;\n        }\n    }\n    return output;\n}\n\nfunction encodeRun( array ){\n    if( array.length === 0 ) return new Int32Array();\n    var i, il;\n    // calculate output size\n    var fullLength = 2;\n    for( i = 1, il = array.length; i < il; ++i ){\n        if( array[ i - 1 ] !== array[ i ] ){\n            fullLength += 2;\n        }\n    }\n    var output = new Int32Array( fullLength );\n    var offset = 0;\n    var runLength = 1;\n    for( i = 1, il = array.length; i < il; ++i ){\n        if( array[ i - 1 ] !== array[ i ] ){\n            output[ offset ] = array[ i - 1 ];\n            output[ offset + 1 ] = runLength;\n            runLength = 1;\n            offset += 2;\n        }else{\n            ++runLength;\n        }\n    }\n    output[ offset ] = array[ array.length - 1 ];\n    output[ offset + 1 ] = runLength;\n    return output;\n}\n\n\n\n/**\n * perform delta decoding of the input array\n * by iterativly adding the ith element's value to the i+1th\n * example:\n *     dataArray: [ 0, 2, 1, 2, 1, 1, -4, -2, 9 ]\n *     return: [ 0, 2, 3, 5, 6, 7, 3, 1, 10 ]\n * @static\n * @param  {TypedArray|Array} dataArray - delta encoded input array\n * @return {TypedArray|Array} decoded array\n */\nfunction decodeDelta( array, output ){\n    var n = array.length;\n    if( !output ) output = new array.constructor( n );\n    if( n ) output[ 0 ] = array[ 0 ];\n    for( var i = 1; i < n; ++i ){\n        output[ i ] = array[ i ] + output[ i - 1 ];\n    }\n    return output;\n}\n\nfunction encodeDelta( array, output ){\n    var n = array.length;\n    if( !output ) output = new array.constructor( n );\n    output[ 0 ] = array[ 0 ];\n    for( var i = 1; i < n; ++i ){\n        output[ i ] = array[ i ] - array[ i - 1 ];\n    }\n    return output;\n}\n\n\n\n/**\n * [decodePacking description]\n * @param  {Int16Array|Int8Array} int16or8 [description]\n * @param  {Int32Array} output   [description]\n * @return {Int32Array}          [description]\n */\nfunction decodePacking( int16or8, output ){\n    var upperLimit = int16or8 instanceof Int8Array ? 0x7F : 0x7FFF;\n    var lowerLimit = -upperLimit - 1;\n    var n = int16or8.length;\n    var i, j;\n    if( !output ){\n        var fullLength = 0;\n        for( i = 0; i < n; ++i ){\n            if( int16or8[ i ] < upperLimit && int16or8[ i ] > lowerLimit ){\n                ++fullLength;\n            }\n        }\n        output = new Int32Array( fullLength );\n    }\n    i = 0;\n    j = 0;\n    while( i < n ){\n        var value = 0;\n        while( int16or8[ i ] === upperLimit || int16or8[ i ] === lowerLimit ){\n            value += int16or8[ i ];\n            ++i;\n        }\n        value += int16or8[ i ];\n        ++i;\n        output[ j ] = value;\n        ++j;\n    }\n    return output;\n}\n\n/**\n * integer packing using recursive indexing\n * @param  {Array|TyepedArray} intArray [description]\n * @param  {Boolean} useInt8  [description]\n * @return {Int16Array|Int8Array}          [description]\n */\nfunction encodePacking( intArray, useInt8 ){\n    var upperLimit = useInt8 ? 0x7F : 0x7FFF;\n    var lowerLimit = -upperLimit - 1;\n    var i;\n    var n = intArray.length;\n    var size = 0;\n    for( i = 0; i < n; ++i ){\n        var value = intArray[ i ];\n        if( value === 0 ){\n            ++size;\n        }else if( value === upperLimit || value === lowerLimit ){\n            size += 2;\n        }else if( value > 0) {\n            size += Math.ceil( value / upperLimit );\n        }else {\n            size += Math.ceil( value / lowerLimit );\n        }\n    }\n    var output = useInt8 ? new Int8Array( size ) : new Int16Array( size );\n    var j = 0;\n    for( i = 0; i < n; ++i ){\n        var value = intArray[ i ];\n        if( value >= 0) {\n            while( value >= upperLimit ){\n                output[ j ] = upperLimit;\n                ++j;\n                value -= upperLimit;\n            }\n        }else{\n            while( value <= lowerLimit ){\n                output[ j ] = lowerLimit;\n                ++j;\n                value -= lowerLimit;\n            }\n        }\n        output[ j ] = value;\n        ++j;\n    }\n    return output;\n}\n\n\n\nfunction decodeDeltaRun( array, output ){\n    return decodeDelta( decodeRun( array ), output );\n}\n\nfunction encodeDeltaRun( array ){\n    return encodeRun( encodeDelta( array ) );\n}\n\n\n\n/**\n * perform run-length decoding followed (@see decodeRunLength)\n * by decoding integers into floats using given divisor (@see decodeIntegerToFloat)\n * example:\n *     array: [ 320, 3, 100, 2 ]\n *     divisor: 100\n *     return: [ 3.20, 3.20, 3.20, 1.00, 1.00 ]\n * @static\n * @param  {Uint8Array} array - run-length encoded int32 array as bytes in big endian format\n * @param  {Integer} divisor - number to devide the integers to obtain floats\n * @param  {Float32Array} dataArray - pre-allocated output array\n * @return {Float32Array} decoded array\n */\nfunction decodeIntegerRun( intArray, divisor, output ){\n    return decodeInteger(\n        decodeRun( intArray, getInt32View( output ) ), divisor, output\n    );\n}\n\nfunction encodeIntegerRun( floatArray, factor ){\n    return encodeRun( encodeInteger( floatArray, factor ) );\n}\n\n\n\nfunction decodeIntegerDelta( intArray, divisor, output ){\n    return decodeInteger(\n        decodeDelta( intArray, getInt32View( output ) ), divisor, output\n    );\n}\n\nfunction encodeIntegerDelta( floatArray, factor, output ){\n    return encodeDelta( encodeInteger( floatArray, factor ), output );\n}\n\n\n\nfunction decodeIntegerPacking( int16or8, divisor, output ){\n    return decodeInteger(\n        decodePacking( int16or8, getInt32View( output ) ), divisor, output\n    );\n}\n\nfunction decodeIntegerDeltaPacking( int16or8, divisor, output ){\n    var unpacked = decodePacking( int16or8, getInt32View( output ) );\n    return decodeIntegerDelta( unpacked, divisor, getFloat32View( unpacked ) );\n}\n\nfunction encodeIntegerDeltaPacking( floatArray, factor, useInt8 ){\n    return encodePacking( encodeIntegerDelta( floatArray, factor ), useInt8 );\n}\n\n\n\nfunction decodeBytes( bytes ){\n    var dv = getDataView( bytes );\n    var type = dv.getInt32( 0 );\n    var size = dv.getInt32( 4 );\n    var param = bytes.subarray( 8, 12 );\n    var bytes = bytes.subarray( 12 );\n    return [ type, bytes, size, param ];\n}\n\nfunction encodeBytes( type, size, param, bytes ){\n    var buffer = new ArrayBuffer( 12 + bytes.byteLength );\n    var out = new Uint8Array( buffer );\n    var dv = new DataView( buffer );\n    dv.setInt32( 0, type );\n    dv.setInt32( 4, size );\n    if( param ) out.set( param, 8 );\n    out.set( bytes, 12 );\n    return out;\n}\n\nfunction passInt8( int8 ){\n    var size = int8.length;\n    var bytes = getUint8View( int8 );\n    return encodeBytes( 2, size, undefined, bytes );\n}\n\nfunction passInt32( int32 ){\n    var size = int32.length;\n    var bytes = encodeInt32( int32 );\n    return encodeBytes( 4, size, undefined, bytes );\n}\n\nfunction passString( stringBytes, length ){\n    var size = stringBytes.length / length;\n    var param = encodeInt32([ length ]);\n    var bytes = getUint8View( stringBytes );\n    return encodeBytes( 5, size, param, bytes );\n}\n\nfunction runChar( charBytes ){\n    var size = charBytes.length;\n    var bytes = encodeInt32( encodeRun( charBytes ) );\n    return encodeBytes( 6, size, undefined, bytes );\n}\n\nfunction deltaRun( int32 ){\n    var size = int32.length;\n    var bytes = encodeInt32( encodeDeltaRun( int32 ) );\n    return encodeBytes( 8, size, undefined, bytes );\n}\n\nfunction integerRun( float32, factor ){\n    var size = float32.length;\n    var param = encodeInt32([ factor ]);\n    var bytes = encodeInt32( encodeIntegerRun( float32, factor ) );\n    return encodeBytes( 9, size, param, bytes );\n}\n\nfunction integerDeltaPacking16( float32, factor ){\n    var size = float32.length;\n    var param = encodeInt32([ factor ]);\n    var bytes = encodeInt16( encodeIntegerDeltaPacking( float32, factor ) );\n    return encodeBytes( 10, size, param, bytes );\n}\n\nfunction encodeMmtf( inputDict ){\n\n    var outputDict = {};\n\n    // copy some fields over from the input dict\n    PassThroughFields.forEach( function( name ){\n        if( inputDict[ name ] !== undefined ){\n            outputDict[ name ] = inputDict[ name ];\n        }\n    } );\n\n    //////////////\n    // bond data\n\n    // encode inter group bond atom indices, i.e. get bytes in big endian order\n    if( inputDict.bondAtomList ){\n        outputDict.bondAtomList = passInt32( inputDict.bondAtomList );\n    }\n\n    // encode inter group bond orders, i.e. get bytes\n    if( inputDict.bondOrderList ){\n        outputDict.bondOrderList = passInt8( inputDict.bondOrderList );\n    }\n\n    //////////////\n    // atom data\n\n    // split-list delta & integer encode x, y, z atom coords\n    outputDict.xCoordList = integerDeltaPacking16( inputDict.xCoordList, 1000 );\n    outputDict.yCoordList = integerDeltaPacking16( inputDict.yCoordList, 1000 );\n    outputDict.zCoordList = integerDeltaPacking16( inputDict.zCoordList, 1000 );\n\n    // split-list delta & integer encode b-factors\n    if( inputDict.bFactorList ){\n        outputDict.bFactorList = integerDeltaPacking16( inputDict.bFactorList, 100 );\n    }\n\n    // delta & run-length encode atom ids\n    if( inputDict.atomIdList ){\n        outputDict.atomIdList = deltaRun( inputDict.atomIdList );\n    }\n\n    // run-length encode alternate labels\n    if( inputDict.altLocList ){\n        outputDict.altLocList = runChar( inputDict.altLocList );\n    }\n\n    // run-length & integer encode occupancies\n    if( inputDict.occupancyList ){\n        outputDict.occupancyList = integerRun( inputDict.occupancyList, 100 );\n    }\n\n    ///////////////\n    // group data\n\n    // run-length & delta encode group numbers\n    outputDict.groupIdList = deltaRun( inputDict.groupIdList );\n\n    // encode group types, i.e. get int32 array\n    outputDict.groupTypeList = passInt32( inputDict.groupTypeList );\n\n    // encode secondary structure, i.e. get bytes\n    if( inputDict.secStructList ){\n        outputDict.secStructList = passInt8( inputDict.secStructList, 1 );\n    }\n\n    // run-length encode insertion codes\n    if( inputDict.insCodeList ){\n        outputDict.insCodeList = runChar( inputDict.insCodeList );\n    }\n\n    // run-length & delta encode sequence indices\n    if( inputDict.sequenceIndexList ){\n        outputDict.sequenceIndexList = deltaRun( inputDict.sequenceIndexList );\n    }\n\n    ///////////////\n    // chain data\n\n    // encode chain ids, i.e. get bytes\n    outputDict.chainIdList = passString( inputDict.chainIdList, 4 );\n\n    // encode chain names, i.e. get bytes\n    if( inputDict.chainNameList ){\n        outputDict.chainNameList = passString( inputDict.chainNameList, 4 );\n    }\n\n    return outputDict;\n\n}\n\n/**\n * @file msgpack-decode\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n/**\n * msgpack decode module.\n * @module MsgpackDecode\n */\n\n/**\n * decode binary encoded MessagePack v5 (http://msgpack.org/) data\n * @static\n * @param  {Uint8Array} buffer - binary encoded MessagePack data\n * @return {Object|Array|String|Number|Boolean|null} decoded Messagepack data\n */\nfunction decodeMsgpack(buffer) {\n  // Loosely based on\n  // The MIT License (MIT)\n  // Copyright (c) 2013 Tim Caswell <tim@creationix.com>\n  // https://github.com/creationix/msgpack-js\n  var offset = 0;\n  var dataView = new DataView(buffer.buffer);\n\n  /**\n   * decode all key-value pairs of a map into an object\n   * @param  {Integer} length - number of key-value pairs\n   * @return {Object} decoded map\n   */\n  function map(length) {\n    var value = {};\n    for (var i = 0; i < length; i++) {\n      var key = parse();\n      value[key] = parse();\n    }\n    return value;\n  }\n\n  /**\n   * decode binary array\n   * @param  {Integer} length - number of elements in the array\n   * @return {Uint8Array} decoded array\n   */\n  function bin(length) {\n    var value = buffer.subarray(offset, offset + length);\n    offset += length;\n    return value;\n  }\n\n  /**\n   * decode string\n   * @param  {Integer} length - number string characters\n   * @return {String} decoded string\n   */\n  function str(length) {\n    var array = buffer.subarray(offset, offset + length);\n    offset += length;\n    // limit number of arguments to String.fromCharCode to something\n    // browsers can handle, see http://stackoverflow.com/a/22747272\n    var chunkSize = 0xffff;\n    if(length > chunkSize){\n      var c = [];\n      for(var i = 0; i < array.length; i += chunkSize) {\n        c.push(String.fromCharCode.apply(\n          null, array.subarray(i, i + chunkSize)\n        ));\n      }\n      return c.join(\"\");\n    }else{\n      return String.fromCharCode.apply(null, array);\n    }\n  }\n\n  /**\n   * decode array\n   * @param  {Integer} length - number of array elements\n   * @return {Array} decoded array\n   */\n  function array(length) {\n    var value = new Array(length);\n    for (var i = 0; i < length; i++) {\n      value[i] = parse();\n    }\n    return value;\n  }\n\n  /**\n   * recursively parse the MessagePack data\n   * @return {Object|Array|String|Number|Boolean|null} decoded MessagePack data\n   */\n  function parse() {\n    var type = buffer[offset];\n    var value, length, extType;\n    // Positive FixInt\n    if ((type & 0x80) === 0x00) {\n      offset++;\n      return type;\n    }\n    // FixMap\n    if ((type & 0xf0) === 0x80) {\n      length = type & 0x0f;\n      offset++;\n      return map(length);\n    }\n    // FixArray\n    if ((type & 0xf0) === 0x90) {\n      length = type & 0x0f;\n      offset++;\n      return array(length);\n    }\n    // FixStr\n    if ((type & 0xe0) === 0xa0) {\n      length = type & 0x1f;\n      offset++;\n      return str(length);\n    }\n    // Negative FixInt\n    if ((type & 0xe0) === 0xe0) {\n      value = dataView.getInt8(offset);\n      offset++;\n      return value;\n    }\n    switch (type) {\n    // nil\n    case 0xc0:\n      offset++;\n      return null;\n    // 0xc1: (never used, could be employed for padding)\n    // false\n    case 0xc2:\n      offset++;\n      return false;\n    // true\n    case 0xc3:\n      offset++;\n      return true;\n    // bin 8\n    case 0xc4:\n      length = dataView.getUint8(offset + 1);\n      offset += 2;\n      return bin(length);\n    // bin 16\n    case 0xc5:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return bin(length);\n    // bin 32\n    case 0xc6:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return bin(length);\n    // // ext 8\n    // case 0xc7:\n    //   length = dataView.getUint8(offset + 1);\n    //   extType = dataView.getUint8(offset + 2);\n    //   offset += 3;\n    //   return [extType, bin(length)];\n    // // ext 16\n    // case 0xc8:\n    //   length = dataView.getUint16(offset + 1);\n    //   extType = dataView.getUint8(offset + 3);\n    //   offset += 4;\n    //   return [extType, bin(length)];\n    // // ext 32\n    // case 0xc9:\n    //   length = dataView.getUint32(offset + 1);\n    //   extType = dataView.getUint8(offset + 5);\n    //   offset += 6;\n    //   return [extType, bin(length)];\n    // float 32\n    case 0xca:\n      value = dataView.getFloat32(offset + 1);\n      offset += 5;\n      return value;\n    // float 64\n    case 0xcb:\n      value = dataView.getFloat64(offset + 1);\n      offset += 9;\n      return value;\n    // uint8\n    case 0xcc:\n      value = buffer[offset + 1];\n      offset += 2;\n      return value;\n    // uint 16\n    case 0xcd:\n      value = dataView.getUint16(offset + 1);\n      offset += 3;\n      return value;\n    // uint 32\n    case 0xce:\n      value = dataView.getUint32(offset + 1);\n      offset += 5;\n      return value;\n    // // uint64\n    // case 0xcf:\n    //   // FIXME not available/representable in JS\n    //   // largest possible int in JS is 2^53\n    //   // value = dataView.getUint64(offset + 1);\n    //   offset += 9;\n    //   return 0;\n    // int 8\n    case 0xd0:\n      value = dataView.getInt8(offset + 1);\n      offset += 2;\n      return value;\n    // int 16\n    case 0xd1:\n      value = dataView.getInt16(offset + 1);\n      offset += 3;\n      return value;\n    // int 32\n    case 0xd2:\n      value = dataView.getInt32(offset + 1);\n      offset += 5;\n      return value;\n    // // int 64\n    // case 0xd3:\n    //   // FIXME not available/representable in JS\n    //   // largest possible int in JS is 2^53\n    //   // value = dataView.getInt64(offset + 1);\n    //   offset += 9;\n    //   return 0;\n\n    // // fixext 1\n    // case 0xd4:\n    //   extType = dataView.getUint8(offset + 1);\n    //   offset += 2;\n    //   return [extType, bin(1)];\n    // // fixext 2\n    // case 0xd5:\n    //   extType = dataView.getUint8(offset + 1);\n    //   offset += 2;\n    //   return [extType, bin(2)];\n    // // fixext 4\n    // case 0xd6:\n    //   extType = dataView.getUint8(offset + 1);\n    //   offset += 2;\n    //   return [extType, bin(4)];\n    // // fixext 8\n    // case 0xd7:\n    //   extType = dataView.getUint8(offset + 1);\n    //   offset += 2;\n    //   return [extType, bin(8)];\n    // // fixext 16\n    // case 0xd8:\n    //   extType = dataView.getUint8(offset + 1);\n    //   offset += 2;\n    //   return [extType, bin(16)];\n    // str 8\n    case 0xd9:\n      length = dataView.getUint8(offset + 1);\n      offset += 2;\n      return str(length);\n    // str 16\n    case 0xda:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return str(length);\n    // str 32\n    case 0xdb:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return str(length);\n    // array 16\n    case 0xdc:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return array(length);\n    // array 32\n    case 0xdd:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return array(length);\n    // map 16:\n    case 0xde:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return map(length);\n    // map 32\n    case 0xdf:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return map(length);\n    }\n\n    throw new Error(\"Unknown type 0x\" + type.toString(16));\n  }\n\n  // start the recursive parsing\n  return parse();\n}\n\n/**\n * Fields shared in encoded and decoded mmtf data objects.\n * @typedef {Object} module:MmtfDecode.SharedMmtfData\n * @property {String} mmtfVersion - MMTF specification version\n * @property {String} mmtfProducer - Program that created the file\n * @property {Float[]} [unitCell] - Crystallographic unit cell\n * @property {Float} unitCell.0 - x length\n * @property {Float} unitCell.1 - y length\n * @property {Float} unitCell.2 - z length\n * @property {Float} unitCell.3 - alpha angle\n * @property {Float} unitCell.4 - beta angle\n * @property {Float} unitCell.5 - gamma angle\n * @property {String} [spaceGroup] - Hermann-Mauguin symbol\n * @property {String} [structureId] - Some reference, e.g. a PDB ID\n * @property {String} [title] - Short description\n * @property {String} [depositionDate] - Deposition date in YYYY-MM-DD format\n * @property {String} [releaseDate] - Release date in YYYY-MM-DD format\n * @property {String[]} [experimentalMethods] - Structure determination methods\n * @property {Float} [resolution] - Resolution in Å\n * @property {Float} [rFree] - R-free value\n * @property {Float} [rWork] - R-work value\n * @property {Integer} numBonds - Number of bonds\n * @property {Integer} numAtoms - Number of atoms\n * @property {Integer} numGroups - Number of groups (residues)\n * @property {Integer} numChains - Number of chains\n * @property {Integer} numModels - Number of models\n * @property {Integer[]} chainsPerModel - List of number of chains in each model\n * @property {Integer[]} groupsPerChain - List of number of groups in each chain\n * @property {Entity[]} [entityList] - List of entity objects\n * @property {Integer[]} entityList.chainIndexList - Pointers into chain data fields\n * @property {String} entityList.description - Description of the entity\n * @property {String} entityList.type - Name of the entity type\n * @property {String} entityList.sequence - One letter code sequence\n * @property {Assembly[]} [bioAssemblyList] - List of assembly objects\n * @property {Transform[]} bioAssemblyList.transformList - List of transform objects\n * @property {Integer[]} bioAssemblyList.transformList.chainIndexList - Pointers into chain data fields\n * @property {Float[]} bioAssemblyList.transformList.matrix - 4x4 transformation matrix\n * @property {Array[]} [ncsOperatorList] - List of ncs operator matrices\n * @property {Float[]} ncsOperatorList. - 4x4 transformation matrix\n * @property {GroupType[]} groupList - List of groupType objects\n * @property {Integer[]} groupList.formalChargeList - List of atom formal charges\n * @property {String[]} groupList.elementList - List of elements\n * @property {String[]} groupList.atomNameList - List of atom names\n * @property {Integer[]} groupList.bondAtomList - List of bonded atom indices\n * @property {Integer[]} groupList.bondOrderList - List of bond orders\n * @property {String} groupList.groupName - The name of the group\n * @property {String} groupList.singleLetterCode - The single letter code\n * @property {String} groupList.chemCompType -  The chemical component type\n */\n\n/**\n * Encoded mmtf data object. Also includes the fields from {@link module:MmtfDecode.SharedMmtfData}. See MMTF specification on how they are encoded.\n * @typedef {Object} module:MmtfDecode.EncodedMmtfData\n * @mixes module:MmtfDecode.SharedMmtfData\n * @property {Uint8Array} [bondAtomList] - Encoded bonded atom indices\n * @property {Uint8Array} [bondOrderList] - Encoded bond orders\n * @property {Uint8Array} xCoordBig - Encoded x coordinates in Å, part 1\n * @property {Uint8Array} xCoordSmall - Encoded x coordinates in Å, part 2\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\n * @property {Uint8Array} [bFactorBig] - Encoded B-factors in Å^2, part 1\n * @property {Uint8Array} [bFactorSmall] - Encoded B-factors in Å^2, part 2\n * @property {Uint8Array} [atomIdList] - Encoded  atom ids\n * @property {Uint8Array} [altLocList] - Encoded alternate location labels\n * @property {Uint8Array} [occupancyList] - Encoded occupancies\n * @property {Uint8Array} groupIdList - Encoded group ids\n * @property {Uint8Array} groupTypeList - Encoded group types\n * @property {Uint8Array} [secStructList] - Encoded secondary structure codes\n * @property {Uint8Array} [insCodeList] - Encoded insertion codes\n * @property {Uint8Array} [seuenceIdList] - Encoded sequence ids\n * @property {Uint8Array} chainIdList - Encoded chain ids\n * @property {Uint8Array} [chainNameList] - Encoded chain names\n */\n\n/**\n * Decoded mmtf data object. Also includes fields the from {@link module:MmtfDecode.SharedMmtfData}.\n * @typedef {Object} module:MmtfDecode.MmtfData\n * @mixes module:MmtfDecode.SharedMmtfData\n * @property {Int32Array} [bondAtomList] - List of bonded atom indices\n * @property {Uint8Array} [bondOrderList] - List of bond orders\n * @property {Float32Array} xCoordList - List of x coordinates in Å\n * @property {Float32Array} yCoordList - List of y coordinates in Å\n * @property {Float32Array} zCoordList - List of z coordinates in Å\n * @property {Float32Array} [bFactorList] - List of B-factors in Å^2\n * @property {Int32Array} [atomIdList] - List of atom ids\n * @property {Uint8Array} [altLocList] - List of alternate location labels\n * @property {Float32Array} [occupancyList] - List of occupancies\n * @property {Int32Array} groupIdList - List of group ids\n * @property {Int32Array} groupTypeList - List of group types\n * @property {Int8Array} [secStructList] - List of secondary structure codes, encoding\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n * @property {Uint8Array} [insCodeList] - List of insertion codes\n * @property {Int32Array} [seuenceIdList] - List of sequence ids\n * @property {Uint8Array} chainIdList - List of chain ids\n * @property {Uint8Array} [chainNameList] - List of chain names\n */\n\n\n/**\n * [performDecoding description]\n * @param  {Integer} bytes [description]\n * @param  {Integer} size  [description]\n * @param  {Uint8Array} param [description]\n * @return {TypedArray}       [description]\n */\nfunction performDecoding( type, bytes, size, param ){\n\n    switch( type ){\n        case 1:\n            return decodeFloat32( bytes );\n        case 2:\n            return getInt8View( bytes );\n        case 3:\n            return decodeInt16( bytes );\n        case 4:\n            return decodeInt32( bytes );\n        case 5:\n            // var length = decodeInt32( param )[ 0 ];\n            return getUint8View( bytes );  // interpret as string array\n        case 6:\n            // interpret as char array\n            return decodeRun( decodeInt32( bytes ), new Uint8Array( size ) );\n        case 7:\n            return decodeRun( decodeInt32( bytes ) )\n        case 8:\n            return decodeDeltaRun( decodeInt32( bytes ) );\n        case 9:\n            return decodeIntegerRun( decodeInt32( bytes ), decodeInt32( param )[ 0 ] );\n        case 10:\n            return decodeIntegerDeltaPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n        case 11:\n            return decodeInteger( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n        case 12:\n            return decodeIntegerPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\n        case 13:\n            return decodeIntegerPacking( getInt8View( bytes ), decodeInt32( param )[ 0 ] );\n        case 14:\n            return decodePacking( decodeInt16( bytes ) );\n        case 15:\n            return decodePacking( getInt8View( bytes ) );\n    }\n\n};\n\n\n/**\n * Decode MMTF fields\n * @static\n * @param  {Object} inputDict - encoded MMTF data\n * @param  {Object} [params] - decoding parameters\n * @param  {String[]} params.ignoreFields - names of optional fields not to decode\n * @return {module:MmtfDecode.MmtfData} mmtfData\n */\nfunction decodeMmtf( inputDict, params ){\n\n    params = params || {};\n    var ignoreFields = params.ignoreFields;\n    var outputDict = {};\n\n    AllFields.forEach( function( name ){\n        var ignore = ignoreFields ? ignoreFields.indexOf( name ) !== -1 : false;\n        var data = inputDict[ name ];\n        if( !ignore && data !== undefined ){\n            if( data instanceof Uint8Array ){\n                outputDict[ name ] = performDecoding.apply( null, decodeBytes( data ) );\n            }else{\n                outputDict[ name ] = data;\n            }\n        }\n    } );\n\n    return outputDict;\n\n}\n\n/**\n * @file mmtf-traverse\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\n/**\n * mmtf traverse module.\n * @module MmtfTraverse\n */\n\n/**\n * Converts an array of ASCII codes trimming '\\0' bytes\n * @private\n * @param  {Array} charCodeArray - array of ASCII char codes\n * @return {String} '\\0' trimmed string\n */\nfunction fromCharCode( charCodeArray ){\n    return String.fromCharCode.apply( null, charCodeArray ).replace(/\\0/g, '');\n}\n\n\n/**\n * @callback module:MmtfTraverse.onModel\n * @param {Object} modelData\n * @param {Integer} modelData.chainCount - number of chains in the model\n * @param {Integer} modelData.modelIndex - index of the model\n */\n\n/**\n * @callback module:MmtfTraverse.onChain\n * @param {Object} chainData\n * @param {Integer} chainData.groupCount - number of groups in the chain\n * @param {Integer} chainData.chainIndex - index of the chain\n * @param {Integer} chainData.modelIndex - index of the parent model\n * @param {String} chainData.chainId - chain id\n * @param {?String} chainData.chainName - additional chain name\n */\n\n/**\n * @callback module:MmtfTraverse.onGroup\n * @param {Object} groupData\n * @param {Integer} groupData.atomCount - number of atoms in the group\n * @param {Integer} groupData.groupIndex - index of the group\n * @param {Integer} groupData.chainIndex - index of the parent chain\n * @param {Integer} groupData.modelIndex - index of the parent model\n * @param {Integer} groupData.groupId - group id (residue number)\n * @param {Integer} groupData.groupType - index to an entry in {@link module:MmtfDecode.MmtfData}#groupList\n * @param {String} groupData.groupName - name of the group, 0 to 5 characters\n * @param {Char} groupData.singleLetterCode - IUPAC single letter code, otherwise 'X', 1 character\n * @param {String} groupData.chemCompType - chemical component type from the mmCIF dictionary\n * @param {?Integer} groupData.secStruct - sencoded secondary structure |\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\n * @param {?Char} groupData.insCode - insertion code\n * @param {?Integer} groupData.sequenceIndex - index to the `sequence` property of\n *    the corresponding entity, -1 when the entity has no sequence\n */\n\n/**\n * @callback module:MmtfTraverse.onAtom\n * @param {Object} atomData\n * @param {Integer} atomData.atomIndex - index of the atom\n * @param {Integer} atomData.groupIndex - index of the parent group\n * @param {Integer} atomData.chainIndex - index of the parent chain\n * @param {Integer} atomData.modelIndex - index of the parent model\n * @param {?Integer} atomData.atomId - atom id\n * @param {String} atomData.element - IUPAC element name, 0 to 3 characters\n * @param {String} atomData.atomName - name of the atom, 0 to 5 characters\n * @param {Integer} atomData.formalCharge - formal charge of the atom\n * @param {Float} atomData.xCoord - x coordinate in Å\n * @param {Float} atomData.yCoord - y coordinate in Å\n * @param {Float} atomData.zCoord - z coordinate in Å\n * @param {?Float} atomData.bFactor - B-factor in in Å^2\n * @param {?Char} atomData.altLoc - alternate location identifier\n * @param {?Float} atomData.occupancy - occupancy of the atom\n */\n\n/**\n * @callback module:MmtfTraverse.onBond\n * @param {Object} bondData\n * @param {Integer} bondData.atomIndex1 - index of the first atom\n * @param {Integer} bondData.atomIndex2 - index of the secound atom\n * @param {Integer} bondData.bondOrder - bond order, allowed values are 1 to 3\n */\n\n\n/**\n * Traverse the MMTF structure data.\n * @static\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data\n * @param {Object} eventCallbacks\n * @param {module:MmtfTraverse.onModel} [eventCallbacks.onModel] - called for each model\n * @param {module:MmtfTraverse.onChain} [eventCallbacks.onChain] - called for each chain\n * @param {module:MmtfTraverse.onGroup} [eventCallbacks.onGroup] - called for each group\n * @param {module:MmtfTraverse.onAtom} [eventCallbacks.onAtom] - called for each atom\n * @param {module:MmtfTraverse.onBond} [eventCallbacks.onBond] - called for each bond\n * @param {Object} [params] - traversal parameters\n * @param {Boolean} [params.firstModelOnly] - traverse only the first model\n */\nfunction traverseMmtf( mmtfData, eventCallbacks, params ){\n\n    params = params || {};\n\n    var firstModelOnly = params.firstModelOnly;\n\n    // setup callbacks\n    var onModel = eventCallbacks.onModel;\n    var onChain = eventCallbacks.onChain;\n    var onGroup = eventCallbacks.onGroup;\n    var onAtom = eventCallbacks.onAtom;\n    var onBond = eventCallbacks.onBond;\n\n    // setup index counters\n    var modelIndex = 0;\n    var chainIndex = 0;\n    var groupIndex = 0;\n    var atomIndex = 0;\n\n    var modelFirstAtomIndex = 0;\n    var modelLastAtomIndex = -1;\n\n    // setup optional fields\n    var chainNameList = mmtfData.chainNameList;\n    var secStructList = mmtfData.secStructList;\n    var insCodeList = mmtfData.insCodeList;\n    var sequenceIndexList = mmtfData.sequenceIndexList;\n    var atomIdList = mmtfData.atomIdList;\n    var bFactorList = mmtfData.bFactorList;\n    var altLocList = mmtfData.altLocList;\n    var occupancyList = mmtfData.occupancyList;\n    var bondAtomList = mmtfData.bondAtomList;\n    var bondOrderList = mmtfData.bondOrderList;\n\n    // hoisted loop variables\n    var o, ol, i, j, k, kl;\n\n    // loop over all models\n    for( o = 0, ol = mmtfData.chainsPerModel.length; o < ol; ++o ){\n\n        if( firstModelOnly && modelIndex > 0 ) break;\n\n        var modelChainCount = mmtfData.chainsPerModel[ modelIndex ];\n\n        if( onModel ){\n            onModel({\n                chainCount: modelChainCount,\n                modelIndex: modelIndex\n            });\n        }\n\n        for( i = 0; i < modelChainCount; ++i ){\n\n            var chainGroupCount = mmtfData.groupsPerChain[ chainIndex ];\n            if( onChain ){\n                var chainId = fromCharCode(\n                    mmtfData.chainIdList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\n                );\n                var chainName = null;\n                if( chainNameList ){\n                    chainName = fromCharCode(\n                        chainNameList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\n                    );\n                }\n                onChain({\n                    groupCount: chainGroupCount,\n                    chainIndex: chainIndex,\n                    modelIndex: modelIndex,\n                    chainId: chainId,\n                    chainName: chainName\n                });\n            }\n\n            for( j = 0; j < chainGroupCount; ++j ){\n\n                var groupData = mmtfData.groupList[ mmtfData.groupTypeList[ groupIndex ] ];\n                var groupAtomCount = groupData.atomNameList.length;\n                if( onGroup ){\n                    var secStruct = null;\n                    if( secStructList ){\n                        secStruct = secStructList[ groupIndex ];\n                    }\n                    var insCode = null;\n                    if( mmtfData.insCodeList ){\n                        insCode = String.fromCharCode( insCodeList[ groupIndex ] );\n                    }\n                    var sequenceIndex = null;\n                    if( sequenceIndexList ){\n                        sequenceIndex = sequenceIndexList[ groupIndex ];\n                    }\n                    onGroup({\n                        atomCount: groupAtomCount,\n                        groupIndex: groupIndex,\n                        chainIndex: chainIndex,\n                        modelIndex: modelIndex,\n                        groupId: mmtfData.groupIdList[ groupIndex ],\n                        groupType: mmtfData.groupTypeList[ groupIndex ],\n                        groupName: groupData.groupName,\n                        singleLetterCode: groupData.singleLetterCode,\n                        chemCompType: groupData.chemCompType,\n                        secStruct: secStruct,\n                        insCode: insCode,\n                        sequenceIndex: sequenceIndex\n                    });\n                }\n\n                for( k = 0; k < groupAtomCount; ++k ){\n\n                    if( onAtom ){\n                        var atomId = null;\n                        if( atomIdList ){\n                            atomId = atomIdList[ atomIndex ];\n                        }\n                        var bFactor = null;\n                        if( bFactorList ){\n                            bFactor = bFactorList[ atomIndex ];\n                        }\n                        var altLoc = null;\n                        if( altLocList ){\n                            altLoc = String.fromCharCode( altLocList[ atomIndex ] );\n                        }\n                        var occupancy = null;\n                        if( occupancyList ){\n                            occupancy = occupancyList[ atomIndex ];\n                        }\n                        onAtom({\n                            atomIndex: atomIndex,\n                            groupIndex: groupIndex,\n                            chainIndex: chainIndex,\n                            modelIndex: modelIndex,\n                            atomId: atomId,\n                            element: groupData.elementList[ k ],\n                            atomName: groupData.atomNameList[ k ],\n                            formalCharge: groupData.formalChargeList[ k ],\n                            xCoord: mmtfData.xCoordList[ atomIndex ],\n                            yCoord: mmtfData.yCoordList[ atomIndex ],\n                            zCoord: mmtfData.zCoordList[ atomIndex ],\n                            bFactor: bFactor,\n                            altLoc: altLoc,\n                            occupancy: occupancy\n                        });\n                    }\n\n                    atomIndex += 1;\n                }\n\n                if( onBond ){\n                    // intra group bonds\n                    var groupBondAtomList = groupData.bondAtomList;\n                    for( k = 0, kl = groupData.bondOrderList.length; k < kl; ++k ){\n                        onBond({\n                            atomIndex1: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 ],\n                            atomIndex2: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 + 1 ],\n                            bondOrder: groupData.bondOrderList[ k ]\n                        });\n                    }\n                }\n\n                groupIndex += 1;\n            }\n\n            chainIndex += 1;\n        }\n\n        modelFirstAtomIndex = modelLastAtomIndex + 1;\n        modelLastAtomIndex = atomIndex - 1;  // subtract one as it already has been incremented\n\n        if( onBond ){\n            // inter group bonds\n            if( bondAtomList ){\n                for( k = 0, kl = bondAtomList.length; k < kl; k += 2 ){\n                    var atomIndex1 = bondAtomList[ k ];\n                    var atomIndex2 = bondAtomList[ k + 1 ];\n                    if( ( atomIndex1 >= modelFirstAtomIndex && atomIndex1 <= modelLastAtomIndex ) ||\n                        ( atomIndex2 >= modelFirstAtomIndex && atomIndex2 <= modelLastAtomIndex )\n                    ){\n                        onBond({\n                            atomIndex1: atomIndex1,\n                            atomIndex2: atomIndex2,\n                            bondOrder: bondOrderList ? bondOrderList[ k / 2 ] : null\n                        });\n                    }\n                }\n            }\n        }\n\n        modelIndex += 1;\n    }\n\n}\n\n/**\n * Version name\n * @static\n * @type {String}\n */\nvar version = \"v1.1.0dev\";\n\n/**\n * Version name\n * @private\n * @type {String}\n */\nvar baseUrl = \"//mmtf.rcsb.org/v1.0/\";\n\n/**\n * URL of the RCSB webservice to obtain MMTF files\n * @static\n * @type {String}\n */\nvar fetchUrl = baseUrl + \"full/\";\n\n/**\n * URL of the RCSB webservice to obtain reduced MMTF files\n * @static\n * @type {String}\n */\nvar fetchReducedUrl = baseUrl + \"reduced/\";\n\n/**\n * Encode MMTF fields\n * @static\n * @param  {module:MmtfDecode.MmtfData} mmtfData - mmtf data\n * @return {Uint8Array} encoded MMTF fields\n */\nfunction encode( mmtfData ){\n    return encodeMsgpack( encodeMmtf( mmtfData ) );\n}\n\n/**\n * Decode MMTF fields\n * @static\n * @example\n * // bin is Uint8Array containing the mmtf msgpack\n * var mmtfData = MMTF.decode( bin );\n * console.log( mmtfData.numAtoms );\n *\n * @param  {Uint8Array|ArrayBuffer|module:MmtfDecode.EncodedMmtfData} binOrDict - binary MessagePack or encoded MMTF data\n * @param  {Object} [params] - decoding parameters\n * @param {String[]} params.ignoreFields - names of optional fields not to decode\n * @return {module:MmtfDecode.MmtfData} mmtfData\n */\nfunction decode( binOrDict, params ){\n\t// make sure binOrDict is not a plain Arraybuffer\n    if( binOrDict instanceof ArrayBuffer ){\n        binOrDict = new Uint8Array( binOrDict );\n    }\n\n    var inputDict;\n    if( binOrDict instanceof Uint8Array ){\n        // get dict from msgpack\n        inputDict = decodeMsgpack( binOrDict );\n    }else{\n        // already a dict\n        inputDict = binOrDict;\n    }\n\n    return decodeMmtf( inputDict, params );\n}\n\n/**\n * @callback module:MMTF.onLoad\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data object\n */\n\n/**\n * helper method to fetch binary files from an URL\n * @private\n * @param  {String} pdbid - PDB ID to fetch\n * @param  {String} baseUrl - URL to fetch from\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n * @param  {Function} onError - callback( error )\n * @return {undefined}\n */\nfunction _fetch( pdbid, baseUrl, onLoad, onError ){\n    var xhr = new XMLHttpRequest();\n    function _onLoad(){\n        try{\n            var mmtfData = decode( xhr.response );\n            onLoad( mmtfData );\n        }catch( error ){\n            onError( error );\n        }\n    }\n    xhr.addEventListener( \"load\", _onLoad, true );\n    xhr.addEventListener( \"error\", onError, true );\n    xhr.responseType = \"arraybuffer\";\n    xhr.open( \"GET\", baseUrl + pdbid.toUpperCase() );\n    xhr.send();\n}\n\n/**\n * Fetch MMTF file from RCSB webservice which contains\n * @static\n * @example\n * MMTF.fetch(\n *     \"3PQR\",\n *     // onLoad callback\n *     function( mmtfData ){ console.log( mmtfData ) },\n *     // onError callback\n *     function( error ){ console.error( error ) }\n * );\n *\n * @param  {String} pdbid - PDB ID to fetch\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n * @param  {Function} onError - callback( error )\n * @return {undefined}\n */\nfunction fetch( pdbid, onLoad, onError ){\n    _fetch( pdbid, fetchUrl, onLoad, onError );\n}\n\n/**\n * Fetch reduced MMTF file from RCSB webservice which contains\n * protein C-alpha, nucleotide phosphate and ligand atoms\n * @static\n * @example\n * MMTF.fetchReduced(\n *     \"3PQR\",\n *     // onLoad callback\n *     function( mmtfData ){ console.log( mmtfData ) },\n *     // onError callback\n *     function( error ){ console.error( error ) }\n * );\n *\n * @param  {String} pdbid - PDB ID to fetch\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\n * @param  {Function} onError - callback( error )\n * @return {undefined}\n */\nfunction fetchReduced( pdbid, onLoad, onError ){\n    _fetch( pdbid, fetchReducedUrl, onLoad, onError );\n}\n\nexport { encode, decode, traverseMmtf as traverse, fetch, fetchReduced, version, fetchUrl, fetchReducedUrl, encodeMsgpack, encodeMmtf, decodeMsgpack, decodeMmtf };","/**\n * @file Mmtf Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport {\n  buildUnitcellAssembly, calculateBondsBetween, calculateBondsWithin\n} from '../structure/structure-utils'\nimport { ChemCompHetero } from '../structure/structure-constants'\nimport Entity from '../structure/entity'\nimport Unitcell from '../symmetry/unitcell'\nimport Assembly, { AssemblyPart } from '../symmetry/assembly'\n\nimport { decodeMsgpack, decodeMmtf } from '../../lib/mmtf.es6'\n\nconst SstrucMap: {[k: string]: number} = {\n  '0': 'i'.charCodeAt(0), // pi helix\n  '1': 's'.charCodeAt(0), // bend\n  '2': 'h'.charCodeAt(0), // alpha helix\n  '3': 'e'.charCodeAt(0), // extended\n  '4': 'g'.charCodeAt(0), // 3-10 helix\n  '5': 'b'.charCodeAt(0), // bridge\n  '6': 't'.charCodeAt(0), // turn\n  '7': 'l'.charCodeAt(0), // coil\n  '-1': ''.charCodeAt(0) // NA\n}\n\nclass MmtfParser extends StructureParser {\n  get type () { return 'mmtf' }\n  get isBinary () { return true }\n\n  _parse () {\n    // https://github.com/rcsb/mmtf\n\n    if (Debug) Log.time('MmtfParser._parse ' + this.name)\n\n    let i, il, j, jl, groupData\n\n    const s = this.structure\n    const sd: {[k: string]: any} = decodeMmtf(decodeMsgpack(this.streamer.data))\n\n    // structure header\n    const headerFields = [\n      'depositionDate', 'releaseDate', 'resolution',\n      'rFree', 'rWork', 'experimentalMethods'\n    ]\n    headerFields.forEach(function (name) {\n      if (sd[ name ] !== undefined) {\n        s.header[ name ] = sd[ name ]\n      }\n    })\n\n    let numBonds, numAtoms, numGroups, numChains, numModels\n    let chainsPerModel\n\n    s.id = sd.structureId\n    s.title = sd.title\n\n    s.atomStore.addField('formalCharge', 1, 'int8')\n\n    if (this.firstModelOnly || this.asTrajectory) {\n      numModels = 1\n      numChains = sd.chainsPerModel[ 0 ]\n\n      numGroups = 0\n      for (i = 0, il = numChains; i < il; ++i) {\n        numGroups += sd.groupsPerChain[ i ]\n      }\n\n      numAtoms = 0\n      for (i = 0, il = numGroups; i < il; ++i) {\n        groupData = sd.groupList[ sd.groupTypeList[ i ] ]\n        numAtoms += groupData.atomNameList.length\n      }\n\n      numBonds = sd.numBonds\n\n      chainsPerModel = [ numChains ]\n    } else {\n      numBonds = sd.numBonds\n      numAtoms = sd.numAtoms\n      numGroups = sd.numGroups\n      numChains = sd.numChains\n      numModels = sd.numModels\n\n      chainsPerModel = sd.chainsPerModel\n    }\n\n    numBonds += numGroups // add numGroups to have space for polymer bonds\n\n    //\n\n    if (this.asTrajectory) {\n      for (i = 0, il = sd.numModels; i < il; ++i) {\n        const frame = new Float32Array(numAtoms * 3)\n        const frameAtomOffset = numAtoms * i\n\n        for (j = 0; j < numAtoms; ++j) {\n          const j3 = j * 3\n          const offset = j + frameAtomOffset\n          frame[ j3 ] = sd.xCoordList[ offset ]\n          frame[ j3 + 1 ] = sd.yCoordList[ offset ]\n          frame[ j3 + 2 ] = sd.zCoordList[ offset ]\n        }\n\n        s.frames.push(frame)\n      }\n    }\n\n    // bondStore\n    const bAtomIndex1 = new Uint32Array(numBonds)\n    const bAtomIndex2 = new Uint32Array(numBonds)\n    const bBondOrder = new Uint8Array(numBonds)\n\n    const aGroupIndex = new Uint32Array(numAtoms)\n    const aFormalCharge = new Int8Array(numAtoms)\n\n    const gChainIndex = new Uint32Array(numGroups)\n    const gAtomOffset = new Uint32Array(numGroups)\n    const gAtomCount = new Uint16Array(numGroups)\n\n    const cModelIndex = new Uint16Array(numChains)\n    const cGroupOffset = new Uint32Array(numChains)\n    const cGroupCount = new Uint32Array(numChains)\n\n    const mChainOffset = new Uint32Array(numModels)\n    const mChainCount = new Uint32Array(numModels)\n\n    // set-up model-chain relations\n    let chainOffset = 0\n    for (i = 0, il = numModels; i < il; ++i) {\n      const modelChainCount = chainsPerModel[ i ]\n      mChainOffset[ i ] = chainOffset\n      mChainCount[ i ] = modelChainCount\n      for (j = 0; j < modelChainCount; ++j) {\n        cModelIndex[ j + chainOffset ] = i\n      }\n      chainOffset += modelChainCount\n    }\n\n    // set-up chain-residue relations\n    const groupsPerChain = sd.groupsPerChain\n    let groupOffset = 0\n    for (i = 0, il = numChains; i < il; ++i) {\n      const chainGroupCount = groupsPerChain[ i ]\n      cGroupOffset[ i ] = groupOffset\n      cGroupCount[ i ] = chainGroupCount\n      for (j = 0; j < chainGroupCount; ++j) {\n        gChainIndex[ j + groupOffset ] = i\n      }\n      groupOffset += chainGroupCount\n    }\n\n    /// ///\n    // get data from group map\n\n    let atomOffset = 0\n    let bondOffset = 0\n\n    for (i = 0, il = numGroups; i < il; ++i) {\n      groupData = sd.groupList[ sd.groupTypeList[ i ] ]\n      const groupAtomCount = groupData.atomNameList.length\n      const groupFormalChargeList = groupData.formalChargeList\n\n      const groupBondAtomList = groupData.bondAtomList\n      const groupBondOrderList = groupData.bondOrderList\n\n      for (j = 0, jl = groupBondOrderList.length; j < jl; ++j) {\n        bAtomIndex1[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 ]\n        bAtomIndex2[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 + 1 ]\n        bBondOrder[ bondOffset ] = groupBondOrderList[ j ]\n        bondOffset += 1\n      }\n\n      //\n\n      gAtomOffset[ i ] = atomOffset\n      gAtomCount[ i ] = groupAtomCount\n\n      for (j = 0; j < groupAtomCount; ++j) {\n        aGroupIndex[ atomOffset ] = i\n        aFormalCharge[ atomOffset ] = groupFormalChargeList[ j ]\n        atomOffset += 1\n      }\n    }\n\n    // extra bonds\n\n    const bondAtomList = sd.bondAtomList\n    if (bondAtomList) {\n      if (sd.bondOrderList) {\n        bBondOrder.set(sd.bondOrderList, bondOffset)\n      }\n\n      for (i = 0, il = bondAtomList.length; i < il; i += 2) {\n        const atomIndex1 = bondAtomList[ i ]\n        const atomIndex2 = bondAtomList[ i + 1 ]\n        if (atomIndex1 < numAtoms && atomIndex2 < numAtoms) {\n          bAtomIndex1[ bondOffset ] = atomIndex1\n          bAtomIndex2[ bondOffset ] = atomIndex2\n          bondOffset += 1\n        }\n      }\n    }\n\n    //\n\n    s.bondStore.length = bBondOrder.length\n    s.bondStore.count = bondOffset\n    s.bondStore.atomIndex1 = bAtomIndex1\n    s.bondStore.atomIndex2 = bAtomIndex2\n    s.bondStore.bondOrder = bBondOrder\n\n    s.atomStore.length = numAtoms\n    s.atomStore.count = numAtoms\n    s.atomStore.residueIndex = aGroupIndex\n    s.atomStore.atomTypeId = new Uint16Array(numAtoms)\n    s.atomStore.x = sd.xCoordList.subarray(0, numAtoms)\n    s.atomStore.y = sd.yCoordList.subarray(0, numAtoms)\n    s.atomStore.z = sd.zCoordList.subarray(0, numAtoms)\n    s.atomStore.serial = sd.atomIdList.subarray(0, numAtoms)\n    s.atomStore.bfactor = sd.bFactorList.subarray(0, numAtoms)\n    s.atomStore.altloc = sd.altLocList.subarray(0, numAtoms)\n    s.atomStore.occupancy = sd.occupancyList.subarray(0, numAtoms)\n    s.atomStore.formalCharge = aFormalCharge\n\n    s.residueStore.length = numGroups\n    s.residueStore.count = numGroups\n    s.residueStore.chainIndex = gChainIndex\n    s.residueStore.residueTypeId = sd.groupTypeList\n    s.residueStore.atomOffset = gAtomOffset\n    s.residueStore.atomCount = gAtomCount\n    s.residueStore.resno = sd.groupIdList.subarray(0, numGroups)\n    s.residueStore.sstruc = sd.secStructList.subarray(0, numGroups)\n    s.residueStore.inscode = sd.insCodeList.subarray(0, numGroups)\n\n    s.chainStore.length = numChains\n    s.chainStore.count = numChains\n    s.chainStore.entityIndex = new Uint16Array(numChains)\n    s.chainStore.modelIndex = cModelIndex\n    s.chainStore.residueOffset = cGroupOffset\n    s.chainStore.residueCount = cGroupCount\n    s.chainStore.chainname = sd.chainNameList.subarray(0, numChains * 4)\n    s.chainStore.chainid = sd.chainIdList.subarray(0, numChains * 4)\n\n    s.modelStore.length = numModels\n    s.modelStore.count = numModels\n    s.modelStore.chainOffset = mChainOffset\n    s.modelStore.chainCount = mChainCount\n\n    //\n\n    let groupTypeDict: {[k: number]: any} = {}\n    for (i = 0, il = sd.groupList.length; i < il; ++i) {\n      const groupType = sd.groupList[ i ]\n      const atomTypeIdList: number[] = []\n      for (j = 0, jl = groupType.atomNameList.length; j < jl; ++j) {\n        const element = groupType.elementList[ j ].toUpperCase()\n        const atomname = groupType.atomNameList[ j ]\n        atomTypeIdList.push(s.atomMap.add(atomname, element))\n      }\n      const chemCompType = groupType.chemCompType.toUpperCase()\n      const hetFlag = ChemCompHetero.includes(chemCompType)\n\n      const numGroupBonds = groupType.bondOrderList.length\n      const atomIndices1 = new Array(numGroupBonds)\n      const atomIndices2 = new Array(numGroupBonds)\n      for (j = 0; j < numGroupBonds; ++j) {\n        atomIndices1[ j ] = groupType.bondAtomList[ j * 2 ]\n        atomIndices2[ j ] = groupType.bondAtomList[ j * 2 + 1 ]\n      }\n      const bonds = {\n        atomIndices1: atomIndices1,\n        atomIndices2: atomIndices2,\n        bondOrders: groupType.bondOrderList\n      }\n\n      groupTypeDict[ i ] = s.residueMap.add(\n        groupType.groupName, atomTypeIdList, hetFlag, chemCompType, bonds\n      )\n    }\n\n    for (i = 0, il = numGroups; i < il; ++i) {\n      s.residueStore.residueTypeId[ i ] = groupTypeDict[ s.residueStore.residueTypeId[ i ] ]\n    }\n\n    for (i = 0, il = s.atomStore.count; i < il; ++i) {\n      const residueIndex = s.atomStore.residueIndex[ i ]\n      const residueType = s.residueMap.list[ s.residueStore.residueTypeId[ residueIndex ] ]\n      const resAtomOffset = s.residueStore.atomOffset[ residueIndex ]\n      s.atomStore.atomTypeId[ i ] = residueType.atomTypeIdList[ i - resAtomOffset ]\n    }\n\n    if (sd.secStructList) {\n      const secStructLength: number = sd.secStructList.length\n      for (i = 0, il = s.residueStore.count; i < il; ++i) {\n        // with ( i % secStructLength ) secStruct entries are reused\n        const sstruc = SstrucMap[ s.residueStore.sstruc[ i % secStructLength ] ]\n        if (sstruc !== undefined) s.residueStore.sstruc[ i ] = sstruc\n      }\n    }\n\n    //\n\n    if (sd.entityList) {\n      sd.entityList.forEach(function (e: Entity, i: number) {\n        s.entityList[ i ] = new Entity(\n          s, i, e.description, e.type, e.chainIndexList\n        )\n      })\n    }\n\n    if (sd.bioAssemblyList) {\n      sd.bioAssemblyList.forEach(function (_assembly: any, k: number) {\n        const id = k + 1\n        const assembly = new Assembly('' + id)\n        s.biomolDict[ 'BU' + id ] = assembly\n        let chainToPart: {[k: string]: AssemblyPart} = {}\n        _assembly.transformList.forEach(function (_transform: any) {\n          const matrix = new Matrix4().fromArray(_transform.matrix).transpose()\n          const chainList: string[] = _transform.chainIndexList.map(function (chainIndex: number) {\n            let chainname = ''\n            for (let k = 0; k < 4; ++k) {\n              const code = sd.chainNameList[ chainIndex * 4 + k ]\n              if (code) {\n                chainname += String.fromCharCode(code)\n              } else {\n                break\n              }\n            }\n            return chainname\n          })\n          const part = chainToPart[ chainList.toString() ]\n          if (part) {\n            part.matrixList.push(matrix)\n          } else {\n            chainToPart[ chainList.toString() ] = assembly.addPart([ matrix ], chainList)\n          }\n        })\n      })\n    }\n\n    if (sd.ncsOperatorList) {\n      const ncsName = 'NCS'\n      const ncsAssembly = new Assembly(ncsName)\n      const ncsPart = ncsAssembly.addPart()\n      sd.ncsOperatorList.forEach(function (_operator: number[]) {\n        const matrix = new Matrix4().fromArray(_operator).transpose()\n        ncsPart.matrixList.push(matrix)\n      })\n      if (ncsPart.matrixList.length > 0) {\n        s.biomolDict[ ncsName ] = ncsAssembly\n      }\n    }\n\n    const uc = sd.unitCell\n    if (uc && Array.isArray(uc) && uc[ 0 ]) {\n      s.unitcell = new Unitcell({\n        a: uc[ 0 ],\n        b: uc[ 1 ],\n        c: uc[ 2 ],\n        alpha: uc[ 3 ],\n        beta: uc[ 4 ],\n        gamma: uc[ 5 ],\n        spacegroup: sd.spaceGroup\n      })\n    } else {\n      s.unitcell = undefined\n    }\n\n    // calculate backbone bonds\n    calculateBondsBetween(s, true)\n\n    // calculate rung bonds\n    calculateBondsWithin(s, true)\n\n    s.finalizeAtoms()\n    s.finalizeBonds()\n\n    buildUnitcellAssembly(s)\n\n    if (Debug) Log.timeEnd('MmtfParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('mmtf', MmtfParser)\n\nexport default MmtfParser\n","/**\n * @file Mol2 Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport {\n  assignResidueTypeBonds,\n  calculateChainnames, calculateSecondaryStructure,\n  calculateBondsBetween, calculateBondsWithin\n} from '../structure/structure-utils'\nimport StructureParser from './structure-parser'\n\nconst reWhitespace = /\\s+/\nconst bondTypes: {[k: string]: number} = {\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  'am': 1, // amide\n  'ar': 1, // aromatic\n  'du': 1, // dummy\n  'un': 1, // unknown\n  'nc': 0 // not connected\n}\n\nclass Mol2Parser extends StructureParser {\n  get type () { return 'mol2' }\n\n  _parse () {\n    // http://paulbourke.net/dataformats/mol2/\n\n    if (Debug) Log.time('Mol2Parser._parse ' + this.name)\n\n    const s = this.structure\n    const sb = this.structureBuilder\n\n    const firstModelOnly = this.firstModelOnly\n    const asTrajectory = this.asTrajectory\n\n    const frames = s.frames\n    let doFrames = false\n    let currentFrame: Float32Array, currentCoord: number\n\n    const atomMap = s.atomMap\n    const atomStore = s.atomStore\n    atomStore.resize(Math.round(this.streamer.data.length / 60))\n    atomStore.addField('partialCharge', 1, 'float32')\n\n    let idx = 0\n    let moleculeLineNo = 0\n    let modelAtomIdxStart = 0\n    let modelIdx = -1\n    let numAtoms = 0\n\n    let currentRecordType = 0\n    let moleculeRecordType = 1\n    let atomRecordType = 2\n    let bondRecordType = 3\n\n    const ap1 = s.getAtomProxy()\n    const ap2 = s.getAtomProxy()\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ].trim()\n\n        if (line === '' || line[ 0 ] === '#') continue\n\n        if (line[ 0 ] === '@') {\n          if (line === '@<TRIPOS>MOLECULE') {\n            currentRecordType = moleculeRecordType\n            moleculeLineNo = 0\n\n            ++modelIdx\n          } else if (line === '@<TRIPOS>ATOM') {\n            currentRecordType = atomRecordType\n            modelAtomIdxStart = atomStore.count\n\n            if (asTrajectory) {\n              currentCoord = 0\n              currentFrame = new Float32Array(numAtoms * 3)\n              frames.push(currentFrame)\n\n              if (modelIdx > 0) doFrames = true\n            }\n          } else if (line === '@<TRIPOS>BOND') {\n            currentRecordType = bondRecordType\n          } else {\n            currentRecordType = 0\n          }\n        } else if (currentRecordType === moleculeRecordType) {\n          if (moleculeLineNo === 0) {\n            s.title = line\n            s.id = line\n          } else if (moleculeLineNo === 1) {\n            const ls = line.split(reWhitespace)\n            numAtoms = parseInt(ls[ 0 ])\n            // num_atoms [num_bonds [num_subst [num_feat [num_sets]]]]\n          } else if (moleculeLineNo === 2) {\n\n            // const molType = line;\n            // SMALL, BIOPOLYMER, PROTEIN, NUCLEIC_ACID, SACCHARIDE\n\n          } else if (moleculeLineNo === 3) {\n\n            // const chargeType = line;\n            // NO_CHARGES, DEL_RE, GASTEIGER, GAST_HUCK, HUCKEL,\n            // PULLMAN, GAUSS80_CHARGES, AMPAC_CHARGES,\n            // MULLIKEN_CHARGES, DICT_ CHARGES, MMFF94_CHARGES,\n            // USER_CHARGES\n\n          } else if (moleculeLineNo === 4) {\n\n            // const statusBits = line;\n\n          } else if (moleculeLineNo === 5) {\n\n            // const molComment = line;\n\n          }\n\n          ++moleculeLineNo\n        } else if (currentRecordType === atomRecordType) {\n          const ls = line.split(reWhitespace)\n\n          if (firstModelOnly && modelIdx > 0) continue\n\n          const x = parseFloat(ls[ 2 ])\n          const y = parseFloat(ls[ 3 ])\n          const z = parseFloat(ls[ 4 ])\n\n          if (asTrajectory) {\n            const j = currentCoord * 3\n\n            currentFrame[ j + 0 ] = x\n            currentFrame[ j + 1 ] = y\n            currentFrame[ j + 2 ] = z\n\n            currentCoord += 1\n\n            if (doFrames) continue\n          }\n\n          const serial = ls[ 0 ]\n          const atomname = ls[ 1 ]\n          const element = ls[ 5 ].split('.')[ 0 ]\n          const resno = ls[ 6 ] ? parseInt(ls[ 6 ]) : 1\n          const resname = ls[ 7 ] ? ls[ 7 ] : ''\n          const partialCharge = ls[ 8 ] ? parseFloat(ls[ 8 ]) : 0.0\n\n          atomStore.growIfFull()\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\n\n          atomStore.x[ idx ] = x\n          atomStore.y[ idx ] = y\n          atomStore.z[ idx ] = z\n          atomStore.serial[ idx ] = serial\n          atomStore.partialCharge[ idx ] = partialCharge\n\n          sb.addAtom(modelIdx, '', '', resname, resno, 1)\n\n          idx += 1\n        } else if (currentRecordType === bondRecordType) {\n          if (firstModelOnly && modelIdx > 0) continue\n          if (asTrajectory && modelIdx > 0) continue\n\n          const ls = line.split(reWhitespace)\n\n          // ls[ 0 ] is bond id\n          ap1.index = parseInt(ls[ 1 ]) - 1 + modelAtomIdxStart\n          ap2.index = parseInt(ls[ 2 ]) - 1 + modelAtomIdxStart\n          const order = bondTypes[ ls[ 3 ] ]\n\n          s.bondStore.addBond(ap1, ap2, order)\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    sb.finalize()\n    s.finalizeAtoms()\n    calculateChainnames(s)\n    calculateBondsWithin(s, true)\n    calculateBondsBetween(s, true)\n    s.finalizeBonds()\n    assignResidueTypeBonds(s)\n    calculateSecondaryStructure(s)\n\n    if (Debug) Log.timeEnd('Mol2Parser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('mol2', Mol2Parser)\n\nexport default Mol2Parser\n","/**\n * @file Pdbqt Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport PdbParser from './pdb-parser'\n\n// autodock variant of PDB format with\n// - atom partial charges (empty column in pdb format)\n// - atom types (bfactor column in pdb format)\n// http://autodock.scripps.edu/faqs-help/faq/what-is-the-format-of-a-pdbqt-file\n\nclass PdbqtParser extends PdbParser {\n  get type () { return 'pdbqt' }\n}\n\nParserRegistry.add('pdbqt', PdbqtParser)\n\nexport default PdbqtParser\n","/**\n * @file Pqr Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport PdbParser from './pdb-parser'\n\n// http://www.poissonboltzmann.org/docs/file-format-info/\n\nclass PqrParser extends PdbParser {\n  get type () { return 'pqr' }\n}\n\nParserRegistry.add('pqr', PqrParser)\n\nexport default PqrParser\n","/**\n * @file Sdf Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { assignResidueTypeBonds } from '../structure/structure-utils'\nimport StructureParser from './structure-parser'\n\nconst reItem = /> +<(.+)>/\n\nclass SdfParser extends StructureParser {\n  get type () { return 'sdf' }\n\n  _parse () {\n    // https://en.wikipedia.org/wiki/Chemical_table_file#SDF\n    // http://download.accelrys.com/freeware/ctfile-formats/ctfile-formats.zip\n\n    if (Debug) Log.time('SdfParser._parse ' + this.name)\n\n    const s = this.structure\n    const sb = this.structureBuilder\n\n    const firstModelOnly = this.firstModelOnly\n    const asTrajectory = this.asTrajectory\n\n    const headerLines = this.streamer.peekLines(2)\n\n    s.id = headerLines[ 0 ].trim()\n    s.title = headerLines[ 1 ].trim()\n\n    const frames = s.frames\n    let doFrames = false\n    let currentFrame: Float32Array, currentCoord: number\n\n    const atomMap = s.atomMap\n    const atomStore = s.atomStore\n    atomStore.resize(Math.round(this.streamer.data.length / 50))\n    atomStore.addField('formalCharge', 1, 'int8')\n\n    const ap1 = s.getAtomProxy()\n    const ap2 = s.getAtomProxy()\n\n    let idx = 0\n    let lineNo = 0\n    let modelIdx = 0\n    let modelAtomIdxStart = 0\n\n    const sdfData: {[k: string]: string[]}[] = []\n    let currentItem: string|boolean = false\n    let currentData: {[k: string]: string[]} = {}\n    let mItem\n    s.extraData.sdf = sdfData\n\n    let atomCount, bondCount, atomStart: number, atomEnd: number, bondStart: number, bondEnd: number\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ]\n\n        if (line.substr(0, 4) === '$$$$') {\n          lineNo = -1\n          ++modelIdx\n          modelAtomIdxStart = atomStore.count\n          sdfData.push(currentData)\n          currentData = {}\n          currentItem = false\n        } else if (lineNo === 3) {\n          atomCount = parseInt(line.substr(0, 3))\n          bondCount = parseInt(line.substr(3, 3))\n\n          atomStart = 4\n          atomEnd = atomStart + atomCount\n          bondStart = atomEnd\n          bondEnd = bondStart + bondCount\n\n          if (asTrajectory) {\n            currentCoord = 0\n            currentFrame = new Float32Array(atomCount * 3)\n            frames.push(currentFrame)\n\n            if (modelIdx > 0) doFrames = true\n          }\n        } else if (lineNo >= atomStart && lineNo < atomEnd) {\n          if (firstModelOnly && modelIdx > 0) continue\n\n          const x = parseFloat(line.substr(0, 10))\n          const y = parseFloat(line.substr(10, 10))\n          const z = parseFloat(line.substr(20, 10))\n\n          if (asTrajectory) {\n            const j = currentCoord * 3\n\n            currentFrame[ j + 0 ] = x\n            currentFrame[ j + 1 ] = y\n            currentFrame[ j + 2 ] = z\n\n            currentCoord += 1\n\n            if (doFrames) continue\n          }\n\n          const element = line.substr(31, 3).trim()\n          const atomname = element + (idx + 1)\n\n          atomStore.growIfFull()\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\n\n          atomStore.x[ idx ] = x\n          atomStore.y[ idx ] = y\n          atomStore.z[ idx ] = z\n          atomStore.serial[ idx ] = idx\n          atomStore.formalCharge[ idx ] = 0\n\n          sb.addAtom(modelIdx, '', '', 'HET', 1, 1)\n\n          idx += 1\n        } else if (lineNo >= bondStart && lineNo < bondEnd) {\n          if (firstModelOnly && modelIdx > 0) continue\n          if (asTrajectory && modelIdx > 0) continue\n\n          ap1.index = parseInt(line.substr(0, 3)) - 1 + modelAtomIdxStart\n          ap2.index = parseInt(line.substr(3, 3)) - 1 + modelAtomIdxStart\n          const order = parseInt(line.substr(6, 3))\n\n          s.bondStore.addBond(ap1, ap2, order)\n        } else if (line.match(/M {2}CHG/)) {\n          const chargeCount = parseInt(line.substr(6, 3))\n          for (let ci = 0, coffset = 10; ci < chargeCount; ++ci, coffset += 8) {\n            const aToken = parseInt(line.substr(coffset, 3))\n            const atomIdx = aToken - 1 + modelAtomIdxStart\n            const cToken = parseInt(line.substr(coffset + 4, 3))\n            atomStore.formalCharge[ atomIdx ] = cToken\n          }\n        // eslint-disable-next-line no-cond-assign\n        } else if (mItem = line.match(reItem)) {\n          currentItem = mItem[ 1 ]\n          currentData[ currentItem ] = []\n        } else if (currentItem !== false && line) {\n          currentData[ <string>currentItem ].push(line)\n        }\n\n        ++lineNo\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    sb.finalize()\n    s.finalizeAtoms()\n    s.finalizeBonds()\n    assignResidueTypeBonds(s)\n\n    if (Debug) Log.timeEnd('SdfParser._parse ' + this.name)\n  }\n\n  _postProcess () {\n    assignResidueTypeBonds(this.structure)\n  }\n}\n\nParserRegistry.add('sdf', SdfParser)\nParserRegistry.add('sd', SdfParser)\nParserRegistry.add('mol', SdfParser)\n\nexport default SdfParser\n","/**\n * @file Prmtop Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport {\n  assignResidueTypeBonds, calculateBondsBetween,\n  calculateBondsWithin, calculateChainnames\n} from '../structure/structure-utils'\n\nconst amberChargeUnitFactor = 18.2223\n\nconst enum Mode {\n  Title,\n  Pointers,\n  AtomName,\n  Charge,\n  Mass,\n  ResidueLabel,\n  ResiduePointer,\n  BondsIncHydrogen,\n  BondsWithoutHydrogen,\n  Radii\n}\n\nfunction parseIntSubstr (line: string, start: number, length: number) {\n  return parseInt(line.substr(start, length).trim())\n}\n\nclass PrmtopParser extends StructureParser {\n  get type () { return 'prmtop' }\n\n  _parse () {\n    // http://ambermd.org/prmtop.pdf\n    // http://ambermd.org/formats.html#topology\n\n    if (Debug) Log.time('PrmtopParser._parse ' + this.name)\n\n    const s = this.structure\n    const sb = this.structureBuilder\n\n    //\n\n    const atomMap = s.atomMap\n    const atomStore = s.atomStore\n    atomStore.addField('partialCharge', 1, 'float32')\n    atomStore.addField('radius', 1, 'float32')\n\n    const title: string[] = []\n    const pointersDict: {[k: string]: number} = {}\n    const pointers = [\n      'NATOM', 'NTYPES', 'NBONH', 'MBONA', 'NTHETH', 'MTHETA',\n      'NPHIH', 'MPHIA', 'NHPARM', 'NPARM', 'NNB', 'NRES',\n      'NBONA', 'NTHETA', 'NPHIA', 'NUMBND', 'NUMANG', 'NPTRA',\n      'NATYP', 'NPHB', 'IFPERT', 'NBPER', 'NGPER', 'NDPER',\n      'MBPER', 'MGPER', 'MDPER', 'IFBOX', 'NMXRS', 'IFCAP',\n      'NUMEXTRA', 'NCOPY'\n    ]\n    pointers.forEach(name => { pointersDict[ name ] = 0 })\n\n    let atomNames: string[]\n    let charges: Float32Array\n    let radii: Float32Array\n    let bAtomIndex1: Uint32Array\n    let bAtomIndex2: Uint32Array\n    let bBondOrder: Uint8Array = new Uint8Array(0)\n    let residueLabels: string[]\n    let residuePointers: Uint32Array\n\n    let mode: number|undefined\n    // let currentFormat\n    let curIdx: number\n    let bondIdx: number\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ]\n        const lt = line.trim()\n\n        if (!lt) {\n          continue\n        } else if (line.startsWith('%FORMAT')) {\n          // currentFormat = lt.substring(8, lt.length - 1)\n        } else if (line.startsWith('%FLAG')) {\n          const flag = line.substr(5).trim()\n          curIdx = 0\n\n          if (flag === 'TITLE') {\n            mode = Mode.Title\n          } else if (flag === 'POINTERS') {\n            mode = Mode.Pointers\n          } else if (flag === 'ATOM_NAME') {\n            mode = Mode.AtomName\n          } else if (flag === 'CHARGE') {\n            mode = Mode.Charge\n          } else if (flag === 'MASS') {\n            mode = Mode.Mass\n          } else if (flag === 'RESIDUE_LABEL') {\n            mode = Mode.ResidueLabel\n          } else if (flag === 'RESIDUE_POINTER') {\n            mode = Mode.ResiduePointer\n          } else if (flag === 'BONDS_INC_HYDROGEN') {\n            bondIdx = 0\n            mode = Mode.BondsIncHydrogen\n          } else if (flag === 'BONDS_WITHOUT_HYDROGEN') {\n            bondIdx = pointersDict['NBONH']\n            mode = Mode.BondsWithoutHydrogen\n          } else if (flag === 'RADII') {\n            mode = Mode.Radii\n          } else {\n            mode = undefined\n          }\n        } else if (mode === Mode.Title) {\n          title.push(lt)\n        } else if (mode === Mode.Pointers) {\n          const n = Math.min(curIdx + 10, 32)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            pointersDict[pointers[curIdx]] = parseInt(\n              line.substr(i * 8, 8).trim()\n            )\n          }\n          atomNames = new Array(pointersDict.NATOM)\n          charges = new Float32Array(pointersDict.NATOM)\n          radii = new Float32Array(pointersDict.NATOM)\n          atomStore.resize(pointersDict.NATOM)\n          const bondCount = pointersDict.NBONH + pointersDict.MBONA\n          bAtomIndex1 = new Uint32Array(bondCount)\n          bAtomIndex2 = new Uint32Array(bondCount)\n          bBondOrder = new Uint8Array(bondCount)\n          residueLabels = new Array(pointersDict.NRES)\n          residuePointers = new Uint32Array(pointersDict.NRES)\n        } else if (mode === Mode.AtomName) {\n          const n = Math.min(curIdx + 20, pointersDict.NATOM)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            atomNames[curIdx] = line.substr(i * 4, 4).trim()\n          }\n        } else if (mode === Mode.Charge) {\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            charges[curIdx] = parseFloat(line.substr(i * 16, 16)) / amberChargeUnitFactor\n          }\n        } else if (mode === Mode.Mass) {\n\n          // not currently used\n\n        } else if (mode === Mode.ResidueLabel) {\n          const n = Math.min(curIdx + 20, pointersDict.NRES)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            residueLabels[curIdx] = line.substr(i * 4, 4).trim()\n          }\n        } else if (mode === Mode.ResiduePointer) {\n          const n = Math.min(curIdx + 10, pointersDict.NRES)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            residuePointers[curIdx] = parseIntSubstr(line, i * 8, 8)\n          }\n        } else if (mode === Mode.BondsIncHydrogen) {\n          const n = Math.min(curIdx + 10, pointersDict.NBONH * 3)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            const r = curIdx % 3\n            if (r === 0) {\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\n            } if (r === 1) {\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\n              bBondOrder[bondIdx] = 1\n              ++bondIdx\n            }\n          }\n        } else if (mode === Mode.BondsWithoutHydrogen) {\n          const n = Math.min(curIdx + 10, pointersDict.MBONA * 3)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            const r = curIdx % 3\n            if (r === 0) {\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\n            } if (r === 1) {\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\n              bBondOrder[bondIdx] = 1\n              ++bondIdx\n            }\n          }\n        } else if (mode === Mode.Radii) {\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\n            radii[curIdx] = parseFloat(line.substr(i * 16, 16))\n          }\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    s.title = title.join(' ')\n\n    const atomCount = pointersDict.NATOM\n    let curResIdx = 0\n    let curResname = residueLabels![0]\n    let curResno = 1\n    for (let i = 0; i < atomCount; ++i) {\n      if (i + 1 === residuePointers![curResIdx + 1]) {\n        ++curResIdx\n        curResname = residueLabels![curResIdx]\n        curResno = curResIdx + 1\n      }\n      atomStore.atomTypeId[i] = atomMap.add(atomNames![i])\n      atomStore.serial[i] = i + 1\n      sb.addAtom(0, '', '', curResname, curResno)\n    }\n\n    atomStore.partialCharge.set(charges!)\n    atomStore.radius.set(radii!)\n\n    s.bondStore.length = bBondOrder!.length\n    s.bondStore.count = bBondOrder!.length\n    s.bondStore.atomIndex1 = bAtomIndex1!\n    s.bondStore.atomIndex2 = bAtomIndex2!\n    s.bondStore.bondOrder = bBondOrder\n\n    sb.finalize()\n    s.finalizeAtoms()\n    s.finalizeBonds()\n    calculateBondsWithin(s, true)\n    calculateBondsBetween(s, true, true)\n    calculateChainnames(s, true)\n    assignResidueTypeBonds(s)\n\n    if (Debug) Log.timeEnd('PrmtopParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('prmtop', PrmtopParser)\nParserRegistry.add('parm7', PrmtopParser)\n\nexport default PrmtopParser\n","/**\n * @file Psf Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport {\n  assignResidueTypeBonds, calculateBondsBetween,\n  calculateBondsWithin, getChainname\n} from '../structure/structure-utils'\n\nconst TitleMode = 1\nconst AtomMode = 2\nconst BondMode = 3\nconst AngleMode = 4\nconst DihedralMode = 5\nconst ImproperMode = 6\n\nconst reWhitespace = /\\s+/\nconst reTitle = /(^\\*|REMARK)*/\n\nclass PsfParser extends StructureParser {\n  get type () { return 'psf' }\n\n  _parse () {\n    // http://www.ks.uiuc.edu/Training/Tutorials/namd/namd-tutorial-unix-html/node23.html\n\n    if (Debug) Log.time('PsfParser._parse ' + this.name)\n\n    const s = this.structure\n    const sb = this.structureBuilder\n\n    //\n\n    const atomMap = s.atomMap\n    const atomStore = s.atomStore\n    atomStore.addField('partialCharge', 1, 'float32')\n\n    const title: string[] = []\n\n    let mode: number|undefined\n    let chainid: string\n    let lastSegid: string\n    let idx = 0\n    let chainIdx = 0\n    let bondIdx = 0\n    let bAtomIndex1: Uint32Array, bAtomIndex2: Uint32Array, bBondOrder: Uint8Array\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ].trim()\n\n        if (!line) {\n          mode = undefined\n          continue\n        }\n\n        if (mode === AtomMode) {\n          const ls = line.split(reWhitespace)\n\n          const serial = parseInt(ls[ 0 ])\n          const segid = ls[ 1 ]\n          const resno = parseInt(ls[ 2 ])\n          const resname = ls[ 3 ]\n          const atomname = ls[ 4 ]\n          const charge = parseFloat(ls[ 6 ])\n\n          if (segid !== lastSegid) {\n            chainid = getChainname(chainIdx)\n            ++chainIdx\n          }\n\n          atomStore.growIfFull()\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\n\n          atomStore.serial[ idx ] = serial\n          atomStore.partialCharge[ idx ] = charge\n\n          sb.addAtom(0, chainid, chainid, resname, resno)\n\n          idx += 1\n          lastSegid = segid\n        } else if (mode === BondMode) {\n          const ls = line.split(reWhitespace)\n\n          for (let j = 0, m = ls.length; j < m; j += 2) {\n            bAtomIndex1[ bondIdx ] = parseInt(ls[ j ]) - 1\n            bAtomIndex2[ bondIdx ] = parseInt(ls[ j + 1 ]) - 1\n            bBondOrder[ bondIdx ] = 1\n            bondIdx += 1\n          }\n        } else if (mode === TitleMode) {\n          title.push(line.replace(reTitle, '').trim())\n        } else if (mode === AngleMode) {\n\n          // currently not used\n\n        } else if (mode === DihedralMode) {\n\n          // currently not used\n\n        } else if (mode === ImproperMode) {\n\n          // currently not used\n\n        } else if (line.includes('!NATOM')) {\n          mode = AtomMode\n\n          const numAtoms = parseInt(line.split(reWhitespace)[ 0 ])\n          atomStore.resize(numAtoms)\n        } else if (line.includes('!NBOND')) {\n          mode = BondMode\n\n          const numBonds = parseInt(line.split(reWhitespace)[ 0 ])\n          bAtomIndex1 = new Uint32Array(numBonds)\n          bAtomIndex2 = new Uint32Array(numBonds)\n          bBondOrder = new Uint8Array(numBonds)\n        } else if (line.includes('!NTITLE')) {\n          mode = TitleMode\n        } else if (line.includes('!NTHETA')) {\n          mode = AngleMode\n        } else if (line.includes('!NPHI')) {\n          mode = DihedralMode\n        } else if (line.includes('!NIMPHI')) {\n          mode = ImproperMode\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    s.title = title.join(' ')\n\n    s.bondStore.length = bBondOrder!.length\n    s.bondStore.count = bondIdx\n    s.bondStore.atomIndex1 = bAtomIndex1!\n    s.bondStore.atomIndex2 = bAtomIndex2!\n    s.bondStore.bondOrder = bBondOrder!\n\n    sb.finalize()\n    s.finalizeAtoms()\n    s.finalizeBonds()\n    calculateBondsWithin(s, true)\n    calculateBondsBetween(s, true, true)\n    assignResidueTypeBonds(s)\n\n    if (Debug) Log.timeEnd('PsfParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('psf', PsfParser)\n\nexport default PsfParser\n","/**\n * @file Top Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport StructureParser from './structure-parser'\nimport { WaterNames } from '../structure/structure-constants'\nimport {\n  assignResidueTypeBonds, calculateBondsBetween,\n  calculateBondsWithin, getChainname\n} from '../structure/structure-utils'\n\nconst enum Mode {\n  System,\n  Molecules,\n  Moleculetype,\n  Atoms,\n  Bonds\n}\n\nconst reField = /\\[ (.+) \\]/\nconst reWhitespace = /\\s+/\n\nclass TopParser extends StructureParser {\n  get type () { return 'top' }\n\n  _parse () {\n    // http://manual.gromacs.org/online/top.html\n\n    if (Debug) Log.time('TopParser._parse ' + this.name)\n\n    const s = this.structure\n    const sb = this.structureBuilder\n\n    //\n\n    const atomMap = s.atomMap\n    const bondStore = s.bondStore\n\n    const atomStore = s.atomStore\n    atomStore.addField('partialCharge', 1, 'float32')\n\n    const molecules: [string, number][] = []\n    const moleculetypeDict: {[k: string]: {atoms: any[], bonds: any[] }} = {}\n\n    let currentMoleculetype: {\n      atoms: [number, string, string, number][],\n      bonds: [number, number][]\n    }\n    let mode: number|undefined\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ]\n        let lt = line.trim()\n\n        if (!lt || lt[0] === '*' || lt[0] === ';') {\n          continue\n        }\n\n        if (lt.startsWith('#include')) {\n          throw new Error('TopParser: #include statements not allowed')\n        }\n\n        const fieldMatch = line.match(reField)\n        if (fieldMatch !== null) {\n          const name = fieldMatch[1]\n          if (name === 'moleculetype') {\n            mode = Mode.Moleculetype\n            currentMoleculetype = {\n              atoms: [],\n              bonds: []\n            }\n          } else if (name === 'atoms') {\n            mode = Mode.Atoms\n          } else if (name === 'bonds') {\n            mode = Mode.Bonds\n          } else if (name === 'system') {\n            mode = Mode.System\n          } else if (name === 'molecules') {\n            mode = Mode.Molecules\n          } else {\n            mode = undefined\n          }\n          continue\n        }\n\n        const cIdx = lt.indexOf(';')\n        if (cIdx !== -1) {\n          lt = lt.substring(0, cIdx).trim()\n        }\n        if (mode === Mode.Moleculetype) {\n          const molName = lt.split(reWhitespace)[0]\n          moleculetypeDict[molName] = currentMoleculetype\n        } else if (mode === Mode.Atoms) {\n          const ls = lt.split(reWhitespace)\n          currentMoleculetype.atoms.push([\n            parseInt(ls[2]), // resnr\n            ls[3], // residue\n            ls[4], // atom\n            parseFloat(ls[6]) // charge\n          ])\n        } else if (mode === Mode.Bonds) {\n          const ls = lt.split(reWhitespace)\n          currentMoleculetype.bonds.push([\n            parseInt(ls[0]), // ai\n            parseInt(ls[1]) // aj\n          ])\n        } else if (mode === Mode.System) {\n          s.title = lt\n        } else if (mode === Mode.Molecules) {\n          const ls = lt.split(reWhitespace)\n          molecules.push([\n            ls[0], // name\n            parseInt(ls[1]) // count\n          ])\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    let atomCount = 0\n    let bondCount = 0\n    molecules.forEach(function (val) {\n      const [name, molCount] = val\n      const molType = moleculetypeDict[name]\n      atomCount += molCount * molType.atoms.length\n      bondCount += molCount * molType.bonds.length\n    })\n\n    atomStore.resize(atomCount)\n    bondStore.resize(bondCount)\n\n    let atomIdx = 0\n    let resIdx = 0\n    let chainidIdx = 0\n    let chainnameIdx = 0\n    let bondIdx = 0\n    let atomOffset = 0\n    let lastResno: number\n\n    molecules.forEach(function (val) {\n      const [name, molCount] = val\n      const molType = moleculetypeDict[name]\n      const chainname = getChainname(chainnameIdx)\n      for (let i = 0; i < molCount; ++i) {\n        lastResno = -1\n        const chainid = WaterNames.includes(name) ? chainname : getChainname(chainidIdx)\n        molType.atoms.forEach(function (atomData) {\n          const [resno, resname, atomname, charge] = atomData\n          if (resno !== lastResno) {\n            ++resIdx\n          }\n          atomStore.atomTypeId[atomIdx] = atomMap.add(atomname)\n          atomStore.serial[atomIdx] = atomIdx + 1\n          atomStore.partialCharge[atomIdx] = charge\n          sb.addAtom(0, chainname, chainid, resname, resIdx + 1)\n          ++atomIdx\n          lastResno = resno\n        })\n        molType.bonds.forEach(function (bondData) {\n          bondStore.atomIndex1[bondIdx] = atomOffset + bondData[0] - 1\n          bondStore.atomIndex2[bondIdx] = atomOffset + bondData[1] - 1\n          ++bondIdx\n        })\n        ++chainidIdx\n        atomOffset += molType.atoms.length\n      }\n      ++chainnameIdx\n    })\n\n    bondStore.count = bondCount\n\n    sb.finalize()\n    s.finalizeAtoms()\n    s.finalizeBonds()\n    calculateBondsWithin(s, true)\n    calculateBondsBetween(s, true, true)\n    assignResidueTypeBonds(s)\n\n    if (Debug) Log.timeEnd('TopParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('top', TopParser)\n\nexport default TopParser\n","/**\n * @file Trajectory Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Parser, { ParserParameters } from './parser'\nimport Frames from '../trajectory/frames'\nimport Streamer from '../streamer/streamer';\n\nclass TrajectoryParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\n    super(streamer, params)\n\n    this.frames = new Frames(this.name, this.path)\n  }\n\n  get type () { return 'trajectory' }\n  get __objName () { return 'frames' }\n}\n\nexport default TrajectoryParser\n","/**\n * @file Dcd Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { uint8ToString, ensureBuffer } from '../utils'\nimport TrajectoryParser from './trajectory-parser'\n\nconst charmmTimeUnitFactor = 20.45482949774598\n\ninterface DcdHeader {\n  NSET: number,\n  ISTART: number,\n  NSAVC: number,\n  NAMNF: number,\n  DELTA: number,\n  TITLE: string,\n  NATOM: number\n}\n\nclass DcdParser extends TrajectoryParser {\n  get type () { return 'dcd' }\n  get isBinary () { return true }\n\n  _parse () {\n    // http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html\n\n    // The DCD format is structured as follows\n    //   (FORTRAN UNFORMATTED, with Fortran data type descriptions):\n    // HDR     NSET    ISTRT   NSAVC   5-ZEROS NATOM-NFREAT    DELTA   9-ZEROS\n    // `CORD'  #files  step 1  step    zeroes  (zero)          timestep  (zeroes)\n    //                         interval\n    // C*4     INT     INT     INT     5INT    INT             DOUBLE  9INT\n    // ==========================================================================\n    // NTITLE          TITLE\n    // INT (=2)        C*MAXTITL\n    //                 (=32)\n    // ==========================================================================\n    // NATOM\n    // #atoms\n    // INT\n    // ==========================================================================\n    // X(I), I=1,NATOM         (DOUBLE)\n    // Y(I), I=1,NATOM\n    // Z(I), I=1,NATOM\n    // ==========================================================================\n\n    if (Debug) Log.time('DcdParser._parse ' + this.name)\n\n    const bin = ensureBuffer(this.streamer.data)\n    const dv = new DataView(bin)\n\n    const f = this.frames\n    const coordinates = f.coordinates\n    const boxes = f.boxes\n    const header: Partial<DcdHeader> = {}\n\n    let nextPos = 0\n\n    // header block\n\n    const intView = new Int32Array(bin, 0, 23)\n    const ef = intView[ 0 ] !== dv.getInt32(0) // endianess flag\n    // swap byte order when big endian (84 indicates little endian)\n    if (intView[ 0 ] !== 84) {\n      const n = bin.byteLength\n      for (let i = 0; i < n; i += 4) {\n        dv.setFloat32(i, dv.getFloat32(i), true)\n      }\n    }\n    if (intView[ 0 ] !== 84) {\n      Log.error('dcd bad format, header block start')\n    }\n    // format indicator, should read 'CORD'\n    const formatString = String.fromCharCode(\n      dv.getUint8(4), dv.getUint8(5),\n      dv.getUint8(6), dv.getUint8(7)\n    )\n    if (formatString !== 'CORD') {\n      Log.error('dcd bad format, format string')\n    }\n    let isCharmm = false\n    let extraBlock = false\n    let fourDims = false\n    // version field in charmm, unused in X-PLOR\n    if (intView[ 22 ] !== 0) {\n      isCharmm = true\n      if (intView[ 12 ] !== 0) extraBlock = true\n      if (intView[ 13 ] === 1) fourDims = true\n    }\n    header.NSET = intView[ 2 ]\n    header.ISTART = intView[ 3 ]\n    header.NSAVC = intView[ 4 ]\n    header.NAMNF = intView[ 10 ]\n    if (isCharmm) {\n      header.DELTA = dv.getFloat32(44, ef)\n    } else {\n      header.DELTA = dv.getFloat64(44, ef)\n    }\n    if (intView[ 22 ] !== 84) {\n      Log.error('dcd bad format, header block end')\n    }\n    nextPos = nextPos + 21 * 4 + 8\n\n    // title block\n\n    const titleLength = dv.getInt32(nextPos, ef)\n    const titlePos = nextPos + 1\n    if ((titleLength - 4) % 80 !== 0) {\n      Log.error('dcd bad format, title block start')\n    }\n    header.TITLE = uint8ToString(\n      new Uint8Array(bin, titlePos, titleLength)\n    )\n    if (dv.getInt32(titlePos + titleLength + 4 - 1, ef) !== titleLength) {\n      Log.error('dcd bad format, title block end')\n    }\n    nextPos = nextPos + titleLength + 8\n\n    // natom block\n\n    if (dv.getInt32(nextPos, ef) !== 4) {\n      Log.error('dcd bad format, natom block start')\n    }\n    header.NATOM = dv.getInt32(nextPos + 4, ef)\n    if (dv.getInt32(nextPos + 8, ef) !== 4) {\n      Log.error('dcd bad format, natom block end')\n    }\n    nextPos = nextPos + 4 + 8\n\n    // fixed atoms block\n\n    if (header.NAMNF > 0) {\n      // TODO read coordinates and indices of fixed atoms\n      Log.error('dcd format with fixed atoms unsupported, aborting')\n      return\n    }\n\n    // frames\n\n    const natom = header.NATOM\n    const natom4 = natom * 4\n\n    for (let i = 0, n = header.NSET; i < n; ++i) {\n      if (extraBlock) {\n        nextPos += 4 // block start\n        // unitcell: A, alpha, B, beta, gamma, C (doubles)\n        const box = new Float32Array(9)\n        box[ 0 ] = dv.getFloat64(nextPos, ef)\n        box[ 4 ] = dv.getFloat64(nextPos + 2 * 8, ef)\n        box[ 8 ] = dv.getFloat64(nextPos + 5 * 8, ef)\n        boxes.push(box)\n        nextPos += 48\n        nextPos += 4 // block end\n      }\n\n      // xyz coordinates\n      const coord = new Float32Array(natom * 3)\n      for (let j = 0; j < 3; ++j) {\n        if (dv.getInt32(nextPos, ef) !== natom4) {\n          Log.error('dcd bad format, coord block start', i, j)\n        }\n        nextPos += 4 // block start\n        const c = new Float32Array(bin, nextPos, natom)\n        for (let k = 0; k < natom; ++k) {\n          coord[ 3 * k + j ] = c[ k ]\n        }\n        nextPos += natom4\n        if (dv.getInt32(nextPos, ef) !== natom4) {\n          Log.error('dcd bad format, coord block end', i, j)\n        }\n        nextPos += 4 // block end\n      }\n      coordinates.push(coord)\n\n      if (fourDims) {\n        const bytes = dv.getInt32(nextPos, ef)\n        nextPos += 4 + bytes + 4 // block start + skip + block end\n      }\n    }\n\n    if (header.DELTA) {\n      f.deltaTime = header.DELTA * charmmTimeUnitFactor\n    }\n    if (header.ISTART >= 1) {\n      f.timeOffset = (header.ISTART - 1) * f.deltaTime\n    }\n\n    // console.log(header)\n    // console.log(header.TITLE)\n    // console.log('isCharmm', isCharmm, 'extraBlock', extraBlock, 'fourDims, fourDims)\n\n    if (Debug) Log.timeEnd('DcdParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('dcd', DcdParser)\n\nexport default DcdParser\n","/**\n * @file Netcdf Reader\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n *\n * Adapted from https://github.com/cheminfo-js/netcdfjs\n * MIT License, Copyright (c) 2016 cheminfo\n */\n\nimport IOBuffer from './io-buffer'\n\nexport interface NetCDFRecordDimension {\n  length: number,\n  id?: number,\n  name?: string,\n  recordStep?: number\n}\n\nexport interface NetCDFHeader {\n  recordDimension: NetCDFRecordDimension,\n  version: number,\n  dimensions: any[],\n  globalAttributes: any[],\n  variables: any[]\n}\n\nexport interface NetCDFDimension {\n  name: string,\n  size: number\n}\n\n/**\n * Throws a non-valid NetCDF exception if the statement it's true\n * @ignore\n * @param {boolean} statement - Throws if true\n * @param {string} reason - Reason to throw\n */\nfunction notNetcdf (statement: boolean, reason: string) {\n  if (statement) {\n    throw new TypeError('Not a valid NetCDF v3.x file: ' + reason)\n  }\n}\n\n/**\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n */\nfunction padding (buffer: IOBuffer) {\n  if ((buffer.offset % 4) !== 0) {\n    buffer.skip(4 - (buffer.offset % 4))\n  }\n}\n\n/**\n * Reads the name\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {string} - Name\n */\nfunction readName (buffer: IOBuffer) {\n  // Read name\n  const nameLength = buffer.readUint32()\n  const name = buffer.readChars(nameLength)\n\n  // validate name\n  // TODO\n\n  // Apply padding\n  padding(buffer)\n  return name\n}\n\nconst types = {\n  BYTE: 1,\n  CHAR: 2,\n  SHORT: 3,\n  INT: 4,\n  FLOAT: 5,\n  DOUBLE: 6\n}\n\n/**\n * Parse a number into their respective type\n * @ignore\n * @param {number} type - integer that represents the type\n * @return {string} - parsed value of the type\n */\nfunction num2str (type: number) {\n  switch (Number(type)) {\n    case types.BYTE:\n      return 'byte'\n    case types.CHAR:\n      return 'char'\n    case types.SHORT:\n      return 'short'\n    case types.INT:\n      return 'int'\n    case types.FLOAT:\n      return 'float'\n    case types.DOUBLE:\n      return 'double'\n    default:\n      return 'undefined'\n  }\n}\n\n/**\n * Parse a number type identifier to his size in bytes\n * @ignore\n * @param {number} type - integer that represents the type\n * @return {number} -size of the type\n */\nfunction num2bytes (type: number) {\n  switch (Number(type)) {\n    case types.BYTE:\n      return 1\n    case types.CHAR:\n      return 1\n    case types.SHORT:\n      return 2\n    case types.INT:\n      return 4\n    case types.FLOAT:\n      return 4\n    case types.DOUBLE:\n      return 8\n    default:\n      return -1\n  }\n}\n\n/**\n * Reverse search of num2str\n * @ignore\n * @param {string} type - string that represents the type\n * @return {number} - parsed value of the type\n */\nfunction str2num (type: string) {\n  switch (String(type)) {\n    case 'byte':\n      return types.BYTE\n    case 'char':\n      return types.CHAR\n    case 'short':\n      return types.SHORT\n    case 'int':\n      return types.INT\n    case 'float':\n      return types.FLOAT\n    case 'double':\n      return types.DOUBLE\n    default:\n      return -1\n  }\n}\n\n/**\n * Auxiliary function to read numeric data\n * @ignore\n * @param {number} size - Size of the element to read\n * @param {function} bufferReader - Function to read next value\n * @return {Array<number>|number}\n */\nfunction readNumber (size: number, bufferReader: Function) {\n  if (size !== 1) {\n    const numbers = new Array(size)\n    for (let i = 0; i < size; i++) {\n      numbers[i] = bufferReader()\n    }\n    return numbers\n  } else {\n    return bufferReader()\n  }\n}\n\n/**\n * Given a type and a size reads the next element\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} type - Type of the data to read\n * @param {number} size - Size of the element to read\n * @return {string|Array<number>|number}\n */\nfunction readType (buffer: IOBuffer, type: number, size: number) {\n  switch (type) {\n    case types.BYTE:\n      return buffer.readBytes(size)\n    case types.CHAR:\n      return trimNull(buffer.readChars(size))\n    case types.SHORT:\n      return readNumber(size, buffer.readInt16.bind(buffer))\n    case types.INT:\n      return readNumber(size, buffer.readInt32.bind(buffer))\n    case types.FLOAT:\n      return readNumber(size, buffer.readFloat32.bind(buffer))\n    case types.DOUBLE:\n      return readNumber(size, buffer.readFloat64.bind(buffer))\n    default:\n      notNetcdf(true, 'non valid type ' + type)\n      return undefined\n  }\n}\n\n/**\n * Removes null terminate value\n * @ignore\n * @param {string} value - String to trim\n * @return {string} - Trimmed string\n */\nfunction trimNull (value: string) {\n  if (value.charCodeAt(value.length - 1) === 0) {\n    return value.substring(0, value.length - 1)\n  }\n  return value\n}\n\n// const STREAMING = 4294967295;\n\n/**\n * Read data for the given non-record variable\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {object} variable - Variable metadata\n * @return {Array} - Data of the element\n */\nfunction nonRecord (buffer: IOBuffer, variable: {type: string, size: number}) {\n  // variable type\n  const type = str2num(variable.type)\n\n  // size of the data\n  const size = variable.size / num2bytes(type)\n\n  // iterates over the data\n  const data = new Array(size)\n  for (let i = 0; i < size; i++) {\n    data[i] = readType(buffer, type, 1)\n  }\n\n  return data\n}\n\n/**\n * Read data for the given record variable\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {object} variable - Variable metadata\n * @param {object} recordDimension - Record dimension metadata\n * @return {Array} - Data of the element\n */\nfunction record (buffer:IOBuffer, variable: {type: string, size: number}, recordDimension: NetCDFRecordDimension) {\n  // variable type\n  const type = str2num(variable.type)\n  const width = variable.size ? variable.size / num2bytes(type) : 1\n\n  // size of the data\n  // TODO streaming data\n  const size = recordDimension.length\n\n  // iterates over the data\n  const data = new Array(size)\n  const step = recordDimension.recordStep\n\n  for (let i = 0; i < size; i++) {\n    const currentOffset = buffer.offset\n    data[i] = readType(buffer, type, width)\n    buffer.seek(currentOffset + step!)\n  }\n\n  return data\n}\n\n// Grammar constants\nconst ZERO = 0\nconst NC_DIMENSION = 10\nconst NC_VARIABLE = 11\nconst NC_ATTRIBUTE = 12\n\n/**\n * Read the header of the file\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} version - Version of the file\n * @return {object} - Object with the fields:\n *  * `recordDimension`: Number with the length of record dimension\n *  * `dimensions`: List of dimensions\n *  * `globalAttributes`: List of global attributes\n *  * `variables`: List of variables\n */\nfunction header (buffer: IOBuffer, version: number) {\n  // Length of record dimension\n  // sum of the varSize's of all the record variables.\n  const header: Partial<NetCDFHeader> = {recordDimension: {length: buffer.readUint32()}}\n\n  // Version\n  header.version = version\n\n  // List of dimensions\n  const dimList = dimensionsList(buffer) as {dimensions: NetCDFDimension[], recordId: number, recordName: string}\n  header.recordDimension!.id = dimList.recordId\n  header.recordDimension!.name = dimList.recordName\n  header.dimensions = dimList.dimensions\n\n  // List of global attributes\n  header.globalAttributes = attributesList(buffer)\n\n  // List of variables\n  const variables = variablesList(buffer, dimList.recordId, version) as {variables: any[], recordStep: number}\n  header.variables = variables.variables\n  header.recordDimension!.recordStep = variables.recordStep\n\n  return header\n}\n\n/**\n * List of dimensions\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {object} - List of dimensions and record dimension with:\n *  * `name`: String with the name of the dimension\n *  * `size`: Number with the size of the dimension\n */\nfunction dimensionsList (buffer: IOBuffer) {\n  let dimensions: NetCDFDimension[], recordId, recordName\n  const dimList = buffer.readUint32()\n  if (dimList === ZERO) {\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of dimensions')\n    return []\n  } else {\n    notNetcdf((dimList !== NC_DIMENSION), 'wrong tag for list of dimensions')\n\n    // Length of dimensions\n    const dimensionSize = buffer.readUint32()\n    dimensions = new Array(dimensionSize)\n    for (let dim = 0; dim < dimensionSize; dim++) {\n      // Read name\n      const name = readName(buffer)\n\n      // Read dimension size\n      const size = buffer.readUint32()\n      if (size === 0) {\n        recordId = dim\n        recordName = name\n      }\n\n      dimensions[dim] = {\n        name: name,\n        size: size\n      }\n    }\n    return {\n      dimensions: dimensions,\n      recordId: recordId,\n      recordName: recordName\n    }\n  }\n}\n\n/**\n * List of attributes\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {Array<object>} - List of attributes with:\n *  * `name`: String with the name of the attribute\n *  * `type`: String with the type of the attribute\n *  * `value`: A number or string with the value of the attribute\n */\nfunction attributesList (buffer: IOBuffer) {\n  let attributes\n  const gAttList = buffer.readUint32()\n  if (gAttList === ZERO) {\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of attributes')\n    return []\n  } else {\n    notNetcdf((gAttList !== NC_ATTRIBUTE), 'wrong tag for list of attributes')\n\n    // Length of attributes\n    const attributeSize = buffer.readUint32()\n    attributes = new Array(attributeSize)\n    for (let gAtt = 0; gAtt < attributeSize; gAtt++) {\n      // Read name\n      const name = readName(buffer)\n\n      // Read type\n      const type = buffer.readUint32()\n      notNetcdf(((type < 1) || (type > 6)), 'non valid type ' + type)\n\n      // Read attribute\n      const size = buffer.readUint32()\n      const value = readType(buffer, type, size)\n\n      // Apply padding\n      padding(buffer)\n\n      attributes[gAtt] = {\n        name: name,\n        type: num2str(type),\n        value: value\n      }\n    }\n  }\n  return attributes\n}\n\n/**\n * List of variables\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} recordId - Id if the record dimension\n * @param {number} version - Version of the file\n * @return {object} - Number of recordStep and list of variables with:\n *  * `name`: String with the name of the variable\n *  * `dimensions`: Array with the dimension IDs of the variable\n *  * `attributes`: Array with the attributes of the variable\n *  * `type`: String with the type of the variable\n *  * `size`: Number with the size of the variable\n *  * `offset`: Number with the offset where of the variable begins\n *  * `record`: True if is a record variable, false otherwise\n */\nfunction variablesList (buffer: IOBuffer, recordId: number, version: number) {\n  const varList = buffer.readUint32()\n  let recordStep = 0\n  let variables\n  if (varList === ZERO) {\n    notNetcdf(\n      (buffer.readUint32() !== ZERO),\n      'wrong empty tag for list of variables'\n    )\n    return []\n  } else {\n    notNetcdf((varList !== NC_VARIABLE), 'wrong tag for list of variables')\n\n    // Length of variables\n    const variableSize = buffer.readUint32()\n    variables = new Array(variableSize)\n    for (let v = 0; v < variableSize; v++) {\n      // Read name\n      const name = readName(buffer)\n\n      // Read dimensionality of the variable\n      const dimensionality = buffer.readUint32()\n\n      // Index into the list of dimensions\n      const dimensionsIds = new Array(dimensionality)\n      for (let dim = 0; dim < dimensionality; dim++) {\n        dimensionsIds[dim] = buffer.readUint32()\n      }\n\n      // Read variables size\n      const attributes = attributesList(buffer)\n\n      // Read type\n      const type = buffer.readUint32()\n      notNetcdf(((type < 1) && (type > 6)), 'non valid type ' + type)\n\n      // Read variable size\n      // The 32-bit varSize field is not large enough to contain the\n      // size of variables that require more than 2^32 - 4 bytes,\n      // so 2^32 - 1 is used in the varSize field for such variables.\n      const varSize = buffer.readUint32()\n\n      // Read offset\n      let offset = buffer.readUint32()\n      if (version === 2) {\n        notNetcdf((offset > 0), 'offsets larger than 4GB not supported')\n        offset = buffer.readUint32()\n      }\n\n      // Count amount of record variables\n      if (dimensionsIds[0] === recordId) {\n        recordStep += varSize\n      }\n\n      variables[v] = {\n        name: name,\n        dimensions: dimensionsIds,\n        attributes: attributes,\n        type: num2str(type),\n        size: varSize,\n        offset: offset,\n        record: (dimensionsIds[0] === recordId)\n      }\n    }\n  }\n\n  return {\n    variables: variables,\n    recordStep: recordStep\n  }\n}\n\n/**\n * Reads a NetCDF v3.x file\n * https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html\n */\nclass NetcdfReader {\n  header: Partial<NetCDFHeader>\n  buffer: IOBuffer\n  /**\n   * @param {ArrayBuffer} data - ArrayBuffer or any Typed Array with the data\n   */\n  constructor (data: ArrayBuffer) {\n    const buffer = new IOBuffer(data)\n    buffer.setBigEndian()\n\n    // Validate that it's a NetCDF file\n    notNetcdf((buffer.readChars(3) !== 'CDF'), 'should start with CDF')\n\n    // Check the NetCDF format\n    const version = buffer.readByte()\n    notNetcdf((version > 2), 'unknown version')\n\n    // Read the header\n    this.header = header(buffer, version)\n    this.buffer = buffer\n  }\n\n  /**\n   * @return {string} - Version for the NetCDF format\n   */\n  get version () {\n    if (this.header.version === 1) {\n      return 'classic format'\n    } else {\n      return '64-bit offset format'\n    }\n  }\n\n  /**\n   * @return {object} - Metadata for the record dimension\n   *  * `length`: Number of elements in the record dimension\n   *  * `id`: Id number in the list of dimensions for the record dimension\n   *  * `name`: String with the name of the record dimension\n   *  * `recordStep`: Number with the record variables step size\n   */\n  get recordDimension () {\n    return this.header.recordDimension\n  }\n\n  /**\n   * @return {Array<object>} - List of dimensions with:\n   *  * `name`: String with the name of the dimension\n   *  * `size`: Number with the size of the dimension\n   */\n  get dimensions () {\n    return this.header.dimensions\n  }\n\n  /**\n   * @return {Array<object>} - List of global attributes with:\n   *  * `name`: String with the name of the attribute\n   *  * `type`: String with the type of the attribute\n   *  * `value`: A number or string with the value of the attribute\n   */\n  get globalAttributes () {\n    return this.header.globalAttributes\n  }\n\n  /**\n   * @return {Array<object>} - List of variables with:\n   *  * `name`: String with the name of the variable\n   *  * `dimensions`: Array with the dimension IDs of the variable\n   *  * `attributes`: Array with the attributes of the variable\n   *  * `type`: String with the type of the variable\n   *  * `size`: Number with the size of the variable\n   *  * `offset`: Number with the offset where of the variable begins\n   *  * `record`: True if is a record variable, false otherwise\n   */\n  get variables () {\n    return this.header.variables\n  }\n\n  /**\n   * Checks if a variable is available\n   * @param {string|object} variableName - Name of the variable to check\n   * @return {Boolean} - Variable existence\n   */\n  hasDataVariable (variableName: string) {\n    return this.header.variables!.findIndex(function (val) {\n      return val.name === variableName\n    }) !== -1\n  }\n\n  /**\n   * Retrieves the data for a given variable\n   * @param {string|object} variableName - Name of the variable to search or variable object\n   * @return {Array} - List with the variable values\n   */\n  getDataVariable (variableName: string|{}) {\n    let variable\n    if (typeof variableName === 'string') {\n      // search the variable\n      variable = this.header.variables!.find(function (val) {\n        return val.name === variableName\n      })\n    } else {\n      variable = variableName\n    }\n\n    // throws if variable not found\n    notNetcdf((variable === undefined), 'variable not found')\n\n    // go to the offset position\n    this.buffer.seek(variable.offset)\n\n    if (variable.record) {\n      // record variable case\n      return record(this.buffer, variable, this.header.recordDimension!)\n    } else {\n      // non-record variable case\n      return nonRecord(this.buffer, variable)\n    }\n  }\n}\n\nexport default NetcdfReader\n","/**\n * @file Nctraj Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport TrajectoryParser from './trajectory-parser'\nimport NetcdfReader from '../utils/netcdf-reader'\n\nclass NctrajParser extends TrajectoryParser {\n  get type () { return 'nctraj' }\n  get isBinary () { return true }\n\n  _parse () {\n    // http://ambermd.org/netcdf/nctraj.xhtml\n\n    if (Debug) Log.time('NctrajParser._parse ' + this.name)\n\n    const netcdfReader = new NetcdfReader(this.streamer.data)\n\n    const f = this.frames\n    const coordinates = f.coordinates\n    const boxes = f.boxes\n    const times = f.times\n\n    netcdfReader.getDataVariable('coordinates').forEach(function (c) {\n      coordinates.push(new Float32Array(c))\n    })\n\n    if (netcdfReader.hasDataVariable('cell_lengths')) {\n      netcdfReader.getDataVariable('cell_lengths').forEach(function (b) {\n        boxes.push(new Float32Array(b))\n      })\n    }\n\n    if (netcdfReader.hasDataVariable('time')) {\n      netcdfReader.getDataVariable('time').forEach(function (t) {\n        times.push(t)\n      })\n    }\n\n    if (times.length >= 1) {\n      f.timeOffset = times[0]\n    }\n    if (times.length >= 2) {\n      f.deltaTime = times[1] - times[0]\n    }\n\n    if (Debug) Log.timeEnd('NctrajParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('nctraj', NctrajParser)\nParserRegistry.add('ncdf', NctrajParser)\nParserRegistry.add('nc', NctrajParser)\n\nexport default NctrajParser\n","/**\n * @file Trr Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { ensureBuffer } from '../utils'\nimport TrajectoryParser from './trajectory-parser'\n\nclass TrrParser extends TrajectoryParser {\n  get type () { return 'trr' }\n  get isBinary () { return true }\n\n  _parse () {\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/trrio.cpp\n\n    if (Debug) Log.time('TrrParser._parse ' + this.name)\n\n    const bin = ensureBuffer(this.streamer.data)\n    const dv = new DataView(bin)\n\n    const f = this.frames\n    const coordinates = f.coordinates\n    const boxes = f.boxes\n    const times = f.times\n\n    let offset = 0\n\n    while (true) {\n      // const magicnum = dv.getInt32(offset)\n      // const i1 = dv.getFloat32(offset + 4)\n      offset += 8\n\n      const versionSize = dv.getInt32(offset)\n      offset += 4\n      offset += versionSize\n\n      // const irSize = dv.getInt32(offset)\n      // const eSize = dv.getInt32(offset + 4)\n      const boxSize = dv.getInt32(offset + 8)\n      const virSize = dv.getInt32(offset + 12)\n      const presSize = dv.getInt32(offset + 16)\n      // const topSize = dv.getInt32(offset + 20)\n      // const symSize = dv.getInt32(offset + 24)\n      const coordSize = dv.getInt32(offset + 28)\n      const velocitySize = dv.getInt32(offset + 32)\n      const forceSize = dv.getInt32(offset + 36)\n      const natoms = dv.getInt32(offset + 40)\n      // const step = dv.getInt32(offset + 44)\n      // const nre = dv.getInt32(offset + 48)\n      offset += 52\n\n      const floatSize = boxSize / 9\n      const natoms3 = natoms * 3\n\n      // let lambda\n      if (floatSize === 8) {\n        times.push(dv.getFloat64(offset))\n        // lambda = dv.getFloat64(offset + 8)\n      } else {\n        times.push(dv.getFloat32(offset))\n        // lambda = dv.getFloat32(offset + 4)\n      }\n      offset += 2 * floatSize\n\n      if (boxSize) {\n        const box = new Float32Array(9)\n        if (floatSize === 8) {\n          for (let i = 0; i < 9; ++i) {\n            box[i] = dv.getFloat64(offset) * 10\n            offset += 8\n          }\n        } else {\n          for (let i = 0; i < 9; ++i) {\n            box[i] = dv.getFloat32(offset) * 10\n            offset += 4\n          }\n        }\n        boxes.push(box)\n      }\n\n      // ignore, unused\n      offset += virSize\n\n      // ignore, unused\n      offset += presSize\n\n      if (coordSize) {\n        let frameCoords\n        if (floatSize === 8) {\n          frameCoords = new Float32Array(natoms3)\n          for (let i = 0; i < natoms3; ++i) {\n            frameCoords[i] = dv.getFloat64(offset) * 10\n            offset += 8\n          }\n        } else {\n          const tmp = new Uint32Array(bin, offset, natoms3)\n          for (let i = 0; i < natoms3; ++i) {\n            const value = tmp[i]\n            tmp[i] = (\n              ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) |\n              ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF)\n            )\n          }\n          frameCoords = new Float32Array(bin, offset, natoms3)\n          for (let i = 0; i < natoms3; ++i) {\n            frameCoords[i] *= 10\n            offset += 4\n          }\n        }\n        coordinates.push(frameCoords)\n      }\n\n      // ignore, unused\n      offset += velocitySize\n\n      // ignore, unused\n      offset += forceSize\n\n      if (offset >= bin.byteLength) break\n    }\n\n    if (times.length >= 1) {\n      f.timeOffset = times[0]\n    }\n    if (times.length >= 2) {\n      f.deltaTime = times[1] - times[0]\n    }\n\n    if (Debug) Log.timeEnd('TrrParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('trr', TrrParser)\n\nexport default TrrParser\n","/**\n * @file Xtc Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { ensureBuffer } from '../utils'\nimport TrajectoryParser from './trajectory-parser'\nimport { NumberArray } from '../types';\n\nconst MagicInts = new Uint32Array([\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 10, 12, 16, 20, 25, 32, 40, 50, 64,\n  80, 101, 128, 161, 203, 256, 322, 406, 512, 645, 812, 1024, 1290,\n  1625, 2048, 2580, 3250, 4096, 5060, 6501, 8192, 10321, 13003,\n  16384, 20642, 26007, 32768, 41285, 52015, 65536, 82570, 104031,\n  131072, 165140, 208063, 262144, 330280, 416127, 524287, 660561,\n  832255, 1048576, 1321122, 1664510, 2097152, 2642245, 3329021,\n  4194304, 5284491, 6658042, 8388607, 10568983, 13316085, 16777216\n])\nconst FirstIdx = 9\n// const LastIdx = MagicInts.length\n\nfunction sizeOfInt (size: number) {\n  let num = 1\n  let numOfBits = 0\n  while (size >= num && numOfBits < 32) {\n    numOfBits++\n    num <<= 1\n  }\n  return numOfBits\n}\n\nconst _tmpBytes = new Uint8Array(32)\n\nfunction sizeOfInts (numOfInts: number, sizes: Int32Array) {\n  let numOfBytes = 1\n  let numOfBits = 0\n  _tmpBytes[0] = 1\n  for (let i = 0; i < numOfInts; i++) {\n    let bytecnt\n    let tmp = 0\n    for (bytecnt = 0; bytecnt < numOfBytes; bytecnt++) {\n      tmp += _tmpBytes[bytecnt] * sizes[i]\n      _tmpBytes[bytecnt] = tmp & 0xff\n      tmp >>= 8\n    }\n    while (tmp !== 0) {\n      _tmpBytes[bytecnt++] = tmp & 0xff\n      tmp >>= 8\n    }\n    numOfBytes = bytecnt\n  }\n  let num = 1\n  numOfBytes--\n  while (_tmpBytes[numOfBytes] >= num) {\n    numOfBits++\n    num *= 2\n  }\n  return numOfBits + numOfBytes * 8\n}\n\nfunction decodeBits (buf: Int32Array, cbuf: Uint8Array, numOfBits: number, buf2: Uint32Array) {\n  const mask = (1 << numOfBits) - 1\n  let lastBB0 = buf2[1]\n  let lastBB1 = buf2[2]\n  let cnt = buf[0]\n  let num = 0\n\n  while (numOfBits >= 8) {\n    lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\n    num |= (lastBB1 >> lastBB0) << (numOfBits - 8)\n    numOfBits -= 8\n  }\n\n  if (numOfBits > 0) {\n    if (lastBB0 < numOfBits) {\n      lastBB0 += 8\n      lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\n    }\n    lastBB0 -= numOfBits\n    num |= (lastBB1 >> lastBB0) & ((1 << numOfBits) - 1)\n  }\n\n  num &= mask\n  buf[0] = cnt\n  buf[1] = lastBB0\n  buf[2] = lastBB1\n\n  return num\n}\n\nconst _tmpIntBytes = new Int32Array(32)\n\nfunction decodeInts (buf: Int32Array, cbuf: Uint8Array, numOfInts: number, numOfBits: number, sizes: NumberArray, nums: Float32Array, buf2: Uint32Array) {\n  let numOfBytes = 0\n  _tmpIntBytes[1] = 0\n  _tmpIntBytes[2] = 0\n  _tmpIntBytes[3] = 0\n\n  while (numOfBits > 8) {\n    // this is inversed??? why??? because of the endiannness???\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, 8, buf2)\n    numOfBits -= 8\n  }\n\n  if (numOfBits > 0) {\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, numOfBits, buf2)\n  }\n\n  for (let i = numOfInts - 1; i > 0; i--) {\n    let num = 0\n    for (let j = numOfBytes - 1; j >= 0; j--) {\n      num = (num << 8) | _tmpIntBytes[j]\n      const p = (num / sizes[i]) | 0\n      _tmpIntBytes[j] = p\n      num = num - p * sizes[i]\n    }\n    nums[i] = num\n  }\n  nums[0] = (\n    _tmpIntBytes[0] |\n    (_tmpIntBytes[1] << 8) |\n    (_tmpIntBytes[2] << 16) |\n    (_tmpIntBytes[3] << 24)\n  )\n}\n\nclass XtcParser extends TrajectoryParser {\n  get type () { return 'xtc' }\n  get isBinary () { return true }\n\n  _parse () {\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/xtcio.cpp\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/libxdrf.cpp\n\n    if (Debug) Log.time('XtcParser._parse ' + this.name)\n\n    const bin = ensureBuffer(this.streamer.data)\n    const dv = new DataView(bin)\n\n    const f = this.frames\n    const coordinates = f.coordinates\n    const boxes = f.boxes\n    const times = f.times\n\n    const minMaxInt = new Int32Array(6)\n    const sizeint = new Int32Array(3)\n    const bitsizeint = new Int32Array(3)\n    const sizesmall = new Uint32Array(3)\n    const thiscoord = new Float32Array(3)\n    const prevcoord = new Float32Array(3)\n\n    let offset = 0\n    const buf = new Int32Array(3)\n    const buf2 = new Uint32Array(buf.buffer)\n\n    while (true) {\n      let frameCoords: NumberArray\n\n      // const magicnum = dv.getInt32(offset)\n      const natoms = dv.getInt32(offset + 4)\n      // const step = dv.getInt32(offset + 8)\n      offset += 12\n\n      const natoms3 = natoms * 3\n\n      times.push(dv.getFloat32(offset))\n      offset += 4\n\n      const box = new Float32Array(9)\n      for (let i = 0; i < 9; ++i) {\n        box[i] = dv.getFloat32(offset) * 10\n        offset += 4\n      }\n      boxes.push(box)\n\n      if (natoms <= 9) { // no compression\n        frameCoords = new Float32Array(natoms)\n        for (let i = 0; i < natoms; ++i) {\n          frameCoords[i] = dv.getFloat32(offset)\n          offset += 4\n        }\n      } else {\n        buf[0] = buf[1] = buf[2] = 0.0\n        sizeint[0] = sizeint[1] = sizeint[2] = 0\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = 0\n        bitsizeint[0] = bitsizeint[1] = bitsizeint[2] = 0\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\n        prevcoord[0] = prevcoord[1] = prevcoord[2] = 0\n\n        frameCoords = new Float32Array(natoms3)\n        let lfp = 0\n\n        const lsize = dv.getInt32(offset)\n        offset += 4\n        const precision = dv.getFloat32(offset)\n        offset += 4\n\n        minMaxInt[0] = dv.getInt32(offset)\n        minMaxInt[1] = dv.getInt32(offset + 4)\n        minMaxInt[2] = dv.getInt32(offset + 8)\n        minMaxInt[3] = dv.getInt32(offset + 12)\n        minMaxInt[4] = dv.getInt32(offset + 16)\n        minMaxInt[5] = dv.getInt32(offset + 20)\n        sizeint[0] = minMaxInt[3] - minMaxInt[0] + 1\n        sizeint[1] = minMaxInt[4] - minMaxInt[1] + 1\n        sizeint[2] = minMaxInt[5] - minMaxInt[2] + 1\n        offset += 24\n\n        let bitsize\n        if ((sizeint[0] | sizeint[1] | sizeint[2]) > 0xffffff) {\n          bitsizeint[0] = sizeOfInt(sizeint[0])\n          bitsizeint[1] = sizeOfInt(sizeint[1])\n          bitsizeint[2] = sizeOfInt(sizeint[2])\n          bitsize = 0 // flag the use of large sizes\n        } else {\n          bitsize = sizeOfInts(3, sizeint)\n        }\n\n        let smallidx = dv.getInt32(offset)\n        offset += 4\n        // if (smallidx == 0) {alert(\"Undocumented error 1\"); return;}\n\n        // let tmpIdx = smallidx + 8\n        // const maxidx = (LastIdx < tmpIdx) ? LastIdx : tmpIdx\n        // const minidx = maxidx - 8  // often this equal smallidx\n        let tmpIdx = smallidx - 1\n        tmpIdx = (FirstIdx > tmpIdx) ? FirstIdx : tmpIdx\n        let smaller = (MagicInts[tmpIdx] / 2) | 0\n        let smallnum = (MagicInts[smallidx] / 2) | 0\n\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\n        // larger = MagicInts[maxidx]\n\n        let adz = Math.ceil(dv.getInt32(offset) / 4) * 4\n        offset += 4\n        // if (tmpIdx == 0) {alert(\"Undocumented error 2\"); return;}\n\n        // buf = new Int32Array(bin, offset);\n        // buf8 = new Uint8Array(bin, offset);\n\n        // tmpIdx += 3; rndup = tmpIdx%4;\n        // for (i=tmpIdx+rndup-1; i>=tmpIdx; i--) buf8[i] = 0;\n\n        // now unpack buf2...\n\n        const invPrecision = 1.0 / precision\n        let run = 0\n        let i = 0\n\n        const buf8 = new Uint8Array(bin, offset) // 229...\n\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\n\n        while (i < lsize) {\n          if (bitsize === 0) {\n            thiscoord[0] = decodeBits(buf, buf8, bitsizeint[0], buf2)\n            thiscoord[1] = decodeBits(buf, buf8, bitsizeint[1], buf2)\n            thiscoord[2] = decodeBits(buf, buf8, bitsizeint[2], buf2)\n          } else {\n            decodeInts(buf, buf8, 3, bitsize, sizeint, thiscoord, buf2)\n          }\n\n          i++\n\n          thiscoord[0] += minMaxInt[0]\n          thiscoord[1] += minMaxInt[1]\n          thiscoord[2] += minMaxInt[2]\n\n          prevcoord[0] = thiscoord[0]\n          prevcoord[1] = thiscoord[1]\n          prevcoord[2] = thiscoord[2]\n\n          const flag = decodeBits(buf, buf8, 1, buf2)\n          let isSmaller = 0\n\n          if (flag === 1) {\n            run = decodeBits(buf, buf8, 5, buf2)\n            isSmaller = run % 3\n            run -= isSmaller\n            isSmaller--\n          }\n\n          // if ((lfp-ptrstart)+run > size3){\n          //   fprintf(stderr, \"(xdrfile error) Buffer overrun during decompression.\\n\");\n          //   return 0;\n          // }\n\n          if (run > 0) {\n            thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\n\n            for (let k = 0; k < run; k += 3) {\n              decodeInts(buf, buf8, 3, smallidx, sizesmall, thiscoord, buf2)\n              i++\n\n              thiscoord[0] += prevcoord[0] - smallnum\n              thiscoord[1] += prevcoord[1] - smallnum\n              thiscoord[2] += prevcoord[2] - smallnum\n\n              if (k === 0) {\n                // interchange first with second atom for\n                // better compression of water molecules\n                let tmpSwap = thiscoord[0]\n                thiscoord[0] = prevcoord[0]\n                prevcoord[0] = tmpSwap\n\n                tmpSwap = thiscoord[1]\n                thiscoord[1] = prevcoord[1]\n                prevcoord[1] = tmpSwap\n\n                tmpSwap = thiscoord[2]\n                thiscoord[2] = prevcoord[2]\n                prevcoord[2] = tmpSwap\n\n                frameCoords[lfp++] = prevcoord[0] * invPrecision\n                frameCoords[lfp++] = prevcoord[1] * invPrecision\n                frameCoords[lfp++] = prevcoord[2] * invPrecision\n              } else {\n                prevcoord[0] = thiscoord[0]\n                prevcoord[1] = thiscoord[1]\n                prevcoord[2] = thiscoord[2]\n              }\n              frameCoords[lfp++] = thiscoord[0] * invPrecision\n              frameCoords[lfp++] = thiscoord[1] * invPrecision\n              frameCoords[lfp++] = thiscoord[2] * invPrecision\n            }\n          } else {\n            frameCoords[lfp++] = thiscoord[0] * invPrecision\n            frameCoords[lfp++] = thiscoord[1] * invPrecision\n            frameCoords[lfp++] = thiscoord[2] * invPrecision\n          }\n\n          smallidx += isSmaller\n\n          if (isSmaller < 0) {\n            smallnum = smaller\n            if (smallidx > FirstIdx) {\n              smaller = (MagicInts[smallidx - 1] / 2) | 0\n            } else {\n              smaller = 0\n            }\n          } else if (isSmaller > 0) {\n            smaller = smallnum\n            smallnum = (MagicInts[smallidx] / 2) | 0\n          }\n          sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\n\n          if (sizesmall[0] === 0 || sizesmall[1] === 0 || sizesmall[2] === 0) {\n            console.error('(xdrfile error) Undefined error.')\n            return\n          }\n        }\n        offset += adz\n      }\n\n      for (let c = 0; c < natoms3; c++) {\n        frameCoords[c] *= 10\n      }\n\n      coordinates.push(frameCoords)\n\n      if (offset >= bin.byteLength) break\n    }\n\n    if (times.length >= 1) {\n      f.timeOffset = times[0]\n    }\n    if (times.length >= 2) {\n      f.deltaTime = times[1] - times[0]\n    }\n\n    if (Debug) Log.timeEnd('XtcParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('xtc', XtcParser)\n\nexport default XtcParser\n","/**\n * @file Volume Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { defaults } from '../utils'\nimport Parser, { ParserParameters } from './parser'\nimport Volume from '../surface/volume'\nimport Streamer from '../streamer/streamer';\n\nexport interface VolumeParserParameters extends ParserParameters {\n  voxelSize: number\n}\n\nclass VolumeParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<VolumeParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.volume = new Volume(this.name, this.path)\n    this.voxelSize = defaults(p.voxelSize, 1)\n  }\n\n  get type () { return 'volume' }\n  get __objName () { return 'volume' }\n\n  _afterParse () {\n    this.volume.setMatrix(this.getMatrix())\n    super._afterParse()\n  }\n\n  getMatrix () {\n    return new Matrix4()\n  }\n}\n\nexport default VolumeParser\n","/**\n * @file Cube Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4, Vector3 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport VolumeParser from './volume-parser'\n\n// @author Johanna Tiemann <johanna.tiemann@googlemail.com>\n// @author Alexander Rose <alexander.rose@weirdbyte.de>\n\nconst reWhitespace = /\\s+/\nconst reScientificNotation = /-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g\nconst bohrToAngstromFactor = 0.529177210859\ninterface Header {\n  atomCount: number,\n  originX: number,\n  originY: number,\n  originZ: number,\n  NVX: number,\n  NVY: number,\n  NVZ: number,\n  basisX: Vector3,\n  basisY: Vector3,\n  basisZ: Vector3\n}\n\nclass CubeParser extends VolumeParser {\n  get type () { return 'cube' }\n\n  _parse () {\n    // http://paulbourke.net/dataformats/cube/\n\n    if (Debug) Log.time('CubeParser._parse ' + this.name)\n\n    const v = this.volume\n    const headerLines = this.streamer.peekLines(6)\n    const header: Partial<Header> = {}\n\n    const scaleFactor = bohrToAngstromFactor * this.voxelSize\n\n    function h (k: number, l: number) {\n      var field = headerLines[ k ].trim().split(reWhitespace)[ l ]\n      return parseFloat(field)\n    }\n\n    header.atomCount = Math.abs(h(2, 0)) // Number of atoms\n    header.originX = h(2, 1) * bohrToAngstromFactor // Position of origin of volumetric data\n    header.originY = h(2, 2) * bohrToAngstromFactor\n    header.originZ = h(2, 3) * bohrToAngstromFactor\n    header.NVX = h(3, 0) // Number of voxels\n    header.NVY = h(4, 0)\n    header.NVZ = h(5, 0)\n\n    header.basisX = new Vector3(h(3, 1), h(3, 2), h(3, 3))\n      .multiplyScalar(scaleFactor)\n    header.basisY = new Vector3(h(4, 1), h(4, 2), h(4, 3))\n      .multiplyScalar(scaleFactor)\n    header.basisZ = new Vector3(h(5, 1), h(5, 2), h(5, 3))\n      .multiplyScalar(scaleFactor)\n\n    const data = new Float32Array(header.NVX * header.NVY * header.NVZ)\n    let count = 0\n    let lineNo = 0\n    const oribitalFlag = h(2, 0) > 0 ? 0 : 1\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ].trim()\n\n        if (line !== '' && lineNo >= header.atomCount! + 6 + oribitalFlag) {\n          const m = line.match(reScientificNotation) as RegExpMatchArray\n          for (let j = 0, lj = m.length; j < lj; ++j) {\n            data[ count ] = parseFloat(m[ j ])\n            ++count\n          }\n        }\n\n        ++lineNo\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    v.header = header\n    v.setData(data, header.NVZ, header.NVY, header.NVX)\n\n    if (Debug) Log.timeEnd('CubeParser._parse ' + this.name)\n  }\n\n  getMatrix () {\n    const h = this.volume.header\n    const matrix = new Matrix4()\n\n    matrix.multiply(\n      new Matrix4().makeTranslation(\n        h.originX, h.originY, h.originZ\n      )\n    )\n\n    matrix.multiply(\n      new Matrix4().makeBasis(\n        h.basisZ, h.basisY, h.basisX\n      )\n    )\n\n    return matrix\n  }\n}\n\nParserRegistry.add('cub', CubeParser)\nParserRegistry.add('cube', CubeParser)\n\nexport default CubeParser\n","/**\n * @file Dsn6 Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { ensureBuffer } from '../utils'\nimport { degToRad } from '../math/math-utils'\nimport VolumeParser from './volume-parser'\n\ninterface Dsn6Header {\n  xStart: number,\n  yStart: number,\n  zStart: number,\n  xExtent: number,\n  yExtent: number,\n  zExtent: number,\n  xRate: number,\n  yRate: number,\n  zRate: number,\n  xlen: number,\n  ylen: number,\n  zlen: number,\n  alpha: number,\n  beta: number,\n  gamma: number,\n  sigma: number\n}\n\nclass Dsn6Parser extends VolumeParser {\n  get type () { return 'dsn6' }\n  get isBinary () { return true }\n\n  _parse () {\n    // DSN6 http://www.uoxray.uoregon.edu/tnt/manual/node104.html\n    // BRIX http://svn.cgl.ucsf.edu/svn/chimera/trunk/libs/VolumeData/dsn6/brix-1.html\n\n    if (Debug) Log.time('Dsn6Parser._parse ' + this.name)\n\n    const v = this.volume\n    const header: Partial<Dsn6Header> = {}\n    let divisor, summand\n\n    const bin = ensureBuffer(this.streamer.data)\n    const intView = new Int16Array(bin)\n    const byteView = new Uint8Array(bin)\n    const brixStr = String.fromCharCode.apply(null, byteView.subarray(0, 512))\n\n    if (brixStr.startsWith(':-)')) {\n      header.xStart = parseInt(brixStr.substr(10, 5)) // NXSTART\n      header.yStart = parseInt(brixStr.substr(15, 5))\n      header.zStart = parseInt(brixStr.substr(20, 5))\n\n      header.xExtent = parseInt(brixStr.substr(32, 5)) // NX\n      header.yExtent = parseInt(brixStr.substr(38, 5))\n      header.zExtent = parseInt(brixStr.substr(42, 5))\n\n      header.xRate = parseInt(brixStr.substr(52, 5)) // MX\n      header.yRate = parseInt(brixStr.substr(58, 5))\n      header.zRate = parseInt(brixStr.substr(62, 5))\n\n      header.xlen = parseFloat(brixStr.substr(73, 10)) * this.voxelSize\n      header.ylen = parseFloat(brixStr.substr(83, 10)) * this.voxelSize\n      header.zlen = parseFloat(brixStr.substr(93, 10)) * this.voxelSize\n\n      header.alpha = parseFloat(brixStr.substr(103, 10))\n      header.beta = parseFloat(brixStr.substr(113, 10))\n      header.gamma = parseFloat(brixStr.substr(123, 10))\n\n      divisor = parseFloat(brixStr.substr(138, 12)) / 100\n      summand = parseInt(brixStr.substr(155, 8))\n\n      header.sigma = parseFloat(brixStr.substr(170, 12)) * 100\n    } else {\n      // swap byte order when big endian\n      if (intView[ 18 ] !== 100) {\n        for (let i = 0, n = intView.length; i < n; ++i) {\n          const val = intView[ i ]\n          intView[ i ] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\n        }\n      }\n\n      header.xStart = intView[ 0 ] // NXSTART\n      header.yStart = intView[ 1 ]\n      header.zStart = intView[ 2 ]\n\n      header.xExtent = intView[ 3 ] // NX\n      header.yExtent = intView[ 4 ]\n      header.zExtent = intView[ 5 ]\n\n      header.xRate = intView[ 6 ] // MX\n      header.yRate = intView[ 7 ]\n      header.zRate = intView[ 8 ]\n\n      const factor = 1 / intView[ 17 ]\n      const scalingFactor = factor * this.voxelSize\n\n      header.xlen = intView[ 9 ] * scalingFactor\n      header.ylen = intView[ 10 ] * scalingFactor\n      header.zlen = intView[ 11 ] * scalingFactor\n\n      header.alpha = intView[ 12 ] * factor\n      header.beta = intView[ 13 ] * factor\n      header.gamma = intView[ 14 ] * factor\n\n      divisor = intView[ 15 ] / 100\n      summand = intView[ 16 ]\n      header.gamma = intView[ 14 ] * factor\n    }\n\n    v.header = header\n\n    if (Debug) Log.log(header, divisor, summand)\n\n    const data = new Float32Array(\n      header.xExtent * header.yExtent * header.zExtent\n    )\n\n    let offset = 512\n    const xBlocks = Math.ceil(header.xExtent / 8)\n    const yBlocks = Math.ceil(header.yExtent / 8)\n    const zBlocks = Math.ceil(header.zExtent / 8)\n\n    // loop over blocks\n    for (var zz = 0; zz < zBlocks; ++zz) {\n      for (var yy = 0; yy < yBlocks; ++yy) {\n        for (var xx = 0; xx < xBlocks; ++xx) {\n          // loop inside block\n          for (var k = 0; k < 8; ++k) {\n            var z = 8 * zz + k\n            for (var j = 0; j < 8; ++j) {\n              var y = 8 * yy + j\n              for (var i = 0; i < 8; ++i) {\n                var x = 8 * xx + i\n\n                // check if remaining slice-part contains data\n                if (x < header.xExtent && y < header.yExtent && z < header.zExtent) {\n                  var idx = ((((x * header.yExtent) + y) * header.zExtent) + z)\n                  data[ idx ] = (byteView[ offset ] - summand) / divisor\n                  ++offset\n                } else {\n                  offset += 8 - i\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    v.setData(data, header.zExtent, header.yExtent, header.xExtent)\n    if (header.sigma) {\n      v.setStats(undefined, undefined, undefined, header.sigma)\n    }\n\n    if (Debug) Log.timeEnd('Dsn6Parser._parse ' + this.name)\n  }\n\n  getMatrix () {\n    const h: Dsn6Header = this.volume.header\n\n    const basisX = [\n      h.xlen as number,\n      0,\n      0\n    ]\n\n    const basisY = [\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n\n    const basisZ = [\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\n      h.zlen * (\n        Math.cos(Math.PI / 180.0 * h.alpha) -\n        Math.cos(Math.PI / 180.0 * h.gamma) *\n        Math.cos(Math.PI / 180.0 * h.beta)\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n    basisZ[ 2 ] = Math.sqrt(\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\n    )\n\n    const basis = [ [], basisX, basisY, basisZ ]\n    const nxyz = [ 0, h.xRate, h.yRate, h.zRate ]\n    const mapcrs = [ 0, 1, 2, 3 ]\n\n    const matrix = new Matrix4()\n\n    matrix.set(\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\n      0,\n      0, 0, 0, 1\n    )\n\n    matrix.multiply(\n      new Matrix4().makeRotationY(degToRad(90))\n    )\n\n    matrix.multiply(new Matrix4().makeTranslation(\n      -h.zStart, h.yStart, h.xStart\n    ))\n\n    matrix.multiply(new Matrix4().makeScale(\n      -1, 1, 1\n    ))\n\n    return matrix\n  }\n}\n\nParserRegistry.add('dsn6', Dsn6Parser)\nParserRegistry.add('brix', Dsn6Parser)\n\nexport default Dsn6Parser\n","/**\n * @file Dx Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { degToRad } from '../math/math-utils'\nimport VolumeParser from './volume-parser'\n\nconst reWhitespace = /\\s+/\n\ninterface DxHeader {\n  nx: number,\n  ny: number,\n  nz: number,\n  xmin: number,\n  ymin: number,\n  zmin: number,\n  hx: number,\n  hy: number,\n  hz: number\n}\n\nclass DxParser extends VolumeParser {\n  get type () { return 'dx' }\n\n  _parse () {\n    // http://apbs-pdb2pqr.readthedocs.io/en/latest/formats/opendx.html\n\n    if (Debug) Log.time('DxParser._parse ' + this.name)\n\n    const v = this.volume\n    const headerLines = this.streamer.peekLines(30)\n    const headerInfo = this.parseHeaderLines(headerLines)\n    const header = this.volume.header\n    const dataLineStart = headerInfo.dataLineStart\n\n    const size = header.nx * header.ny * header.nz\n    const data = new Float32Array(size)\n    let count = 0\n    let lineNo = 0\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string []) {\n      for (let i = _i; i < _n; ++i) {\n        if (count < size && lineNo > dataLineStart) {\n          const line = lines[ i ].trim()\n\n          if (line !== '') {\n            const ls = line.split(reWhitespace)\n\n            for (let j = 0, lj = ls.length; j < lj; ++j) {\n              data[ count ] = parseFloat(ls[ j ])\n              ++count\n            }\n          }\n        }\n\n        ++lineNo\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    v.setData(data, header.nz, header.ny, header.nx)\n\n    if (Debug) Log.timeEnd('DxParser._parse ' + this.name)\n  }\n\n  parseHeaderLines (headerLines: string []) {\n    const header: Partial<DxHeader> = {}\n    const n = headerLines.length\n\n    let dataLineStart = 0\n    let headerByteCount = 0\n    let deltaLineCount = 0\n\n    for (let i = 0; i < n; ++i) {\n      let ls\n      const line = headerLines[ i ]\n\n      if (line.startsWith('object 1')) {\n        ls = line.split(reWhitespace)\n\n        header.nx = parseInt(ls[ 5 ])\n        header.ny = parseInt(ls[ 6 ])\n        header.nz = parseInt(ls[ 7 ])\n      } else if (line.startsWith('origin')) {\n        ls = line.split(reWhitespace)\n\n        header.xmin = parseFloat(ls[ 1 ])\n        header.ymin = parseFloat(ls[ 2 ])\n        header.zmin = parseFloat(ls[ 3 ])\n      } else if (line.startsWith('delta')) {\n        ls = line.split(reWhitespace)\n\n        if (deltaLineCount === 0) {\n          header.hx = parseFloat(ls[ 1 ]) * this.voxelSize\n        } else if (deltaLineCount === 1) {\n          header.hy = parseFloat(ls[ 2 ]) * this.voxelSize\n        } else if (deltaLineCount === 2) {\n          header.hz = parseFloat(ls[ 3 ]) * this.voxelSize\n        }\n\n        deltaLineCount += 1\n      } else if (line.startsWith('object 3')) {\n        dataLineStart = i\n        headerByteCount += line.length + 1\n        break\n      }\n\n      headerByteCount += line.length + 1\n    }\n\n    this.volume.header = header\n\n    return {\n      dataLineStart: dataLineStart,\n      headerByteCount: headerByteCount\n    }\n  }\n\n  getMatrix () {\n    const h = this.volume.header\n    const matrix = new Matrix4()\n\n    matrix.multiply(\n      new Matrix4().makeRotationY(degToRad(90))\n    )\n\n    matrix.multiply(\n      new Matrix4().makeTranslation(\n        -h.zmin, h.ymin, h.xmin\n      )\n    )\n\n    matrix.multiply(\n      new Matrix4().makeScale(\n        -h.hz, h.hy, h.hx\n      )\n    )\n\n    return matrix\n  }\n}\n\nParserRegistry.add('dx', DxParser)\n\nexport default DxParser\n","/**\n * @file Dxbin Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { uint8ToLines, ensureBuffer } from '../utils'\nimport DxParser from './dx-parser'\n\nclass DxbinParser extends DxParser {\n  get type () { return 'dxbin' }\n  get isBinary () { return true }\n\n  _parse () {\n    // https://github.com/Electrostatics/apbs-pdb2pqr/issues/216\n\n    if (Debug) Log.time('DxbinParser._parse ' + this.name)\n\n    const bin = ensureBuffer(this.streamer.data)\n    const headerLines = uint8ToLines(new Uint8Array(bin, 0, 1000))\n    const headerInfo = this.parseHeaderLines(headerLines)\n    const header = this.volume.header\n    const headerByteCount = headerInfo.headerByteCount\n\n    const size = header.nx * header.ny * header.nz\n    const dv = new DataView(bin)\n    const data = new Float32Array(size)\n\n    for (let i = 0; i < size; ++i) {\n      data[ i ] = dv.getFloat64(i * 8 + headerByteCount, true)\n    }\n\n    this.volume.setData(data, header.nz, header.ny, header.nx)\n\n    if (Debug) Log.timeEnd('DxbinParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('dxbin', DxbinParser)\n\nexport default DxbinParser\n","/**\n * @file Mrc Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { ensureBuffer } from '../utils'\nimport VolumeParser from './volume-parser'\n\ninterface MrcHeader {\n  MAP: string,\n  MACHST: number [],\n  NX: number,\n  NY: number,\n  NZ: number,\n  MODE: number,\n  NXSTART: number,\n  NYSTART: number,\n  NZSTART: number,\n  MX: number,\n  MY: number,\n  MZ: number,\n  xlen: number,\n  ylen: number,\n  zlen: number,\n  alpha: number,\n  beta: number,\n  gamma: number,\n  MAPC: number,\n  MAPR: number,\n  MAPS: number,\n  DMIN: number,\n  DMAX: number,\n  DMEAN: number,\n  ISPG: number,\n  NSYMBT: number,\n  LSKFLG: number,\n  originX: number,\n  originY: number,\n  originZ: number,\n  ARMS: number\n}\n\nclass MrcParser extends VolumeParser {\n  get type () { return 'mrc' }\n  get isBinary () { return true }\n\n  _parse () {\n    // MRC\n    // http://ami.scripps.edu/software/mrctools/mrc_specification.php\n    // http://www2.mrc-lmb.cam.ac.uk/research/locally-developed-software/image-processing-software/#image\n    // http://bio3d.colorado.edu/imod/doc/mrc_format.txt\n\n    // CCP4 (MAP)\n    // http://www.ccp4.ac.uk/html/maplib.html\n\n    // MRC format does not use the skew transformation header records (words 25-37)\n    // CCP4 format does not use the ORIGIN header records (words 50-52)\n\n    if (Debug) Log.time('MrcParser._parse ' + this.name)\n\n    const v = this.volume\n    const header: Partial<MrcHeader> = {}\n\n    const bin = ensureBuffer(this.streamer.data)\n    const intView = new Int32Array(bin, 0, 56)\n    const floatView = new Float32Array(bin, 0, 56)\n    const dv = new DataView(bin)\n\n    // 53  MAP         Character string 'MAP ' to identify file type\n    header.MAP = String.fromCharCode(\n      dv.getUint8(52 * 4), dv.getUint8(52 * 4 + 1),\n      dv.getUint8(52 * 4 + 2), dv.getUint8(52 * 4 + 3)\n    )\n\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\n    //                 17 and 17 for big-endian or 68 and 65 for little-endian\n    header.MACHST = [ dv.getUint8(53 * 4), dv.getUint8(53 * 4 + 1) ]\n\n    // swap byte order when big endian\n    if (header.MACHST[ 0 ] === 17 && header.MACHST[ 1 ] === 17) {\n      const n = bin.byteLength\n      for (let i = 0; i < n; i += 4) {\n        dv.setFloat32(i, dv.getFloat32(i), true)\n      }\n    }\n\n    header.NX = intView[ 0 ] // NC - columns (fastest changing)\n    header.NY = intView[ 1 ] // NR - rows\n    header.NZ = intView[ 2 ] // NS - sections (slowest changing)\n\n    // mode\n    //  0 image : signed 8-bit bytes range -128 to 127\n    //  1 image : 16-bit halfwords\n    //  2 image : 32-bit reals\n    //  3 transform : complex 16-bit integers\n    //  4 transform : complex 32-bit reals\n    //  6 image : unsigned 16-bit range 0 to 65535\n    // 16 image: unsigned char * 3 (for rgb data, non-standard)\n    //\n    // Note: Mode 2 is the normal mode used in the CCP4 programs.\n    //       Other modes than 2 and 0 may NOT WORK\n    header.MODE = intView[ 3 ]\n\n    // start\n    header.NXSTART = intView[ 4 ] // NCSTART - first column\n    header.NYSTART = intView[ 5 ] // NRSTART - first row\n    header.NZSTART = intView[ 6 ] // NSSTART - first section\n\n    // intervals\n    header.MX = intView[ 7 ] // intervals along x\n    header.MY = intView[ 8 ] // intervals along y\n    header.MZ = intView[ 9 ] // intervals along z\n\n    // cell length (Angstroms in CCP4)\n    header.xlen = floatView[ 10 ] * this.voxelSize\n    header.ylen = floatView[ 11 ] * this.voxelSize\n    header.zlen = floatView[ 12 ] * this.voxelSize\n\n    // cell angle (Degrees)\n    header.alpha = floatView[ 13 ]\n    header.beta = floatView[ 14 ]\n    header.gamma = floatView[ 15 ]\n\n    // axis correspondence (1,2,3 for X,Y,Z)\n    header.MAPC = intView[ 16 ] // column\n    header.MAPR = intView[ 17 ] // row\n    header.MAPS = intView[ 18 ] // section\n\n    // density statistics\n    header.DMIN = floatView[ 19 ]\n    header.DMAX = floatView[ 20 ]\n    header.DMEAN = floatView[ 21 ]\n\n    // space group number 0 or 1 (default=0)\n    header.ISPG = intView[ 22 ]\n\n    // number of bytes used for symmetry data (0 or 80)\n    header.NSYMBT = intView[ 23 ]\n\n    // Flag for skew transformation, =0 none, =1 if foll\n    header.LSKFLG = intView[ 24 ]\n\n    // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\n    //                LSKFLG .ne. 0.\n    // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\n    //                Skew transformation is from standard orthogonal\n    //                coordinate frame (as used for atoms) to orthogonal\n    //                map frame, as Xo(map) = S * (Xo(atoms) - t)\n\n    // 38      future use       (some of these are used by the MSUBSX routines\n    //  .          \"              in MAPBRICK, MAPCONT and FRODO)\n    //  .          \"   (all set to zero by default)\n    //  .          \"\n    // 52          \"\n\n    // 50-52 origin in X,Y,Z used for transforms\n    header.originX = floatView[ 49 ]\n    header.originY = floatView[ 50 ]\n    header.originZ = floatView[ 51 ]\n\n    // 53  MAP         Character string 'MAP ' to identify file type\n    // => see top of this parser\n\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\n    // => see top of this parser\n\n    // Rms deviation of map from mean density\n    header.ARMS = floatView[ 54 ]\n\n    // 56      NLABL           Number of labels being used\n    // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\n\n    v.header = header\n\n    // Log.log( header );\n\n    let data\n    if (header.MODE === 2) {\n      data = new Float32Array(\n        bin, 256 * 4 + header.NSYMBT,\n        header.NX * header.NY * header.NZ\n      )\n    } else if (header.MODE === 0) {\n      data = new Float32Array(new Int8Array(\n        bin, 256 * 4 + header.NSYMBT,\n        header.NX * header.NY * header.NZ\n      ))\n\n      // based on uglymol (https://github.com/uglymol/uglymol) by Marcin Wojdyr (wojdyr)\n      // if the file was converted by mapmode2to0 - scale the data\n      if (intView[ 39 ] === -128 && intView[ 40 ] === 127) {\n        // scaling f(x)=b1*x+b0 such that f(-128)=min and f(127)=max\n        const b1 = (header.DMAX - header.DMIN) / 255.0\n        const b0 = 0.5 * (header.DMIN + header.DMAX + b1)\n        for (let j = 0, jl = data.length; j < jl; ++j) {\n          data[ j ] = b1 * data[ j ] + b0\n        }\n      }\n    } else {\n      Log.error('MrcParser unknown mode', header.MODE)\n    }\n\n    v.setData(data, header.NX, header.NY, header.NZ)\n    if (header.ARMS !== 0) {\n      v.setStats(header.DMIN, header.DMAX, header.DMEAN, header.ARMS)\n    }\n\n    if (Debug) Log.timeEnd('MrcParser._parse ' + this.name)\n  }\n\n  getMatrix () {\n    const h = this.volume.header\n\n    const basisX = [\n      h.xlen,\n      0,\n      0\n    ]\n\n    const basisY = [\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n\n    const basisZ = [\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\n      h.zlen * (\n        Math.cos(Math.PI / 180.0 * h.alpha) -\n        Math.cos(Math.PI / 180.0 * h.gamma) *\n        Math.cos(Math.PI / 180.0 * h.beta)\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n    basisZ[ 2 ] = Math.sqrt(\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\n    )\n\n    const basis = [ [], basisX, basisY, basisZ ]\n    const nxyz = [ 0, h.MX, h.MY, h.MZ ]\n    const mapcrs = [ 0, h.MAPC, h.MAPR, h.MAPS ]\n\n    const matrix = new Matrix4()\n\n    matrix.set(\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\n      0,\n      0, 0, 0, 1\n    )\n\n    matrix.setPosition(new Vector3(\n      h.originX, h.originY, h.originZ\n    ))\n\n    matrix.multiply(new Matrix4().makeTranslation(\n      h.NXSTART, h.NYSTART, h.NZSTART\n    ))\n\n    return matrix\n  }\n}\n\nParserRegistry.add('mrc', MrcParser)\nParserRegistry.add('ccp4', MrcParser)\nParserRegistry.add('map', MrcParser)\n\nexport default MrcParser\n","/**\n * @file Xplor Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Matrix4 } from 'three'\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport VolumeParser from './volume-parser'\n\nconst reWhitespace = /\\s+/\n\nfunction parseNumberLine (line: string) {\n  return line.trim().split(reWhitespace).map(parseFloat)\n}\n\ninterface XplorHeader {\n  NA: number,\n  AMIN: number,\n  AMAX: number,\n  NB: number,\n  BMIN: number,\n  BMAX: number,\n  NC: number,\n  CMIN: number,\n  CMAX: number,\n  a: number,\n  b: number,\n  c: number,\n  alpha: number,\n  beta: number,\n  gamma: number,\n  RAVE: number,\n  RSIGMA: number\n}\n\nclass XplorParser extends VolumeParser {\n  get type () { return 'xplor' }\n\n  _parse () {\n    // http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/xplor/formats.html\n    // http://www.mrc-lmb.cam.ac.uk/public/xtal/doc/cns/cns_1.3/tutorial/formats/maps/text.html\n\n    if (Debug) Log.time('XplorParser._parse ' + this.name)\n\n    const v = this.volume\n    const headerLines = this.streamer.peekLines(8)\n    const header: Partial<XplorHeader> = {}\n\n    let infoStart\n    if (headerLines[ 2 ].startsWith('REMARKS')) {\n      infoStart = parseInt(headerLines[ 1 ].substring(0, 8)) + 2\n    } else {\n      infoStart = 5\n    }\n    const dataStart = infoStart + 3\n\n    const gridInfo = parseNumberLine(headerLines[ infoStart ])\n    header.NA = gridInfo[ 0 ]\n    header.AMIN = gridInfo[ 1 ]\n    header.AMAX = gridInfo[ 2 ]\n    header.NB = gridInfo[ 3 ]\n    header.BMIN = gridInfo[ 4 ]\n    header.BMAX = gridInfo[ 5 ]\n    header.NC = gridInfo[ 6 ]\n    header.CMIN = gridInfo[ 7 ]\n    header.CMAX = gridInfo[ 8 ]\n\n    const cellInfo = parseNumberLine(headerLines[ infoStart + 1 ])\n    header.a = cellInfo[ 0 ] * this.voxelSize\n    header.b = cellInfo[ 1 ] * this.voxelSize\n    header.c = cellInfo[ 2 ] * this.voxelSize\n    header.alpha = cellInfo[ 3 ]\n    header.beta = cellInfo[ 4 ]\n    header.gamma = cellInfo[ 5 ]\n\n    const na = header.AMAX - header.AMIN + 1\n    const nb = header.BMAX - header.BMIN + 1\n    const nc = header.CMAX - header.CMIN + 1\n    const n = na * nb * nc\n\n    const data = new Float32Array(n)\n    const lineSection = Math.ceil(1 + (na * nb) / 6)\n    let count = 0\n    let lineNo = 0\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ]\n\n        if (lineNo >= dataStart && (lineNo - dataStart) % lineSection !== 0 && count < n) {\n          for (let j = 0, lj = 6; j < lj; ++j) {\n            const value = parseFloat(line.substr(12 * j, 12))\n            if (isNaN(value)) { break } // Last line of map section\n            data[count++] = value\n          }\n        } else if (count === n) {\n          const lt = line.trim()\n          if (lt && lt !== '-9999') {\n            const ls = parseNumberLine(line)\n            header.RAVE = ls[0]\n            header.RSIGMA = ls[1]\n          }\n        }\n\n        ++lineNo\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    v.header = header\n    v.setData(data, na, nb, nc)\n    if (header.RAVE !== 0 && header.RSIGMA !== 1) {\n      v.setStats(undefined, undefined, header.RAVE, header.RSIGMA)\n    }\n\n    if (Debug) Log.timeEnd('XplorParser._parse ' + this.name)\n  }\n\n  getMatrix () {\n    const h = this.volume.header\n\n    const basisX = [\n      h.a,\n      0,\n      0\n    ]\n\n    const basisY = [\n      h.b * Math.cos(Math.PI / 180.0 * h.gamma),\n      h.b * Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n\n    const basisZ = [\n      h.c * Math.cos(Math.PI / 180.0 * h.beta),\n      h.c * (\n        Math.cos(Math.PI / 180.0 * h.alpha) -\n        Math.cos(Math.PI / 180.0 * h.gamma) *\n        Math.cos(Math.PI / 180.0 * h.beta)\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\n      0\n    ]\n    basisZ[ 2 ] = Math.sqrt(\n      h.c * h.c * Math.sin(Math.PI / 180.0 * h.beta) *\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\n    )\n\n    const basis = [ [], basisX, basisY, basisZ ]\n    const nxyz = [ 0, h.NA, h.NB, h.NC ]\n    const mapcrs = [ 0, 1, 2, 3 ]\n\n    const matrix = new Matrix4()\n\n    matrix.set(\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\n      0,\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\n      0,\n      0, 0, 0, 1\n    )\n\n    matrix.multiply(new Matrix4().makeTranslation(\n      h.AMIN, h.BMIN, h.CMIN\n    ))\n\n    return matrix\n  }\n}\n\nParserRegistry.add('xplor', XplorParser)\nParserRegistry.add('cns', XplorParser)\n\nexport default XplorParser\n","/**\n * @file Kin Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { Vector3 } from 'three'\nimport Parser from './parser'\n\nfunction hsvToRgb (h: number, s: number, v: number) {\n  h /= 360\n  s /= 100\n  v /= 100\n  let r, g, b\n  const i = Math.floor(h * 6)\n  const f = h * 6 - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break\n    case 1: r = q; g = v; b = p; break\n    case 2: r = p; g = v; b = t; break\n    case 3: r = p; g = q; b = v; break\n    case 4: r = t; g = p; b = v; break\n    case 5: r = v; g = p; b = q; break\n  }\n  return [ r, g, b ] as number []\n}\n\nconst ColorDict: {[k: string]: number[]} = {\n  red: hsvToRgb(0, 100, 100),\n  orange: hsvToRgb(20, 100, 100),\n  gold: hsvToRgb(40, 100, 100),\n  yellow: hsvToRgb(60, 100, 100),\n  lime: hsvToRgb(80, 100, 100),\n  green: hsvToRgb(120, 80, 100),\n  sea: hsvToRgb(150, 100, 100),\n  cyan: hsvToRgb(180, 100, 85),\n  sky: hsvToRgb(210, 75, 95),\n  blue: hsvToRgb(240, 70, 100),\n  purple: hsvToRgb(275, 75, 100),\n  magenta: hsvToRgb(300, 95, 100),\n  hotpink: hsvToRgb(335, 100, 100),\n  pink: hsvToRgb(350, 55, 100),\n  peach: hsvToRgb(25, 75, 100),\n  lilac: hsvToRgb(275, 55, 100),\n  pinktint: hsvToRgb(340, 30, 100),\n  peachtint: hsvToRgb(25, 50, 100),\n  yellowtint: hsvToRgb(60, 50, 100),\n  greentint: hsvToRgb(135, 40, 100),\n  bluetint: hsvToRgb(220, 40, 100),\n  lilactint: hsvToRgb(275, 35, 100),\n  white: hsvToRgb(0, 0, 100),\n  gray: hsvToRgb(0, 0, 50),\n  brown: hsvToRgb(20, 45, 75),\n  deadwhite: [ 1, 1, 1 ],\n  deadblack: [ 0, 0, 0 ],\n  invisible: [ 0, 0, 0 ]\n}\n\nconst reWhitespaceComma = /[\\s,]+/\nconst reCurlyWhitespace = /[^{}\\s]*{[^{}]+}|[^{}\\s]+/g\nconst reTrimCurly = /^{+|}+$/g\nconst reTrimQuotes = /^['\"]+|['\"]+$/g\nconst reCollapseEqual = /\\s*=\\s*/g\n\nfunction parseListDef (line: string) {\n  let name\n  let defaultColor\n  let master = []\n  let width\n\n  line = line.replace(reCollapseEqual, '=')\n\n  const lm = line.match(reCurlyWhitespace) as RegExpMatchArray\n  for (let j = 1; j < lm.length; ++j) {\n    const e = lm[ j ]\n    if (e[ 0 ] === '{') {\n      name = e.substring(1, e.length - 1)\n    } else {\n      const es = e.split('=')\n      if (es.length === 2) {\n        if (es[ 0 ] === 'color') {\n          defaultColor = ColorDict[ es[ 1 ] ]\n        } else if (es[ 0 ] === 'width') {\n          width = parseInt(es[ 1 ])\n        } else if (es[ 0 ] === 'master') {\n          master.push(es[ 1 ].replace(reTrimCurly, ''))\n        }\n      }\n    }\n  }\n\n  return {\n    listName: name,\n    listColor: defaultColor,\n    listMasters: master,\n    listWidth: width\n  }\n}\n\nfunction parseListElm (line: string) {\n  line = line.trim()\n\n  const idx1 = line.indexOf('{')\n  const idx2 = line.indexOf('}')\n  const ls = line.substr(idx2 + 1).split(reWhitespaceComma)\n\n  const label = line.substr(idx1 + 1, idx2 - 1)\n  const position = [\n    parseFloat(ls[ ls.length - 3 ]),\n    parseFloat(ls[ ls.length - 2 ]),\n    parseFloat(ls[ ls.length - 1 ])\n  ]\n  let color, width, radius\n  let lineBreak = false\n  let triangleBreak = false\n  for (let lsindex = 4; lsindex <= ls.length; lsindex++) {\n    const literal = ls[ ls.length - lsindex ]\n    if (literal in ColorDict) {\n      color = ColorDict[ ls[ ls.length - lsindex ] ]\n    }\n    if (literal.startsWith('width')) {\n      width = parseInt(literal.substring(5))\n    }\n    if (literal.startsWith('r=')) {\n      radius = parseFloat(literal.split('=')[1])\n    }\n    if (literal.startsWith('P')) {\n      lineBreak = true\n    }\n    if (literal.startsWith('X')) {\n      triangleBreak = true\n    }\n  }\n  // const color = line[ idx2 + 1 ] === ' ' ? undefined : ColorDict[ ls[ 0 ] ]\n\n  return {\n    label: label,\n    position: position,\n    color: color,\n    radius: radius,\n    width: width,\n    isLineBreak: lineBreak,\n    isTriangleBreak: triangleBreak\n  }\n}\n\nfunction parseStr (line: string) {\n  const start = line.indexOf('{')\n  const end = line.indexOf('}')\n  return line.substring(\n    start !== -1 ? start + 1 : 0,\n    end !== -1 ? end : undefined\n  ).trim()\n}\n\nfunction parseFlag (line: string) {\n  const end = line.indexOf('}')\n  return end === -1 ? undefined : line.substr(end + 1).trim()\n}\n\nfunction parseGroup (line: string) {\n  let name:string = ''\n  let master:string[] = []\n  let flags: {[k: string]: string|boolean} = {}\n\n  line = line.replace(reCollapseEqual, '=')\n\n  const lm = line.match(reCurlyWhitespace)  as RegExpMatchArray\n  for (let j = 1; j < lm.length; ++j) {\n    const e = lm[ j ]\n    if (e[ 0 ] === '{') {\n      name = e.substring(1, e.length - 1)\n    } else {\n      const es = e.split('=')\n      if (es.length === 2) {\n        if (es[ 0 ] === 'master') {\n          master.push(es[ 1 ].replace(reTrimCurly, ''))\n        } else {\n          flags[ es[ 0 ] ] = es[ 1 ].replace(reTrimCurly, '')\n        }\n      } else {\n        flags[ es[ 0 ] ] = true\n      }\n    }\n  }\n\n  return { groupName: name,\n           groupFlags: flags,\n           groupMasters: master\n  }\n}\ninterface RibbonObject {\n  labelArray: string[],\n  positionArray: number[],\n  breakArray: boolean[],\n  colorArray: number[],\n  name?: string,\n  masterArray: any[]\n}\nfunction convertKinTriangleArrays (ribbonObject: RibbonObject) {\n  // have to convert ribbons/triangle lists from stripdrawmode to normal drawmode\n  // index                    [ 0 1 2 3 4 5 6 7 8 91011 ]\n  // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\n  // convertedindex                                      [ 0 1 2 3 4 5 6 7 8 91011121314151617181920212223242526 ]\n  // index          [ 0 1 2 3 4 5 6 7 8 91011121314 ]    [ 0 1 2 3 4 5 6 7 8 3 4 5 6 7 8 91011 6 7 8 91011121314 ]\n  // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\n  let { labelArray, positionArray, colorArray, breakArray } = ribbonObject\n  let convertedLabels = []\n  for (let i = 0; i < (labelArray.length - 2) * 3; ++i) {\n    convertedLabels[i] = labelArray[i - Math.floor(i / 3) * 2]\n  }\n  let convertedBreaks = []\n  for (let i = 0; i < (breakArray.length - 2) * 3; ++i) {\n    convertedBreaks[i] = breakArray[i - Math.floor(i / 3) * 2]\n  }\n  let convertedPositions = []\n  for (let i = 0; i < (positionArray.length / 3 - 2) * 9; ++i) {\n    convertedPositions[i] = positionArray[i - Math.floor(i / 9) * 6]\n  }\n  let convertedColors = []\n  for (let i = 0; i < (colorArray.length / 3 - 2) * 9; ++i) {\n    convertedColors[i] = colorArray[i - Math.floor(i / 9) * 6]\n  }\n  let vector3Positions = []\n  for (let i = 0; i < (convertedPositions.length) / 3; ++i) {\n    vector3Positions.push(new Vector3(convertedPositions[i * 3], convertedPositions[i * 3] + 1, convertedPositions[i * 3] + 2))\n  }\n  //let normals = []\n  //for (let i = 0; i < vector3Positions.length - 1; ++i) {\n  //  let normalVec3 = vector3Positions[i].cross(vector3Positions[i + 1])\n  //  normals.push(normalVec3.x)\n  //  normals.push(normalVec3.y)\n  //  normals.push(normalVec3.z)\n  //}\n  return {\n    name: ribbonObject.name,\n    masterArray: ribbonObject.masterArray,\n    labelArray: convertedLabels,\n    positionArray: convertedPositions,\n    breakArray: convertedBreaks,\n    colorArray: convertedColors\n  }\n}\n\nfunction removePointBreaksTriangleArrays (convertedRibbonObject: RibbonObject) {\n  // after converting ribbon/triangle arrys to drawmode, removed point break triangles\n  // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\n  // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\n  let { labelArray, positionArray, colorArray, breakArray } = convertedRibbonObject\n  let editedLabels = []\n  let editedPositions = []\n  let editedColors = []\n  let editedBreaks = []\n  for (let i = 0; i < breakArray.length / 3; i++) {\n    let breakPointer = i * 3\n    let positionPointer = i * 9\n    if (!breakArray[breakPointer+1]&&!breakArray[breakPointer+2]) {\n      editedLabels.push(labelArray[breakPointer])\n      editedLabels.push(labelArray[breakPointer+1])\n      editedLabels.push(labelArray[breakPointer+2])\n      editedBreaks.push(breakArray[breakPointer])\n      editedBreaks.push(breakArray[breakPointer+1])\n      editedBreaks.push(breakArray[breakPointer+2])\n      editedPositions.push(positionArray[positionPointer])\n      editedPositions.push(positionArray[positionPointer+1])\n      editedPositions.push(positionArray[positionPointer+2])\n      editedPositions.push(positionArray[positionPointer+3])\n      editedPositions.push(positionArray[positionPointer+4])\n      editedPositions.push(positionArray[positionPointer+5])\n      editedPositions.push(positionArray[positionPointer+6])\n      editedPositions.push(positionArray[positionPointer+7])\n      editedPositions.push(positionArray[positionPointer+8])\n      editedColors.push(colorArray[positionPointer])\n      editedColors.push(colorArray[positionPointer+1])\n      editedColors.push(colorArray[positionPointer+2])\n      editedColors.push(colorArray[positionPointer+3])\n      editedColors.push(colorArray[positionPointer+4])\n      editedColors.push(colorArray[positionPointer+5])\n      editedColors.push(colorArray[positionPointer+6])\n      editedColors.push(colorArray[positionPointer+7])\n      editedColors.push(colorArray[positionPointer+8])\n    } else {\n      //console.log('X triangle break found')\n      //console.log('skipping: '+positionArray[positionPointer]+','+positionArray[positionPointer+1]+','+positionArray[positionPointer+2]+','\n      //                        +positionArray[positionPointer+3]+','+positionArray[positionPointer+4]+','+positionArray[positionPointer+5]+','\n      //                        +positionArray[positionPointer+6]+','+positionArray[positionPointer+7]+','+positionArray[positionPointer+8])\n    }\n  }\n  return {\n    name: convertedRibbonObject.name,\n    masterArray: convertedRibbonObject.masterArray,\n    labelArray: editedLabels,\n    positionArray: editedPositions,\n    breakArray: editedBreaks,\n    colorArray: editedColors\n  }\n}\n\ninterface Kinemage {\n  kinemage?: number,\n  onewidth?: any,\n  '1viewid'?: string,\n  pdbfile?: string,\n  text: string,\n  texts: string[],\n  captions: string[],\n  caption: string,\n  groupDict: {[k:string]: {[k:string]: boolean}},\n  subgroupDict: {[k: string]: any},\n  masterDict: {[k:string]: {indent: boolean, visible: boolean}},\n  pointmasterDict: {[k: string]: any},\n  dotLists: DotList[],\n  vectorLists: VectorList[],\n  ballLists: any[],\n  ribbonLists: RibbonObject[]\n}\n\ninterface DotList {\n  name?: string,\n  masterArray: any[],\n  labelArray: any[],\n  positionArray: any[],\n  colorArray: any[]\n}\n\ninterface VectorList {\n  name?: string,\n  masterArray: any[],\n  label1Array: string[],\n  label2Array: string[],\n  position1Array: number[],\n  position2Array: number[],\n  color1Array: number[],\n  color2Array: number[],\n  width: number[]\n}\n\nclass KinParser extends Parser {\n  kinemage: Kinemage\n  get type () { return 'kin' }\n  get __objName () { return 'kinemage' }\n\n  _parse () {\n    // http://kinemage.biochem.duke.edu/software/king.php\n\n    if (Debug) Log.time(`KinParser._parse ${this.name}`)\n\n    const kinemage: Kinemage = {\n      kinemage: undefined,\n      onewidth: undefined,\n      '1viewid': undefined,\n      pdbfile: undefined,\n      texts: [],\n      text: '',\n      captions: [],\n      caption: '',\n      groupDict: {},\n      subgroupDict: {},\n      masterDict: {},\n      pointmasterDict: {},\n      dotLists: [],\n      vectorLists: [],\n      ballLists: [],\n      ribbonLists: []\n    }\n    this.kinemage = kinemage\n\n    let currentGroupMasters: string[]\n    let currentSubgroupMasters: string[]\n\n    let isDotList = false\n    let prevDotLabel = ''\n    let dotDefaultColor: number[]\n    let dotLabel: string[], dotPosition: number[], dotColor: number[]\n\n    let isVectorList = false\n    let prevVecLabel = ''\n    let prevVecPosition: number[]|null = null\n    let prevVecColor: number[]|null = null\n    let vecDefaultColor: number[], vecDefaultWidth: number[]\n    let vecLabel1: string[], vecLabel2: string[], vecPosition1: number[], vecPosition2: number[], vecColor1: number[], vecColor2: number[]\n\n    let isBallList = false\n    let prevBallLabel = ''\n    let ballRadius: number[], ballDefaultColor: number[]\n    let ballLabel: string[], ballPosition: number[], ballColor: number[]\n\n    let isRibbonList = false\n    let prevRibbonPointLabel = ''\n\n    let ribbonListDefaultColor: number[]\n    let ribbonPointLabelArray: string[], ribbonPointPositionArray: number[], ribbonPointBreakArray: boolean[], ribbonPointColorArray: number[]\n\n    let isText = false\n    let isCaption = false\n\n    // @vectorlist {mc} color= white  master= {mainchain}\n    // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\n\n    // @dotlist {x} color=white master={vdw contact} master={dots}\n    // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\n\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\n      for (let i = _i; i < _n; ++i) {\n        const line = lines[ i ]\n\n        if (line[ 0 ] === '@') {\n          isDotList = false\n          isVectorList = false\n          isBallList = false\n          isRibbonList = false\n          isText = false\n          isCaption = false\n        }\n\n        if (!line) {\n          isDotList = false\n          isVectorList = false\n          isBallList = false\n          isRibbonList = false\n        } else if (line.startsWith('@dotlist')) {\n          // @dotlist {x} color=white master={vdw contact} master={dots}\n\n          let { listColor, listName, listMasters } = parseListDef(line)\n\n          isDotList = true\n          prevDotLabel = ''\n          dotLabel = []\n          dotPosition = []\n          dotColor = []\n          dotDefaultColor = listColor as number[]\n\n          if (currentGroupMasters) {\n            listMasters = listMasters.concat(currentGroupMasters)\n          }\n          if (currentSubgroupMasters) {\n            listMasters = listMasters.concat(currentSubgroupMasters)\n          }\n\n          kinemage.dotLists.push({\n            name: listName,\n            masterArray: listMasters,\n            labelArray: dotLabel,\n            positionArray: dotPosition,\n            colorArray: dotColor\n          })\n        } else if (line.startsWith('@vectorlist')) {\n          // @vectorlist {x} color=white master={small overlap} master={dots}\n\n          let { listMasters, listName, listWidth, listColor } = parseListDef(line)\n\n          if (listMasters) {\n            listMasters.forEach(function (name: string) {\n              if (!kinemage.masterDict[ name ]) {\n                kinemage.masterDict[ name ] = {\n                  indent: false,\n                  visible: false\n                }\n              }\n            })\n          }\n\n          isVectorList = true\n          prevVecLabel = ''\n          prevVecPosition = null\n          prevVecColor = null\n          vecLabel1 = []\n          vecLabel2 = []\n          vecPosition1 = []\n          vecPosition2 = []\n          vecColor1 = []\n          vecColor2 = []\n          vecDefaultColor = listColor as number[]\n          vecDefaultWidth = []\n          if (listWidth) {\n            vecDefaultWidth.push(listWidth)\n          }\n\n          if (currentGroupMasters) {\n            listMasters = listMasters.concat(currentGroupMasters)\n          }\n          if (currentSubgroupMasters) {\n            listMasters = listMasters.concat(currentSubgroupMasters)\n          }\n\n          kinemage.vectorLists.push({\n            name: listName,\n            masterArray: listMasters,\n            label1Array: vecLabel1,\n            label2Array: vecLabel2,\n            position1Array: vecPosition1,\n            position2Array: vecPosition2,\n            color1Array: vecColor1,\n            color2Array: vecColor2,\n            width: vecDefaultWidth\n          })\n        } else if (line.startsWith('@balllist')) {\n          let { listName, listColor, listMasters } = parseListDef(line)\n\n          if (listMasters) {\n            listMasters.forEach(function (name: string) {\n              if (!kinemage.masterDict[ name ]) {\n                kinemage.masterDict[ name ] = {\n                  indent: false,\n                  visible: false\n                }\n              }\n            })\n          }\n\n          isBallList = true\n\n          prevBallLabel = ''\n          ballLabel = []\n          ballRadius = []\n          ballPosition = []\n          ballColor = []\n          ballDefaultColor = listColor as number[]\n\n          if (currentGroupMasters) {\n            listMasters = listMasters.concat(currentGroupMasters)\n          }\n          if (currentSubgroupMasters) {\n            listMasters = listMasters.concat(currentSubgroupMasters)\n          }\n\n          kinemage.ballLists.push({\n            name: listName,\n            masterArray: listMasters,\n            labelArray: ballLabel,\n            radiusArray: ballRadius,\n            positionArray: ballPosition,\n            colorArray: ballColor\n          })\n        } else if (line.startsWith('@ribbonlist')||line.startsWith('@trianglelist')) {\n          let { listMasters, listName, listColor } = parseListDef(line)\n\n          if (listMasters) {\n            listMasters.forEach(function (name: string) {\n              if (!kinemage.masterDict[ name ]) {\n                kinemage.masterDict[ name ] = {\n                  indent: false,\n                  visible: false\n                }\n              }\n            })\n          }\n          isRibbonList = true\n          prevRibbonPointLabel = ''\n          ribbonPointLabelArray = []\n          ribbonPointPositionArray = []\n          ribbonPointBreakArray = []\n          ribbonPointColorArray = []\n          ribbonListDefaultColor = listColor as number[]\n\n          if (currentGroupMasters) {\n            listMasters = listMasters.concat(currentGroupMasters)\n          }\n          if (currentSubgroupMasters) {\n            listMasters = listMasters.concat(currentSubgroupMasters)\n          }\n\n          kinemage.ribbonLists.push({\n            name: listName,\n            masterArray: listMasters,\n            labelArray: ribbonPointLabelArray,\n            positionArray: ribbonPointPositionArray,\n            breakArray: ribbonPointBreakArray,\n            colorArray: ribbonPointColorArray\n          })\n        } else if (line.startsWith('@text')) {\n          isText = true\n          kinemage.texts.push(line.substr(5))\n        } else if (line.startsWith('@caption')) {\n          isCaption = true\n          kinemage.captions.push(line.substr(8))\n        } else if (isDotList) {\n          // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\n\n          let { label, color, position } = parseListElm(line)\n\n          if (label === '\"') {\n            label = prevDotLabel\n          } else {\n            prevDotLabel = label\n          }\n\n          if (color === undefined) {\n            color = dotDefaultColor\n          }\n\n          dotLabel.push(label)\n          dotPosition.push(...position)\n          dotColor.push(...color)\n        } else if (isVectorList) {\n          // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\n\n          let doubleLine = line.replace(/(?!^){/g, '\\n{')\n          let splitLine = doubleLine.split(/\\n/)\n\n          for (var i2 = 0; i2 < splitLine.length; i2++) {\n            let singlePointLine = splitLine[i2]\n            let { label, color, width, position, isLineBreak } = parseListElm(singlePointLine)\n\n            if (label === '\"') {\n              label = prevVecLabel\n            } else {\n              prevVecLabel = label\n            }\n\n            if (color === undefined) {\n              color = vecDefaultColor\n            }\n\n            if (!isLineBreak) {\n              if (prevVecPosition !== null) {\n                if (width) {\n                  vecDefaultWidth.push(width)\n                }\n\n                vecLabel1.push(prevVecLabel)\n                vecPosition1.push(...prevVecPosition)\n                vecColor1.push(...prevVecColor as number[])\n\n                vecLabel2.push(label)\n                vecPosition2.push(...position)\n                vecColor2.push(...color)\n\n              }\n            }\n\n            prevVecLabel = label\n            prevVecPosition = position\n            prevVecColor = color\n          }\n        } else if (isBallList) {\n          // {cb arg A   1   1.431 -106.80} r=1.431  39.085, 8.083, 22.182\n\n          let { label, radius, color, position } = parseListElm(line)\n\n          if (label === '\"') {\n            label = prevBallLabel\n          } else {\n            prevBallLabel = label\n          }\n\n          if (radius === undefined) {\n            radius = 1 // temporary default radius\n          }\n\n          if (color === undefined) {\n            color = ballDefaultColor\n          }\n\n          ballLabel.push(label)\n          ballRadius.push(radius)\n          ballPosition.push(...position)\n          ballColor.push(...color)\n        } else if (isRibbonList) {\n          let { label, color, position, isTriangleBreak } = parseListElm(line)\n\n          if (label === '\"') {\n            label = prevRibbonPointLabel\n          } else {\n            prevRibbonPointLabel = label\n          }\n\n          if (color === undefined) {\n            color = ribbonListDefaultColor\n          }\n\n          ribbonPointLabelArray.push(label)\n          ribbonPointPositionArray.push(...position)\n          ribbonPointBreakArray.push(isTriangleBreak)\n          ribbonPointColorArray.push(...color)\n        } else if (isText) {\n          kinemage.texts.push(line)\n        } else if (isCaption) {\n          kinemage.captions.push(line)\n        } else if (line.startsWith('@kinemage')) {\n          kinemage.kinemage = parseInt(line.substr(9).trim())\n        } else if (line.startsWith('@onewidth')) {\n          kinemage.onewidth = true\n        } else if (line.startsWith('@1viewid')) {\n          kinemage[ '1viewid' ] = parseStr(line)\n        } else if (line.startsWith('@pdbfile')) {\n          kinemage.pdbfile = parseStr(line)\n        } else if (line.startsWith('@group')) {\n          let { groupName, groupFlags, groupMasters } = parseGroup(line)\n          if (!kinemage.groupDict[ groupName as string ]) {\n            kinemage.groupDict[ groupName as string ] = {\n              dominant: false,\n              animate: false\n            }\n            currentGroupMasters = groupMasters\n          }\n\n          if (currentGroupMasters) {\n            currentGroupMasters.forEach(function (master) {\n              if (!kinemage.masterDict[ master ]) {\n                kinemage.masterDict[ master ] = {\n                  indent: false,\n                  visible: false\n                }\n              }\n            })\n          }\n\n          for (let key in groupFlags as {[k: string]: boolean}) {\n            kinemage.groupDict[ groupName as string ][ key ] = (groupFlags as {[k: string]: boolean})[ key ]\n          }\n        } else if (line.startsWith('@subgroup')) {\n          const { groupName, groupFlags, groupMasters } = parseGroup(line)\n\n          if (!kinemage.subgroupDict[ groupName as string ]) {\n            kinemage.subgroupDict[ groupName as string ] = {\n              dominant: false,\n              animate: false\n            }\n            currentSubgroupMasters = groupMasters\n          }\n\n          if (currentSubgroupMasters) {\n            currentSubgroupMasters.forEach(function (master) {\n              if (!kinemage.masterDict[ master ]) {\n                kinemage.masterDict[ master ] = {\n                  indent: false,\n                  visible: false\n                }\n              }\n            })\n          }\n\n          for (let key in groupFlags as {[k: string]: boolean}) {\n            kinemage.subgroupDict[ groupName as string ][ key ] = (groupFlags as {[k: string]: boolean})[ key ]\n          }\n        } else if (line.startsWith('@master')) {\n          const name = parseStr(line)\n          const flag = parseFlag(line)\n\n          if (!kinemage.masterDict[ name ]) {\n            kinemage.masterDict[ name ] = {\n              indent: false,\n              visible: false\n            }\n          }\n\n          if (flag === 'on') {\n            kinemage.masterDict[ name ].visible = true\n          } else if (flag === 'off') {\n            kinemage.masterDict[ name ].visible = false\n          } else if (flag === 'indent') {\n            kinemage.masterDict[ name ].indent = true\n          } else if (!flag) {\n            // nothing to do\n          }\n        } else if (line.startsWith('@pointmaster')) {\n          const { groupName, groupFlags } = parseGroup(line)\n\n          kinemage.pointmasterDict[ groupName as string] = {\n            id: Object.keys(groupFlags as {[k: string]: boolean})[ 0 ].replace(reTrimQuotes, '')\n          }\n        } else {\n          console.log(line)\n        }\n      }\n    }\n\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\n      _parseChunkOfLines(0, lines.length, lines)\n    })\n\n    kinemage.text = kinemage.texts.join('\\n').trim()\n    kinemage.caption = kinemage.captions.join('\\n').trim()\n    if (kinemage.ribbonLists) {\n      let convertedLists: RibbonObject[] = []\n      kinemage.ribbonLists.forEach(function (listObject) {\n        convertedLists.push(removePointBreaksTriangleArrays(convertKinTriangleArrays(listObject)))\n      })\n      kinemage.ribbonLists = convertedLists\n    }\n\n    if (Debug) Log.timeEnd(`KinParser._parse ${this.name}`)\n  }\n}\n\nParserRegistry.add('kin', KinParser)\n\nexport default KinParser\n","/**\n * @file Surface Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport Parser, { ParserParameters } from './parser'\nimport Surface from '../surface/surface'\nimport Streamer from '../streamer/streamer';\n\nclass SurfaceParser extends Parser {\n  constructor (streamer: Streamer, params?:Partial<ParserParameters>) {\n    super(streamer, params)\n\n    this.loader = this.getLoader()\n    this.surface = new Surface(this.name, this.path)\n  }\n\n  get type () { return 'surface' }\n  get __objName () { return 'surface' }\n\n  _parse () {\n    var geometry = this.loader.parse(this.streamer.asText())\n\n    this.surface.fromGeometry(geometry)\n  }\n}\n\nexport default SurfaceParser\n","/**\n * @file Obj Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { BufferGeometry, BufferAttribute } from 'three'\n\nimport { ParserRegistry } from '../globals'\nimport SurfaceParser from './surface-parser'\n\nexport interface _OBJLoader {\n  regexp: {[k: string]: RegExp}\n}\n\ninterface _OBJLoaderConstructor {\n  (this: _OBJLoader): void\n  new(): _OBJLoader\n}\n\ninterface ObjectType {\n  name: string,\n  fromDeclaration: boolean,\n  geometry: {\n    vertices: number[],\n    normals: number[],\n    type?: string\n  }\n}\n/**\n * OBJLoader\n * @class\n * @private\n * @author mrdoob / http://mrdoob.com/\n */\nconst OBJLoader = (function OBJLoader (this: _OBJLoader) {\n  this.regexp = {\n    // v float float float\n    vertex_pattern: /^v\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\n    // vn float float float\n    normal_pattern: /^vn\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\n    // vt float float\n    uv_pattern: /^vt\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\n    // f vertex vertex vertex\n    face_vertex: /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,\n    // f vertex/uv vertex/uv vertex/uv\n    face_vertex_uv: /^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\n    face_vertex_uv_normal: /^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,\n    // f vertex//normal vertex//normal vertex//normal\n    face_vertex_normal: /^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,\n    // o object_name | g group_name\n    object_pattern: /^[og]\\s*(.+)?/,\n    // s boolean\n    smoothing_pattern: /^s\\s+(\\d+|on|off)/,\n    // mtllib file_reference\n    material_library_pattern: /^mtllib /,\n    // usemtl material_name\n    material_use_pattern: /^usemtl /\n  }\n}) as _OBJLoaderConstructor\n\nOBJLoader.prototype = {\n\n  constructor: OBJLoader,\n\n  setPath: function (value: string) {\n    this.path = value\n  },\n\n  _createParserState: function () {\n    var state = {\n      objects: [] as ObjectType[],\n      object: {} as ObjectType,\n\n      vertices: [],\n      normals: [],\n\n      startObject: function (name: string, fromDeclaration: boolean) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name\n          this.object.fromDeclaration = (fromDeclaration !== false)\n          return\n        }\n\n        this.object = {\n          name: name || '',\n          geometry: {\n            vertices: [],\n            normals: []\n          },\n          fromDeclaration: (fromDeclaration !== false)\n        }\n\n        this.objects.push(this.object)\n      },\n\n      parseVertexIndex: function (value: string, len: number) {\n        var index = parseInt(value, 10)\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\n      },\n\n      parseNormalIndex: function (value: string, len: number) {\n        var index = parseInt(value, 10)\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\n      },\n\n      addVertex: function (a: number, b: number, c: number) {\n        var src = this.vertices\n        var dst = this.object.geometry.vertices\n\n        dst.push(src[ a + 0 ])\n        dst.push(src[ a + 1 ])\n        dst.push(src[ a + 2 ])\n        dst.push(src[ b + 0 ])\n        dst.push(src[ b + 1 ])\n        dst.push(src[ b + 2 ])\n        dst.push(src[ c + 0 ])\n        dst.push(src[ c + 1 ])\n        dst.push(src[ c + 2 ])\n      },\n\n      addVertexLine: function (a: number) {\n        var src = this.vertices\n        var dst = this.object.geometry.vertices\n\n        dst.push(src[ a + 0 ])\n        dst.push(src[ a + 1 ])\n        dst.push(src[ a + 2 ])\n      },\n\n      addNormal: function (a: number, b: number, c: number) {\n        var src = this.normals\n        var dst = this.object.geometry.normals\n\n        dst.push(src[ a + 0 ])\n        dst.push(src[ a + 1 ])\n        dst.push(src[ a + 2 ])\n        dst.push(src[ b + 0 ])\n        dst.push(src[ b + 1 ])\n        dst.push(src[ b + 2 ])\n        dst.push(src[ c + 0 ])\n        dst.push(src[ c + 1 ])\n        dst.push(src[ c + 2 ])\n      },\n\n      addFace: function (a: string, b: string, c: string, d?: string, na?: string, nb?: string, nc?: string, nd?: string) {\n        var vLen = this.vertices.length\n\n        var ia = this.parseVertexIndex(a, vLen)\n        var ib = this.parseVertexIndex(b, vLen)\n        var ic = this.parseVertexIndex(c, vLen)\n        var id\n\n        if (d === undefined) {\n          this.addVertex(ia, ib, ic)\n        } else {\n          id = this.parseVertexIndex(d, vLen)\n\n          this.addVertex(ia, ib, id)\n          this.addVertex(ib, ic, id)\n        }\n\n        if (na !== undefined) {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length\n          ia = this.parseNormalIndex(na, nLen)\n\n          ib = na === nb ? ia : this.parseNormalIndex(nb!, nLen)\n          ic = na === nc ? ia : this.parseNormalIndex(nc!, nLen)\n\n          if (d === undefined) {\n            this.addNormal(ia, ib, ic)\n          } else {\n            id = this.parseNormalIndex(nd!, nLen)\n\n            this.addNormal(ia, ib, id)\n            this.addNormal(ib, ic, id)\n          }\n        }\n      },\n\n      addLineGeometry: function (vertices: string[]) {\n        this.object.geometry.type = 'Line'\n\n        var vLen = this.vertices.length\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[ vi ], vLen))\n        }\n      }\n\n    }\n\n    state.startObject('', false)\n\n    return state\n  },\n\n  parse: function (text: string) {\n    var state = this._createParserState()\n\n    if (text.indexOf('\\r\\n') !== -1) {\n      // This is faster than String.split with regex that splits on both\n      text = text.replace(/\\r\\n/g, '\\n')\n    }\n\n    if (text.indexOf('\\\\\\n') !== -1) {\n      // join lines separated by a line continuation character (\\)\n      text = text.replace(/\\\\\\n/g, '')\n    }\n\n    var i, l\n    var lines = text.split('\\n')\n    var line = ''\n    var lineFirstChar = ''\n    var lineSecondChar = ''\n    var lineLength = 0\n    var result = []\n\n    // Faster to just trim left side of the line. Use if available.\n    var trimLeft = (typeof ''.trimLeft === 'function')\n\n    for (i = 0, l = lines.length; i < l; i++) {\n      line = lines[ i ]\n\n      line = trimLeft ? line.trimLeft() : line.trim()\n\n      lineLength = line.length\n\n      if (lineLength === 0) continue\n\n      lineFirstChar = line.charAt(0)\n\n      // @todo invoke passed in handler if any\n      if (lineFirstChar === '#') continue\n\n      if (lineFirstChar === 'v') {\n        lineSecondChar = line.charAt(1)\n\n        if (lineSecondChar === ' ' && (result = this.regexp.vertex_pattern.exec(line)) !== null) {\n          // 0                  1      2      3\n          // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n          state.vertices.push(\n            parseFloat(result[ 1 ]),\n            parseFloat(result[ 2 ]),\n            parseFloat(result[ 3 ])\n          )\n        } else if (lineSecondChar === 'n' && (result = this.regexp.normal_pattern.exec(line)) !== null) {\n          // 0                   1      2      3\n          // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n          state.normals.push(\n            parseFloat(result[ 1 ]),\n            parseFloat(result[ 2 ]),\n            parseFloat(result[ 3 ])\n          )\n        } else if (lineSecondChar === 't' && this.regexp.uv_pattern.exec(line) !== null) {\n\n          // ignore uv line\n\n        } else {\n          throw new Error(\"Unexpected vertex/normal/uv line: '\" + line + \"'\")\n        }\n      } else if (lineFirstChar === 'f') {\n        if ((result = this.regexp.face_vertex_uv_normal.exec(line)) !== null) {\n          // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\n          // 0                        1    2    3    4    5    6    7    8    9   10         11         12\n          // [\"f 1/1/1 2/2/2 3/3/3\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\", undefined, undefined, undefined]\n\n          state.addFace(\n            result[ 1 ], result[ 4 ], result[ 7 ], result[ 10 ],\n            // result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],  // ignore uv part\n            result[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\n          )\n        } else if (this.regexp.face_vertex_uv.exec(line) !== null) {\n\n          // ignore uv line\n\n        } else if ((result = this.regexp.face_vertex_normal.exec(line)) !== null) {\n          // f vertex//normal vertex//normal vertex//normal\n          // 0                     1    2    3    4    5    6   7          8\n          // [\"f 1//1 2//2 3//3\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", undefined, undefined]\n\n          state.addFace(\n            result[ 1 ], result[ 3 ], result[ 5 ], result[ 7 ],\n            result[ 2 ], result[ 4 ], result[ 6 ], result[ 8 ]\n          )\n        } else if ((result = this.regexp.face_vertex.exec(line)) !== null) {\n          // f vertex vertex vertex\n          // 0            1    2    3   4\n          // [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\n\n          state.addFace(\n            result[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ]\n          )\n        } else {\n          throw new Error(\"Unexpected face line: '\" + line + \"'\")\n        }\n      } else if (lineFirstChar === 'l') {\n        var lineParts = line.substring(1).trim().split(' ')\n        var lineVertices = []\n        var lineUVs = []\n\n        if (line.indexOf('/') === -1) {\n          lineVertices = lineParts\n        } else {\n          for (var li = 0, llen = lineParts.length; li < llen; li++) {\n            var parts = lineParts[ li ].split('/')\n\n            if (parts[ 0 ] !== '') lineVertices.push(parts[ 0 ])\n            if (parts[ 1 ] !== '') lineUVs.push(parts[ 1 ])\n          }\n        }\n        state.addLineGeometry(lineVertices, lineUVs)\n      } else if ((result = this.regexp.object_pattern.exec(line)) !== null) {\n        // o object_name\n        // or\n        // g group_name\n\n        var name = result[ 0 ].substr(1).trim()\n        state.startObject(name)\n\n        // ignore material related lines\n        // eslint-disable-next-line no-empty\n      } else if (this.regexp.material_use_pattern.test(line)) {\n        // eslint-disable-next-line no-empty\n      } else if (this.regexp.material_library_pattern.test(line)) {\n        // eslint-disable-next-line no-empty\n      } else if (this.regexp.smoothing_pattern.exec(line) !== null) {\n      } else {\n        // Handle null terminated files without exception\n        if (line === '\\0') continue\n\n        throw new Error(\"Unexpected line: '\" + line + \"'\")\n      }\n    }\n\n    var container = []\n\n    for (i = 0, l = state.objects.length; i < l; i++) {\n      var object = state.objects[ i ]\n      var geometry = object.geometry\n\n      // Skip o/g line declarations that did not follow with any faces\n      if (geometry.vertices.length === 0) continue\n\n      var buffergeometry = new BufferGeometry()\n\n      buffergeometry.setAttribute('position', new BufferAttribute(new Float32Array(geometry.vertices), 3))\n\n      if (geometry.normals.length > 0) {\n        buffergeometry.setAttribute('normal', new BufferAttribute(new Float32Array(geometry.normals), 3))\n      } else {\n        buffergeometry.computeVertexNormals()\n      }\n\n      container.push(buffergeometry)\n    }\n\n    return container\n  }\n\n}\n\nclass ObjParser extends SurfaceParser {\n  get type () { return 'obj' }\n\n  getLoader () {\n    return new OBJLoader()\n  }\n}\n\nParserRegistry.add('obj', ObjParser)\n\nexport default ObjParser\n","/**\n * @file Ply Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Geometry, Vector3, Face3, Color } from 'three'\n\nimport { ParserRegistry } from '../globals'\nimport SurfaceParser from './surface-parser'\n\n/**\n * PLYLoader\n * @class\n * @private\n * @author Wei Meng / http://about.me/menway\n *\n * @description\n * A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * @example\n * var loader = new THREE.PLYLoader();\n * loader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *     scene.add( new THREE.Mesh( geometry ) );\n * } );\n *\n * // If the PLY file uses non standard property names, they can be mapped while\n * // loading. For example, the following maps the properties\n * // “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *     diffuse_red: 'red',\n *     diffuse_green: 'green',\n *     diffuse_blue: 'blue'\n * } );\n *\n */\n\nexport interface _PLYLoader {\n  propertyNameMapping: {[k: string]: string}\n}\n\ninterface _PLYLoaderConstructor {\n  (this: _PLYLoader): void\n  new(): _PLYLoader\n}\n\ninterface PLYProperty {\n  type: string,\n  name: string,\n  countType: string,\n  itemType: string\n}\n\ninterface PLYElement {\n  name: string,\n  count: number,\n  properties: PLYProperty[],\n  x: number,\n  y: number,\n  z: number,\n  red: number,\n  green: number,\n  blue: number,\n  [k:string]: any\n}\n\ninterface PLYHeader {\n  format: string,\n  version: string,\n  comments: string[],\n  elements: PLYElement[],\n  headerLength: number\n}\n\ninterface GeometryPLY extends Geometry {\n  useColor: boolean\n}\n\nconst PLYLoader = (function PLYLoader (this: _PLYLoader) {\n  this.propertyNameMapping = {}\n}) as _PLYLoaderConstructor\n\nPLYLoader.prototype = {\n\n  constructor: PLYLoader,\n\n  setPropertyNameMapping: function (mapping: {[k: string]: string}) {\n    this.propertyNameMapping = mapping\n  },\n\n  bin2str: function (buf: ArrayBuffer) {\n    var arrayBuffer = new Uint8Array(buf)\n    var str = ''\n    for (var i = 0; i < buf.byteLength; i++) {\n      str += String.fromCharCode(arrayBuffer[ i ]) // implicitly assumes little-endian\n    }\n\n    return str\n  },\n\n  isASCII: function (data: ArrayBuffer) {\n    var header = this.parseHeader(this.bin2str(data))\n\n    return header.format === 'ascii'\n  },\n\n  parse: function (data: string|ArrayBuffer) {\n    if (data instanceof ArrayBuffer) {\n      return (\n        this.isASCII(data)\n          ? this.parseASCII(this.bin2str(data))\n          : this.parseBinary(data)\n      )\n    } else {\n      return this.parseASCII(data)\n    }\n  },\n\n  parseHeader: function (data: string) {\n    var patternHeader = /ply([\\s\\S]*)end_header\\s/\n    var headerText = ''\n    var headerLength = 0\n    var result = patternHeader.exec(data)\n    if (result !== null) {\n      headerText = result[ 1 ]\n      headerLength = result[ 0 ].length\n    }\n\n    var header: Partial<PLYHeader> = {\n      comments: [],\n      elements: [],\n      headerLength: headerLength\n    }\n\n    var lines = headerText.split('\\n')\n    var currentElement: PLYElement|undefined, lineType, lineValues\n\n    function makePlyElementProperty (propertValues: string[], propertyNameMapping: {[k: string]: string}) {\n      var property = {\n        type: propertValues[ 0 ]\n      } as PLYProperty\n\n      if (property.type === 'list') {\n        property.name = propertValues[ 3 ]\n        property.countType = propertValues[ 1 ]\n        property.itemType = propertValues[ 2 ]\n      } else {\n        property.name = propertValues[ 1 ]\n      }\n\n      if (property.name in propertyNameMapping) {\n        property.name = propertyNameMapping[ property.name ]\n      }\n\n      return property\n    }\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[ i ]\n      line = line.trim()\n      if (line === '') {\n        continue\n      }\n      lineValues = line.split(/\\s+/)\n      lineType = lineValues.shift()\n      line = lineValues.join(' ')\n\n      switch (lineType) {\n        case 'format':\n\n          header.format = lineValues[ 0 ]\n          header.version = lineValues[ 1 ]\n\n          break\n\n        case 'comment':\n\n          header.comments!.push(line)\n\n          break\n\n        case 'element':\n\n          if (currentElement !== undefined) {\n            header.elements!.push(currentElement as PLYElement)\n          }\n\n          currentElement = {} as PLYElement\n          currentElement.name = lineValues[ 0 ]\n          currentElement.count = parseInt(lineValues[ 1 ])\n          currentElement.properties = []\n\n          break\n\n        case 'property':\n\n          currentElement!.properties.push(makePlyElementProperty(lineValues, this.propertyNameMapping))\n\n          break\n\n        default:\n\n          console.log('unhandled', lineType, lineValues)\n      }\n    }\n\n    if (currentElement !== undefined) {\n      header.elements!.push(currentElement)\n    }\n\n    return header\n  },\n\n  parseASCIINumber: function (n: string, type: string) {\n    switch (type) {\n      case 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n      case 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n        return parseInt(n)\n\n      case 'float': case 'double': case 'float32': case 'float64':\n\n        return parseFloat(n)\n    }\n  },\n\n  parseASCIIElement: function (properties: PLYProperty[], line: string) {\n    var values = line.split(/\\s+/)\n\n    var element = {} as PLYElement\n\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[ i ].type === 'list') {\n        var list = []\n        var n = this.parseASCIINumber(values.shift(), properties[ i ].countType)\n\n        for (var j = 0; j < n; j++) {\n          list.push(this.parseASCIINumber(values.shift(), properties[ i ].itemType))\n        }\n\n        element[ properties[ i ].name ] = list\n      } else {\n        element[ properties[ i ].name ] = this.parseASCIINumber(values.shift(), properties[ i ].type)\n      }\n    }\n\n    return element\n  },\n\n  parseASCII: function (data: string) {\n    // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n    var geometry = new Geometry() as GeometryPLY\n\n    var result\n\n    var header = this.parseHeader(data)\n\n    var patternBody = /end_header\\s([\\s\\S]*)$/\n    var body = ''\n    if ((result = patternBody.exec(data)) !== null) {\n      body = result[ 1 ]\n    }\n\n    var lines = body.split('\\n')\n    var currentElement = 0\n    var currentElementCount = 0\n    geometry.useColor = false\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[ i ]\n      line = line.trim()\n      if (line === '') {\n        continue\n      }\n\n      if (currentElementCount >= header.elements[ currentElement ].count) {\n        currentElement++\n        currentElementCount = 0\n      }\n\n      var element = this.parseASCIIElement(header.elements[ currentElement ].properties, line)\n\n      this.handleElement(geometry, header.elements[ currentElement ].name, element)\n\n      currentElementCount++\n    }\n\n    return this.postProcess(geometry)\n  },\n\n  postProcess: function (geometry: GeometryPLY) {\n    if (geometry.useColor) {\n      for (var i = 0; i < geometry.faces.length; i++) {\n        geometry.faces[ i ].vertexColors = [\n          geometry.colors[ geometry.faces[ i ].a ],\n          geometry.colors[ geometry.faces[ i ].b ],\n          geometry.colors[ geometry.faces[ i ].c ]\n        ]\n      }\n\n      geometry.elementsNeedUpdate = true\n    }\n\n    geometry.computeBoundingSphere()\n\n    return geometry\n  },\n\n  handleElement: function (geometry: GeometryPLY, elementName: string, element: PLYElement) {\n    if (elementName === 'vertex') {\n      geometry.vertices.push(\n        new Vector3(element.x, element.y, element.z)\n      )\n\n      if ('red' in element && 'green' in element && 'blue' in element) {\n        geometry.useColor = true\n\n        var color = new Color()\n        color.setRGB(element.red / 255.0, element.green / 255.0, element.blue / 255.0)\n        geometry.colors.push(color)\n      }\n    } else if (elementName === 'face') {\n      var vertexIndices = element.vertex_indices\n\n      if (vertexIndices.length === 3) {\n        geometry.faces.push(\n          new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 2 ])\n        )\n      } else if (vertexIndices.length === 4) {\n        geometry.faces.push(\n          new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 3 ]),\n          new Face3(vertexIndices[ 1 ], vertexIndices[ 2 ], vertexIndices[ 3 ])\n        )\n      }\n    }\n  },\n\n  binaryRead: function (dataview: DataView, at: number, type: string, littleEndian: boolean) {\n    switch (type) {\n      // corespondences for non-specific length types here match rply:\n      case 'int8': case 'char': return [ dataview.getInt8(at), 1 ]\n\n      case 'uint8': case 'uchar': return [ dataview.getUint8(at), 1 ]\n\n      case 'int16': case 'short': return [ dataview.getInt16(at, littleEndian), 2 ]\n\n      case 'uint16': case 'ushort': return [ dataview.getUint16(at, littleEndian), 2 ]\n\n      case 'int32': case 'int': return [ dataview.getInt32(at, littleEndian), 4 ]\n\n      case 'uint32': case 'uint': return [ dataview.getUint32(at, littleEndian), 4 ]\n\n      case 'float32': case 'float': return [ dataview.getFloat32(at, littleEndian), 4 ]\n\n      case 'float64': case 'double': return [ dataview.getFloat64(at, littleEndian), 8 ]\n    }\n  },\n\n  binaryReadElement: function (dataview: DataView, at: number, properties: PLYProperty[], littleEndian: boolean) {\n    var element = {} as PLYElement\n    var result\n    var read = 0\n\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[ i ].type === 'list') {\n        var list = []\n\n        result = this.binaryRead(dataview, at + read, properties[ i ].countType, littleEndian)\n        var n = result[ 0 ]\n        read += result[ 1 ]\n\n        for (var j = 0; j < n; j++) {\n          result = this.binaryRead(dataview, at + read, properties[ i ].itemType, littleEndian)\n          list.push(result[ 0 ])\n          read += result[ 1 ]\n        }\n\n        element[ properties[ i ].name ] = list\n      } else {\n        result = this.binaryRead(dataview, at + read, properties[ i ].type, littleEndian)\n        element[ properties[ i ].name ] = result[ 0 ]\n        read += result[ 1 ]\n      }\n    }\n\n    return [ element, read ]\n  },\n\n  parseBinary: function (data: ArrayBuffer) {\n    var geometry = new Geometry()\n\n    var header = this.parseHeader(this.bin2str(data))\n    var littleEndian = (header.format === 'binary_little_endian')\n    var body = new DataView(data, header.headerLength)\n    var result\n    var loc = 0\n\n    for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n      for (var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount++) {\n        result = this.binaryReadElement(body, loc, header.elements[ currentElement ].properties, littleEndian)\n        loc += result[ 1 ]\n        var element = result[ 0 ]\n\n        this.handleElement(geometry, header.elements[ currentElement ].name, element)\n      }\n    }\n\n    return this.postProcess(geometry)\n  }\n\n}\n\nclass PlyParser extends SurfaceParser {\n  get type () { return 'ply' }\n\n  getLoader () {\n    return new PLYLoader()\n  }\n}\n\nParserRegistry.add('ply', PlyParser)\n\nexport default PlyParser\n","/**\n * @file Csv Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { defaults } from '../utils'\nimport { ParserRegistry } from '../globals'\nimport Parser, { ParserParameters } from './parser'\nimport Streamer from '../streamer/streamer';\n\nexport interface CsvParserParameters extends ParserParameters {\n  delimiter: string\n  comment: string\n  columnNames: boolean\n}\n/**\n * CSV parser\n */\nclass CsvParser extends Parser {\n  /**\n     * [constructor description]\n     * @param  {Streamer} streamer - the streamer object\n     * @param  {Object} params - parameter object\n     * @param  {Char} params.delimiter - delimiter character\n     * @param  {Char} params.comment - comment character\n     * @param  {Boolean} params.columnNames - use first data line as column names\n     */\n  constructor (streamer: Streamer, params?: Partial<CsvParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.delimiter = defaults(p.delimiter, ',')\n    this.comment = defaults(p.comment, '#')\n    this.columnNames = defaults(p.columnNames, false)\n\n    this.table = {\n      name: this.name,\n      path: this.path,\n      columnNames: [],\n      data: []\n    }\n  }\n\n  get type () { return 'csv' }\n  get __objName () { return 'table' }\n\n  _parse () {\n    const data = this.table.data\n    const reDelimiter = new RegExp('\\\\s*' + this.delimiter + '\\\\s*')\n\n    let j = 0\n\n    this.streamer.eachChunkOfLines(chunk => {\n      const n = chunk.length\n\n      for (let i = 0; i < n; ++i) {\n        const line = chunk[ i ].trim()\n        if (line.startsWith(this.comment)) continue\n        const values = line.split(reDelimiter)\n\n        if (j === 0) {\n          this.table.columnNames = values\n        } else if (line) {\n          data.push(values)\n        }\n        ++j\n      }\n    })\n  }\n}\n\nParserRegistry.add('csv', CsvParser)\n\nexport default CsvParser\n","/**\n * @file Json Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport { defaults } from '../utils'\nimport Parser, { ParserParameters } from './parser'\nimport Streamer from '../streamer/streamer';\n\nexport interface JsonParserParameters extends ParserParameters {\n  string: boolean\n}\n\nclass JsonParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<JsonParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.string = defaults(p.string, false)\n\n    this.json = {\n      name: this.name,\n      path: this.path,\n      data: {}\n    }\n  }\n\n  get type () { return 'json' }\n  get __objName () { return 'json' }\n  get isJson () { return true }\n\n  _parse () {\n    if (this.streamer.isBinary() || this.string) {\n      this.json.data = JSON.parse(this.streamer.asText())\n    } else {\n      this.json.data = this.streamer.data\n    }\n  }\n}\n\nParserRegistry.add('json', JsonParser)\n\nexport default JsonParser\n","/**\n * @file Msgpack Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport Parser, { ParserParameters } from './parser'\n\nimport { decodeMsgpack } from '../../lib/mmtf.es6'\nimport Streamer from '../streamer/streamer';\n\nclass MsgpackParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.msgpack = {\n      name: this.name,\n      path: this.path,\n      data: undefined\n    }\n  }\n\n  get type () { return 'msgpack' }\n  get __objName () { return 'msgpack' }\n  get isBinary () { return true }\n\n  _parse () {\n    if (Debug) Log.time('MsgpackParser._parse ' + this.name)\n\n    this.msgpack.data = decodeMsgpack(this.streamer.data)\n\n    if (Debug) Log.timeEnd('MsgpackParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('msgpack', MsgpackParser)\n\nexport default MsgpackParser\n","/**\n * @file Netcdf Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport Parser, { ParserParameters } from './parser'\nimport NetcdfReader from '../utils/netcdf-reader'\nimport Streamer from '../streamer/streamer';\n\nclass NetcdfParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.netcdf = {\n      name: this.name,\n      path: this.path,\n      data: undefined\n    }\n  }\n\n  get type () { return 'netcdf' }\n  get __objName () { return 'netcdf' }\n  get isBinary () { return true }\n\n  _parse () {\n    if (Debug) Log.time('NetcdfParser._parse ' + this.name)\n\n    this.netcdf.data = new NetcdfReader(this.streamer.data)\n\n    if (Debug) Log.timeEnd('NetcdfParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('netcdf', NetcdfParser)\n\nexport default NetcdfParser\n","/**\n * @file Text Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ParserRegistry } from '../globals'\nimport Parser, { ParserParameters } from './parser'\nimport Streamer from '../streamer/streamer';\n\nclass TextParser extends Parser {\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\n    super(streamer, params)\n\n    this.text = {\n\n      name: this.name,\n      path: this.path,\n      data: ''\n\n    }\n  }\n\n  get type () { return 'text' }\n  get __objName () { return 'text' }\n\n  _parse () {\n    this.text.data = this.streamer.asText()\n  }\n}\n\nParserRegistry.add('txt', TextParser)\nParserRegistry.add('text', TextParser)\n\nexport default TextParser\n","/**\n * @file Parse Xml\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n// https://github.com/segmentio/xml-parser\n// MIT license\n\nexport type XMLNodeAttributes = { [k: string]: any }\nexport interface XMLNode {\n  name?: string\n  content?: string\n  attributes: XMLNodeAttributes\n  children?: XMLNode[]\n}\n\nconst reStrip = /^['\"]|['\"]$/g\nconst reTag = /^<([\\w-:.]+)\\s*/\nconst reContent = /^([^<]*)/\nconst reAttr = /([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/\n\nfunction strip (val: string) {\n  return val.replace(reStrip, '')\n}\n\nexport function parseXml (xml: string) {\n  // trim and strip comments\n  xml = xml.trim().replace(/<!--[\\s\\S]*?-->/g, '')\n\n  return document()\n\n  function document () {\n    return {\n      declaration: declaration(),\n      root: tag()\n    }\n  }\n\n  function declaration () {\n    const m = match(/^<\\?xml\\s*/)\n    if (!m) return\n\n    // tag\n    const node: XMLNode = {\n      attributes: {}\n    }\n\n    // attributes\n    while (!(eos() || is('?>'))) {\n      const attr = attribute()\n      if (!attr) return node\n      node.attributes[attr.name] = attr.value\n    }\n    match(/\\?>\\s*/)\n    return node\n  }\n\n  function tag () {\n    const m = match(reTag)\n    if (!m) return\n\n    // name\n    const node: XMLNode = {\n      name: m[1],\n      attributes: {},\n      children: []\n    }\n\n    // attributes\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\n      const attr = attribute()\n      if (!attr) return node\n      node.attributes[attr.name] = attr.value\n    }\n\n    // self closing tag\n    if (match(/^\\s*\\/>\\s*/)) {\n      return node\n    }\n    match(/\\??>\\s*/)\n\n    // content\n    node.content = content()\n\n    // children\n    let child\n    while ((child = tag())) {\n      node.children!.push(child)\n    }\n\n    // closing\n    match(/^<\\/[\\w-:.]+>\\s*/)\n    return node\n  }\n\n  function content () {\n    const m = match(reContent)\n    if (m) return m[1]\n    return ''\n  }\n\n  function attribute () {\n    const m = match(reAttr)\n    if (!m) return\n    return { name: m[1], value: strip(m[2]) }\n  }\n\n  function match (re: RegExp) {\n    const m = xml.match(re)\n    if (!m) return\n    xml = xml.slice(m[0].length)\n    return m\n  }\n\n  function eos () {\n    return xml.length === 0\n  }\n\n  function is (prefix: string) {\n    return xml.indexOf(prefix) === 0\n  }\n}\n","/**\n * @file Xml Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport { defaults } from '../utils'\n// @ts-ignore: unused import XMLNode required for declaration only\nimport { parseXml, XMLNode } from '../utils/parse-xml'\nimport Parser, { ParserParameters } from './parser'\nimport Streamer from '../streamer/streamer';\n\nexport interface XmlParserParameters extends ParserParameters {\n  useDomParser: boolean\n}\n\nclass XmlParser extends Parser {\n  xml: {\n    name: string\n    path: string\n    data: any\n  }\n  constructor (streamer: Streamer, params?: Partial<XmlParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.useDomParser = defaults(p.useDomParser, false)\n\n    this.xml = {\n      name: this.name,\n      path: this.path,\n      data: {}\n    }\n  }\n\n  get type () { return 'xml' }\n  get __objName () { return 'xml' }\n  get isXml () { return true }\n\n  __xmlParser (xml: string) {\n    return parseXml(xml)\n  }\n\n  __domParser (xml: string) {\n    const domParser = new (window as any).DOMParser() as DOMParser\n    return domParser.parseFromString(xml, 'text/xml')\n  }\n\n  _parse () {\n    if (Debug) Log.time('XmlParser._parse ' + this.name)\n\n    if (this.useDomParser) {\n      if (this.streamer.data instanceof Document) { //TS conversion: stripped the window prefix from window.Document\n        this.xml.data = this.streamer.data\n      } else {\n        this.xml.data = this.__domParser(this.streamer.asText())\n      }\n    } else {\n      this.xml.data = this.__xmlParser(this.streamer.asText())\n    }\n\n    if (Debug) Log.timeEnd('XmlParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('xml', XmlParser)\n\nexport default XmlParser\n","/**\n * @file Validation\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Vector3, Color } from 'three'\n\nimport { Debug, Log } from '../globals'\nimport { defaults } from '../utils'\nimport { ClashPicker } from '../utils/picker'\nimport { uniformArray3 } from '../math/array-utils'\nimport { guessElement } from '../structure/structure-utils'\nimport AtomProxy from '../proxy/atom-proxy'\nimport Structure from '../structure/structure'\n\nfunction getNamedItem(a: NamedNodeMap, name: string) {\n  const item = a.getNamedItem(name)\n  return item !== null ? item.value : ''\n}\n\nfunction getSele (a: NamedNodeMap, atomname?: string, useAltcode = false) {\n  const icode = getNamedItem(a, 'icode').trim()\n  const chain = getNamedItem(a, 'chain').trim()\n  const altcode = getNamedItem(a, 'altcode')\n  let sele = getNamedItem(a, 'resnum')\n  if (icode) sele += '^' + icode\n  if (chain) sele += ':' + chain\n  if (atomname) sele += '.' + atomname\n  if (useAltcode && altcode.trim()) sele += '%' + altcode\n  sele += '/' + (parseInt(getNamedItem(a, 'model')) - 1)\n  return sele\n}\n\nfunction getResSele (a: NamedNodeMap) {\n  const chain = getNamedItem(a, 'chain').trim()\n  const rescode = getNamedItem(a, 'rescode')\n  const resnum = getNamedItem(a, 'resnum')\n  let sele = `[${rescode}]${resnum}`\n  if (chain) sele += `:${chain}`\n  return sele\n}\n\nfunction setBitDict (dict: { [k: string]: number }, key: string, bit: number) {\n  if (dict[ key ] === undefined) {\n    dict[ key ] = bit\n  } else {\n    dict[ key ] |= bit\n  }\n}\n\nfunction hasAttrValue (attr: Attr|null, value: string) {\n  return attr !== null && attr.value === value\n}\n\nfunction getAtomSele (ap: AtomProxy) {\n  const icode = ap.inscode\n  const chain = ap.chainname\n  const atomname = ap.atomname\n  const altcode = ap.altloc\n  let sele = ap.resno + ''\n  if (icode) sele += '^' + icode\n  if (chain) sele += ':' + chain\n  if (atomname) sele += '.' + atomname\n  if (altcode) sele += '%' + altcode\n  sele += '/' + ap.modelIndex\n  return sele\n}\n\nfunction getProblemCount (clashDict: { [k: string]: { [k: string]: string } }, g: Element, ga: NamedNodeMap) {\n  let geoProblemCount = 0\n\n  const clashes = g.getElementsByTagName('clash')\n  for (let j = 0, jl = clashes.length; j < jl; ++j) {\n    if (clashDict[ getNamedItem(clashes[ j ].attributes, 'cid') ]) {\n      geoProblemCount += 1\n      break\n    }\n  }\n\n  const angleOutliers = g.getElementsByTagName('angle-outlier')\n  if (angleOutliers.length > 0) {\n    geoProblemCount += 1\n  }\n\n  const bondOutliers = g.getElementsByTagName('bond-outlier')\n  if (bondOutliers.length > 0) {\n    geoProblemCount += 1\n  }\n\n  const planeOutliers = g.getElementsByTagName('plane-outlier')\n  if (planeOutliers.length > 0) {\n    geoProblemCount += 1\n  }\n\n  if (hasAttrValue(ga.getNamedItem('rota'), 'OUTLIER')) {\n    geoProblemCount += 1\n  }\n\n  if (hasAttrValue(ga.getNamedItem('rama'), 'OUTLIER')) {\n    geoProblemCount += 1\n  }\n\n  if (hasAttrValue(ga.getNamedItem('RNApucker'), 'outlier')) {\n    geoProblemCount += 1\n  }\n\n  return geoProblemCount\n}\n\nclass Validation {\n  rsrzDict: { [k: string]: number } = {}\n  rsccDict: { [k: string]: number } = {}\n  /**\n   * Random Coil Index (RCI) - evaluates the proximity of residue structural\n   * and dynamic properties to the properties of flexible random coil regions\n   * from NMR chemical shifts.\n   *\n   * Mark V. Berjanskii and David S. Wishart (2005)\n   * A Simple Method To Predict Protein Flexibility Using Secondary Chemical Shifts\n   * J. Am. Chem. Soc., 2005, 127 (43), pp 14970–14971\n   * http://pubs.acs.org/doi/abs/10.1021/ja054842f\n   *\n   * Mark V. Berjanskii and David S. Wishart (2008)\n   * Application of the random coil index to studying protein flexibility.\n   * J Biomol NMR. 2008 Jan;40(1):31-48. Epub 2007 Nov 6.\n   * http://www.springerlink.com/content/2966482w10306126/\n   */\n  rciDict: { [k: string]: number } = {}\n  clashDict: { [k: string]: { [k: string]: string } } = {}\n  clashArray: { [k: string]: string }[] = []\n  geoDict: { [k: string]: number } = {}\n  geoAtomDict: { [k: string]: { [k: string]: number } } = {}\n  atomDict: { [k: string]: boolean|number } = {}\n  clashSele = 'NONE'\n\n  constructor (readonly name: string, readonly path: string) {}\n\n  get type () { return 'validation' }\n\n  fromXml (xml: XMLDocument) {\n    if (Debug) Log.time('Validation.fromXml')\n\n    const rsrzDict = this.rsrzDict\n    const rsccDict = this.rsccDict\n    const rciDict = this.rciDict\n    const clashDict = this.clashDict\n    const clashArray = this.clashArray\n    const geoDict = this.geoDict\n    const geoAtomDict = this.geoAtomDict\n    const atomDict = this.atomDict\n\n    const entries = xml.getElementsByTagName('Entry')\n    if (entries.length === 1) {\n      const chemicalShiftLists = entries[0].getElementsByTagName('chemical_shift_list')\n      if (chemicalShiftLists.length === 1) {\n        const randomCoilIndices = chemicalShiftLists[0].getElementsByTagName('random_coil_index')\n        for (let j = 0, jl = randomCoilIndices.length; j < jl; ++j) {\n          const rcia = randomCoilIndices[ j ].attributes\n          const sele = getResSele(rcia)\n          rciDict[ sele ] = parseFloat(getNamedItem(rcia, 'value'))\n        }\n      }\n    }\n\n    const groups = xml.getElementsByTagName('ModelledSubgroup')\n\n    const _clashDict: { [k: string]: { [k: string]: string } } = {}\n    const clashList: string[] = []\n\n    if (Debug) Log.time('Validation.fromXml#clashDict')\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const g = groups[ i ]\n      const ga = g.attributes\n\n      const sele = getSele(ga)\n      if (ga.getNamedItem('rsrz') !== null) {\n        rsrzDict[ sele ] = parseFloat(getNamedItem(ga, 'rsrz'))\n      }\n      if (ga.getNamedItem('rscc') !== null) {\n        rsccDict[ sele ] = parseFloat(getNamedItem(ga, 'rscc'))\n      }\n      const seleAttr = xml.createAttribute('sele')\n      seleAttr.value = sele\n      ga.setNamedItem(seleAttr)\n\n      const clashes = g.getElementsByTagName('clash')\n\n      for (let j = 0, jl = clashes.length; j < jl; ++j) {\n        const ca = clashes[ j ].attributes\n        const atom = getNamedItem(ca, 'atom')\n\n        if (guessElement(atom) !== 'H') {\n          const cid = getNamedItem(ca, 'cid')\n          const atomSele = getSele(ga, atom, true)\n          atomDict[ atomSele ] = true\n\n          if (_clashDict[ cid ] === undefined) {\n            _clashDict[ cid ] = {\n              sele1: atomSele,\n              res1: sele\n            }\n          } else {\n            const c = _clashDict[ cid ]\n            if (c.res1 !== sele) {\n              c.sele2 = atomSele\n              c.res2 = sele\n              clashList.push(c.res1, sele)\n              clashDict[ cid ] = c\n              clashArray.push(c)\n            }\n          }\n        }\n      }\n    }\n\n    if (Debug) Log.timeEnd('Validation.fromXml#clashDict')\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const g = groups[ i ]\n      const ga = g.attributes\n\n      const sele = getNamedItem(ga, 'sele')\n      const isPolymer = getNamedItem(ga, 'seq') !== '.'\n\n      if (isPolymer) {\n        const geoProblemCount = getProblemCount(clashDict, g, ga)\n        if (geoProblemCount > 0) {\n          geoDict[ sele ] = geoProblemCount\n        }\n      } else {\n        const clashes = g.getElementsByTagName('clash')\n        const mogBondOutliers = g.getElementsByTagName('mog-bond-outlier')\n        const mogAngleOutliers = g.getElementsByTagName('mog-angle-outlier')\n\n        if (mogBondOutliers.length > 0 || mogAngleOutliers.length > 0 || clashes.length > 0) {\n          const atomDict = {}\n          geoAtomDict[ sele ] = atomDict\n\n          for (let j = 0, jl = clashes.length; j < jl; ++j) {\n            const ca = clashes[ j ].attributes\n            if (clashDict[ getNamedItem(ca, 'cid') ]) {\n              setBitDict(atomDict, getNamedItem(ca, 'atom'), 1)\n            }\n          }\n\n          for (let j = 0, jl = mogBondOutliers.length; j < jl; ++j) {\n            const mbo = mogBondOutliers[ j ].attributes\n            getNamedItem(mbo, 'atoms').split(',').forEach(function (atomname) {\n              setBitDict(atomDict, atomname, 2)\n            })\n          }\n\n          for (let j = 0, jl = mogAngleOutliers.length; j < jl; ++j) {\n            const mao = mogAngleOutliers[ j ].attributes\n            getNamedItem(mao, 'atoms').split(',').forEach(function (atomname) {\n              setBitDict(atomDict, atomname, 4)\n            })\n          }\n        }\n      }\n    }\n\n    this.clashSele = clashList.length ? clashList.join(' OR ') : 'NONE'\n\n    if (Debug) Log.timeEnd('Validation.fromXml')\n  }\n\n  getClashData (params: { color: number|string|Color, structure: Structure }) {\n    if (Debug) Log.time('Validation.getClashData')\n\n    const p = params || {}\n\n    const s = p.structure\n    const atomSet = s.atomSet!  // TODO\n    const c = new Color(defaults(p.color, '#f0027f'))\n\n    const ap1 = s.getAtomProxy()\n    const ap2 = s.getAtomProxy()\n    const vDir = new Vector3()\n    const vPos1 = new Vector3()\n    const vPos2 = new Vector3()\n\n    const clashArray = this.clashArray\n    const n = clashArray.length\n\n    const position1 = new Float32Array(n * 3)\n    const position2 = new Float32Array(n * 3)\n    const color = uniformArray3(n, c.r, c.g, c.b) as Float32Array\n    const radius = new Float32Array(n)\n    const picking = new Float32Array(n)\n\n    if (Debug) Log.time('Validation.getClashData#atomDict')\n\n    const atomDict = this.atomDict\n\n    s.eachAtom(function (ap) {\n      const sele = getAtomSele(ap)\n      if (atomDict[ sele ] === true) {\n        atomDict[ sele ] = ap.index\n      }\n    })\n\n    if (Debug) Log.timeEnd('Validation.getClashData#atomDict')\n\n    let i = 0\n\n    clashArray.forEach(function (c, idx) {\n      ap1.index = atomDict[ c.sele1 ] as number  // TODO\n      ap2.index = atomDict[ c.sele2 ] as number  // TODO\n\n      if (ap1.index === undefined || ap2.index === undefined ||\n          !atomSet.isSet(ap1.index, ap2.index)) return\n\n      vDir.subVectors(ap2 as any, ap1 as any).setLength(ap1.vdw)  // TODO\n      vPos1.copy(ap1 as any).add(vDir)  // TODO\n\n      vDir.subVectors(ap1 as any, ap2 as any).setLength(ap2.vdw)  // TODO\n      vPos2.copy(ap2 as any).add(vDir)  // TODO\n\n      const dHalf = ap1.distanceTo(ap2) / 2\n      const r1 = Math.sqrt(ap1.vdw * ap1.vdw - dHalf * dHalf)\n      const r2 = Math.sqrt(ap2.vdw * ap2.vdw - dHalf * dHalf)\n\n      vPos1.toArray(position1 as any, i * 3)  // TODO\n      vPos2.toArray(position2 as any, i * 3)\n      radius[ i ] = (r1 + r2) / 2\n      picking[ i ] = idx\n\n      ++i\n    })\n\n    if (Debug) Log.timeEnd('Validation.getClashData')\n\n    return {\n      position1: position1.subarray(0, i * 3),\n      position2: position2.subarray(0, i * 3),\n      color: color.subarray(0, i * 3),\n      color2: color.subarray(0, i * 3),\n      radius: radius.subarray(0, i),\n      picking: new ClashPicker(picking.subarray(0, i), this, s)\n    }\n  }\n}\n\nexport default Validation\n","/**\n * @file Validation Parser\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Debug, Log, ParserRegistry } from '../globals'\nimport XmlParser, { XmlParserParameters } from './xml-parser'\nimport Validation from '../structure/validation'\nimport Streamer from '../streamer/streamer';\n\nclass ValidationParser extends XmlParser {\n  constructor (streamer: Streamer, params?: Partial<XmlParserParameters>) {\n    const p = params || {}\n\n    super(streamer, p)\n\n    this.useDomParser = true\n    this.validation = new Validation(this.name, this.path)\n  }\n\n  get __objName () { return 'validation' }\n  get isXml () { return true }\n\n  _parse () {\n    super._parse()\n\n    if (Debug) Log.time('ValidationParser._parse ' + this.name)\n\n    this.validation.fromXml(this.xml.data)\n\n    if (Debug) Log.timeEnd('ValidationParser._parse ' + this.name)\n  }\n}\n\nParserRegistry.add('validation', ValidationParser)\n\nexport default ValidationParser\n","\n// https://github.com/nodeca/pako\n// MIT License, Copyright (c) 2014 by Vitaly Puzrin\n\n\n// 'use strict';\n\n\n// var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n//                 (typeof Uint16Array !== 'undefined') &&\n//                 (typeof Int32Array !== 'undefined');\n\n\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n// reduce buffer size, avoiding mem copy\nfunction shrinkBuf(buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n}\n\n\nfunction arraySet(dest, src, src_offs, len, dest_offs) {\n  if (src.subarray && dest.subarray) {\n    dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n    return;\n  }\n  // Fallback to ordinary array\n  for (var i = 0; i < len; i++) {\n    dest[dest_offs + i] = src[src_offs + i];\n  }\n}\n\n// Join array of chunks to single array.\nfunction flattenChunks(chunks) {\n  var i, l, len, pos, chunk, result;\n\n  // calculate data length\n  len = 0;\n  for (i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  result = new Uint8Array(len);\n  pos = 0;\n  for (i = 0, l = chunks.length; i < l; i++) {\n    chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n}\n\n// 'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n// 'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n// 'use strict';\n\n// See state defs from inflate.js\nvar BAD$1 = 30;       /* got a data error -- remain here until reset */\nvar TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\n// module.exports =\nfunction inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// 'use strict';\n\n\n// var utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS$1 = 852;\nvar ENOUGH_DISTS$1 = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES$1 = 0;\nvar LENS$1 = 1;\nvar DISTS$1 = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\n// module.exports =\nfunction inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  var i = 0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n// 'use strict';\n\n\n// var utils         = require('../utils/common');\n// var adler32       = require('./adler32');\n// var crc32         = require('./crc32');\n// var inflate_fast  = require('./inffast');\n// var inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix;\nvar distfix;\n// We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = zswap32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = { bits: state.lenbits };\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = { bits: state.lenbits };\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = { bits: state.distbits };\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n        if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\n// String encode/decode helpers\n// 'use strict';\n\n\n// var utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new Uint8Array(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nfunction string2buf(str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n}\n\n// Helper (used in 2 places)\nfunction _buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert binary string (typed, when possible)\nfunction binstring2buf(str) {\n  var buf = new Uint8Array(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n\n// convert array to string\nfunction buf2string(buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return _buf2binstring(utf16buf, out);\n}\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nfunction utf8border(buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Fuckup - very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means vuffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n}\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH        = 0;\nvar Z_SYNC_FLUSH      = 2;\nvar Z_FINISH$1          = 4;\n/* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\nvar Z_OK$1              =  0;\nvar Z_STREAM_END$1      =  1;\nvar Z_NEED_DICT$1       =  2;\n//export var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR$1       = -5;\n\n// 'use strict';\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// 'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\n// 'use strict';\n\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\n// 'use strict';\n\n\n// var zlib_inflate = require('./zlib/inflate');\n// var utils        = require('./utils/common');\n// var strings      = require('./utils/strings');\n// var c            = require('./zlib/constants');\n// var msg          = require('./zlib/messages');\n// var ZStream      = require('./zlib/zstream');\n// var GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK$1) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new GZheader();\n\n  inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH$1 : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate(strm, Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === Z_NEED_DICT$1 && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === Z_BUF_ERROR$1 && allowBufError === true) {\n      status = Z_OK$1;\n      allowBufError = false;\n    }\n\n    if (status !== Z_STREAM_END$1 && status !== Z_OK$1) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END$1 || (strm.avail_in === 0 && (_mode === Z_FINISH$1 || _mode === Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END$1);\n\n  if (status === Z_STREAM_END$1) {\n    _mode = Z_FINISH$1;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH$1) {\n    status = inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK$1;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK$1);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$1) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 alligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction doInflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg; }\n\n  return inflator.result;\n}\n\nexport { doInflate as ungzip };","/**\n * @file Gzip Decompressor\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { ungzip } from '../../lib/pako_inflate.es6'\n\nimport { DecompressorRegistry } from '../globals'\n\nfunction gzipDecompress (data: ArrayBuffer|Uint8Array) {\n  let decompressedData\n\n  if (data instanceof ArrayBuffer) {\n    data = new Uint8Array(data)\n  }\n\n  try {\n    decompressedData = ungzip(data as Uint8Array)\n  } catch (e) {\n    decompressedData = data  // assume it is already uncompressed\n  }\n\n  return decompressedData\n}\n\nDecompressorRegistry.add('gz', gzipDecompress)\n","/**\n * @file Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\n/**\n * Datasource base class\n * @interface\n */\nabstract class Datasource {\n  /**\n   * Get full url\n   * @abstract\n   * @param  {String} path - datasource string\n   * @return {String} - url\n   */\n  abstract getUrl (path: string): string\n\n  /**\n   * Get file extension\n   * @abstract\n   * @param  {String} path - datasource string\n   * @return {String} - extension\n   */\n  abstract getExt (path: string): string\n}\n\nexport default Datasource\n","/**\n * @file RCSB Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log, DatasourceRegistry } from '../globals'\nimport { getProtocol } from '../utils'\nimport { getFileInfo } from '../loader/loader-utils'\nimport Datasource from './datasource'\n\nconst baseUrl = '//files.rcsb.org/download/'\nconst mmtfBaseUrl = '//mmtf.rcsb.org/v1.0/'\nconst mmtfFullUrl = mmtfBaseUrl + 'full/'\nconst mmtfReducedUrl = mmtfBaseUrl + 'reduced/'\n\nclass RcsbDatasource extends Datasource {\n  getUrl (src: string) {\n    // valid path are\n    // XXXX.pdb, XXXX.pdb.gz, XXXX.cif, XXXX.cif.gz, XXXX.mmtf, XXXX.bb.mmtf\n    // XXXX defaults to XXXX.cif\n    const info = getFileInfo(src)\n    const pdbid = info.name.substr(0, 4)\n    let url\n    if ([ 'pdb', 'cif' ].includes(info.ext) &&\n        (info.compressed === false || info.compressed === 'gz')\n    ) {\n      url = baseUrl + info.path\n    } else if (info.ext === 'mmtf') {\n      if (info.base.endsWith('.bb')) {\n        url = mmtfReducedUrl + pdbid\n      } else {\n        url = mmtfFullUrl + pdbid\n      }\n    } else if (!info.ext) {\n      url = mmtfFullUrl + pdbid\n    } else {\n      Log.warn('unsupported ext', info.ext)\n      url = mmtfFullUrl + pdbid\n    }\n    return getProtocol() + url\n  }\n\n  getExt (src: string) {\n    const ext = getFileInfo(src).ext\n    return ext ? ext : 'mmtf'\n  }\n}\n\nDatasourceRegistry.add('rcsb', new RcsbDatasource())\n\nexport default RcsbDatasource\n","/**\n * @file PubChem Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { Log, DatasourceRegistry } from '../globals'\nimport { getProtocol } from '../utils'\nimport { getFileInfo } from '../loader/loader-utils'\nimport Datasource from './datasource'\n\nconst baseUrl = '//pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/'\nconst suffixUrl = '/SDF?record_type=3d'\n\nclass PubchemDatasource extends Datasource {\n  getUrl (src: string) {\n    const info = getFileInfo(src)\n    const cid = info.name\n    let url\n    if (!info.ext || info.ext === 'sdf') {\n      url = baseUrl + cid + suffixUrl\n    } else {\n      Log.warn('unsupported ext', info.ext)\n      url = baseUrl + cid + suffixUrl\n    }\n    return getProtocol() + url\n  }\n\n  getExt (src: string) {\n    const ext = getFileInfo(src).ext\n    return ext ? ext : 'sdf'\n  }\n}\n\nDatasourceRegistry.add('pubchem', new PubchemDatasource())\n\nexport default PubchemDatasource\n","/**\n * @file Pass Through Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { DatasourceRegistry } from '../globals'\nimport { getFileInfo } from '../loader/loader-utils'\nimport Datasource from './datasource'\n\nclass PassThroughDatasource extends Datasource {\n  getUrl (path: string) {\n    return path\n  }\n\n  getExt (path: string) {\n    return getFileInfo(path).ext\n  }\n}\n\nDatasourceRegistry.add('ftp', new PassThroughDatasource())\nDatasourceRegistry.add('http', new PassThroughDatasource())\nDatasourceRegistry.add('https', new PassThroughDatasource())\n\nexport default PassThroughDatasource\n","/**\n * @file Static Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { getAbsolutePath } from '../utils'\nimport { getFileInfo } from '../loader/loader-utils'\nimport Datasource from './datasource'\n\nconst reProtocol = /^((http|https|ftp):)*\\/\\//\n\nclass StaticDatasource extends Datasource {\n  baseUrl: string\n\n  constructor (baseUrl: string = '') {\n    super()\n    this.baseUrl = baseUrl\n  }\n\n  getUrl (src: string) {\n    const info = getFileInfo(src)\n    let url = this.baseUrl + info.path\n    if (!reProtocol.test(this.baseUrl)) {\n      url = getAbsolutePath(url)\n    }\n    return url\n  }\n\n  getExt (src: string) {\n    return getFileInfo(src).ext\n  }\n}\n\nexport default StaticDatasource\n","/**\n * @file MDsrv Datasource\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n * @private\n */\n\nimport { autoLoad, getFileInfo } from '../loader/loader-utils'\nimport Datasource from './datasource'\n\nclass MdsrvDatasource extends Datasource {\n  baseUrl: string\n\n  constructor (baseUrl: string = '') {\n    super()\n    this.baseUrl = baseUrl\n  }\n\n  getListing (path: string = '') {\n    let url = `${this.baseUrl}dir/${path}`\n    if (url[url.length - 1] !== '/') url += '/'\n    return autoLoad(url, {\n      ext: 'json'\n    }).then((jsonData: any) => ({\n      path: path,\n      data: jsonData.data\n    }))\n  }\n\n  getUrl (src: string) {\n    const info = getFileInfo(src)\n    return `${this.baseUrl}file/${info.path}${info.query}`\n  }\n\n  getCountUrl (src: string) {\n    const info = getFileInfo(src)\n    return `${this.baseUrl}traj/numframes/${info.path}${info.query}`\n  }\n\n  getFrameUrl (src: string, frameIndex: number|string) {\n    const info = getFileInfo(src)\n    return `${this.baseUrl}traj/frame/${frameIndex}/${info.path}${info.query}`\n  }\n\n  getFrameParams (src: string, atomIndices: (number|string)[]) {\n    return `atomIndices=${atomIndices.join(';')}`\n  }\n\n  getPathUrl (src: string, atomIndex: number|string) {\n    const info = getFileInfo(src)\n    return `${this.baseUrl}traj/path/${atomIndex}/${info.path}${info.query}`\n  }\n\n  getExt (src: string) {\n    return getFileInfo(src).ext\n  }\n}\n\nexport default MdsrvDatasource\n","/**\n * @file UI Parameters\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { StageParameters } from '../stage/stage'\nimport { MouseActionPresets } from '../controls/mouse-actions'\n\nexport type BooleanParam = { type: 'boolean' }\nfunction BooleanParam () { return { type: 'boolean' } as BooleanParam }\n\nexport type ColorParam = { type: 'color' }\nfunction ColorParam () { return { type: 'color' } as ColorParam }\n\nexport type IntegerParam = { type: 'integer', max: number, min: number }\nfunction IntegerParam (max: number, min: number) {\n  return { type: 'integer', max, min } as IntegerParam\n}\n\nexport type NumberParam = { type: 'number', precision: number, max: number, min: number }\nfunction NumberParam (precision: number, max: number, min: number) {\n  return { type: 'number', precision, max, min } as NumberParam\n}\n\nexport type RangeParam = { type: 'range', step: number, max: number, min: number }\nfunction RangeParam (step: number, max: number, min: number) {\n  return { type: 'range', step, max, min } as RangeParam\n}\n\nexport type SelectParam = { type: 'select', options: { [k: string]: string } }\nfunction SelectParam (...options: string[]) {\n  return { type: 'select', options: options.reduce((o, k) => ({ ...o, [k]: k}), {}) } as SelectParam\n}\n\nexport type ParamType = BooleanParam|ColorParam|IntegerParam|NumberParam|RangeParam|SelectParam\n\nexport const UIStageParameters: { [k in keyof StageParameters]: ParamType } = {\n  backgroundColor: ColorParam(),\n  quality: SelectParam('auto', 'low', 'medium', 'high'),\n  sampleLevel: RangeParam(1, 5, -1),\n  impostor: BooleanParam(),\n  workerDefault: BooleanParam(),\n  rotateSpeed: NumberParam(1, 10, 0),\n  zoomSpeed: NumberParam(1, 10, 0),\n  panSpeed: NumberParam(1, 10, 0),\n  clipNear: RangeParam(1, 100, 0),\n  clipFar: RangeParam(1, 100, 0),\n  clipDist: IntegerParam(200, 0),\n  clipMode: SelectParam('scene', 'camera'),\n  clipScale: SelectParam('relative', 'absolute'),\n  fogNear: RangeParam(1, 100, 0),\n  fogFar: RangeParam(1, 100, 0),\n  cameraType: SelectParam('perspective', 'orthographic', 'stereo'),\n  cameraEyeSep: NumberParam(3, 1.0, 0.01),\n  cameraFov: RangeParam(1, 120, 15),\n  lightColor: ColorParam(),\n  lightIntensity: NumberParam(2, 10, 0),\n  ambientColor: ColorParam(),\n  ambientIntensity: NumberParam(2, 10, 0),\n  hoverTimeout: IntegerParam(10000, -1),\n  tooltip: BooleanParam(),\n  mousePreset: SelectParam(...Object.keys(MouseActionPresets))\n}\n","/**\n * @file Version\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport * as data from '../package.json'\n\n/**\n * Version name\n * @type {String}\n */\nconst Version = (data as any).version as string\n\nexport default Version\n","/**\n * @file ngl\n * @private\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport './polyfills'\nimport _Promise from 'promise-polyfill'\n\n/**\n * The NGL module. These members are available in the `NGL` namespace when using the {@link https://github.com/umdjs/umd|UMD} build in the `ngl.js` file.\n * @module NGL\n */\n\nexport {\n  Debug, setDebug,\n  MeasurementDefaultParams, setMeasurementDefaultParams,\n  ScriptExtensions, ColormakerRegistry,\n  DatasourceRegistry, DecompressorRegistry,\n  ParserRegistry, RepresentationRegistry,\n  setListingDatasource, setTrajectoryDatasource,\n  ListingDatasource, TrajectoryDatasource\n} from './globals'\nexport { autoLoad, getDataInfo, getFileInfo } from './loader/loader-utils'\nimport Selection from './selection/selection'\nimport PdbWriter from './writer/pdb-writer'\nimport SdfWriter from './writer/sdf-writer'\nimport StlWriter from './writer/stl-writer'\nimport Stage from './stage/stage'\nimport Viewer from './viewer/viewer'\nimport Collection from './component/collection'\nimport ComponentCollection from './component/component-collection'\nimport Component from './component/component'\nimport ShapeComponent from './component/shape-component'\nimport StructureComponent, {StructureRepresentationType} from './component/structure-component'\nimport SurfaceComponent from './component/surface-component'\nimport VolumeComponent, {VolumeRepresentationType} from './component/volume-component'\nimport RepresentationCollection from './component/representation-collection'\nimport RepresentationElement from './component/representation-element'\nimport Assembly from './symmetry/assembly'\nimport TrajectoryPlayer from './trajectory/trajectory-player'\nimport Superposition from './align/superposition'\nexport { superpose } from './align/align-utils'\nexport { guessElement, concatStructures } from './structure/structure-utils'\n\nexport { flatten, throttle, download, getQuery, uniqueArray } from './utils'\nimport Queue from './utils/queue'\nimport Counter from './utils/counter'\nimport Frames from './trajectory/frames'\n\n//\n\nimport Colormaker from './color/colormaker'\n\nimport './color/atomindex-colormaker'\nimport './color/bfactor-colormaker'\nimport './color/chainid-colormaker'\nimport './color/chainindex-colormaker'\nimport './color/chainname-colormaker'\nimport './color/densityfit-colormaker'\nimport './color/electrostatic-colormaker'\nimport './color/element-colormaker'\nimport './color/entityindex-colormaker'\nimport './color/entitytype-colormaker'\nimport './color/geoquality-colormaker'\nimport './color/hydrophobicity-colormaker'\nimport './color/modelindex-colormaker'\nimport './color/moleculetype-colormaker'\nimport './color/occupancy-colormaker'\nimport './color/partialcharge-colormaker'\nimport './color/random-colormaker'\nimport './color/randomcoilindex-colormaker'\nimport './color/residueindex-colormaker'\nimport './color/resname-colormaker'\nimport './color/sstruc-colormaker'\nimport './color/structuredata-colormaker'\nimport './color/uniform-colormaker'\nimport './color/value-colormaker'\nimport './color/volume-colormaker'\n\n//\n\nimport './component/shape-component'\nimport './component/structure-component'\nimport './component/surface-component'\nimport './component/volume-component'\n\n//\n\nimport AngleRepresentation, {AngleRepresentationParameters} from './representation/angle-representation'\nimport AxesRepresentation, {AxesRepresentationParameters} from './representation/axes-representation'\nimport BackboneRepresentation from './representation/backbone-representation'\nimport BallAndStickRepresentation, {BallAndStickRepresentationParameters} from './representation/ballandstick-representation'\nimport BaseRepresentation from './representation/base-representation'\nimport CartoonRepresentation, {CartoonRepresentationParameters} from './representation/cartoon-representation'\nimport ContactRepresentation, {ContactRepresentationParameters} from './representation/contact-representation'\nimport DihedralRepresentation, {DihedralRepresentationParameters} from './representation/dihedral-representation'\nimport DihedralHistogramRepresentation, {DihedralHistogramRepresentationParameters} from './representation/dihedral-histogram-representation'\nimport DistanceRepresentation, {DistanceRepresentationParameters} from './representation/distance-representation'\nimport HelixorientRepresentation from './representation/helixorient-representation'\nimport HyperballRepresentation, {HyperballRepresentationParameters} from './representation/hyperball-representation'\nimport LabelRepresentation, {LabelRepresentationParameters} from './representation/label-representation'\nimport LicoriceRepresentation from './representation/licorice-representation'\nimport LineRepresentation, {LineRepresentationParameters} from './representation/line-representation'\nimport MolecularSurfaceRepresentation, {MolecularSurfaceRepresentationParameters} from './representation/molecularsurface-representation'\nimport PointRepresentation, {PointRepresentationParameters} from './representation/point-representation'\nimport RibbonRepresentation, {RibbonRepresentationParameters} from './representation/ribbon-representation'\nimport RocketRepresentation, {RocketRepresentationParameters} from './representation/rocket-representation'\nimport RopeRepresentation from './representation/rope-representation'\nimport SpacefillRepresentation from './representation/spacefill-representation'\nimport StructureRepresentation, {StructureRepresentationParameters} from './representation/structure-representation'\nimport TraceRepresentation, {TraceRepresentationParameters} from './representation/trace-representation'\nimport TubeRepresentation from './representation/tube-representation'\nimport UnitcellRepresentation, {UnitcellRepresentationParameters} from './representation/unitcell-representation'\nimport ValidationRepresentation from './representation/validation-representation'\n\nimport BufferRepresentation from './representation/buffer-representation'\nimport ArrowBuffer from './buffer/arrow-buffer'\nimport BoxBuffer from './buffer/box-buffer'\nimport ConeBuffer from './buffer/cone-buffer'\nimport CylinderBuffer from './buffer/cylinder-buffer'\nimport EllipsoidBuffer from './buffer/ellipsoid-buffer'\nimport MeshBuffer from './buffer/mesh-buffer'\nimport OctahedronBuffer from './buffer/octahedron-buffer'\nimport PointBuffer from './buffer/point-buffer'\nimport SphereBuffer from './buffer/sphere-buffer'\nimport TetrahedronBuffer from './buffer/tetrahedron-buffer'\nimport TextBuffer from './buffer/text-buffer'\nimport TorusBuffer from './buffer/torus-buffer'\nimport WidelineBuffer from './buffer/wideline-buffer'\n\n//\n\nimport './parser/cif-parser'\nimport './parser/gro-parser'\nimport './parser/mmtf-parser'\nimport './parser/mol2-parser'\nimport './parser/pdb-parser'\nimport './parser/pdbqt-parser'\nimport './parser/pqr-parser'\nimport './parser/sdf-parser'\n\nimport './parser/prmtop-parser'\nimport './parser/psf-parser'\nimport './parser/top-parser'\n\nimport './parser/dcd-parser'\nimport './parser/nctraj-parser'\nimport './parser/trr-parser'\nimport './parser/xtc-parser'\n\nimport './parser/cube-parser'\nimport './parser/dsn6-parser'\nimport './parser/dx-parser'\nimport './parser/dxbin-parser'\nimport './parser/mrc-parser'\nimport './parser/xplor-parser'\n\nimport './parser/kin-parser'\nimport './parser/obj-parser'\nimport './parser/ply-parser'\n\nimport './parser/csv-parser'\nimport './parser/json-parser'\nimport './parser/msgpack-parser'\nimport './parser/netcdf-parser'\nimport './parser/text-parser'\nimport './parser/xml-parser'\n\nimport './parser/validation-parser'\n\n//\n\nimport Shape from './geometry/shape'\nimport Kdtree from './geometry/kdtree'\nimport SpatialHash from './geometry/spatial-hash'\nimport Structure from './structure/structure'\nimport MolecularSurface from './surface/molecular-surface'\nimport Volume from './surface/volume'\n\n//\n\nimport './utils/gzip-decompressor'\n\n//\n\nimport './datasource/rcsb-datasource'\nimport './datasource/pubchem-datasource'\nimport './datasource/passthrough-datasource'\nimport StaticDatasource from './datasource/static-datasource'\nimport MdsrvDatasource from './datasource/mdsrv-datasource'\n\n//\n\nexport {\n  LeftMouseButton, MiddleMouseButton, RightMouseButton\n} from './constants'\nexport {MouseActionCallback} from './controls/mouse-actions'\nimport MouseActions from './controls/mouse-actions'\nimport KeyActions from './controls/key-actions'\nimport PickingProxy from './controls/picking-proxy'\nimport AtomProxy from './proxy/atom-proxy'\n\n//\n\nexport { Signal } from 'signals'\nexport {\n  Matrix3, Matrix4, Vector2, Vector3, Box3, Quaternion, Euler, Plane, Color\n} from 'three'\n\n//\n\nexport { UIStageParameters } from './ui/parameters'\nexport { StageParameters } from './stage/stage'\nexport { StructureComponentDefaultParameters } from './component/structure-component'\n\n//\n\nimport Version from './version'\n\nif (!(window as any).Promise) {\n  (window as any).Promise = _Promise\n}\n\nexport {\n  Version,\n  StaticDatasource,\n  MdsrvDatasource,\n  Colormaker,\n  Selection,\n  PdbWriter,\n  SdfWriter,\n  StlWriter,\n  Stage,\n  Viewer,\n  Collection,\n  ComponentCollection,\n  RepresentationCollection,\n  RepresentationElement,\n  Component,\n  ShapeComponent,\n  StructureComponent,\n  SurfaceComponent,\n  VolumeComponent,\n  StructureRepresentationType,\n  VolumeRepresentationType,\n\n  Assembly,\n  TrajectoryPlayer,\n  Superposition,\n  Frames,\n\n  Queue,\n  Counter,\n\n  AngleRepresentation,\n  AngleRepresentationParameters,\n  AxesRepresentation,\n  AxesRepresentationParameters,\n  BackboneRepresentation,\n  BallAndStickRepresentation,\n  BallAndStickRepresentationParameters,\n  BaseRepresentation,\n  CartoonRepresentation,\n  CartoonRepresentationParameters,\n  ContactRepresentation,\n  ContactRepresentationParameters,\n  DihedralRepresentation,\n  DihedralRepresentationParameters,\n  DihedralHistogramRepresentation,\n  DihedralHistogramRepresentationParameters,\n  DistanceRepresentation,\n  DistanceRepresentationParameters,\n  HelixorientRepresentation,\n  HyperballRepresentation,\n  HyperballRepresentationParameters,\n  LabelRepresentation,\n  LabelRepresentationParameters,\n  LicoriceRepresentation,\n  LineRepresentation,\n  LineRepresentationParameters,\n  MolecularSurfaceRepresentation,\n  MolecularSurfaceRepresentationParameters,\n  PointRepresentation,\n  PointRepresentationParameters,\n  RibbonRepresentation,\n  RibbonRepresentationParameters,\n  RocketRepresentation,\n  RocketRepresentationParameters,\n  RopeRepresentation,\n  SpacefillRepresentation,\n  StructureRepresentation,\n  StructureRepresentationParameters,\n  TraceRepresentation,\n  TraceRepresentationParameters,\n  TubeRepresentation,\n  UnitcellRepresentation,\n  UnitcellRepresentationParameters,\n  ValidationRepresentation,\n\n  BufferRepresentation,\n  ArrowBuffer,\n  BoxBuffer,\n  ConeBuffer,\n  CylinderBuffer,\n  EllipsoidBuffer,\n  MeshBuffer,\n  OctahedronBuffer,\n  PointBuffer,\n  SphereBuffer,\n  TetrahedronBuffer,\n  TextBuffer,\n  TorusBuffer,\n  WidelineBuffer,\n\n  Shape,\n\n  Structure,\n  Kdtree,\n  SpatialHash,\n  MolecularSurface,\n  Volume,\n\n  MouseActions,\n  KeyActions,\n  PickingProxy,\n\n  // added for eterna-extension\n  AtomProxy,\n}\n"],"names":["toStr","isCallable","maxSafeInteger","toLength","start","getQuery","id","window","const","m","RegExp","exec","location","search","decodeURIComponent","defaults","value","defaultValue","undefined","createParams","params","defaultParams","o","Object","assign","k","updateParams","newParams","flatten","array","ret","let","i","length","Array","isArray","push","getProtocol","protocol","match","getBrowser","ua","navigator","userAgent","test","openUrl","url","open","href","download","data","downloadName","isSafari","isChromeIos","a","document","createElement","msSaveOrOpenBlob","FileReader","Blob","reader","onloadend","result","readAsDataURL","objectUrlCreated","URL","createObjectURL","style","display","body","appendChild","target","click","removeChild","revokeObjectURL","str","replace","throttle","func","wait","options","context","args","timeout","previous","later","leading","Date","now","apply","remaining","this","arguments","clearTimeout","trailing","setTimeout","lexicographicCompare","elm1","elm2","binarySearchIndexOf","element","compareFunction","low","high","mid","cmp","rangeInSortedArray","min","max","indexLeft","leftRange","binarySearchForLeftRange","indexRight","rightRange","binarySearchForRightRange","uniqueArray","sort","filter","index","sorted","uint8ToString","u8a","chunkSize","c","String","fromCharCode","subarray","join","getTypedArray","arrayType","arraySize","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Error","getUintArray","sizeOrArray","maxUint","ensureBuffer","buffer","ArrayBuffer","_ensureClassFromArray","constructor","fromArray","ensureVector3","v","Vector3","ensureMatrix4","Matrix4","ensureQuaternion","q","Quaternion","ensureFloat32Array","arg","toLowerCaseString","toString","toLowerCase","console","properties","split","methods","pop","HTMLCanvasElement","prototype","toBlob","defineProperty","callback","type","quality","bin","atob","toDataURL","len","len32","a8","a32","j","charCodeAt","tailLength","Math","cbrt","x","y","pow","abs","sign","isNaN","Number","isInteger","nVal","isFinite","floor","enumerable","configurable","writable","TypeError","pendingException","to","hasPendingException","nextSource","keysArray","keys","nextIndex","nextKey","desc","getOwnPropertyDescriptor","e","startsWith","object","$defineProperty","error","string","call","stringLength","searchString","searchLength","position","pos","endsWith","subjectString","lastIndex","indexOf","repeat","count","RangeError","Infinity","rpt","includes","searchElement","O","parseInt","currentElement","n","from","fn","number","toInteger","arrayLike","C","items","T","mapFn","kValue","A","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","Function","name","get","performance","self","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Registry","_dict","degToRad","deg","add","key","prototypeAccessors","names","chars","uuid","generateUUID","r","rnd","random","clamp","lerp","stop","alpha","spline","p0","p1","p2","p3","t","tension","v0","v1","t2","smoothstep","normalize","colorSpace","ScaleDefaultParameters","scale","mode","domain","reverse","tmpColor","Color","manageColor","_target","_name","descriptor","originalMethod","fromTo","bind","set","convertSRGBToLinear","getHex","kwd","Colormaker","parameters","structure","atomProxy","getAtomProxy","getScale","p","slice","chroma","out","colorToArray","color","offset","atomColorToArray","atom","atomColor","bondColor","bond","atomIndex1","atomIndex2","bondColorToArray","volumeColorToArray","volumeColor","positionColorToArray","coords","positionColor","SelectAllKeyword","SelectNoneKeyword","AtomOnlyKeywords","BACKBONE","SIDECHAIN","BONDED","RING","AROMATICRING","METAL","POLARH","ChainKeywords","POLYMER","WATER","SmallResname","NucleophilicResname","HydrophobicResname","AromaticResname","AmideResname","AcidicResname","BasicResname","ChargedResname","PolarResname","NonpolarResname","CyclicResname","AliphaticResname","atomTestFn","s","atomname","altloc","atomindex","keyword","inscode","resname","sstruc","resno","chainname","model","isBackbone","isSidechain","isBonded","isRing","isAromatic","HETERO","isHetero","PROTEIN","isProtein","NUCLEIC","isNucleic","RNA","isRna","DNA","isDna","isPolymer","isWater","HELIX","isHelix","SHEET","isSheet","TURN","isTurn","ION","isIon","SACCHARIDE","isSaccharide","isMetal","isPolarHydrogen","modelIndex","residueTestFn","atomOffset","atomEnd","chainTestFn","entity","modelTestFn","makeTest","selection","rules","negate","f","subTests","hasOwnProperty","and","operator","na","ALL","NONE","filtered","fs","makeAtomTest","atomOnly","filteredSelection","makeResidueTest","residueOnly","makeChainTest","chainOnly","makeModelTest","modelOnly","Selection","signals","stringChanged","Signal","setString","silent","retSelection","newSelection","oldSelection","selectionStack","trim","charAt","substr","chunks","createNewContext","getPrevContext","pushRule","rule","not","cu","toUpperCase","sele","substring","chain","negate2","resi","resiSingle","resiRange","map","resnameList","indexList","b","lastRule","parseSele","message","residueTest","chainTest","modelTest","atomOnlyTest","residueOnlyTest","chainOnlyTest","modelOnlyTest","dispatch","isAllSelection","isNoneSelection","SelectionColormaker","super","dataList","forEach","ColormakerRegistry","hasScheme","scheme","colormakerList","getScheme","selectionList","ColormakerScales","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set1","Set2","Set3","Dark2","Paired","Pastel1","Pastel2","Accent","rainbow","rwb","ColormakerModes","rgb","hsv","hsl","hsi","lab","hcl","schemes","userSchemes","getSchemes","types","getScales","getModes","addScheme","label","_createScheme","_addUserScheme","removeScheme","_Colormaker","addSelectionScheme","MySelectionColormaker","ParserRegistry","__hasObjName","objName","parser","__objName","isTrajectory","isStructure","isVolume","isSurface","isBinary","isXml","isJson","getTrajectoryExtensions","getStructureExtensions","getVolumeExtensions","getSurfaceExtensions","getWorkerDeps","vars","deps","sym","__deps","makeWorkerString","onmessage","__name","postId","__postId","aMessage","transferList","postMessage","makeWorkerBlob","WorkerRegistry","_funcDict","_depsDict","_blobDict","Browser","SupportsPassiveEventHandler","opts","addEventListener","Mobile","orientation","SupportsReadPixelsFloat","setSupportsReadPixelsFloat","ExtensionFragDepth","setExtensionFragDepth","Log","log","info","warn","time","timeEnd","MeasurementDefaultParams","labelColor","labelAttachment","labelSize","labelZOffset","labelYOffset","labelBorder","labelBorderColor","labelBorderWidth","lineOpacity","linewidth","opacity","labelUnit","arcVisible","planeVisible","setMeasurementDefaultParams","Debug","setDebug","ListingDatasource","TrajectoryDatasource","ScriptExtensions","_WorkerRegistry","_ColormakerRegistry","DatasourceRegistry","RepresentationRegistry","_ParserRegistry","ShaderRegistry","DecompressorRegistry","ComponentRegistry","BufferRegistry","PickerRegistry","setListingDatasource","setTrajectoryDatasource","Streamer","src","compressed","binary","json","xml","read","_read","then","decompressFn","_chunk","end","chunk","peekLines","newline","chunkToLines","lines","chunkCount","asText","partialLine","isLast","idx","lastIndexOf","str2","concat","nextChunk","__pointer","nextChunkOfLines","d","__partialLine","eachChunk","round","eachChunkOfLines","chunkNo","dispose","FileStreamer","Promise","resolve","reject","file","onload","event","onerror","readAsArrayBuffer","readAsText","NetworkStreamer","xhr","XMLHttpRequest","status","response","statusText","responseType","send","Loader","ext","dir","path","streamerParams","File","streamer","ParserLoader","parserParams","voxelSize","firstModelOnly","asTrajectory","cAlphaOnly","delimiter","comment","columnNames","load","parse","Script","functionBody","elementAdded","elementRemoved","nameChanged","run","stage","ScriptLoader","getFileInfo","compressedExtList","queryIndex","query","base","nameSplit","protocolMatch","getDataInfo","datasource","getUrl","getExt","autoLoad","loader","Writer","getBlob","getData","mimeType","defaultName","defaultExt","PdbWriter","renumberSerial","remarks","ensureArray","_records","_writeRecords","_writeTitle","_writeRemarks","_writeAtoms","sprintf","trajectory","ia","im","charge","chargeSign","eachModel","eachAtom","formatString","hetero","serial","formalCharge","toPrecision","z","occupancy","bfactor","getSelection","getString","SdfWriter","idString","titleString","title","countsString","atomCount","bondCount","chargeLines","pairs","ap","nCharges","formatAtom","line","formatBond","bp","bondOrder","_writeHeader","_writeCTab","_writeFooter","eachBond","charArray","IOBuffer","dataIsGiven","byteLength","dvOffset","byteOffset","_lastWrittenByte","_data","DataView","available","isLittleEndian","littleEndian","setLittleEndian","isBigEndian","setBigEndian","skip","seek","mark","_mark","reset","pushMark","_marks","popMark","rewind","ensureAvailable","newLength","newArray","readBoolean","readUint8","readInt8","getInt8","getUint8","readByte","readBytes","bytes","readInt16","getInt16","readUint16","getUint16","readInt32","getInt32","readUint32","getUint32","readFloat32","getFloat32","readFloat64","getFloat64","readChar","readChars","writeBoolean","writeUint8","writeInt8","setInt8","_updateLastWrittenByte","setUint8","writeByte","writeBytes","writeInt16","setInt16","writeUint16","setUint16","writeInt32","setInt32","writeUint32","setUint32","writeFloat32","setFloat32","writeFloat64","setFloat64","writeChar","writeChars","toArray","StlWriter","surface","triangles","output","vector","vectorNorm1","vectorNorm2","vectorNorm3","indices","normal","addVectors","Counter","countChanged","signalsWrapper","clear","change","delta","increment","decrement","listen","counter","unlisten","has","remove","onZeroOnce","Stats","updated","begin","update","startTime","currentTime","lastFrames","frames","lastDuration","minDuration","maxDuration","avgDuration","prevFpsTime","lastFps","reInclude","shaderCache","getShader","defines","hash","definesText","getDefines","shaderText","ShaderChunk","WebGLRenderingContext","wrcp","_getShaderParameter","getShaderParameter","_getShaderInfoLog","getShaderInfoLog","_getProgramParameter","getProgramParameter","program","pname","LINK_STATUS","_getProgramInfoLog","getProgramInfoLog","JitterVectors","offsetList","TiledRenderer","renderer","camera","viewer","_viewer","_factor","factor","_antialias","antialias","_onProgress","onProgress","_onFinish","onFinish","_n","_width","width","_height","height","canvas","_ctx","getContext","_viewerSampleLevel","sampleLevel","setSampling","_renderTile","offsetX","offsetY","setViewOffset","render","w","h","drawImage","domElement","ceil","_finalize","view","renderAsync","TwoPI","PI","RAD2DEG","circularMean","stride","cosMean","sinMean","angle","cos","sin","atan2","calculateCenterArray","array1","array2","center","calculateDirectionArray","direction","uniformArray","optionalTarget","uniformArray3","serialArray","serialBlockArray","replicateArrayEntries","repArr","copyArray","dst","srcOffset","dstOffset","copyWithin","arrayMax","il","arrayMin","arraySum","sum","arrayMean","ImageDefaultParameters","transparent","makeImage","originalClearAlpha","getClearAlpha","backgroundColor","getClearColor","setLineWidthAndPixelSize","invert","scene","traverse","material","uniforms","size","__seen","trimCanvas","bg","g","doBreak","off","canvasHeight","canvasWidth","pixels","getImageData","topY","topX","bottomY","bottomX","trimedCanvas","_trimCanvas","finished","tiledRenderer","blob","setClearAlpha","requestRender","vertex","matrix","modelViewProjectionMatrix","resolution","Vector2","projectionMatrixInverse","projectionMatrixTranspose","updateCameraUniforms","group","getInverse","projectionMatrix","copy","transpose","u","loadShader","gl","shaderSource","shaderType","shader","createShader","compileShader","COMPILE_STATUS","deleteShader","getExtension","TextureTestTexCoords","testTextureSupport","vertShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","shaders","attribs","locations","createProgram","attachShader","attrib","bindAttribLocation","linkProgram","deleteProgram","useProgram","positionLocation","getAttribLocation","colorLoc","getUniformLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","whiteTex","createTexture","whiteData","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","tex","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","fb","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","uniform4fv","drawArrays","TRIANGLES","clearColor","COLOR_BUFFER_BIT","pixel","readPixels","floatPixel","getError","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","pixelBufferFloat","pixelBufferUint","pixelOrder","tmpMatrix","onBeforeRender","geometry","updateList","objectId","modelViewMatrixInverse","modelViewMatrixInverseTranspose","modelViewProjectionMatrixInverse","modelViewMatrix","multiplyMatrices","matrixWorldInverse","matrixWorld","materialProperties","pu","getUniforms","setValue","Viewer","idOrElement","Box3","memory","programs","geometries","textures","calls","vertices","faces","points","ticked","rendered","elm","getElementById","container","HTMLElement","innerWidth","innerHeight","box","getBoundingClientRect","overflow","wrapper","_initParams","_initStats","_initCamera","_initScene","_initRenderer","_initHelper","setBackground","setFog","animate","fogColor","fogNear","fogFar","cameraType","cameraFov","cameraEyeSep","cameraZ","clipNear","clipFar","clipDist","clipMode","clipScale","lightColor","lightIntensity","ambientColor","ambientIntensity","rendererEncoding","LinearEncoding","lookAt","perspectiveCamera","PerspectiveCamera","orthographicCamera","OrthographicCamera","stereoCamera","StereoCamera","aspect","eyeSep","updateProjectionMatrix","stats","Scene","rotationGroup","Group","translationGroup","modelGroup","pickingGroup","backgroundGroup","helperGroup","fog","Fog","spotLight","SpotLight","ambientLight","AmbientLight","dpr","devicePixelRatio","WebGLRenderer","preserveDrawingBuffer","innerHTML","setPixelRatio","setSize","autoClear","sortObjects","outputEncoding","capabilities","isWebGL2","extensions","supportsHalfFloat","dprWidth","dprHeight","JSON","stringify","OES_texture_float","OES_texture_half_float","WEBGL_color_buffer_float","pickingTarget","WebGLRenderTarget","minFilter","NearestFilter","magFilter","stencilBuffer","format","RGBAFormat","FloatType","UnsignedByteType","texture","generateMipmaps","encoding","setRenderTarget","sampleTarget","LinearFilter","holdTarget","compositeUniforms","tForeground","Uniform","compositeMaterial","ShaderMaterial","vertexShader","fragmentShader","premultipliedAlpha","blending","AdditiveBlending","depthTest","depthWrite","compositeCamera","compositeScene","Mesh","PlaneGeometry","positions","bbGeometry","BufferGeometry","setIndex","BufferAttribute","setAttribute","bbMaterial","uColor","boundingBoxMesh","LineSegments","updateHelper","attributes","boundingBox","needsUpdate","isEmpty","computeBoundingSphere","cameraDistance","instanceList","instance","addBuffer","wireframeGroup","background","pickable","setUserData","children","userData","mesh","getMesh","applyMatrix4","wireframeMesh","getWireframeMesh","quaternion","pickingMesh","getPickingMesh","_updateBoundingBox","updateBoundingBox","instanceMatrix","updateGeometry","computeBoundingBox","geoBoundingBox","clone","equals","expandByScalar","union","updateNode","node","makeEmpty","getSize","boundingBoxSize","boundingBoxLength","getPickingPixels","imgBuffer","readRenderTargetPixels","getImage","picking","imgBuffer2","ctx","imgData","putImageData","setLight","intensity","near","far","setClearColor","getStyle","level","setOutputEncoding","setColorWorkflow","sRGBEncoding","setCamera","fov","up","updateZoom","setClip","dist","left","right","top","bottom","handleResize","updateInfo","rInfo","rMemory","rRender","isStill","currentSampleLevel","renderPending","frameRequest","pick","pid","picker","pixelBuffer","oid","getObjectById","tan","zoom","absoluteToRelative","bRadius","relativeToAbsolute","__updateClipping","getWorldPosition","distVector","cDist","nearFactor","farFactor","fogNearFactor","fogFarFactor","__updateCamera","updateMatrix","updateMatrixWorld","pixelRatio","getPixelRatio","ortho","nearClip","updateMaterialUniforms","traverseVisible","Points","sortParticles","sortData","sortArray","zArray","cmpFn","indexSrc","tmpTab","__zArray","__sortArray","__cmpFn","ai","bi","arr","tmp","stack","sp","swap","tmp2","quicksortCmp","attr","itemSize","sortProjectedPosition","__setVisibility","helper","visible","__updateLights","setLength","__renderPickingGroup","__renderModelGroup","renderTarget","__renderSuperSample","baseSampleWeight","sampleWeight","clearViewOffset","__renderStereo","_renderTarget","setScissorTest","setScissor","setViewport","cameraL","__render","cameraR","lastRenderedPicking","rendering","LeftMouseButton","MiddleMouseButton","RightMouseButton","getTouchDistance","dx","touches","pageX","dy","pageY","sqrt","MouseObserver","moved","scrolled","dragged","dropped","clicked","hovered","doubleClicked","touchAction","hoverTimeout","handleScroll","doubleClickSpeed","_listen","_onMousewheel","_onMousemove","_onMousedown","_onMouseup","_onContextmenu","_onTouchstart","_onTouchend","_onTouchmove","opt","passive","altKey","ctrlKey","metaKey","shiftKey","setParameters","cp","canvasPosition","doubleClickPending","lastClicked","lastMoved","moving","hovering","overElement","preventDefault","_setKeys","deltaMode","WheelEvent","DOM_DELTA_PIXEL","deltaY","DOM_DELTA_LINE","wheelDelta","wheelDeltaY","detail","prevPosition","clientX","clientY","_setCanvasPosition","pressed","down","which","buttons","button","getMouseButtons","_distance","prevClickCP","distanceTo","lastTouchDistance","touchDistance","removeEventListener","tmpRotateXMatrix","tmpRotateYMatrix","tmpRotateZMatrix","tmpRotateMatrix","tmpRotateCameraMatrix","tmpRotateVector","tmpRotateQuaternion","tmpRotateQuaternion2","tmpPanMatrix","tmpPanVector","tmpAtomVector","TrackballControls","rotateSpeed","zoomSpeed","panSpeed","mouse","mouseObserver","controls","viewerControls","component","transformComponent","transformAtom","_setPanVector","scaleFactor","getCanvasScaleFactor","multiplyScalar","_getRotateXY","_getCameraRotation","extractRotation","multiply","makeRotationY","_transformPanVector","transform","premultiply","pan","translate","panComponent","panAtom","positionToVector3","positionAdd","updateRepresentations","rotate","setFromAxisAngle","makeRotationFromQuaternion","applyMatrix","zRotate","dz","makeRotationZ","rotateComponent","makeRotationAxis","setFromRotationMatrix","tmpVec","PickingProxy","pickingData","getComponentsByObject","list","getObject","getPosition","closestBondAtom","atom1","v2","atom2","acp1","getPositionOnCanvas","acp2","closeAtom","ca","acp","radius","getMaxRepresentationRadius","arrow","_objectIfType","axes","cone","clash","contact","cylinder","distance","ellipsoid","octahedron","point","sphere","tetrahedron","torus","unitcell","unknown","volume","wideline","getLabel","msg","qualifiedName","shape","PickingControls","pickerArray","tmpQ","tmpP","tmpS","tmpCanvasVector","tmpScaleVector","tmpAlignMatrix","ViewerControls","changed","rotation","project","getCameraDistance","getOrientation","setPosition","orient","decompose","setRotationFromQuaternion","spin","axis","rotateOnAxis","align","basis","setRotationFromMatrix","Animation","duration","_init","done","paused","_paused","tick","elapsedDuration","pausedDuration","_tick","_resolveList","pause","hold","_hold","pausedTime","resume","releaseHold","toggle","SpinAnimation","RockAnimation","angleStep","angleEnd","angleSum","MoveAnimation","moveFrom","moveTo","lerpVectors","ZoomAnimation","zoomFrom","zoomTo","RotateAnimation","rotateFrom","rotateTo","_currentRotation","slerp","ValueAnimation","valueFrom","valueTo","TimeoutAnimation","AnimationList","_list","prototypeAccessors$1","every","animation","AnimationControls","animationList","splice","finishedList","rock","move","zoomMove","orientTo","spinComponent","rockComponent","moveComponent","Queue","argList","next","queue","shift","pending","kill","Representation","lazy","step","clipRadius","precision","clipCenter","flatShaded","side","front","back","double","wireframe","colorData","colorScheme","colorScale","colorReverse","colorValue","colorDomain","colorMode","roughness","metalness","diffuse","diffuseInterior","useInteriorColor","interiorColor","interiorDarkening","disablePicking","rebuild","tasks","make","bufferList","toBePrepared","init","setColor","lazyProps","build","bufferParams","what","tp","sphereDetail","radialSegments","openEnded","disableImpostor","getColorParams","getBufferParams","val","prepare","cb","create","updateWhat","_make","manualAttach","disposed","attach","setVisibility","noRenderRequest","updateParameters","int","float","parseFloat","getParameters","_Worker","blobUrl","worker","Worker","activeWorkerCount","onmessageDict","onerrorDict","post","postCount","__debug","terminate","WorkerPool","maxCount","calculateMeanVector3","projectPointOnVector","origin","sub","projectOnVector","minX","minY","minZ","maxX","maxY","maxZ","l","v3new","applyMatrix4toVector3array","applyMatrix3toVector3array","normalizeVector3array","len2","v3cross","ax","ay","az","bx","by","bz","v3dot","v3sub","v3add","v3fromArray","v3toArray","input","v3length2","v3length","v3divideScalar","v3multiplyScalar","v3normalize","length2","v3subScalar","v3addScalar","v3floor","v3ceil","v3negate","getFixedCountDashData","segmentCount","position1","sn3","position2","i3","j3","f1","f2","replicateArray3Entries","primitiveId","getFixedLengthDashData","segmentLength","pos1","pos2","col","rad","getFixedLengthWrappedDashData","drawing","k3","kprev","vl","inv","getNextWorker","pool","nextWorker","minPending","Primitive","staticAccessors","Picker","Buffer","getShapeKey","expandBoundingBox","valueToShape","_primitiveData","fields","objectToShape","valueFromShape","objectFromShape","arrayFromShape","dataFromShape","bufferFromShape","SpherePrimitive","positionFromShape","expandByPoint","BoxPrimitive","heightAxis","depthAxis","OctahedronPrimitive","TetrahedronPrimitive","CylinderPrimitive","dashedCylinder","ArrowPrimitive","ConePrimitive","EllipsoidPrimitive","majorAxis","minorAxis","TorusPrimitive","TextPrimitive","text","PointPrimitive","WidelinePrimitive","SpatialHash","bb","createBoundingBox","boundX","exp","boundY","boundZ","an","xArray","yArray","grid","bucketIndex","bucketCount","bucketOffset","bucketFill","bucketArray","bucketIdx","within","eachWithin","atomIndex","rSq","loX","loY","loZ","hiX","hiY","hiZ","ix","iy","iz","dSq","Store","_fields","_defaultFields","_initField","addField","resize","tmpArray","growIfFull","copyFrom","other","thisOffset","otherOffset","thisField","otherField","thisIndex","otherIndex","offsetTarget","offsetSource","targetIndex","sourceIndex","thisStore","tmpStore","quicksort","pivot","leftNew","rightNew","index1","index2","ContactStore","addContact","hammingWeight","BitArray","setAll","_words","createAdjacencyList","edges","countArray","nodeCount","offsetArray","edgeCount","nodeArray1","nodeArray2","bondCount2","indexArray","idx1","idx2","j1","j2","createFeatureState","atomSet","addAtom","state","addFeature","features","groups","centers","atomSets","flip","_assignRange","words","wordValue","wordStart","wordEnd","startWord","endWord","setRange","clearRange","setBits","clearBits","clearAll","flipAll","bs","_isRangeValue","isRangeSet","isRangeClear","isAllSet","isAllClear","isSet","isClear","isEqualTo","otherBitarray","words1","words2","difference","intersection","intersects","getIntersectionSize","makeIntersection","wordsA","answer","toSeleString","ChemCompProtein","ChemCompRna","ChemCompDna","ChemCompSaccharide","ChemCompHetero","SecStrucHelix","SecStrucSheet","SecStrucTurn","AtomicNumbers","H","D","HE","LI","BE","B","N","F","NE","NA","MG","AL","SI","P","S","CL","AR","K","CA","SC","TI","V","CR","MN","FE","CO","NI","CU","ZN","GA","GE","AS","SE","BR","KR","RB","SR","Y","ZR","NB","MO","TC","RU","RH","PD","AG","CD","IN","SN","SB","TE","I","XE","CS","BA","LA","CE","PR","ND","PM","SM","EU","GD","TB","DY","HO","ER","TM","YB","LU","HF","TA","W","RE","OS","IR","PT","AU","HG","TL","PB","BI","PO","AT","RN","FR","RA","AC","TH","PA","U","NP","PU","AM","CM","BK","CF","ES","FM","MD","NO","LR","RF","DB","SG","BH","HS","MT","DS","RG","CN","NH","FL","MC","LV","TS","OG","VdwRadii","CovalentRadii","Valences","OuterShellElectronCounts","ResidueHydrophobicity","ALA","ARG","ASN","ASP","ASH","CYS","GLN","GLU","GLH","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL","DefaultResidueHydrophobicity","AA1","SEC","PYL","AA3","RnaBases","DnaBases","PurinBases","Bases","WaterNames","IonNames","SaccharideNames","ProteinBackboneAtoms","NucleicBackboneAtoms","ResidueTypeAtoms","assignGeometry","totalCoordination","trace","direction1","direction2","backboneStart","backboneEnd","Angles","Map","calcAngles","ap1","ap2","angles","d1","d2","subVectors","eachBondedAtom","angleTo","calcPlaneAngle","x1","v12","neighbours","ni","cross","ValenceModel","implicitH","totalH","idealGeometry","hydrogenCount","bondToElementCount","assignCharge","assignH","degree","valence","explicitValence","conjugated","_bp","getBondProxy","atomicNumber","flag","a2","getOtherAtom","b2","atomicNumber2","isConjugated","multiBond","implicitHCount","geom","ba","oa","calculateHydrogensCharge","chg","implH","totH","valenceModel","isPhosphate","PositvelyCharged","NegativelyCharged","addChargedContacts","contacts","maxIonicDist","ContactDefaultParams","maxPiStackingDist","maxPiStackingOffset","maxPiStackingAngle","maxCationPiDist","maxCationPiOffset","masterIdx","masterModelIndex","maxDistance","maxPiStackingDistSq","maxCationPiDistSq","atomStore","v3","n1","n2","getNormal","atoms","crossVectors","getOffset","projectOnPlane","ct","featureSet","contactStore","spatialHash","invalidAtomContact","ti","tj","isIonicInteraction","atomSet1","atomSet2","maxDist","sn","sm","si","sj","areAtomSetsWithinDist","isPiStacking","isCationPi","isHistidineNitrogen","IonicTypeMetals","halBondElements","X","OptimalHalogenAngle","OptimalAcceptorAngle","isMasterContact","maxHydrophobicDist","maxHbondDist","maxHbondSulfurDist","maxHbondAccAngle","maxHbondDonAngle","maxHbondAccPlaneAngle","maxHbondDonPlaneAngle","maxHalogenBondDist","maxHalogenBondAngle","maxMetalDist","refineSaltBridges","lineOfSightDistFactor","residueIndex","calculateFeatures","atomInGroupDict","eachResidue","addGroup","terminalNitrogenCount","isGuanidine","isAcetamidine","addPositiveCharges","isSulfonicAcid","isSulfate","terminalOxygenCount","isCarboxylate","addNegativeCharges","rings","getAromaticRings","ring","addAromaticRings","totalBonds","ig","addHydrogenAcceptors","addHydrogenDonors","ringData","residueType","getRings","hasElement","some","residueAtomOffset","atomTypeId","atomTypeIdList","atomMap","inAromaticRingWithElectronNegativeElement","addWeakHydrogenDonors","dative","ionic","isStandardAminoacid","isStandardBase","isHalogen","addMetalBinding","isTransitionMetal","addMetals","addHydrophobic","addHalogenAcceptors","addHalogenDonors","calculateContacts","createContacts","maxHbondDistSq","donor","acceptor","isWeak","isWeakHydrogenBond","isHydrogenBond","connectedTo","donorAngles","idealDonorAngle","donorAngle","outOfPlane","acceptorAngles","idealAcceptorAngle","acceptorAngle","bondType","isWaterHydrogenBond","isBackboneHydrogenBond","addHydrogenBonds","m1","m2","addMetalComplexation","addHydrophobicContacts","halogenAngles","halogen","addHalogenBonds","frozenContacts","adjacencyList","contactSet","createFrozenContacts","ac1","ac2","aw","c1","c2","lineOfSightDist","lineOfSightDistFactorSq","cx","cy","cz","as1","as2","vdw","distanceToSquared","refineLineOfSight","residueContactDict","handleResidueContact","minDist","minIndex","refineHydrophobicContacts","ionicInteractionDict","isHydrogenBondType","iil1","iil2","piStackingDict","pil1","pil2","refinePiStacking","refineMetalCoordination","contactTypeName","ContactDataDefaultParams","hydrogenBond","hydrophobic","halogenBond","ionicInteraction","metalCoordination","cationPi","piStacking","weakHydrogenBond","waterHydrogenBond","backboneHydrogenBond","filterSele","getContactData","filterSet","getAtomSet","setHex","contactColor","color2","ContactPicker","getIndex","_applyTransformations","_getPosition","ShapePicker","primitive","CylinderPicker","prototypeAccessors$2","ArrowPicker","prototypeAccessors$3","AtomPicker","prototypeAccessors$4","AxesPicker","prototypeAccessors$5","BondPicker","bondStore","prototypeAccessors$6","prototypeAccessors$7","center1","center2","ConePicker","prototypeAccessors$8","ClashPicker","validation","prototypeAccessors$9","clashArray","_getAtomProxyFromSele","getAtomIndices","sele1","sele2","DistancePicker","prototypeAccessors$10","EllipsoidPicker","prototypeAccessors$11","OctahedronPicker","prototypeAccessors$12","BoxPicker","prototypeAccessors$13","IgnorePicker","prototypeAccessors$14","MeshPicker","prototypeAccessors$15","__position","SpherePicker","prototypeAccessors$16","SurfacePicker","prototypeAccessors$17","TetrahedronPicker","prototypeAccessors$18","TorusPicker","prototypeAccessors$19","UnitcellPicker","prototypeAccessors$20","getCenter","VolumePicker","prototypeAccessors$22","vol","dp","SlicePicker","prototypeAccessors$23","PointPicker","prototypeAccessors$24","WidelinePicker","prototypeAccessors$25","getEdgeTable","getTriTable","getAllowedContours","MarchingCubes","field","nx","ny","nz","normalCache","vertexIndex","icount","mx","my","mz","isolevel","noNormals","contour","wrap","isNegativeIso","normalFactor","yd","zd","ilist","positionArray","normalArray","atomindexArray","edgeTable","triTable","allowedContours","VIntX","valp1","valp2","_q","mu","nc","q3","VIntY","q6","VIntZ","compNorm","polygonize","fx","fy","fz","edgeFilter","q1","qy","qz","q1y","q1z","qyz","q1yz","cubeindex","field0","field1","field2","field3","field4","field5","field6","field7","bits","fx2","fy2","fz2","e1","e2","e3","triIndex","triangulate","xBeg","yBeg","zBeg","xEnd","yEnd","zEnd","yOffset","zOffset","xBeg2","yBeg2","zBeg2","xEnd2","yEnd2","zEnd2","__break","__xBeg","__yBeg","__zBeg","__xEnd","__yEnd","__zEnd","_isolevel","_noNormals","_box","_contour","_wrap","vIndexLength","Matrix","cols","rows","At","nrows","ncols","Ai","Ati","pAt","ad","atd","multiplyABt","Ap","pA","pB","Cp","mrows","bd","cd","multiply3x3","Cd","Ad","Bd","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","meanRows","mean","subRows","row","i0","i1","hypot","copyTo","svd","at","_m","amt","wmt","vmt","astep","_W","Vt","vstep","iter","maxIter","Aj","Vi","Vj","t0","t1","sd","beta","gamma","seed","val0","asum","Float64Array","EPSILON","JacobiSVDImpl","m4new","m4set","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","m4multiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","m4makeScale","m4makeTranslation","m4makeRotationY","theta","m3new","m3makeNormal","m4","r0","r1","r2","laplacianSmooth","verts","numiter","inflate","nv","nf","norms","jl","flagvert","tps","vertdeg","ao","bo","co","vi3","vdi","wtvi","wt2vi","wt2","outwt","computeVertexNormals","nv3","ab","ci","getRadiusDict","radiusList","radiusDict","getSurfaceGrid","maxRadius","extraMargin","margin","dim","maxSize","tmpSize","tran","mroty","mscale","mtrans","Surface","Geometry","fromGeometry","setFromArray","VolumeSurface","mc","getSurface","smooth","normalMatrix","geo","getColor","colormaker","tc","getPicking","getFilteredIndex","filteredIndex","elementSize","include","getAtomindex","volsurf","Volume","Matrix3","inverseMatrix","setData","getThreeSide","FrontSide","BackSide","DoubleSide","setAtomindex","_position","_min","_max","_mean","_rms","setStats","rms","setMatrix","me","elements","ne","getBox","_getBox","__box","_makeSurface","getValueForSigma","getSurfaceWorker","workerPool","sigma","getSigmaForValue","getDataAtomindex","getDataPosition","getDataColor","getDataPicking","getDataSize","_sum","sumSq","di","arrayRms","header","setObjectMatrix","matrixWorldNeedsUpdate","BufferDefaultParameters","opaqueBack","forceTransparent","BufferParameterTypes","updateShader","property","uniform","updateVisibility","defaultParameters","UniformsUtils","merge","UniformsLib","common","emissive","lights","pickingUniforms","_positionDataSize","addAttributes","initIndex","makeWireframeGeometry","attributeSize","nindex","setUsage","dynamic","DYNAMIC_DRAW","makeMaterial","vertexColors","derivatives","fragDepth","isImpostor","wm","pm","NoBlending","wireframeMaterial","pickingMaterial","makeWireframeIndex","wireframeIndex","wireframeGeometry","setDrawRange","wireframeIndexCount","checkEdge","drawRange","wireframeIndexVersion","indexVersion","updateWireframeIndex","updateRange","getRenderOrder","renderOrder","isText","_getMesh","materialName","isLine","isPoint","frustumCulled","getVertexShader","getFragmentShader","NEAR_CLIP","RADIUS_CLIP","PICKING","NOLIGHT","FLAT_SHADED","OPAQUE_BACK","DIFFUSE_INTERIOR","USE_INTERIOR_COLOR","addUniforms","buf","updateRenderOrder","setRenderOrder","pt","parameterTypes","pv","propertyData","uniformData","doShaderUpdate","doVisibilityUpdate","setProperties","setUniforms","setAttributes","attribute","wu","isVector3","toJSON","MeshBuffer","SurfaceBuffer","setVisibilityTrue","setVisibilityFalse","DoubleSidedBuffer","frontBuffer","backBuffer","frontMeshes","backMeshes","ContourBuffer","SurfaceRepresentation","isolevelType","negateIsolevel","isolevelScroll","boxSize","colorVolume","useWorker","boxCenter","__boxCenter","setBox","__isolevel","__smooth","__contour","__wrap","__boxSize","onSurfaceFinish","surfaceBuffer","dullInterior","surfaceData","MouseActions","zoomScroll","trackballControls","clipNearScroll","focusScroll","focus","getFocus","almostIdentity","setFocus","zoomFocusScroll","eachRepresentation","reprElem","comp","repr","panDrag","rotateDrag","zRotateDrag","zoomDrag","zoomFocusDrag","panComponentDrag","panAtomDrag","rotateComponentDrag","movePick","pickingProxy","animationControls","tooltipPick","tt","tooltip","mp","innerText","MouseActionPresets","default","measurePick","measureClear","pymol","coot","astexviewer","triggerFromString","tokens","MouseControls","disabled","preset","actionList","triggerStr","wildcard","action","KeyActions","autoView","toggleAnimations","toggleRock","KeyActionPresets","toggleSpin","toggleAntialiasing","KeyControls","char","PickingBehavior","mouseControls","_onClick","_onHover","pickingControls","MouseBehavior","_onMove","_onScroll","_onDrag","_onDblclick","AnimationBehavior","_onTick","KeyBehavior","keyControls","outline","_focusDomElement","_onKeydown","_onKeyup","_onKeypress","pressedKey","KeyboardEvent","keyCode","Annotation","content","_viewerPosition","_updateViewerPosition","_canvasPosition","_cameraPosition","pointerEvents","whiteSpace","setContent","_update","matrixChanged","displayValue","padding","fontFamily","_clientRect","getVisibility","vp","cr","depth","zIndex","ComponentControls","RadiusFactoryTypes","covalent","explicit","RadiusFactory","atomRadius","negateVector","PrincipalAxes","n3","pointsT","vm","van","vbn","vcn","va","vb","vc","begA","endA","begB","endB","begC","endC","vecA","vecB","vecC","normVecA","normVecB","normVecC","getBasisMatrix","makeBasis","determinant","getRotationQuaternion","inverse","getProjectedScaleForAtoms","d1a","d1b","d2a","d2b","d3a","d3b","ax1","ax2","ax3","dp1","dot","dt1","dp2","dt2","dp3","dt3","FilteredVolume","minValue","maxValue","outside","setFilter","_getFilterHash","DMEAN","ARMS","filterHash","_filterHash","_dataBuffer","_positionBuffer","_atomindexBuffer","filteredAtomindex","filteredData","filteredPosition","BondHash","al","BondStore","addBond","ai1","ai2","addBondIfConnected","AtomStore","setAltloc","getAltloc","code","ResidueStore","setSstruc","getSstruc","setInscode","getInscode","ChainStore","setChainname","getChainname","setChainid","chainid","getChainid","ModelStore","Helixorient","polymer","residueCount","getCenterIterator","cache","idx3","residueIndexStart","rp","getResidueProxy","traceAtomIndex","radiusFactory","diff","rise","twist","resdir","r12","r23","r34","diff13","diff24","vt","_axis","_prevAxis","_resdir","_center","a1","getAtomIndexByType","a3","a4","acos","diff13Length","diff24Length","resRadius","resTwist","resRise","resBending","resAxis","bending","Helixbundle","helixorient","getAxis","localAngle","centerDist","ssBorder","colorParams","radiusParams","beg","residueOffset","tmpAxis","tmpCenter","_beg","_end","rp1","rp2","BinaryHeap","scoreFunction","bubbleUp","sinkDown","peek","parentN","parent","elemScore","child1Score","child2N","child1N","child1","child2","Kdtree","metric","nodes","rootIndex","buildTree","arrBegin","arrEnd","maxDepth","plength","nodeIndex","currentNode","pivotIndex","pivotValue","storeIndex","arrMedian","currentDim","getNodeDepth","parentIndex","nearest","maxNodes","bestNodes","nearestSearch","bestChild","otherChild","dimension","pointIndex","ownPoint","ownDistance","saveNode","leftIndex","rightIndex","linearPoint","linearDistance","verify","AtomProxy","chainStore","residueStore","residueMap","euclideanDistSq","euclideanDist","bondHash","entityList","entityIndex","chainIndex","residue","residueTypeId","atomType","partialCharge","aromatic","_ap","hasBondTo","bap","hasBondToElement","backboneIndexList","moleculeType","isCg","backboneType","isTrace","atomRings","isNonmetal","isMetalloid","isDiatomicNonmetal","isPolyatomicNonmetal","isAlkaliMetal","isAlkalineEarthMetal","isNobleGas","isPostTransitionMetal","isLanthanide","isActinide","getDefaultValence","getValenceList","getOuterShellElectronCount","taa","aaa","distSquared","ta","aa","positionFromArray","positionToArray","positionFromVector3","positionSub","getResidueBonds","firstOnly","connectedAtomIndex","connectedAtomIndices","relativeIndex","bonds","getBonds","atomIndices1","atomIndices2","noResname","modelStore","toObject","pointArray","useSquaredDist","atomIndices","kdtree","_Kdtree","nodeList","resultList","SymOpCode","$","E","G","J","L","M","Q","R","Z","_","EncodedSymOp","reInteger","selectionFromChains","chainList","Assembly","addPart","matrixList","part","AssemblyPart","partList","getAtomCount","reduce","getResidueCount","getInstanceCount","instanceCount","isIdentity","structureChainList","eachChain","getBoundingBox","partBox","_getCount","propertyName","instanceBox","structureBox","getView","getInstanceList","StructureBuilder","assignSecondaryStructure","secStruct","chainnames","chainnamesSorted","chainnamesIndex","helices","h1","h2","helix","helixRun","chainChange","sheets","s1","s2","strandCharCode","sheet","sheetRun","addResidueType","ri","previousResname","previousHetero","modelindex","addModel","addChain","addResidue","currentModelindex","mi","currentChainid","currentResno","currentResname","currentInscode","chainOffset","chainCount","currentHetero","finalize","zhangSkolnickSS","isHelical","calculateSecondaryStructure","distances","eachPolymer","cgPolymer","proteinPolymer","prevSstruc","sstrucCount","calculateChainnames","useExistingBonds","doAutoChainName","rStart","rEnd","chainData","mIndex","rCount","eachResidueN","newChain","bbType1","bbType2","backboneEndAtomIndex","backboneStartAtomIndex","rOffset","calculateBonds","calculateBondsWithin","calculateBondsBetween","BondOrderTable","getBondOrderFromTable","atomname1","atomname2","onlyAddRung","rungBondStore","rungAtomSet","atomBondMap","calculateAtomBondMap","bondOrders","nn","rai1","rai2","getBondIndex","rungEndAtomIndex","atomSetDict","rung","onlyAddBackbone","backboneBondStore","backboneAtomSet","backbone","buildUnitcellAssembly","uc","structureCenterFrac","cartToFrac","centerFrac","symopDict","spacegroup","encodedSymopList","matrixDict","symopList","symop","denominator","integer","getSymmetryOperations","centerFracSymop","positionFracSymop","unitcellAssembly","unitcellMatrixList","getMatrixList","ncsMatrixList","biomolDict","NCS","ncsUnitcellMatrixList","nm","vec","supercellAssembly","supercellMatrixList","ncsSupercellMatrixList","UNITCELL","SUPERCELL","setFromMatrixPosition","fracToCart","guessElement","atomName","assignResidueTypeBonds","bondDict","nextAtomOffset","concatStructures","Structure","sb","atomIndexDict","modelCount","structures","finalizeAtoms","finalizeBonds","AlkaliMetals","AlkalineEarthMetals","PolyatomicNonmetals","DiatomicNonmetals","NobleGases","PostTransitionMetals","Metalloids","Halogens","AtomType","no","AtomMap","getHash","dict","ResidueType","chemCompType","getMoleculeType","getBackboneType","backboneEndType","backboneStartType","getBackboneIndexList","atomnames","atomnamesStart","atomnamesEnd","traceIndex","getAtomIndexByName","dir1Index","direction1AtomIndex","dir2Index","direction2AtomIndex","bbStartIndex","rungEndIndex","bbEndIndex","atomnameList","hasProteinBackbone","hasRnaBackbone","hasDnaBackbone","hasCgProteinBackbone","hasCgRnaBackbone","hasCgDnaBackbone","hasAtomWithName","hasBackboneAtoms","hasBackbone","end1","maxd","nearestAtoms","calculateResidueBonds","calculateRings","getBondGraph","bondGraph","calculateBondGraph","getAromatic","aromaticAtoms","calculateAromatic","aromaticRings","nb","capacity","visited","pred","RingFinderMaxDepth","currentColor","RingFinderState","findRings","aromaticRingFlags","AromaticRingElements","isRingAromatic","assignBondReferenceAtomIndices","bondReferenceAtomIndices","refRing","rings1","rings2","ri1","ai3","_idx2","getBondReferenceAtomIndex","bondIndex","addRing","current","leftOffset","rightOffset","found","rn","ringOffset","head","ResidueMap","BondProxy","_v12","_v13","_ap1","_ap2","_ap3","getOtherAtomIndex","getReferenceAtomIndex","typeAtomIndex1","typeAtomIndex2","calculateShiftDir","ap3","v13","ResidueProxy","getChainProxy","getAtomType","getResname1","getAtomnameList","rNext","bbAtomEnd","bbAtomStart","getNextConnectedResidue","rpNext","rpFirst","getPreviousConnectedResidue","residueProxy","prevIndex","rpPrev","rpLast","Polymer","residueIndexEnd","rpStart","rpEnd","isPrevConnected","isNextConnected","isNextNextConnected","isCyclic","__residueProxy","aIndex","eachAtomN","rStartIndex","ChainProxy","getModelProxy","residueEnd","_rp","rNextIndex","first","ModelProxy","chainEnd","_cp","refreshed","extraData","atomSetCache","boxes","bondSet","getBondSet","getBackboneBondSet","backboneBondSet","__backbone","getRungBondSet","rungBondSet","__rung","seleString","getAtomSetWithinSelection","getAtomSetWithinPoint","getAtomSetWithinVolume","fv","getMaxScaleOnAxis","getAtomSetWithinGroup","atomResidueIndex","getStructure","eachEntity","getEntityType","mn","cn","getAtomData","atomData","getBondData","multipleBond","isMulti","isOffset","bondScale","bondSpacing","bondData","storeBondOrder","radius2","absOffset","multiRadius","vShortening","vShift","getBackboneAtomData","getBackboneBondData","getRungAtomData","getRungBondData","getPrincipalAxes","atomCenter","hasCoords","_hasCoords","getSequence","seq","getChainnameCount","Set","updatePosition","refreshPosition","tmpBox","Primitives","ShapeDefaultParameters","aspectRatio","labelParams","pointSize","sizeAttenuation","useTexture","Shape","addMesh","meshCount","meshBuffer","addSphere","addEllipsoid","addTorus","addCylinder","addCone","addArrow","addBox","addOctahedron","addTetrahedron","addText","addPoint","addWideline","addLabel","getBufferList","buffers","BufferRepresentation","GeometryBuffer","meshIndex","geoPosition","geoIndex","meshPosition","meshNormal","meshColor","geoNormal","positionCount","geoPositionCount","transformedGeoPosition","transformedGeoNormal","makeIndex","initNormals","updateNormals","makeTranslation","applyPositionTransform","getNormalMatrix","o3","SphereGeometryBufferDefaultParameters","SphereGeometryBuffer","IcosahedronBufferGeometry","_radius","MappedBuffer","mappingType","indexSize","mapping","mappingSize","mappingIndicesSize","nullValueAttributes","getAttributeIndex","dataIndex","makeMapping","mappingItemSize","aMapping","mappingIndices","it","MappedQuadBuffer","SphereImpostorBuffer","SphereBuffer","PointBufferDefaultParameters","alphaTest","edgeBleach","PointBufferParameterTypes","PointBuffer","makeTexture","DataTexture","makePointTexture","USE_SIZEATTENUATION","USE_MAP","ALPHATEST","DotRepresentation","thresholdType","thresholdMin","thresholdMax","thresholdOut","dotType","radiusType","deviation","dotData","dotBuffer","quadIndices","quadUvs","ImageBufferDefaultParameters","ImageBufferParameterTypes","ImageBuffer","imageData","flipY","pickingTex","pickingMap","mapSize","CUBIC_INTERPOLATION","BSPLINE_FILTER","CATMULROM_FILTER","MITCHELL_FILTER","updateTexture","NormalBlending","VolumeSlice","positionType","getPositionFromCoordinate","coord","vn","ms","setFromMatrixScale","dimLen","x0","y0","z0","setVec","tMin","tMax","pickingArray","SliceRepresentation","linear","percent","coordinate","volumeSlice","sliceBuffer","logReprUnknown","ElementDefaultParameters","Element","statusChanged","setStatus","setName","RepresentationElementDefaultParameters","RepresentationElement","visibilityChanged","parametersChanged","setRepresentation","getType","_disposeRepresentation","hasRepresentation","removeRepresentation","toggleVisibility","setSelection","_v","ComponentDefaultParameters","Component","representationAdded","representationRemoved","setRotation","Euler","setFromEuler","setScale","setTransform","getCenterUntransformed","makeScale","updateRepresentationMatrices","reprList","addAnnotation","annotation","annotationList","eachAnnotation","removeAnnotation","removeAllAnnotations","_addRepresentation","hidden","impostor","workerDefault","ReprClass","makeRepresentation","addBufferRepresentation","removeAllRepresentations","getBoxUntransformed","getZoom","getZoomForBox","Collection","_remove","RepresentationCollection","TrajectoryElementDefaultParameters","defaultStep","defaultTimeout","defaultInterpolateType","defaultInterpolateStep","defaultMode","defaultDirection","initialFrame","TrajectoryElement","frameChanged","playerChanged","player","setFrame","Frames","Superposition","atoms1","atoms2","coords1","coords2","coords1t","coords2t","transformationMatrix","prepCoords","_superpose","invA","t4","t5","t8","t9","t11","t13","t14","t15","t17","t18","t20","t21","t23","t26","md","mean1","mean2","VH","transformMat_","tmp_1","tmp_2","mult","M1","M2","is4X4","tCoords","det","_pB","mcols","invertTrasform","mat","n4","TrajectoryPlayerDefaultParameters","interpolateType","interpolateStep","TrajectoryPlayer","traj","startedRunning","haltedRunning","frameCount","_currentFrame","_direction","_animate","isRunning","_run","_currentTime","dt","_previousTime","inProgress","_currentStep","_nextInterpolated","hasFrame","setFrameInterpolated","ip","ipp","ippp","loadFrame","_next","currentFrame","play","setPlayer","frame","Trajectory","trajPath","deltaTime","timeOffset","centerPbc","removePbc","removePeriodicity","superpose","selectionIndices","_resetCache","_saveInitialCoords","_frameCount","setStructure","_loadFrameCount","backboneIndices","_getIndices","_makeAtomIndices","_saveStructureCoords","initialCoords","structureCoords","_makeSuperposeCoords","frameCache","loadQueue","boxCache","pathCache","frameCacheSize","resetCache","_updateStructure","_interpolate","fc","cpp","cppp","j0","interpolateSpline","interpolateLerp","iList","_loadFrame","_disposed","_doSuperpose","_process","_setFrameCount","box2","circMean","circularMean3","arrayMean3","getFrameTime","FramesTrajectory","coordinates","StructureTrajectory","RemoteTrajectory","request","getFrameUrl","getFrameParams","setRequestHeader","arrayBuffer","getCountUrl","CallbackTrajectory","requestCallback","StructureView","refresh","seleList","parentSelection","ignoreView","blosum62x","prepareMatrix","cellNames","matDict","rowDict","SubstitutionMatrices","blosum62","Alignment","seq1","seq2","gapPenalty","gapExtensionPenalty","substMatrix","_s1","_s2","_i","_j","ali","calc","ali1","aliIdx1","aliIdx2","ali2","_atoms1","_atoms2","initMatrices","score","gap","makeScoreFn","Vi1","Si1","Hi","Si","gap0","scoreFn","StructureComponentDefaultParameters","defaultAssembly","StructureComponent","pointer","trajectoryAdded","trajectoryRemoved","defaultAssemblyChanged","initSelection","pickBuffer","item","pickDict","del","values","spacefillRepresentation","addRepresentation","distanceRepresentation","angleRepresentation","dihedralRepresentation","measureRepresentations","setDefaultAssembly","structureView","rebuildRepresentations","rebuildTrajectories","reprParams","trajList","trajComp","reprComp","measureUpdate","addTrajectory","trajSrc","makeTrajectory","removeTrajectory","getAtomRadius","pickCount","lastPick","atomList","atomListSorted","atomPair","atomTriple","atomQuad","measureBuild","measureData","dihedral","pickData","radiusData","removeAllMeasurements","pd","removeMeasurement","addMeasurement","SurfaceComponent","VolumeComponent","ComponentCollection","matchName","tmpZoomVector","StageDefaultParameters","mousePreset","Stage","fullscreenChanged","componentAdded","componentRemoved","pickingBehavior","mouseBehavior","animationBehavior","keyBehavior","spinAnimation","rockAnimation","setQuality","setImpostor","logList","defaultFileRepresentation","BU1","assembly","sizeScore","backboneOnly","radiusScale","surfaceType","probeRadius","lineOnly","loadFile","defaultFileParams","addComponentFromObject","defaultRepresentation","errorMsg","loadScript","script","addComponent","compList","CompClass","removeComponent","removeAllComponents","toggleFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","lastFullscreenElement","getFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","dataset","normalWidth","normalHeight","screen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","resizeElement","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","setSpin","setRock","pclamp","bbSize","minSize","aspectFactor","catch","impostorTypes","eachComponent","getComponentsByName","getRepresentationsByName","sc","ShapeComponent","__decorate","decorators","Reflect","decorate","AtomindexColormaker","scalePerModel","BfactorColormaker","bfactorScale","ChainidColormaker","chainidDict","chainidDictPerModel","ChainindexColormaker","ChainnameColormaker","chainnameDict","chainnameDictPerModel","DensityfitColormaker","rsrzScale","rsccScale","rsrzDict","rsccDict","rsrz","rscc","partialCharges","CZ","CG","OD1","CB","OD2","OE1","OE2","CD2","CE1","ND1","NE2","NZ","SD","PTR","O1P","O2P","O3P","OG1","SEP","TPO","CD1","CE2","CE3","NE1","OH","ElectrostaticColormaker","charges","hPositions","hPos","backboneNHPosition","hCharges","bbox","hStore","buildStoreLike","hHash","ElementColors","UUT","UUP","UUH","ElementColormaker","EntityindexColormaker","entityindexScale","EntitytypeColormaker","entityType","GeoqualityColormaker","geoAtomDict","geoDict","geoProblemCount","geoAtom","atomProblems","HydrophobicityColormaker","resHF","defaultResidueHydrophobicity","hfScale","ModelindexColormaker","modelindexScale","MoleculetypeColormaker","OccupancyColormaker","occupancyScale","PartialchargeColormaker","partialchargeScale","randomColor","RandomColormaker","RandomcoilindexColormaker","rciScale","rciDict","rci","ResidueindexColormaker","scalePerChain","ResidueColors","ASX","GLX","DA","DG","DI","DX","DC","DT","DU","DD","ResnameColormaker","StructureColors","SstrucColormaker","StructuredataColormaker","UniformColormaker","valueColor","ValueColormaker","valueScale","VolumeColormaker","nxy","i1y","i1z","iyz","i1yz","vy","vz","v1y","v1z","vyz","v1yz","xd","c00","c01","c10","c11","c0","StructureRepresentation","radiusSize","biomolOptions","defaultScale","setRadius","getQuality","getAssembly","needsBuild","sview","createData","updateData","getRadiusParams","param","getAtomParams","getBondParams","MeasurementRepresentation","labelVisible","labelFontFamily","monospace","serif","labelFontStyle","italic","labelFontWeight","bold","labelsdf","labelXOffset","labelBackground","labelBackgroundColor","labelBackgroundMargin","labelBackgroundOpacity","labelFixedSize","labelFontstyle","textData","textBuffer","getLabelBufferParams","fontStyle","fontWeight","sdf","xOffset","attachment","showBorder","borderColor","borderWidth","showBackground","backgroundMargin","backgroundOpacity","fixedSize","parseNestedAtoms","nSets","order","selected","_break","calcArcPoint","edt","edt1d","TextAtlasCache","TextAtlasDefaultParams","font","variant","weight","TextAtlas","lineHeight","maxWidth","fillStyle","textAlign","textBaseline","lineJoin","gridOuter","gridInner","canvas2","context2","placeholder","CanvasTexture","mapped","draw","currentX","scratchW","currentY","scratchH","measureText","clearRect","fillText","cutoff","TextBufferDefaultParameters","fontSize","TextBufferParameterTypes","getCharCount","charCount","TextBuffer","fontTexture","inputTexCoord","inputSize","aPosition","aColor","iChar","nChar","iCharAll","textAtlas","txt","xadvance","xShift","yShift","inputMapping","texWidth","texHeight","texCoords","FIXED_SIZE","WideLineBufferDefaultParameters","WideLineBufferParameterTypes","WideLineBuffer","AngleRepresentation","vectorVisible","sectorVisible","atomPosition","okay","outPosition","outIdx","validatePositions","atomTriplePositions","angleData","labelPosition","labelText","vectorPosition1","vectorPosition2","arcPositionTmp1","arcPositionTmp2","sectorPositionTmp","totalSegments","v21","v23","cross2","labelTmp","arcPoint","crossLength","toFixed","nSegments","sectorVertices","arcVertices1","arcVertices2","appendArcSection","arcSize","sectorSize","arcPosition1","arcPosition2","sectorPosition","sectorOffset","arcOffset","getAngleData","vectorBuffer","arcLength","arcBuffer","sectorLength","sectorBuffer","vectorData","arcData","sectorData","eye","CylinderGeometryBufferDefaultParameters","getGeo","makeRotationX","CylinderBufferGeometry","CylinderGeometryBuffer","geoLength","__center","_color","_from","_to","meshData","MappedAlignedBoxBuffer","CylinderImpostorBufferDefaultParameters","CylinderImpostorBufferParameterTypes","CylinderImpostorBuffer","CAP","CylinderBuffer","AxesRepresentation","showAxes","showBox","getAxesData","pa","en","vertexPosition","vertexColor","vertexRadius","edgePosition1","edgePosition2","edgeColor","edgeRadius","addAxis","offset2","addCorner","d3","addScaledVector","edgeOffset","addEdge","edge","axesData","sphereBuffer","cylinderBuffer","sphereData","cylinderData","BallAndStickRepresentation","cylinderOnly","symmetric","lineBuffer","lineData","BackboneRepresentation","BaseRepresentation","Interpolator","vec1","vec2","vDir","vTan","vNorm","vBin","interpolateToArr","interpolateToVec","interpolatePosition","interpolateTangent","vectorSubdivide","interpolationFn","iterator","getTangent","interpolateNormalDir","u0","u1","u2","u3","norm","interpolateNormal","getNormalDir","iterDir1","iterDir2","vSub1","vSub2","vSub3","vSub4","d1v1","d1v2","d1v3","d1v4","d2v1","d2v2","d2v3","d2v4","interpolateColor","item1","item2","colFn","interpolatePicking","pickFn","interpolateSize","sizeFn","Spline","directional","positionIterator","subdiv","smoothSheet","interpolator","getAtomIterator","cache2","apPrev","apNext","getSubdividedColor","nCol","getSubdividedPicking","getSubdividedPosition","getSubdividedOrientation","normals","getNormals","tangent","binormal","getSubdividedSize","nSize","nPos","nTan","nNorm","vTangent","vMeshNormal","TubeMeshBufferDefaultParameters","capped","TubeMeshBuffer","capVertices","capTriangles","xi","size2","meshPrimitiveId","normX","normY","normZ","biX","biY","biZ","posX","posY","posZ","cxArr","cyArr","cx1Arr","cy1Arr","cx2Arr","cy2Arr","cx1","cy1","cx2","cy2","radialSegments1","irs","irs1","strip","CartoonRepresentation","NaN","getSplineParams","getSpline","getAspectRatio","polymerList","subPos","subOri","subCol","subPick","subSize","ContactRepresentation","angstrom","dataParams","contactData","unit","getLabelData","DihedralRepresentation","extendLine","lineVisible","dihedralData","lineTmp1","lineTmp2","sectorTmp","planeTmp","totalLines","totalPlanes","p4","v34","inPlane1","inPlane2","improperStart","improperEnd","nLines","nPlanes","line1","line2","sector","plane","li","nSuccess","linePosition1","linePosition2","planePosition","lineOffset","planeOffset","lp1","lp2","pp","getDihedralData","lineLength","lineColor","planeLength","planeBuffer","planeData","createUpdatedObject","updateSource","hasKey","obj","createColorArray","arrayLength","targetArray","DihedralHistogramRepresentation","histogramsData","histogramBinBorderVisible","scaleBinToSectorArea","histogramBinBorderColor","adjacentBondArrowColor","distantBondArrowColor","frontHistogramColor","backHistogramColor","opaqueMiddleDiscColor","histogramOpacity","opaqueMiddleDiscVisible","opaqueMiddleDiscOpacity","histogramBinBorderWidth","histogramBinBorderOpacity","bondArrowVisible","bondArrowWidth","bondArrowOpacity","specificColorData","getHistogramBinBorderBufferParameters","getBondArrowsBufferParameters","getOpaqueMiddleDiscBufferParameters","getHistogramBufferParameters","atomPositions","scaleData","histogram360Scaled","histogram360","dihedralDataArray","currentHistogramData","calculateDihedralHistogram","frontHistogramBinBordersBuffer","createWideLineBuffer","frontHistogramBinBorders","backHistogramBinBordersBuffer","backHistogramBinBorders","adjacentBondArrowsBuffer","adjacentBondArrows","distantBondArrowsBuffer","distantBondArrows","opaqueMiddleDiscBuffer","createMeshBuffer","opaqueMiddleDisc","frontHistogramBuffer","frontHistogram","backHistogramBuffer","backHistogram","Float32Concat","arrays","lengths","accumulatedOffset","linesList","startPoints","endPoints","startColors","endColors","triangleColors","histogramData","positionOfDihedralAtoms","histogram","totalSectorTrianglesInOpaqueMiddleDisc","frontAndBack","v32","cross1","dihedralAtomVectors","absAngle","maxHist","histBinAngleStep","opaqueCircleSectorAngleStep","sectionIndex","startOffset","setOneSideHistogram","setHistogramBinCoordinates","ind","zeroDegreeVector","crossVector","scalingFactor","discHistogram","binBorders","DistanceRepresentation","useCylinder","getDistanceData","pair","distanceData","bondParams","distanceBuffer","VectorBufferDefaultParameters","VectorBuffer","HelixorientRepresentation","LicoriceRepresentation","MappedBoxBuffer","HyperballStickImpostorBufferDefaultParameters","shrink","HyperballStickImpostorBufferParameterTypes","HyperballStickImpostorBuffer","HyperballStickBuffer","calculateMinArray","HyperballRepresentation","stickData","LabelFactory","atomLabel","aa1","errorLogged","res","qualified","LabelRepresentation","labelType","labelFormat","labelGrouping","getTextData","positionN","sizeN","colorN","labelFactory","LineRepresentation","crosses","lone","all","crossSize","_crossData","crossData","attrSize","cPosition1","cPosition2","cColor","cColor2","cOffset","cimax","crossBuffer","bufferIdx","lineAttributes","crossAttributes","makeGrid","DataCtor","elemSize","EDTSurface","coordList","pLength","pWidth","pHeight","ptran","depty","widxz","cutRadius","setAtomID","vpBits","vpDistance","vpAtomID","btype","_probeRadius","_scaleFactor","_cutoff","_setAtomID","boundingatom","txz","tdept","sradius","tradius","widxzR","deptyName","indx","fillatom","ox","oy","oz","mj","mk","sk","ii","jj","kk","deptyAtNind","deptyAt","nind","pWH","ci2","fillvoxels","fillAtomWaals","fastdistancemap","boundPoint","cutRSq","totalsurfacevox","inarray","positin","outarray","positout","fastoneshell","cutoffSq","tx","ty","tz","square","nbj","tnvix","tnviy","tnviz","getVolume","tk","buildboundary","fillvoxelswaals","stype","marchingcubeinit","vd","makeAVHash","atomsX","atomsY","atomsZ","atomsR","nAtoms","hashFunc","minW","iDim","jDim","kDim","nCells","jkDim","preHash","cid","cellOffsets","cellLengths","maxCellLength","subArray","cellLength","neighbourListLength","withinRadii","rExtra","nearI","nearJ","nearK","loI","loJ","loK","hiI","hiJ","hiK","iOffset","jOffset","cellStart","cellEnd","rSum","AVSurface","probePositions","gridx","gridy","gridz","sinTable","cosTable","ngTorus","lastClip","_probePositions","rExt","surfGrid","fillGridDim","initializeAngleTables","obscured","singleAtomObscures","ra2","projectPoints","ar","ar2","ng","iax","iay","iaz","minx","miny","minz","maxx","maxy","maxz","xoffset","dxy2","xyoffset","spx","spy","spz","dd","projectTorus","dmp","normalToLine","rInt","cost","sint","px","py","pz","projectTorii","fixNegatives","fixAtomIDs","MolecularSurface","_getAtomData","MolecularSurfaceRepresentation","vws","sas","ses","av","__infoList","__forceNewMolsurf","prepareData","molsurf","sviewFilter","maxDim","asWithin","getSurfaceParams","__sele","__surfaceParams","after","contourBuffer","doubleSidedBuffer","PointRepresentation","pointData","RibbonBuffer","aNormal","aSize","aDir","aPrimitiveId","currSize","prevSize","RibbonRepresentation","RocketRepresentation","axisList","helixbundleList","helixbundle","axisData","RopeRepresentation","SpacefillRepresentation","TraceBuffer","linePosition","TraceRepresentation","TubeRepresentation","UnitcellRepresentation","defaultRadius","getUnitcellData","unitcellData","ValidationRepresentation","clashData","getClashData","ConeBufferDefaultParameters","ConeBuffer","ConeBufferGeometry","_position1","_position2","GeometryGroup","geometryList","empty","ArrowBufferDefaultParameters","ArrowBuffer","splitPosition","cylinderRadius","makeAttributes","coneBuffer","vFrom","vTo","vSplit","fullLength","coneLength","BoxBuffer","BoxBufferGeometry","_heightAxis","_depthAxis","_size","EllipsoidBufferDefaultParameters","EllipsoidBuffer","_majorAxis","_minorAxis","OctahedronBuffer","OctahedronBufferGeometry","TetrahedronBuffer","TetrahedronBufferGeometry","TorusBufferDefaultParameters","radiusRatio","tubularSegments","TorusBuffer","TorusBufferGeometry","Parser","_beforeParse","_parse","_afterParse","StructureParser","structureBuilder","Entity","description","chainIndexList","entityTypeFromString","entityFromType","isNonPolymer","isMacrolide","DefaultBoxParams","Unitcell","alphaRad","betaRad","gammaRad","cosAlpha","cosBeta","cosGamma","sinBeta","sinGamma","cStar","cosAlphaStar","cornerOffset","divideScalar","centerArray3","HelixTypes","dAminoAcids","entityKeyList","reWhitespace","getModresId","PdbParser","hex","isLegacy","headerLine","headerId","legacyId","currentCoord","currentBiomol","currentPart","currentMatrix","recordName","startChain","startResi","startIcode","endChain","endResi","endIcode","currentEntityData","currentEntityKey","chainIdx","currentChainname","currentSeqresChainname","isPqr","isPdbqt","serialRadix","resnoRadix","doFrames","serialDict","unitcellDict","entityDataList","hetnameDict","modresDict","chainDict","seqresDict","modelIdx","pendingStart","ls","modresId","fromIdx","toIdx","helixType","seqresChainname","keyEnd","biomt","biomtElms","ncs","ncsRow","ncsElms","origx","orgix","origxRow","origxElms","scaleRow","scaleElms","aLength","bLength","cLength","sGroup","_parseChunkOfLines","ei","residueDict","reQuotedWhitespace","reDoubleQuote","reTrimQuotes","trimQuotes","hasValue","cifDefaults","getBondOrder","valueOrder","CifParser","rawline","authAsymId","authSeqId","labelSeqId","labelAtomId","labelCompId","labelAsymId","labelEntityId","labelAltId","groupPDB","typeSymbol","pdbxPDBmodelNum","pdbxPDBinsCode","CartnX","CartnY","CartnZ","bIsoOrEquiv","cif","asymIdDict","chainIndexDict","pendingString","currentString","pendingValue","pendingLoop","pendingName","loopPointers","currentLoopIndex","currentCategory","currentName","pointerNames","modelNum","keyParts","category","keyValuePair","_modelNum","frameOffset","occ","assignedChainname","entityId","chem_comp","chem_comp_atom","cc","cca","ccb","chem_comp_bond","atomnameDict","comp_id","atom_id","type_symbol","model_Cartn_x","model_Cartn_y","model_Cartn_z","pdbx_component_comp_id","pdbx_residue_numbering","pdbx_model_Cartn_x_ideal","pdbx_model_Cartn_y_ideal","pdbx_model_Cartn_z_ideal","atom_id_1","atom_id_2","value_order","parseChemComp","atom_site_type_symbol","atom_site_label","atom_site_fract_x","cell_length_a","cell_length_b","cell_length_c","cell_angle_alpha","cell_angle_beta","cell_angle_gamma","atom_site_fract_y","atom_site_fract_z","atom_site_occupancy","ml","identityMatrix","covalentI","parseCore","begIcode","struct_conf","beg_auth_seq_id","pdbx_PDB_helix_class","pdbx_beg_PDB_ins_code","pdbx_end_PDB_ins_code","beg_label_asym_id","end_label_asym_id","end_auth_seq_id","ssr","struct_sheet_range","processSecondaryStructure","operDict","pdbx_struct_oper_list","biomolOp","elms","pdbx_struct_assembly_gen","gen","getMatrixDict","expr","es","assembly_id","oe","oper_expression","md1","md2","k1","k2","asym_id_list","struct_ncs_oper","ncsOp","ncsName","ncsPart","cell","length_a","length_b","length_c","angle_alpha","angle_beta","angle_gamma","symmetry","database_PDB_matrix","origxMat","atom_sites","scaleMat","processSymmetry","struct_conn","atomIndicesCache","connTypeId","conn_type_id","ptnr1_symmetry","ptnr2_symmetry","inscode1","pdbx_ptnr1_PDB_ins_code","altloc1","pdbx_ptnr1_label_alt_id","ptnr1_auth_seq_id","ptnr1_label_asym_id","ptnr1_label_atom_id","selection1","inscode2","pdbx_ptnr2_PDB_ins_code","altloc2","pdbx_ptnr2_label_alt_id","ptnr2_auth_seq_id","ptnr2_label_asym_id","ptnr2_label_atom_id","selection2","tmpA","tmpB","pdbx_value_order","processConnections","pdbx_description","processEntities","struct","entry","pdbx_audit_revision_history","revision_date","dates","releaseDate","pdbx_database_status","recvd_initial_deposition_date","depDates","depositionDate","database_PDB_rev","date","date_original","reflns","d_resolution_high","refine","ls_d_res_high","ls_R_factor_R_free","rFree","ls_R_factor_R_work","rWork","exptl","method","experimentalMethods","GroParser","firstLines","lpos","ypos","zpos","modelLineCount","lineNo","AllFields","ctor","typedArray","getDataView","getInt8View","getInt32View","decodeInt16","i2","decodeInt32","i4","decodeInteger","intArray","divisor","invDiv","decodeRun","dataOffset","decodeDelta","decodePacking","int16or8","upperLimit","lowerLimit","decodeIntegerPacking","decodeIntegerDeltaPacking","unpacked","decodeIntegerDelta","decodeMsgpack","dataView","performDecoding","dvOut","dvIn","decodeFloat32","decodeIntegerRun","decodeMmtf","inputDict","ignoreFields","outputDict","dv","ignore","SstrucMap","MmtfParser","groupData","numBonds","numAtoms","numGroups","numChains","numModels","chainsPerModel","structureId","groupsPerChain","groupList","groupTypeList","atomNameList","frameAtomOffset","xCoordList","yCoordList","zCoordList","bAtomIndex1","bAtomIndex2","bBondOrder","aGroupIndex","aFormalCharge","gChainIndex","gAtomOffset","gAtomCount","cModelIndex","cGroupOffset","cGroupCount","mChainOffset","mChainCount","modelChainCount","groupOffset","chainGroupCount","bondOffset","groupAtomCount","groupFormalChargeList","formalChargeList","groupBondAtomList","bondAtomList","groupBondOrderList","bondOrderList","atomIdList","bFactorList","altLocList","occupancyList","groupIdList","secStructList","insCodeList","chainNameList","chainIdList","groupTypeDict","groupType","elementList","hetFlag","numGroupBonds","groupName","resAtomOffset","secStructLength","bioAssemblyList","_assembly","chainToPart","transformList","_transform","ncsOperatorList","ncsAssembly","_operator","unitCell","spaceGroup","bondTypes","am","du","un","Mol2Parser","moleculeLineNo","modelAtomIdxStart","currentRecordType","PdbqtParser","PqrParser","reItem","SdfParser","headerLines","mItem","atomStart","bondStart","bondEnd","sdfData","currentItem","currentData","chargeCount","coffset","atomIdx","cToken","_postProcess","parseIntSubstr","PrmtopParser","atomNames","radii","pointersDict","pointers","residueLabels","residuePointers","curIdx","bondIdx","lt","NATOM","NBONH","MBONA","NRES","curResIdx","curResname","curResno","reTitle","PsfParser","lastSegid","segid","reField","TopParser","currentMoleculetype","molecules","moleculetypeDict","fieldMatch","cIdx","molName","molType","molCount","lastResno","resIdx","chainidIdx","chainnameIdx","TrajectoryParser","DcdParser","nextPos","intView","ef","isCharmm","extraBlock","fourDims","NSET","ISTART","NSAVC","NAMNF","DELTA","titleLength","titlePos","TITLE","natom","natom4","notNetcdf","statement","reason","readName","nameLength","num2str","num2bytes","str2num","readNumber","bufferReader","numbers","readType","trimNull","version","recordDimension","dimList","dimensions","recordId","dimensionSize","dimensionsList","globalAttributes","attributesList","variables","varList","recordStep","variableSize","dimensionality","dimensionsIds","varSize","record","variablesList","gAttList","gAtt","NetcdfReader","hasDataVariable","variableName","findIndex","getDataVariable","variable","find","currentOffset","nonRecord","NctrajParser","netcdfReader","times","TrrParser","versionSize","virSize","presSize","coordSize","velocitySize","forceSize","natoms","floatSize","natoms3","frameCoords","MagicInts","sizeOfInt","num","numOfBits","_tmpBytes","sizeOfInts","numOfInts","sizes","numOfBytes","bytecnt","decodeBits","cbuf","buf2","mask","lastBB0","lastBB1","cnt","_tmpIntBytes","decodeInts","nums","XtcParser","minMaxInt","sizeint","bitsizeint","sizesmall","thiscoord","prevcoord","lfp","lsize","bitsize","smallidx","tmpIdx","smaller","smallnum","adz","invPrecision","buf8","isSmaller","tmpSwap","VolumeParser","getMatrix","reScientificNotation","CubeParser","originX","originY","originZ","NVX","NVY","NVZ","basisX","basisY","basisZ","oribitalFlag","lj","Dsn6Parser","summand","byteView","brixStr","xStart","yStart","zStart","xExtent","yExtent","zExtent","xRate","yRate","zRate","xlen","ylen","zlen","xBlocks","yBlocks","zBlocks","zz","yy","xx","nxyz","mapcrs","DxParser","headerInfo","parseHeaderLines","dataLineStart","headerByteCount","deltaLineCount","xmin","ymin","zmin","hx","hy","hz","DxbinParser","uint8ToLines","MrcParser","floatView","MAP","MACHST","NX","NY","MODE","NXSTART","NYSTART","NZSTART","MX","MY","MZ","MAPC","MAPR","MAPS","DMIN","DMAX","ISPG","NSYMBT","LSKFLG","b1","b0","parseNumberLine","XplorParser","infoStart","dataStart","gridInfo","AMIN","AMAX","BMIN","BMAX","NC","CMIN","CMAX","cellInfo","lineSection","RAVE","RSIGMA","hsvToRgb","ColorDict","red","orange","gold","yellow","lime","green","sea","cyan","sky","blue","purple","magenta","hotpink","pink","peach","lilac","pinktint","peachtint","yellowtint","greentint","bluetint","lilactint","white","gray","brown","deadwhite","deadblack","invisible","reWhitespaceComma","reCurlyWhitespace","reTrimCurly","reCollapseEqual","parseListDef","defaultColor","master","lm","listName","listColor","listMasters","listWidth","parseListElm","lineBreak","triangleBreak","lsindex","literal","isLineBreak","isTriangleBreak","parseStr","parseFlag","parseGroup","flags","groupFlags","groupMasters","KinParser","currentGroupMasters","currentSubgroupMasters","kinemage","onewidth","pdbfile","texts","captions","caption","groupDict","subgroupDict","masterDict","pointmasterDict","dotLists","vectorLists","ballLists","ribbonLists","dotDefaultColor","dotLabel","dotPosition","dotColor","vecDefaultColor","vecDefaultWidth","vecLabel1","vecLabel2","vecPosition1","vecPosition2","vecColor1","vecColor2","ballRadius","ballDefaultColor","ballLabel","ballPosition","ballColor","ribbonListDefaultColor","ribbonPointLabelArray","ribbonPointPositionArray","ribbonPointBreakArray","ribbonPointColorArray","isDotList","prevDotLabel","isVectorList","prevVecLabel","prevVecPosition","prevVecColor","isBallList","prevBallLabel","isRibbonList","prevRibbonPointLabel","isCaption","masterArray","labelArray","colorArray","indent","label1Array","label2Array","position1Array","position2Array","color1Array","color2Array","radiusArray","breakArray","splitLine","dominant","convertedLists","listObject","convertedRibbonObject","editedLabels","editedPositions","editedColors","editedBreaks","breakPointer","positionPointer","removePointBreaksTriangleArrays","ribbonObject","convertedLabels","convertedBreaks","convertedPositions","convertedColors","vector3Positions","convertKinTriangleArrays","SurfaceParser","getLoader","OBJLoader","regexp","vertex_pattern","normal_pattern","uv_pattern","face_vertex","face_vertex_uv","face_vertex_uv_normal","face_vertex_normal","object_pattern","smoothing_pattern","material_library_pattern","material_use_pattern","setPath","_createParserState","objects","startObject","fromDeclaration","parseVertexIndex","parseNormalIndex","addVertex","addVertexLine","addNormal","addFace","nd","vLen","ib","ic","nLen","addLineGeometry","vi","lineFirstChar","lineSecondChar","trimLeft","lineParts","lineVertices","lineUVs","llen","parts","buffergeometry","ObjParser","PLYLoader","propertyNameMapping","setPropertyNameMapping","bin2str","isASCII","parseHeader","parseASCII","parseBinary","headerText","headerLength","lineType","lineValues","propertValues","comments","countType","itemType","parseASCIINumber","parseASCIIElement","currentElementCount","useColor","handleElement","postProcess","colors","elementsNeedUpdate","elementName","setRGB","vertexIndices","vertex_indices","Face3","binaryRead","dataview","binaryReadElement","loc","PlyParser","CsvParser","table","reDelimiter","JsonParser","MsgpackParser","msgpack","NetcdfParser","netcdf","TextParser","reStrip","reTag","reContent","reAttr","parseXml","declaration","root","tag","eos","is","child","re","prefix","XmlParser","useDomParser","__xmlParser","__domParser","DOMParser","parseFromString","Document","getNamedItem","getSele","useAltcode","icode","altcode","getResSele","setBitDict","bit","hasAttrValue","getProblemCount","clashDict","ga","clashes","getElementsByTagName","Validation","fromXml","atomDict","entries","chemicalShiftLists","randomCoilIndices","rcia","_clashDict","clashList","seleAttr","createAttribute","setNamedItem","atomSele","res1","res2","mogBondOutliers","mogAngleOutliers","clashSele","vPos1","vPos2","getAtomSele","dHalf","ValidationParser","shrinkBuf","arraySet","dest","src_offs","dest_offs","adler32","adler","crcTable","makeTable","crc32","crc","inflate_fast","strm","_in","last","_out","dmax","wsize","whave","wnext","s_window","lcode","dcode","lmask","dmask","here","op","from_source","next_in","avail_in","next_out","avail_out","lencode","distcode","lenbits","distbits","dolen","dodist","sane","lbase","lext","dbase","dext","inflate_table","lens","lens_index","codes","table_index","work","incr","fill","here_bits","here_op","here_val","curr","drop","used","huff","base_index","MAXBITS","offs","extra","extra_index","zswap32","InflateState","havedict","check","total","wbits","ncode","nlen","ndist","have","lendyn","distdyn","was","inflateReset","total_in","total_out","inflateResetKeep","inflateInit2","windowBits","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","flush","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","os","extra_len","hcrc","data_type","inflateSetDictionary","dictionary","dictLength","STR_APPLY_OK","STR_APPLY_UIA_OK","__","_utf8len","string2buf","m_pos","str_len","buf_len","buf2string","c_len","utf16buf","_buf2binstring","utf8border","messages","ZStream","GZheader","Inflate","sources","source","raw","err","ended","_mode","next_out_utf8","tail","utf8str","allowBufError","binstring2buf","onEnd","onData","inflateEnd","flattenChunks","decompressedData","inflator","ungzip","Datasource","mmtfFullUrl","mmtfBaseUrl","RcsbDatasource","pdbid","baseUrl","PubchemDatasource","PassThroughDatasource","reProtocol","StaticDatasource","relativePath","pn","basePath","pathname","MdsrvDatasource","getListing","jsonData","frameIndex","getPathUrl","IntegerParam","NumberParam","RangeParam","SelectParam","UIStageParameters","Version","_Promise"],"mappings":"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GAAI,IAAK,GAAI,EAAK,GAAI,IAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,GAouB5lCC,GAAqD,CAChE,EAAG,IAAM,EAAG,IAAM,EAAG,KAAM,EAAG,IAAM,EAAG,IAAM,EAAG,IAAM,EAAG,IAAM,EAAG,IAAM,EAAG,IAAM,GAAI,IAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAA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MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAGtCC,GAAuB,CAClC,KAAM,IAAK,IAAK,IAChB,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/C,IAAK,KAAM,KAAM,KAAM,KAAM,KAC7B,MAGWC,GAAuB,CAClC,IAAK,MAAO,MAAO,OAAQ,OAC3B,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACxD,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OACnE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG7CC,GAAsE,YC5gCnEC,GAAgBC,GAC9B,OAAOA,GACL,KAAK,EACH,SACF,KAAK,EACH,SACF,KAAK,EACH,SACF,KAAK,EACH,SACF,KAAK,EACH,SACF,QACE,UDigCNF,GAhhCmC,GAghCO,CACxCG,MAAO,KACPC,WAAY,IACZC,WAAY,CAAE,IAAK,MAAO,KAAM,MAAO,MAAO,MAAO,OACrDC,cAAe,IACfC,YAAa,KAGfP,GAvhC+B,GAuhCO,CACpCG,MAAO,CAAE,MAAO,OAChBC,WAAY,CAAE,MAAO,OACrBC,WAAY,CAAE,MAAO,OACrBC,cAAe,IACfC,YAAa,CAAE,MAAO,QAGxBP,GA9hC+B,GA8hCO,CACpCG,MAAO,CAAE,MAAO,OAChBC,WAAY,CAAE,MAAO,OACrBC,WAAY,CAAE,MAAO,OACrBC,cAAe,IACfC,YAAa,CAAE,MAAO,QAGxBP,GAriCqC,GAqiCO,CAC1CG,MAAO,CAAE,KAAM,MACfG,cAAe,CAAE,KAAM,MACvBC,YAAa,CAAE,KAAM,OAGvBP,GA1iCiC,GA0iCO,CACtCG,MAAO,CAAE,MAAO,MAAO,KACvBG,cAAe,CAAE,MAAO,MAAO,KAC/BC,YAAa,CAAE,MAAO,MAAO,MAG/BP,GA/iCiC,GA+iCO,CACtCG,MAAO,CAAE,MAAO,MAAO,MAAO,KAC9BG,cAAe,CAAE,MAAO,MAAO,MAAO,KACtCC,YAAa,CAAE,MAAO,MAAO,MAAO,MAGtCP,GA3jCmC,GA2jCO,GCviCnC7kE,IAAMqlE,GAAS,IAAIC,IAA0B,CAClD,GAAuBt1D,GAAS,MAChC,GAAyBA,GAAS,MAClC,GAA4BA,GAAS,WACrC,GAA2BA,GAAS,gBAStBu1D,GAAYC,EAAgBC,GAC1ClkE,IAAImkE,EAAmB,GACjBC,EAAK,IAAI78D,EACT88D,EAAK,IAAI98D,EAQf,OAPA68D,EAAGE,WAAWJ,EAAYD,GAC1BA,EAAIM,yBAAgB76D,OACdA,EAAEsD,SACJq3D,EAAGC,WAAW56D,EAAUu6D,GACxBE,EAAO9jE,KAAK+jE,EAAGI,QAAQH,QAGpBF,WAUOM,GAAgBR,EAAgBC,GAC9CzlE,IAAMimE,EAAKT,EAAIh1B,QAET01B,EAAM,IAAIp9D,EAChBo9D,EAAIL,WAAWJ,EAAYD,GAE3BxlE,IAAMmmE,EAAa,CAAC,IAAIr9D,EAAW,IAAIA,GACnCs9D,EAAK,EAgBT,GAfAZ,EAAIM,yBAAgB76D,GACdm7D,EAAK,OACLn7D,EAAEsD,SACJ03D,EAAGn/D,MAAQmE,EAAEnE,MACbq/D,EAAWC,KAAMP,WAAW56D,EAAUu6D,OAG/B,IAAPY,GACFH,EAAGH,yBAAgB76D,GACbm7D,EAAK,OACLn7D,EAAEsD,QAAyBtD,EAAEnE,QAAU0+D,EAAI1+D,OAC7Cq/D,EAAWC,KAAMP,WAAW56D,EAAUu6D,MAIjC,IAAPY,EAAJ,CAIApmE,IAAMu6C,EAAK4rB,EAAW,GAAGE,MAAMF,EAAW,IAC1C,OAAOp7D,KAAKK,IAAKL,KAAK8vB,GAAK,EAAK0f,EAAGwrB,QAAQG,cC+L7BI,GAAc5jE,EAAY9B,GACxCZ,IAAMiT,EAAYvQ,EAAKuQ,UACjB7E,EAAI6E,EAAUgc,UAEdnB,EAAS,IAAInmB,UAAUyG,GACvBm4D,EAAY,IAAI5+D,UAAUyG,GAC1Bo4D,EAAS,IAAI7+D,UAAUyG,GACvBq4D,EAAgB,IAAI9+D,UAAUyG,GAWpC,OATA6E,EAAUgb,mBAASnrB,GACjB9C,IAAMwB,EAAIsB,EAAEgE,iBA3M0BhE,EAAclC,GACtDZ,IAAM0mE,EAAgB5jE,EAAE6jE,sBACpB74C,EAAShrB,EAAEurB,cAAgB,EAEzBu4C,EAAwC,WAAxBhmE,EAAOgmE,cACF,SAAxBhmE,EAAOgmE,cAAsC,IAAX94C,EAC/B+4C,EAA8B,WAAnBjmE,EAAOimE,SACF,SAAnBjmE,EAAOimE,SAAwC,IAAlBH,EAE1BI,EAAShkE,EAAEosB,UACX63C,WA9ByBjkE,GAC/BvB,IAAIsH,EAAI,EAER,OADA/F,EAAEitB,mBAASvT,UAAK3T,GAAK2T,EAAEmT,aAChB9mB,EA2BSm+D,CAAgBlkE,GAE1BmkE,EArFR,SAAuBnkE,GACrB9C,IAAMknE,EAAMpkE,EAAEmQ,UAAUk0D,eAClBC,EAAetkE,EAAEyL,OACjB4f,MAASi5C,OAA+BA,EAE9C,GAAIj5C,GAA0B,IAAhBrrB,EAAEosB,UACd,OAAO,EAGT3tB,IAAI8lE,GAAO,EAyBX,OAvBAvkE,EAAEitB,mBAASvT,GACT,GAAIA,EAAEmT,UAAY,EAChB03C,GAAO,OAGT,GAAIl5C,EAAQ,CACVnuB,IAAMsnE,EAAK9qD,EAAE+qD,aAAazkE,GAE1BwkE,EAAGv3C,mBAASy3C,GACV,GAAIA,EAAG73C,UAAY,EAAG,CACpB3vB,IAAMynE,EAAgBH,EAAG/4D,OACzB,SACGk5D,QAAgCA,QACjCD,EAAGD,aAAaD,GAAI/4D,OAEpB,OAEF84D,GAAO,KAERH,OAIAG,EAmDYK,CAAa5kE,GAC1B6kE,EAAaZ,EAAUD,EAAS,EAGlCc,EAAiB,EACjBC,IAEJ,OAAQ/kE,EAAEyL,QACR,OACMq4D,IACa,IAAXE,GACFh5C,EAAS,EACT+5C,KACoB,IAAXf,IACTh5C,EAAS,EACT+5C,MAGJ,MAEF,OAEMjB,IACF94C,EAAS,GAEP+4C,IAEFe,EAAiB78D,KAAK3E,IAAI,EAAG,EAAI2gE,EAAUh8D,KAAKK,IAAI0iB,KAGtD+5C,EAAO/C,GAAegC,EAASc,EAAiB78D,KAAK3E,IAAI,GAAI0nB,IAC7D,MAEF,OACE,GAAI84C,EACF,GAAKC,EAEE,GAAII,GAAcF,EAAU,EAG/Bj5C,EADEg5C,EAASJ,GAAkB,GAAKK,EAAUL,GAAkB,EACrD,EAEA,MAEN,CAILnlE,IAAI8lE,GAAO,EACXvkE,EAAEgjE,yBAAegC,SACXA,EAAGv5D,QAAyBu5D,EAAGrvD,aAAW4uD,GAAO,MAE7Cv5C,EAANu5C,EAAe,EACL,OAjBdv5C,EAASi5C,EAAU,EAuBnBF,IAEFe,EAAiB78D,KAAK3E,IAAI,EAAG,EAAI2gE,EAAUj5C,IAO3C+5C,EAAO/C,GAJLmC,IAAeU,EAIKb,EAASc,EAAiB95C,EAG1Bg5C,EAASc,EAAiB,EAAI95C,GAEtD,MAEF,OACM84C,IACGC,IACH/4C,EAASi5C,EAAU,GAEL,IAAZA,GACFjkE,EAAEgjE,yBAAegC,GACfA,EAAG/3C,mBAASvT,GACVxc,IAAM+nE,EAAKvrD,EAAE+qD,aAAaO,GACtBC,EAAGjhE,QAAUhE,EAAEgE,WAASihE,EAAGx5D,QAAyC,IAAhBiO,EAAEmT,YACxD7B,GAAU,UAMhB+4C,IAEFe,EAAiB78D,KAAK3E,IAAI,EAAG,EAAI2gE,EAAUj5C,IAI3C+5C,EAAO/C,GAFLmC,IAAeU,EAEKb,EAASc,EAAiB95C,EAAS,EAGnCg5C,EAASc,EAAiB95C,EAAS,GAE3D,MAIF,QACM84C,IACGC,IAED/4C,EADEi5C,GAAW,IAAMjkE,EAAE6jE,sBACZI,EAAU,EAEV,IAIXF,GACEE,EAAU,IACZa,EAAiB78D,KAAK3E,IAAI,EAAG,EAAI2gE,EAAUj5C,IAG3Ci5C,GAAW,IAEbc,EAAO/C,GAAegC,EAASc,EAAiB95C,EAAS,IAG3D,MAEF,OACA,QACA,QACA,QACA,QAEM84C,IACF94C,EAASi5C,EAAU,GAErB,MAEF,OACA,QACA,QACA,QACA,QACA,QACMH,IACF94C,EAAS,EAAIi5C,GAEf,MAEF,OACA,QACA,QACA,QACA,QACA,QACMH,IACF94C,EAAS,EAAIi5C,GAEf,MAEF,QACEt9D,QAAQkb,KAAK,yDAA0D7hB,EAAE8C,SAG7E,MAAO,CAAEkoB,EAAQ85C,EAAgBA,EAAiBlB,EAAemB,GA2B5BG,CAAyBllE,EAAGlC,+BAC/DktB,EAAQtsB,GAAMymE,EACd1B,EAAW/kE,GAAM0mE,EACjB1B,EAAQhlE,GAAM2mE,EACd1B,EAAejlE,GAAMqmE,KAGhB,QAAE/5C,YAAQy4C,SAAWC,gBAAQC,YChStB2B,GAAa1lE,GAC3B,GAAIA,EAAK,iBAAkB,OAAOA,EAAK,iBACvC1C,IAAMooE,EAAe9B,GAAa5jE,EAAM,CAACkkE,aAAc,OAAQC,QAAS,SAExE,OADAnkE,EAAK,iBAAmB0lE,EACjBA,WCgEOC,GAAavlE,GAC3B,OACe,KAAbA,EAAEyL,QACFzL,EAAE6jE,wBAAmC7jE,EAAEosB,UC3E3ClvB,IAAMsoE,GAAmB,CAAE,MAAO,MAAO,OACnCC,GAAoB,CAAE,MAAO,gBA+JnBC,GAAoBv1D,EAAsBw1D,EAAoB7nE,kBAAgC,IAqE5G,IApEAZ,IAAM0oE,EAAenoE,GAASK,EAAO8nE,aAAcC,GAAqBD,cAClEE,EAAoBroE,GAASK,EAAOgoE,kBAAmBD,GAAqBC,mBAC5EC,EAAsBtoE,GAASK,EAAOioE,oBAAqBF,GAAqBE,qBAChFC,EAAqBvoE,GAASK,EAAOkoE,mBAAoBH,GAAqBG,oBAC9EC,EAAkBxoE,GAASK,EAAOmoE,gBAAiBJ,GAAqBI,iBACxEC,EAAoBzoE,GAASK,EAAOooE,kBAAmBL,GAAqBK,mBAC5EC,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,kBAEnEC,EAAcp+D,KAAK3E,IAAIsiE,EAAe,EAAGE,EAAmBG,GAE5DK,EAAsBR,EAAoBA,EAC1CS,EAAoBN,EAAkBA,oHAKtC36D,EAAI6S,EAAMxf,OAEV8rD,EAAKt6C,EAAUq2D,UAAUr+D,EACzBuiD,EAAKv6C,EAAUq2D,UAAUp+D,EACzBuiD,EAAKx6C,EAAUq2D,UAAU/6C,EAEzBi3C,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,eAiBhB3B,EAAK,IAAI1I,EACTu3C,EAAK,IAAIv3C,EACTygE,EAAK,IAAIzgE,EACT68D,EAAK,IAAI78D,EACT88D,EAAK,IAAI98D,EACT0gE,EAAK,IAAI1gE,EACT2gE,EAAK,IAAI3gE,EAET4gE,EAAY,SAAUC,EAAiB10C,GAC3CzjB,EAAGmB,IAAI46C,EAAIoc,EAAO,IAAOnc,EAAImc,EAAO,IAAOlc,EAAIkc,EAAO,KACtDtpB,EAAG1tC,IAAI46C,EAAIoc,EAAO,IAAOnc,EAAImc,EAAO,IAAOlc,EAAIkc,EAAO,KACtDJ,EAAG52D,IAAI46C,EAAIoc,EAAO,IAAOnc,EAAImc,EAAO,IAAOlc,EAAIkc,EAAO,KACtDhE,EAAGE,WAAWr0D,EAAI6uC,GAClBulB,EAAGC,WAAWr0D,EAAI+3D,GAClBt0C,EAAO20C,aAAajE,EAAIC,IAGpBiE,EAAY,SAAUroE,EAAWoJ,EAAWqqB,GAGhD,OAFAzjB,EAAGmB,IAAI1H,EAAGzJ,GAAK0J,EAAG1J,GAAK+sB,EAAG/sB,IAC1B6+C,EAAG1tC,IAAI1H,EAAGL,GAAKM,EAAGN,GAAK2jB,EAAG3jB,IACnB4G,EAAGg7C,IAAInM,GAAIypB,eAAe70C,GAAQ/kB,IAAImwC,GAAIhE,WAAWgE,IAGxDnwC,EAAM,SAAU1O,EAAWoJ,EAAWm/D,GAC1CC,EAAWlR,QAAQt3D,EAAGoJ,GACtBq/D,EAAazT,WAAWh1D,EAAGoJ,EAAGm/D,kBAI9BG,EAAYpW,WAAW7oD,EAAEzJ,GAAI0J,EAAE1J,GAAI+sB,EAAE/sB,GAAI2nE,YAAcv+D,EAAG8pD,GACxD,KAAI9pD,GAAKpJ,IAETgkE,EAAI1+D,MAAQqxD,EAAU32D,GAAK,GAC3BikE,EAAI3+D,MAAQqxD,EAAUvtD,GAAK,GAEvBu/D,GAAmB3E,EAAKC,EAAKwD,KAAjC,CAEAjpE,IAAMoqE,EAAKnpD,EAAOzf,GACZ6oE,EAAKppD,EAAOrW,GAElB,GA7GN,SAA6Bw/D,EAAiBC,GAC5C,WACGD,OAAqCC,OACrCD,OAAqCC,EA0GhCC,CAAmBF,EAAIC,IAvDD,SAAUE,EAAoBC,EAAoBC,GAG9E,IAFAzqE,IAAM0qE,EAAKH,EAAS9oE,OACdkpE,EAAKH,EAAS/oE,OACXmpE,EAAK,EAAGA,EAAKF,IAAME,EAAI,CAC9BpF,EAAI1+D,MAAQyjE,EAAUK,GACtB,IAAKrpE,IAAIspE,EAAK,EAAGA,EAAKF,IAAME,EAE1B,GADApF,EAAI3+D,MAAQ0jE,EAAUK,GAClBrF,EAAInpB,WAAWopB,IAAQgF,EACzB,OAAO,EAIb,OAAO,GA4CCK,CAAsB3S,EAAU32D,GAAK22D,EAAUvtD,GAAK89D,IACtDx4D,EAAI1O,EAAGoJ,UAEJ,GA1Gb,SAAuBw/D,EAAiBC,GACtC,WAAOD,OAAmCC,EAyG3BU,CAAaX,EAAIC,IAC1B,GAAI3V,GAAO0U,EAAqB,CAC9BM,EAAUvR,EAAU32D,GAAKgoE,GACzBE,EAAUvR,EAAUvtD,GAAK6+D,GAEzBzpE,IAAMm7B,E7DrQD,S6DqQkBquC,EAAGzD,QAAQ0D,GACnB1+D,KAAK5E,IAAI0jE,EAAUroE,EAAGoJ,EAAG6+D,GAAKI,EAAUj/D,EAAGpJ,EAAGgoE,KAC/CX,IACR1tC,GAAS2tC,GAAsB3tC,GAAS,IAAM2tC,GAEvC3tC,GAAS2tC,EAAqB,IAAM3tC,GAAS,GAAK2tC,IAD3D54D,EAAI1O,EAAGoJ,WAMR,GArHb,SAAqBw/D,EAAiBC,GACpC,WACGD,OAAmCC,OACnCD,OAAqCC,EAkHzBW,CAAWZ,EAAIC,IACpB3V,GAAO2U,EAAmB,WACXe,EAAkC,CAAE5oE,EAAGoJ,GAAM,CAAEA,EAAGpJ,iBAEnEkoE,EAAUvR,EAAUnL,GAAKwc,GACVK,EAAU5oE,EAAG+rD,EAAGwc,IACjBR,GACZ94D,EAAI88C,EAAG/rD,WAtCRO,EAAI,EAAGA,EAAI4M,IAAK5M,OCpG3B,SAASypE,GAAqB57C,GAC5B,MAAsB,QAAfA,EAAG5Y,YAAqB4Y,EAAG9gB,QAAwB8gB,EAAGpY,SCxI/DjX,IAAMkrE,GAAkB,0DCCxBlrE,IAAMmrE,GAAkB,CAAC,GAAI,GAAI,GAAI,IAerCnrE,IAAMorE,GAAI,SACJhO,GAAI,YAqCVp9D,IAAMqrE,GAAsBr7D,GAAS,KAC/Bs7D,GAAuBt7D,GAAS,cCjDtBm6D,GAAoB3E,EAAgBC,EAAgBwD,GAClE,OAAQsC,GAAgB/F,EAAKC,EAAKwD,KAChCzD,EAAI7sD,aAAe8sD,EAAI9sD,YACtB6sD,EAAInvD,QAAUovD,EAAIpvD,QAAUmvD,EAAInvD,SAAWovD,EAAIpvD,QC+B7CrW,IAAM2oE,GAAuB,CAClC6C,mBAAoB,EACpBC,aAAc,IACdC,mBAAoB,IACpBC,iBAAkB,GAClBC,iBAAkB,GAClBC,sBAAuB,GACvBC,sBAAuB,GACvBlD,kBAAmB,IACnBC,oBAAqB,EACrBC,mBAAoB,GACpBC,gBAAiB,EACjBC,kBAAmB,EACnBN,aAAc,EACdqD,mBAAoB,EACpBC,oBAAqB,GACrBC,aAAc,EACdC,mBAAmB,EACnBhD,kBAAmB,EACnBiD,sBAAuB,YAGTZ,GAAiB/F,EAAgBC,EAAgBwD,GAC/D,OACGzD,EAAI7sD,aAAeswD,GAAaxD,EAAI9sD,aAAeswD,GACnDxD,EAAI9sD,aAAeswD,GAAazD,EAAI7sD,aAAeswD,WAIxCkB,GAAoB3E,EAAgBC,EAAgBwD,GAClE,OAAQsC,GAAgB/F,EAAKC,EAAKwD,KAChCzD,EAAI7sD,aAAe8sD,EAAI9sD,YACvB6sD,EAAI4G,eAAiB3G,EAAI2G,cACxB5G,EAAInvD,QAAUovD,EAAIpvD,QAAUmvD,EAAInvD,SAAWovD,EAAIpvD,QA4BpD,SAASg2D,GAAmBp5D,GAC1BjT,IAAMg4D,EXxEC,CACL/2C,MAAO,GACPg3C,OAAQ,GACRC,QAAS,CAAEjtD,EAAG,GAAIC,EAAG,GAAIqjB,EAAG,IAC5B4pC,SAAU,IW0FZ,OApBIryC,IAAOtB,GAAII,KAAK,8BL/Fc3R,EAAsB+kD,SACrCoQ,GAAan1D,EAAUvQ,aACpC4pE,EAAiD,GAEvDr5D,EAAUs5D,sBAAY97D,GACpB,GAAI63D,GAAiBv6D,SAAS0C,EAAEgG,SAAU,CACxCzW,IAAM83D,EAAQH,MACdlnD,EAAEwd,mBAASnrB,OACLA,EAAEyL,QAAyBzL,EAAEiU,eAC/B8gD,GAAQC,EAAOh1D,MAGnBi1D,GAAWC,EAAUF,QACZqM,GAAIp2D,SAAS0C,EAAEgG,UAAahG,EAAE+G,cACvC/G,EAAEwd,mBAASnrB,GACTvB,IAAIirE,GAAW,EACT1U,EAAQH,gBD4GO70D,GAC3BvB,IAAIkrE,EAAwB,EAY5B,OAVe,IAAb3pE,EAAEyL,QACc,IAAhBzL,EAAEosB,WACmC,IAArCpsB,EAAE6jE,uBAEF7jE,EAAEgjE,yBAAegC,GACXA,EAAG54C,UAAY44C,EAAGnB,uBAAmC,KACrD8F,KAIyB,IAA1BA,ECxHGC,CAAY5pE,YD8HOA,GAC7BvB,IAAIkrE,EAAwB,EAa5B,OAXe,IAAb3pE,EAAEyL,QACc,IAAhBzL,EAAEosB,WACmC,IAArCpsB,EAAE6jE,uBACmC,IAArC7jE,EAAE6jE,uBAEF7jE,EAAEgjE,yBAAegC,GACXA,EAAG54C,UAAY44C,EAAGnB,uBAAmC,KACrD8F,KAIyB,IAA1BA,ECzIUE,CAAc7pE,KACvBg1D,EAAMp4B,QACN8sC,GAAW,IAJX1U,EAAMp4B,QACN8sC,GAAW,GAKTA,IACF1pE,EAAEgjE,yBAAehjE,OACXA,EAAEyL,SACJ+9D,EAAgBxpE,EAAEgE,QAAS,EAC3B+wD,GAAQC,EAAOh1D,OAGnBi1D,GAAWC,EAAUF,OAGzBrnD,EAAEwd,mBAASnrB,GACT9C,IAAM83D,EAAQH,MACV7pC,EAAOhrB,EAAEgE,OAAS,IACfwlE,EAAgBxpE,EAAEgE,SACrB+wD,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,YK0D/B8U,CAAmB35D,EAAW+kD,YLlDI/kD,EAAsB+kD,SACrCoQ,GAAan1D,EAAUvQ,aACpC4pE,EAAiD,GAEvDr5D,EAAUs5D,sBAAY97D,GACpB,GAAI83D,GAAkBx6D,SAAS0C,EAAEgG,SAAU,CACzCzW,IAAM83D,EAAQH,MACdlnD,EAAEwd,mBAASnrB,OACLA,EAAEyL,QAAyBzL,EAAEiU,eAC/B8gD,GAAQC,EAAOh1D,MAGnBi1D,GAAWC,EAAUF,QAChB,GAAIyM,GAAMx2D,SAAS0C,EAAEgG,SAAU,CACpCzW,IAAM83D,EAAQH,MACdlnD,EAAEwd,mBAASnrB,GACLulE,GAAYvlE,KACdg1D,EAAMp4B,QACN58B,EAAEgjE,yBAAehjE,OACXA,EAAEyL,QAAuBspD,GAAQC,EAAOh1D,MAE9Ci1D,GAAWC,EAAUF,YAGhBqM,GAAIp2D,SAAS0C,EAAEgG,UAAa8tD,GAAMx2D,SAAS0C,EAAEgG,WACtDhG,EAAEwd,mBAASnrB,GACTvB,IAAIirE,GAAW,EACT1U,EAAQH,gBDzBU70D,GAC9B,OACe,KAAbA,EAAEyL,QACmC,IAArCzL,EAAE6jE,sBCuBMkG,CAAe/pE,GAGRulE,GAAYvlE,IACrBg1D,EAAMp4B,QACN8sC,GAAW,YDrBM1pE,GACzB,OACe,KAAbA,EAAEyL,QACmC,IAArCzL,EAAE6jE,sBCmBamG,CAAUhqE,IACnBg1D,EAAMp4B,QACN8sC,GAAW,YDsBU1pE,GAC7BvB,IAAIwrE,EAAsB,EAY1B,OAVe,IAAbjqE,EAAEyL,QACmC,IAArCzL,EAAE6jE,uBACmC,IAArC7jE,EAAE6jE,uBAEF7jE,EAAEgjE,yBAAegC,GACG,IAAdA,EAAGv5D,QAAgBu5D,EAAG54C,UAAY44C,EAAGnB,uBAAmC,KACxEoG,KAIuB,IAAxBA,EClCUC,CAAclqE,KACvBg1D,EAAMp4B,SACN8sC,GAAW,IAVX1U,EAAMp4B,QACN8sC,GAAW,GAWTA,IACF1pE,EAAEgjE,yBAAehjE,OACXA,EAAEyL,SACJ+9D,EAAgBxpE,EAAEgE,QAAS,EAC3B+wD,GAAQC,EAAOh1D,OAGnBi1D,GAAWC,EAAUF,OAGzBrnD,EAAEwd,mBAASnrB,GACT9C,IAAM83D,EAAQH,MACV7pC,EAAOhrB,EAAEgE,OAAS,IACfwlE,EAAgBxpE,EAAEgE,SACrB+wD,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,YKL/BmV,CAAmBh6D,EAAW+kD,YLaE/kD,EAAsB+kD,GACtDh4D,IAAM8C,EAAImQ,EAAUE,eACpBF,EAAUs5D,sBAAY97D,GACpBzQ,IAAMktE,EAAQz8D,EAAE08D,mBAChB,GAAID,EAAO,CACTltE,IAAM2T,EAASlD,EAAEoI,WACjBq0D,EAAMzvD,kBAAQ2vD,GACZptE,IAAM83D,EAAQH,MACdyV,EAAK3vD,kBAAQjc,GACXsB,EAAEgE,MAAQtF,EAAImS,EACdkkD,GAAQC,EAAOh1D,MAEjBi1D,GAAWC,EAAUF,UKxB3BuV,CAAiBp6D,EAAW+kD,YJzBQ/kD,EAAsB+kD,SACboQ,GAAan1D,EAAUvQ,iDAEpEuQ,EAAUgb,mBAASnrB,GACjB9C,IAAM83D,EAAQH,MAERxE,EAAKrwD,EAAEyL,OACb,OAAI4kD,EAEF0E,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,QACjB,OAAI3E,GACR,GAAI8X,GAAoBnoE,GAGtB+0D,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,QAChB,GAAIhqC,EAAQhrB,EAAEgE,OAAU,EAAE,CAG/B9G,IAAMstE,EAAaxqE,EAAEosB,UAAYq3C,EAAWzjE,EAAEgE,OACxCymE,EAAK9G,EAAe3jE,EAAEgE,YAEzBymE,GAAmCD,EAAa,OAChDC,GAAgCD,EAAa,OAC7CC,GAA8BD,EAAa,KAE5CzV,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,UAGV,KAAP3E,IACU,QAAdrwD,EAAE2T,SAAmC,QAAd3T,EAAE2T,UAAyC,IAApB3T,EAAEurB,eAClDwpC,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,QIP3B0V,CAAqBv6D,EAAW+kD,YJjGC/kD,EAAsB+kD,SACpCoQ,GAAan1D,EAAUvQ,aAE1CuQ,EAAUgb,mBAASnrB,GACjB9C,IAAM83D,EAAQH,MAERxE,EAAKrwD,EAAEyL,QACT08D,GAAoBnoE,IAMtB0jE,EAAQ1jE,EAAEgE,OAAU,QACnBqsD,OAAqBA,QAAqBA,MAJ3C0E,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,OIuFzB2V,CAAkBx6D,EAAW+kD,YJzEQ/kD,EAAsB+kD,SACxCoQ,GAAan1D,EAAUvQ,aAE1CuQ,EAAUgb,mBAASnrB,GACjB,OACEA,EAAEyL,QACFi4D,EAAQ1jE,EAAEgE,OAAU,IAElBhE,EAAE6jE,sBAAiC,GACnC7jE,EAAE6jE,sBAAiC,GAW3C,SAAoD7jE,GAClD,IAAKA,EAAEoU,aAAc,OAAO,EAE5BlX,IAAM0tE,EAAW5qE,EAAE6qE,YAAYC,WAC/B,IAAKF,EAAU,OAAO,EAEtBnsE,IAAIssE,GAAa,EAajB,OAZcH,EAASR,MACjBzvD,kBAAQ2vD,GACRS,GACAT,EAAKU,eAAK1lD,UAAQtlB,EAAEgE,MAAQhE,EAAEirE,oBAAuB3lD,OACvDylD,EAAaT,EAAKU,eAAK1lD,GACrBpoB,IAAMguE,EAAalrE,EAAE6qE,YAAYM,eAAgB7lD,GAC3C7Z,EAASzL,EAAEorE,QAAQz+D,IAAIu+D,GAAYz/D,OACzC,WAAOA,OAAyBA,SAK/Bs/D,EA7BDM,CAA0CrrE,IAE5C,CACA9C,IAAM83D,EAAQH,MACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,OI2DzBsW,CAAsBn7D,EAAW+kD,YHtGF/kD,EAAsB+kD,GACrD/kD,EAAUgb,mBAASnrB,GACjBvB,IAAI8sE,GAAS,EACTC,GAAQ,EAENC,EAAsBpK,GAAIp2D,SAASjL,EAAE2T,SACrC+3D,EAAiBjK,GAAMx2D,SAASjL,EAAE2T,SAwCxC,GAtCK83D,GAAwBC,EAOlBD,MAELzrE,EAAEyL,QACD,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOR,SAASjL,EAAE2T,UAAY3T,EAAEiU,eAGnEjU,EAAEgU,gBAFXu3D,GAAS,EACTC,GAAQ,QAKDxrE,EAAEyL,QAAyB,QAAUzL,EAAE2T,SAChD43D,GAAS,EACTC,GAAQ,OACCxrE,EAAEyL,QACM,QAAdzL,EAAE2T,SAAqB3T,EAAEiU,gBAC1Bs3D,GAAS,GAGJG,QAGL1rE,EAAEyL,QAAyBzL,EAAEgU,cAC/Bu3D,GAAS,EACTC,GAAQ,GACA,CAAC,KAAM,KAAM,MAAMvgE,SAASjL,EAAEsT,UACtCi4D,GAAS,EACD,CAAC,KAAM,KAAM,MAAMtgE,SAASjL,EAAEsT,YACtCi4D,GAAS,EACTC,GAAQ,IAlCNxrE,EAAE2rE,iBAAe3rE,EAAEyL,aAAyBzL,EAAEyL,QAChD8/D,GAAS,EACTC,GAAQ,OACCxrE,EAAEyL,SACX8/D,GAAS,GAiCTA,EAAQ,CACVruE,IAAM83D,EAAQH,OACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,GAEvB,GAAIwW,EAAO,CACTtuE,IAAM83D,EAAQH,OACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,OGkDzB4W,CAAgBz7D,EAAW+kD,YH2CF/kD,EAAsB+kD,GAC/C/kD,EAAUgb,mBAASnrB,GACjB,GAAIA,EAAE6rE,0BAAuB7rE,EAAEyL,aAA0BzL,EAAEyL,OAAwB,CACjFvO,IAAM83D,EAAQH,OACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,QAChB,GAAIoT,GAAgBn9D,SAASjL,EAAEyL,QAAS,CAC7CvO,IAAM83D,EAAQH,OACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,OGnDzB8W,CAAU37D,EAAW+kD,YClHS/kD,EAAsB+kD,GACpD/kD,EAAUgb,mBAASnrB,GACjB9C,IAAM83D,EAAQH,MACV0P,GAAO,MACPvkE,EAAEyL,QACJ84D,GAAO,EACPvkE,EAAEgjE,yBAAez2C,GACfrvB,IAAMmzD,EAAK9jC,EAAG9gB,WACV4kD,OAAqBA,IAAmBkU,GAAO,WAE5CvkE,EAAEyL,SACX84D,GAAO,GAELA,IACFxP,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,ODqGzB+W,CAAe57D,EAAW+kD,YF/FS/kD,EAAsB+kD,GACzD/kD,EAAUgb,mBAASnrB,GACjB,GAAIsoE,GAAEr9D,SAASjL,EAAEyL,QAAS,CACxBhN,IAAI8lE,GAAO,EAMX,GALAvkE,EAAEgjE,yBAAegC,GACX1K,GAAErvD,SAAS+5D,EAAGv5D,UAChB84D,GAAO,MAGPA,EAAM,CACRrnE,IAAM83D,EAAQH,MACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,QEqF3BgX,CAAoB77D,EAAW+kD,YFjHC/kD,EAAsB+kD,GACtD/kD,EAAUgb,mBAASnrB,GACjB,GAAIqoE,GAAgBp9D,SAASjL,EAAEyL,SAAgD,IAArCzL,EAAE6jE,sBAAsC,CAChF3mE,IAAM83D,EAAQH,MACdE,GAAQC,EAAOh1D,GACfi1D,GAAWC,EAAUF,OE6GzBiX,CAAiB97D,EAAW+kD,GAExBlyC,IAAOtB,GAAIK,QAAQ,qBAEhBmzC,WAGOgX,GAAmB/7D,EAAsBrS,kBAAS+nE,IAChE3oE,IACMyoE,WApDwBzQ,GACtB,0BAMR,MAAO,UAAEA,cAJW,IAAIpF,GAAYsF,gBACf,IAAI3B,cACN,IAAIG,GAASz1C,EAAMxf,QAAQ,IA+C7BwtE,CADA5C,GAAkBp5D,IAG/B6S,IAAOtB,GAAII,KAAK,qBAEpB4jD,GAAmBv1D,EAAWw1D,EAAU7nE,YJqDRqS,EAAsBw1D,EAAoB7nE,kBAA6B,IAsBvG,IArBAZ,IAAMyrE,EAAelrE,GAASK,EAAO6qE,aAAc9C,GAAqB8C,cAClEC,EAAqBnrE,GAASK,EAAO8qE,mBAAoB/C,GAAqB+C,oBAC9EC,EAAmB37D,GAASzP,GAASK,EAAO+qE,iBAAkBhD,GAAqBgD,mBACnFC,EAAmB57D,GAASzP,GAASK,EAAOgrE,iBAAkBjD,GAAqBiD,mBACnFC,EAAwB77D,GAASzP,GAASK,EAAOirE,sBAAuBlD,GAAqBkD,wBAC7FC,EAAwB97D,GAASzP,GAASK,EAAOkrE,sBAAuBnD,GAAqBmD,wBAC7F7C,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,kBAEnEuB,EAAU1/D,KAAK3E,IAAIqlE,EAAcC,GACjCwD,EAAiBzD,EAAeA,oHAKhCr9D,EAAI6S,EAAMxf,SAEU2mE,GAAan1D,EAAUvQ,oBAE3CysE,EAAQl8D,EAAUE,eAClBi8D,EAAWn8D,EAAUE,6BAGzB+2D,EAAYpW,WAAW7oD,EAAEzJ,GAAI0J,EAAE1J,GAAI+sB,EAAE/sB,GAAIipE,YAAU7/D,EAAG8pD,GACpD,KAAI9pD,GAAKpJ,GAAT,CAEAxB,IAAMoqE,EAAKnpD,EAAOzf,GACZ6oE,EAAKppD,EAAOrW,GAEZykE,EA7DZ,SAA6BjF,EAAiBC,GAC5C,WACGD,OAAwCC,OACxCD,OAAuCC,EA0DvBiF,CAAmBlF,EAAIC,GACtC,GAAKgF,GArEX,SAAyBjF,EAAiBC,GACxC,WACGD,OAAuCC,OACvCD,OAAoCC,EAkEnBkF,CAAenF,EAAIC,GAAnC,WAEiBA,EAAsC,CAAE7oE,EAAGoJ,GAAM,CAAEA,EAAGpJ,iBAKvE,GAHA2tE,EAAMroE,MAAQqxD,EAAUnL,GAAK,GAC7BoiB,EAAStoE,MAAQqxD,EAAUl3D,GAAK,GAE5BmuE,EAAStoE,QAAUqoE,EAAMroE,QAEzBqjE,GAAmBgF,EAAOC,EAAUnG,WACpCkG,EAAM5gE,aAAyB6gE,EAAS7gE,QAAyBmmD,EAAMwa,GACvEC,EAAMK,YAAYJ,IAAtB,CAEApvE,IAAMyvE,EAAclK,GAAW4J,EAAOC,GAChCM,EAAkBrK,GAAO51D,IAAIg3D,EAAc0I,EAAMroE,SAAWkJ,GAAS,KAC3E,IAAIy/D,EAAY3B,eAAK6B,GACnB,OAAO5kE,KAAKK,IAAIskE,EAAkBC,GAAc/D,KADlD,CAIA,OAAInF,EAAc0I,EAAMroE,OAAiC,CACvD9G,IAAM4vE,EAAa5J,GAAemJ,EAAOC,GACzC,QAAmB1uE,IAAfkvE,GAA4BA,EAAa9D,EAAuB,OAGtE9rE,IAAM6vE,EAAiBtK,GAAW6J,EAAUD,GACtCW,EAAqBzK,GAAO51D,IAAIg3D,EAAc2I,EAAStoE,SAAWkJ,GAAS,KACjF,IAAI6/D,EAAe/B,eAAKiC,GAEtB,OAAOD,EAAqBC,EAAgBpE,KAF9C,CAKA,OAAIlF,EAAc2I,EAAStoE,OAAiC,CAC1D9G,IAAM4vE,EAAa5J,GAAeoJ,EAAUD,GAC5C,QAAmBzuE,IAAfkvE,GAA4BA,EAAa/D,EAAuB,OAGtE7B,EAAWlR,QAAQ9L,EAAG/rD,GACtBjB,IA5FwBwlE,EAAgBC,EA4FlCuK,EAAWX,IA9GvB,SAA8B7J,EAAgBC,GAC5C,OAAOD,EAAI1tD,WAAa2tD,EAAI3tD,UAkBxBm4D,CADwBzK,EA4FqD2J,EA5FrC1J,EA4F4C2J,KAlH1F,SAAiC5J,EAAgBC,GAC/C,OAAOD,EAAI1uD,cAAgB2uD,EAAI3uD,aAwBpBo5D,CAAuB1K,EAAKC,QA0FnCwE,EAAazT,WAAWxJ,EAAG/rD,EAAG+uE,YA9CzBxuE,EAAI,EAAGA,EAAI4M,IAAK5M,OI1EzB2uE,CAAiBl9D,EAAWw1D,EAAU7nE,YH0DFqS,EAAsBw1D,EAAoB7nE,kBAAkC,IAYhH,IAXAZ,IAAMisE,EAAe1rE,GAASK,EAAOqrE,aAActD,GAAqBsD,cAClEhD,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,oIAKnE96D,EAAI6S,EAAMxf,OAEV+jE,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,6BAGpB+2D,EAAYpW,WAAW7oD,EAAEzJ,GAAI0J,EAAE1J,GAAI+sB,EAAE/sB,GAAIyqE,YAAerhE,EAAG8pD,GACzD,KAAI9pD,GAAKpJ,IAETgkE,EAAI1+D,MAAQqxD,EAAU32D,GAAK,GAC3BikE,EAAI3+D,MAAQqxD,EAAUvtD,GAAK,GAEvBu/D,GAAmB3E,EAAKC,EAAKwD,KAAjC,CAEAjpE,IAAMowE,EAAK5K,EAAI/sD,UACT43D,EAAK5K,EAAIhtD,UACf,GAAK23D,GAAOC,EAAZ,OAEmBD,EAAK,CAAEnvD,EAAOzf,GAAIyf,EAAOrW,IAAQ,CAAEqW,EAAOrW,GAAIqW,EAAOzf,IA9CrD4oE,OAAiBC,aACpCD,OAEAC,QACAA,OAEOD,OAEPC,OAFG,KA2CDL,EAAWlR,QAAQt3D,EAAGoJ,GACtBq/D,EAAazT,WAAWh1D,EAAGoJ,OAlDnC,IAAyBw/D,EAAiBC,MAiC/B7oE,EAAI,EAAGA,EAAI4M,IAAK5M,OGrEzB8uE,CAAqBr9D,EAAWw1D,EAAU7nE,YCtGJqS,EAAsBw1D,EAAoB7nE,kBAAoC,IAYpH,IAXAZ,IAAMwrE,EAAqBjrE,GAASK,EAAO4qE,mBAAoB7C,GAAqB6C,oBAC9EvC,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,oIAKnE96D,EAAI6S,EAAMxf,OAEV+jE,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,6BAGpB+2D,EAAYpW,WAAW7oD,EAAEzJ,GAAI0J,EAAE1J,GAAI+sB,EAAE/sB,GAAIgqE,YAAqB5gE,EAAG8pD,GAzBrE,IAA+B0V,EAAiBC,EA0BtCz/D,GAAKpJ,IAETgkE,EAAI1+D,MAAQqxD,EAAU32D,GAAK,GAC3BikE,EAAI3+D,MAAQqxD,EAAUvtD,GAAK,GAEvBu/D,GAAmB3E,EAAKC,EAAKwD,QAC7BzD,EAAIj3D,YAAyBk3D,EAAIl3D,QACjCi3D,EAAIgK,YAAY/J,KAjCK2E,EAmCAnpD,EAAOzf,GAnCU6oE,EAmCLppD,EAAOrW,OAlCzCw/D,OAAkCC,IAmCnCL,EAAWlR,QAAQt3D,EAAGoJ,GACtBq/D,EAAazT,WAAWh1D,EAAGoJ,YAbxBpJ,EAAI,EAAGA,EAAI4M,IAAK5M,OD2FzB+uE,CAAuBt9D,EAAWw1D,EAAU7nE,YF5EbqS,EAAsBw1D,EAAoB7nE,kBAA6B,IAatG,IAZAZ,IAAM+rE,EAAqBxrE,GAASK,EAAOmrE,mBAAoBpD,GAAqBoD,oBAC9EC,EAAsBh8D,GAASzP,GAASK,EAAOorE,oBAAqBrD,GAAqBqD,sBACzF/C,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,oIAKnE96D,EAAI6S,EAAMxf,OAEV+jE,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,6BAGpB+2D,EAAYpW,WAAW7oD,EAAEzJ,GAAI0J,EAAE1J,GAAI+sB,EAAE/sB,GAAIuqE,YAAqBnhE,EAAG8pD,GAC/D,KAAI9pD,GAAKpJ,KAETgkE,EAAI1+D,MAAQqxD,EAAU32D,GAAK,GAC3BikE,EAAI3+D,MAAQqxD,EAAUvtD,GAAK,IAEvBu/D,GAAmB3E,EAAKC,EAAKwD,KAxCfmB,EAyCCnpD,EAAOzf,GAzCS6oE,EAyCJppD,EAAOrW,OAvCvCw/D,OAAsCC,OACtCD,OAAmCC,IAsClC,CAzCN,IAAwBD,EAAiBC,QA2CLppD,EAAOzf,GAAmC,CAAEgkE,EAAKC,GAAQ,CAAEA,EAAKD,iBAExFgL,EAAgBjL,GAAWkL,EAASrB,GAE1C,GAA6B,IAAzBoB,EAAc/uE,UACd4pE,GAAsBmF,EAAc,GAAKxE,GAA7C,CAEAhsE,IAAM6vE,EAAiBtK,GAAW6J,EAAUqB,GAEd,IAA1BZ,EAAepuE,SACfouE,EAAe/B,eAAKiC,GACtB,OAAQzE,GAAuByE,EAAgB/D,OAIjDhC,EAAWlR,QAAQt3D,EAAGoJ,GACtBq/D,EAAazT,WAAWh1D,EAAGoJ,aA1BtBpJ,EAAI,EAAGA,EAAI4M,IAAK5M,OEgEzBkvE,CAAgBz9D,EAAWw1D,EAAU7nE,GAErCZ,IAAM2wE,WApD8BlI,SACFA,EAASwB,aAErC2G,EAAgB/Z,GAAoB,CACxCM,oBACAC,oBACAF,kBACAF,UAAWyR,EAASuB,WAAWvoE,SAE3BovE,EAAa,IAAIna,GAAS+R,EAASwB,aAAat8D,OAAO,GAE7D,OAAO5M,OAAOC,OAAO,eAAE4vE,aAAeC,GAAcpI,GAyC7BqI,CAAqBrI,GAU5C,gBDxIiCx1D,EAAsBw1D,EAA0B7nE,kBAA4B,IACzGklB,IAAOtB,GAAII,KAAK,qBAEpB5kB,IAAMmsE,EAAwB5rE,GAASK,EAAOurE,sBAAuBxD,GAAqBwD,uBACpFlD,EAAY1oE,GAASK,EAAOsoE,iBAAkBP,GAAqBO,kBAEnEgB,EAAcj3D,EAAUi3D,0HAMxB6G,EAAM99D,EAAUE,eAChB69D,EAAM/9D,EAAUE,eAChB89D,EAAKh+D,EAAUE,eAEf+9D,EAAK,IAAIpoE,EACTqoE,EAAK,IAAIroE,EAETsoE,EAAkB,EAAIjF,EACtBkF,EAA0BlF,EAAwBA,EAExD0E,EAAWpzD,kBAAQjc,GACjB0vE,EAAGv+D,IAAI1H,EAAEorD,EAAO70D,IAAK0J,EAAEmrD,EAAO70D,IAAK+sB,EAAE8nC,EAAO70D,KAC5C2vE,EAAGx+D,IAAI1H,EAAEqrD,EAAO90D,IAAK0J,EAAEorD,EAAO90D,IAAK+sB,EAAE+nC,EAAO90D,KAE5CxB,IAAMsxE,GAAOJ,EAAGjmE,EAAIkmE,EAAGlmE,GAAM,EACvBsmE,GAAOL,EAAGhmE,EAAIimE,EAAGjmE,GAAM,EACvBsmE,GAAON,EAAG3iD,EAAI4iD,EAAG5iD,GAAM,EAEvBkjD,EAAMtZ,EAAU9B,EAAQ70D,IACxBkwE,EAAMvZ,EAAU7B,EAAQ90D,IAE9BuvE,EAAIjqE,MAAQ2qE,EAAK,GACjBT,EAAIlqE,MAAQ4qE,EAAK,GAEjBxH,EAAYpW,WAAWwd,EAAIC,EAAIC,EAAIJ,YAAkBxmE,EAAG8pD,GACtDuc,EAAGnqE,MAAQ8D,MAETqmE,EAAG1iE,QACF0iE,EAAGU,IAAMV,EAAGU,IAAMN,EAA2B3c,IAC7CyV,GAAmB4G,EAAKE,EAAIhI,KAC5BkB,GAAmB6G,EAAKC,EAAIhI,KAC5BwI,EAAI1jE,SAASnD,KACb8mE,EAAI3jE,SAASnD,IAEdsmE,EAAGU,kBAAkBX,GAAa,GAClCE,EAAGS,kBAAkBX,GAAa,IAElCJ,EAAWv7C,MAAM9zB,GACbskB,IAAOtB,GAAIC,IAAI,WAAYssD,EAAI5uB,gBAAiB6uB,EAAI7uB,gBAAiB,UAAW8uB,EAAG9uB,wBAKzFr8B,IAAOtB,GAAIK,QAAQ,qBCyEvBgtD,CAAkB5+D,EAAW09D,EAAgB/vE,YDlEJqS,EAAsBw1D,GACvD,6FAIFjD,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,eAEhB2+D,EAAgD,GAGhDC,EAAuB,SAAUr/B,EAAclxC,EAAW2O,SAChC2hE,EAAoB3hE,IAAS,CAAEtC,EAAAA,GAAW,iBACpE6kC,EAAOs/B,IACS,IAAdC,GAAiBpB,EAAWv7C,MAAM28C,GACtCH,EAAoB3hE,GAAQ,CAAEuiC,EAAMlxC,IAEpCqvE,EAAWv7C,MAAM9zB,IAIrBqvE,EAAWpzD,kBAAQjc,GACjB,OAAI2I,EAAM3I,GAAV,CAEAgkE,EAAI1+D,MAAQqxD,EAAU9B,EAAQ70D,IAAO,GACrCikE,EAAI3+D,MAAQqxD,EAAU7B,EAAQ90D,IAAO,GAErCxB,IAAM0yC,EAAO8yB,EAAInpB,WAAWopB,GAC5BsM,EAAqBr/B,EAAMlxC,EAAMgkE,YAAaC,gBAC9CsM,EAAqBr/B,EAAMlxC,EAAMikE,YAAaD,oBCsChD0M,CAA0Bj/D,EAAW09D,GACjC/vE,EAAOsrE,4BDQsBj5D,EAAsBw1D,GAC/C,6FAIF0J,EAA0D,GAE1DjiE,EAAM,SAASkY,EAAa5mB,GAC3B2wE,EAAsB/pD,KAAO+pD,EAAsB/pD,GAAQ,IAChE+pD,EAAsB/pD,GAAMxmB,KAAKJ,IAGnCqvE,EAAWpzD,kBAAQjc,OACb2I,EAAM3I,KACV22D,EAAU9B,EAAQ70D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,MAChD22D,EAAU7B,EAAQ90D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,UAGlDqvE,EAAWpzD,kBAAQjc,GACjB,GA9DJ,SAA6B2I,GAC3B,WACEA,OACAA,QACAA,EA0DKioE,CAAmBjoE,EAAM3I,IAA9B,CAEAxB,IAAMqyE,EAAOF,EAAsBha,EAAU9B,EAAQ70D,IAAO,IACtD8wE,EAAOH,EAAsBha,EAAU7B,EAAQ90D,IAAO,IAC5D,GAAK6wE,GAASC,EAGd,IADAtyE,IAAMoO,EAAIikE,EAAK5wE,OACNmJ,EAAI,EAAGA,EAAIwD,IAAKxD,EACvB,GAAI0nE,EAAKvkE,SAASskE,EAAKznE,IAErB,YADAimE,EAAWv7C,MAAM9zB,OCpCO0qE,CAAkBj5D,EAAW09D,YD+C3B19D,EAAsBw1D,GAC9C,6FAIF8J,EAAoD,GAEpDriE,EAAM,SAASkY,EAAa5mB,GAC3B+wE,EAAgBnqD,KAAOmqD,EAAgBnqD,GAAQ,IACpDmqD,EAAgBnqD,GAAMxmB,KAAKJ,IAG7BqvE,EAAWpzD,kBAAQjc,OACb2I,EAAM3I,KACV22D,EAAU9B,EAAQ70D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,MAChD22D,EAAU7B,EAAQ90D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,UAGlDqvE,EAAWpzD,kBAAQjc,GACjB,OACE2I,EAAM3I,QACN2I,EAAM3I,GAFR,CAKAxB,IAAMwyE,EAAOD,EAAgBpa,EAAU9B,EAAQ70D,IAAO,IAChDixE,EAAOF,EAAgBpa,EAAU7B,EAAQ90D,IAAO,IACtD,GAAKgxE,GAASC,EAGd,IADAzyE,IAAMoO,EAAIokE,EAAK/wE,OACNmJ,EAAI,EAAGA,EAAIwD,IAAKxD,EACvB,GAAI6nE,EAAK1kE,SAASykE,EAAK5nE,IAErB,YADAimE,EAAWv7C,MAAM9zB,OC7EvBkxE,CAAiBz/D,EAAW09D,YDwFW19D,EAAsBw1D,GACrD,6FAIF0J,EAA0D,GAE1DjiE,EAAM,SAASkY,EAAa5mB,GAC3B2wE,EAAsB/pD,KAAO+pD,EAAsB/pD,GAAQ,IAChE+pD,EAAsB/pD,GAAMxmB,KAAKJ,IAGnCqvE,EAAWpzD,kBAAQjc,OACb2I,EAAM3I,KACV22D,EAAU9B,EAAQ70D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,MAChD22D,EAAU7B,EAAQ90D,IAAMic,kBAAQ2K,UAAOlY,EAAIkY,EAAK5mB,UAGlDqvE,EAAWpzD,kBAAQjc,GACjB,OAAI2I,EAAM3I,GAAV,CAEAxB,IAAMqyE,EAAOF,EAAsBha,EAAU9B,EAAQ70D,IAAO,IACtD8wE,EAAOH,EAAsBha,EAAU7B,EAAQ90D,IAAO,IAC5D,GAAK6wE,GAASC,EAGd,IADAtyE,IAAMoO,EAAIikE,EAAK5wE,OACNmJ,EAAI,EAAGA,EAAIwD,IAAKxD,EACvB,GAAI0nE,EAAKvkE,SAASskE,EAAKznE,IAErB,YADAimE,EAAWv7C,MAAM+8C,EAAKznE,QCnH5B+nE,CAAwB1/D,EAAW09D,GAE/B7qD,IAAOtB,GAAIK,QAAQ,qBAEhB8rD,WAGOiC,GAAiBzoE,GAC/B,OAAQA,GACN,OACA,OACA,QACE,MAAO,gBACT,OACE,MAAO,sBACT,OACE,MAAO,eACT,OACE,MAAO,oBACT,OACE,MAAO,qBACT,OACE,MAAO,wBACT,OACE,MAAO,iBACT,OACE,MAAO,qBACT,QACE,MAAO,mBAINnK,IAAM6yE,GAA2B,CACtCC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbC,kBAAkB,EAClBC,mBAAmB,EACnBC,UAAU,EACVC,YAAY,EACZC,kBAAkB,EAClBC,mBAAmB,EACnBC,sBAAsB,EACtB1yB,OAAQ,EACR2yB,WAAY,IAYRthE,GAAW,IAAIC,WAmCLshE,GAAgBhL,EAA0Bx1D,EAAsBrS,GAC9EZ,IAAMqT,EAAI1S,GAAaC,EAAQiyE,IACzB5xD,EAAuB,GACzB5N,EAAEy/D,cAAc7xD,EAAMrf,QACtByR,EAAE0/D,aAAa9xD,EAAMrf,QACrByR,EAAE2/D,aAAa/xD,EAAMrf,QACrByR,EAAE4/D,kBAAkBhyD,EAAMrf,QAC1ByR,EAAE6/D,mBAAmBjyD,EAAMrf,QAC3ByR,EAAE8/D,UAAUlyD,EAAMrf,QAClByR,EAAE+/D,YAAYnyD,EAAMrf,QACpByR,EAAEggE,kBAAkBpyD,EAAMrf,QAC1ByR,EAAEigE,mBAAmBryD,EAAMrf,QAC3ByR,EAAEkgE,sBAAsBtyD,EAAMrf,SAE1B,IAWJ8xE,yHANE1kB,EAAsB,GACtBE,EAAsB,GACtBx7C,EAAkB,GAClBmtC,EAAmB,GACnBvP,EAAoB,GAqC1B,OAlCIj+B,EAAEmgE,aAEFE,EADEhyE,MAAMC,QAAQ0R,EAAEmgE,YACNngE,EAAEmgE,WAAWn3D,cAAIP,GAC3B,OAAO7I,EAAU0gE,WAAW,IAAIl5D,GAAUqB,OAGhC7I,EAAU0gE,WAAW,IAAIl5D,GAAUpH,EAAEmgE,cAIrD3C,EAAWpzD,kBAAQjc,GACjBxB,IAAMoqE,EAAKjgE,EAAM3I,GACjB,GAAKyf,EAAMlT,SAASq8D,GAApB,CAEA,GAAIsJ,EAAW,CACb1zE,IAAMu3D,EAAOY,EAAS9B,EAAO70D,IAAI,GAC3Bg2D,EAAOW,EAAS7B,EAAO90D,IAAI,GAEjC,GAAIE,MAAMC,QAAQ+xE,IAChB,KAAMA,EAAU,GAAGla,MAAMjC,IAASmc,EAAU,GAAGla,MAAMhC,IAAUkc,EAAU,GAAGla,MAAMjC,IAASmc,EAAU,GAAGla,MAAMhC,IAAS,YAEvH,IAAKkc,EAAUla,MAAMjC,KAAUmc,EAAUla,MAAMhC,GAAO,OAI1Dx3D,IAAMiB,EAAIo1D,EAAO70D,GACXwrD,EAAIsJ,EAAO90D,GACjBwtD,EAAUptD,KAAKqJ,EAAEhK,GAAIiK,EAAEjK,GAAIstB,EAAEttB,IAC7BiuD,EAAUttD,KAAKqJ,EAAE+hD,GAAI9hD,EAAE8hD,GAAIz+B,EAAEy+B,IAC7Bt5C,EAAM9R,aAzFV,SAAuBuI,GACrB,OAAQA,GACN,OACA,OACA,QACE,OAAO+H,GAAS0hE,OAAO,SAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,SAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,SAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,UAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,SAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,UAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,SAAUr/C,UACnC,OACE,OAAOriB,GAAS0hE,OAAO,UAAUr/C,UACnC,QACE,OAAOriB,GAAS0hE,OAAO,UAAUr/C,WAoErBs/C,CAAazJ,IAC3BvpB,EAAOj/C,KAAKyR,EAAEwtC,QACdvP,EAAQ1vC,KAAKJ,OAGR,CACLwtD,UAAW,IAAI/mD,aAAa+mD,GAC5BE,UAAW,IAAIjnD,aAAainD,GAC5Bx7C,MAAO,IAAIzL,aAAayL,GACxBogE,OAAQ,IAAI7rE,aAAayL,GACzBmtC,OAAQ,IAAI54C,aAAa44C,GACzBvP,QAAS,IAAIyiC,GAAcziC,EAASm3B,EAAUx1D,IE9RlD,IAAM09C,GAKJ,SAAatvD,GACX8D,KAAK9D,MAAQA,sDAGf+O,GAAIjG,oBAAU,MAAO,IACrBiG,GAAI1N,oBAAU,MAAO,iBAOrBsxE,kBAAUvgC,GACR,OAAOtuC,KAAK9D,MAAQ8D,KAAK9D,MAAOoyC,GAAQA,gBAS1CwM,mBAAWxM,GACT,MAAO,iBAGTwgC,+BAAuBr/C,EAAiBsa,EAAe0O,GAOrD,OANI1O,GACFta,EAAOgb,aAAaV,EAAS/P,QAE3Bye,GACFhpB,EAAOgb,aAAagO,EAAUze,QAEzBvK,gBASTs/C,sBAAczgC,GACZ,OAAO,IAAI3qC,gBAUbo3C,qBAAazM,EAAavE,EAAe0O,GACvC,OAAOz4C,KAAK8uE,sBACV9uE,KAAK+uE,aAAazgC,GAAMvE,EAAU0O,6CASxC,IAAMu2B,eAKJ,WAAa/xB,GACX7kC,aACApY,KAAKi9C,MAAQA,kLAGfkE,EAAI8tB,2BAEJ9tB,EAAI5jD,oBAAU,OAAOyC,KAAKi9C,OAC1BkE,EAAIn8C,oBAAU,OAAOhF,KAAKivE,UAAUjqE,kBAEpC81C,mBAAWxM,GACT,OAAOtuC,KAAKivE,UAAUhjB,gBAAgBjsD,KAAKi9C,MAAOj9C,KAAK6uE,SAASvgC,iBAGlEygC,sBAAczgC,GACZ,OAAOtuC,KAAKivE,UAAU3iB,kBAAkBtsD,KAAKi9C,MAAOj9C,KAAK6uE,SAASvgC,+CApB5Ckd,IA0BpB0jB,sLACJC,EAAIF,yBAAe,OAAOpiB,8CADCmiB,IAIvBI,sLACJC,EAAIJ,yBAAe,OAAOliB,8CADFiiB,IAIpBM,eAEJ,WAAapzE,EAAqB4R,GAChCsK,YAAMlc,GACN8D,KAAK8N,UAAYA,sJAGnByhE,EAAIvqE,oBAAU,MAAO,QACrBuqE,EAAIhyE,oBAAU,OAAOyC,KAAK8N,uBAE1BgtC,mBAAWxM,GACT,OAAOtuC,KAAK8N,UAAUE,aAAahO,KAAK6uE,SAASvgC,iBAGnDygC,sBAAczgC,GACZ,OAAO,IAAI3qC,GAAU+2B,KAAK16B,KAAK86C,UAAUxM,+CAfpBkd,IAmBnBgkB,eAEJ,WAAa1zB,GACX1jC,aACApY,KAAK87C,KAAOA,sJAGd2zB,EAAIzqE,oBAAU,MAAO,QACrByqE,EAAIlyE,oBAAU,OAAOyC,KAAK87C,kBAE1BhB,qBACE,MAAO,CACLgB,KAAM97C,KAAK87C,mBAIfizB,wBACE,OAAO/uE,KAAK87C,KAAKvlB,OAAO8U,mDAjBHmgB,IAqBnBkkB,eAGJ,WAAaxzE,EAAsC4R,EAAsB6hE,GACvEv3D,YAAMlc,GACN8D,KAAK8N,UAAYA,EACjB9N,KAAK2vE,UAAYA,GAAa7hE,EAAU6hE,8JAG1CC,EAAI5qE,oBAAU,MAAO,QACrB4qE,EAAIryE,oBAAU,OAAOyC,KAAK8N,uBAE1BgtC,mBAAWxM,GACTzzC,IAAM0vB,EAAKvqB,KAAK8N,UAAUk0D,aAAahiE,KAAK6uE,SAASvgC,IAErD,OADA/jB,EAAGolD,UAAY3vE,KAAK2vE,UACbplD,eAGTwkD,sBAAczgC,GACZzzC,IAAMwc,EAAIrX,KAAK86C,UAAUxM,GACzB,OAAO,IAAI3qC,GACR+2B,KAAKrjB,EAAE4jC,OACPlwC,IAAIsM,EAAE8jC,OACNpC,eAAe,+CAvBGyS,IA2BnBojB,eAGJ,WAAa1yE,EAAsConE,EAAoBx1D,GACrEsK,YAAMlc,GACN8D,KAAKsjE,SAAWA,EAChBtjE,KAAK8N,UAAYA,sJAGnB+hE,EAAI7qE,oBAAU,MAAO,WACrB6qE,EAAItyE,oBAAU,OAAOyC,KAAKsjE,sBAE1BxoB,mBAAWxM,GACTzzC,IAAMooB,EAAMjjB,KAAK6uE,SAASvgC,KACStuC,KAAKsjE,iHAIlCxnE,EAAIo1D,EAAOjuC,GACX4kC,EAAIsJ,EAAOluC,GACjB,MAAO,CACL6sD,QAAS,IAAInsE,EAAQmC,EAAEhK,GAAIiK,EAAEjK,GAAIstB,EAAEttB,IACnCi0E,QAAS,IAAIpsE,EAAQmC,EAAE+hD,GAAI9hD,EAAE8hD,GAAIz+B,EAAEy+B,IACnC5M,MAAOj7C,KAAK8N,UAAUE,aAAaglD,EAASl3D,GAAG,IAC/Cq/C,MAAOn7C,KAAK8N,UAAUE,aAAaglD,EAASnL,GAAG,IAC/C7iD,KAAMyoE,GAAgBzoE,EAAKie,kBAI/B8rD,sBAAczgC,SACiBtuC,KAAK86C,UAAUxM,2BAC5C,OAAO,IAAI3qC,GAAUosB,WAAW+/C,EAASC,GAASh3B,eAAe,+CA/BzCyS,IAmCtBwkB,sLACJC,EAAIhB,yBAAe,OAAOjiB,8CADHgiB,IAInBkB,eAGJ,WAAah0E,EAAsCi0E,EAAwBriE,GACzEsK,YAAMlc,GACN8D,KAAKmwE,WAAaA,EAClBnwE,KAAK8N,UAAYA,sJAGnBsiE,EAAIprE,oBAAU,MAAO,SACrBorE,EAAI7yE,oBAAU,OAAOyC,KAAKmwE,wBAE1Br1B,mBAAWxM,GACTzzC,IAAMwqD,EAAMrlD,KAAKmwE,WACXltD,EAAMjjB,KAAK6uE,SAASvgC,GAC1B,MAAO,CACL6hC,WAAY9qB,EACZ1jD,MAAOshB,EACP+4B,MAAOqJ,EAAIgrB,WAAYptD,iBAI3BqtD,+BAAuB35D,GACrB9b,IAAMmZ,EAAY,IAAIsB,GAAUqB,GAC1BsM,EAAMjjB,KAAK8N,UAAUyiE,eAAev8D,GAAa,GACvD,OAAOhU,KAAK8N,UAAUE,aAAaiV,gBAGrC8rD,sBAAczgC,GACZzzC,IAAMmhD,EAAQh8C,KAAK86C,UAAUxM,GAAK0N,MAC5BqkB,EAAMrgE,KAAKswE,sBAAsBt0B,EAAMw0B,OACvClQ,EAAMtgE,KAAKswE,sBAAsBt0B,EAAMy0B,OAC7C,OAAO,IAAI9sE,GAAU+2B,KAAK2lC,GAAYt1D,IAAIu1D,GAAYvnB,eAAe,+CAhC/CyS,IAoCpBklB,iLACJC,EAAI3rE,oBAAU,MAAO,sDADM0qE,IAIvBkB,sLACJC,EAAI5B,yBAAe,OAAOhiB,8CADE+hB,IAIxB8B,sLACJC,EAAI9B,yBAAe,OAAOtiB,8CADGqiB,IAIzBgC,sLACJC,EAAIhC,yBAAe,OAAOziB,8CADJwiB,IAIlBkC,iLACJC,EAAInsE,oBAAU,MAAO,oDADIwmD,IAYrB4lB,eAIJ,WAAan0B,EAAc1S,GACzBnyB,YAAM6kC,GACNj9C,KAAKuqC,KAAOA,+HAGd8mC,EAAIrsE,oBAAU,MAAO,oBAErB81C,qBACEjgD,IAAMC,EAAIkF,KAAKuqC,KACf,MAAO,CACL0S,MAAOj9C,KAAKi9C,MACZ5yC,KAAMvP,EAAEuP,KACR4e,OAAQnuB,EAAEmuB,qBAId8lD,wBAIE,OAHK/uE,KAAKsxE,aACRtxE,KAAKsxE,WAAapqB,GAAqBlnD,KAAKuqC,KAAKtiC,WAE5CjI,KAAKsxE,sDAxBStC,IA4BnBuC,sLACJC,EAAIvC,yBAAe,OAAO5iB,8CADD2iB,IAIrByC,eAEJ,WAAav1E,EAAsCozB,GACjDlX,YAAMlc,GACN8D,KAAKsvB,QAAUA,sJAGjBoiD,EAAI1sE,oBAAU,MAAO,WACrB0sE,EAAIn0E,oBAAU,OAAOyC,KAAKsvB,qBAE1BwrB,mBAAWxM,GACT,MAAO,CACLhf,QAAStvB,KAAKsvB,QACd3tB,MAAO3B,KAAK6uE,SAASvgC,iBAIzBygC,wBACE,OAAO/uE,KAAKsvB,QAAQiH,OAAO8U,mDAlBHmgB,IAsBtBmmB,sLACJC,EAAI3C,yBAAe,OAAOriB,8CADIoiB,IAI1B6C,sLACJC,EAAI7C,yBAAe,OAAO7hB,8CADF4hB,IAIpB+C,eAIJ,WAAar1B,EAAoB5uC,GAC/BsK,aACApY,KAAK08C,SAAWA,EAChB18C,KAAK8N,UAAYA,sJAGnBkkE,EAAIhtE,oBAAU,MAAO,YACrBgtE,EAAIz0E,oBAAU,OAAOyC,KAAK08C,sBAE1B5B,qBACE,MAAO,CACL4B,SAAU18C,KAAK08C,SACf5uC,UAAW9N,KAAK8N,wBAIpBihE,wBACE,OAAO/uE,KAAK08C,SAASu1B,UAAUjyE,KAAK8N,sDArBX09C,IA6BvB0mB,eAEJ,WAAah2E,EAAmB0gD,GAC9BxkC,YAAMlc,GACN8D,KAAK48C,OAASA,sJAGhBu1B,EAAIntE,oBAAU,MAAO,UACrBmtE,EAAI50E,oBAAU,OAAOyC,KAAK48C,oBAE1B9B,mBAAWxM,GACTzzC,IAAMu3E,EAAMpyE,KAAK48C,OACX35B,EAAMjjB,KAAK6uE,SAASvgC,GAC1B,MAAO,CACLsO,OAAQw1B,EACRzwE,MAAOshB,EACP5nB,MAAO+2E,EAAI70E,KAAM0lB,iBAIrB8rD,sBAAczgC,GACZzzC,IAAMw3E,EAAKryE,KAAK48C,OAAO30C,SACjBgb,EAAMjjB,KAAK6uE,SAASvgC,GAC1B,OAAO,IAAI3qC,EACT0uE,EAAU,EAANpvD,GACJovD,EAAU,EAANpvD,EAAU,GACdovD,EAAU,EAANpvD,EAAU,+CA1BOuoC,IA+BrB8mB,iLACJC,EAAIvtE,oBAAU,MAAO,mDADGktE,IAIpBM,sLACJC,EAAIxD,yBAAe,OAAO1hB,8CADFyhB,IAIpB0D,sLACJC,EAAI1D,yBAAe,OAAOzhB,8CADCwhB,IC3a7B,SAAS4D,KACP,OAAO,IAAI/vE,YAAY,CACrB,EAAK,IAAO,IAAO,IAAO,KAAO,KAAO,KAAO,KAC/C,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,IAAM,IAAO,IAAO,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,IAAO,GAAM,IAAO,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,IAAO,IAAO,IAAM,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAM,IAAO,IAAO,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,IAAM,KAAO,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,IAAO,GAAM,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,IAAO,IAAO,IACjD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAM,IAAO,IAAO,IAAO,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,GAAM,IAAO,IAAO,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,KAAO,IAAM,IAAO,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,IAAO,IAAO,IAAO,IAAM,KAAO,KAAO,KAAO,KAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAM,IAAO,IAAO,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,GAAM,IAAO,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,IAAO,IAAM,IAChD,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KACjD,KAAO,KAAO,KAAO,KAAO,IAAO,IAAO,IAAO,IAIrD,SAASgwE,KACP,OAAO,IAAInwE,WAAW,EACnB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC7D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI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EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAChD,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC9C,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EACnD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EACjD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACjD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC9C,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAChD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACjD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAChD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EACnD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAsBjE,SAASowE,KACP,MAAO,CAEL,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAcvC,SAASC,GAAoCC,EAAiBC,EAAYC,EAAYC,EAAYhiE,GAOhG,IAcIiiE,EAA2BC,EAC3B7qE,EAAe8qE,EAafC,EAAYC,EAAYC,EA5BxBC,EAAW,EACXC,GAAY,EACZC,GAAU,EACVC,GAAO,EACPC,GAAgB,EAChBC,GAAgB,EAGhB9qE,EAAIgqE,EAAKC,EAAKC,EAGda,EAAKf,EACLgB,EAAKhB,EAAKC,EAKVgB,EAAQ,IAAIxxE,WAAW,IAEvByxE,EAA0B,GAC1BC,EAAwB,GACxBjiB,EAAuB,GACvBkiB,EAA2B,GAE3BC,EAAY1B,KACZ2B,EAAW1B,KACX2B,EA5DG,CAEL,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA+GrC,SAAS9oE,EAAM/N,EAAW0Z,EAAWnL,GAAa,OAAOvO,GAAK0Z,EAAI1Z,GAAKuO,EAEvE,SAASvK,EAAOmE,EAAWC,EAAWqjB,GAIpC,OAAS6qD,GADT7qD,GAAKA,EAAIqqD,GAAMN,GACIa,GAFnBjuE,GAAKA,EAAIytE,GAAMN,IADfptE,GAAKA,EAAIytE,GAAMN,GAMjB,SAASwB,EAAO1wE,EAAWyK,EAAgB1I,EAAWC,EAAWqjB,EAAWsrD,EAAeC,GACzF,IAAIC,EAAK,EAAI7wE,EAEb,GAAIsvE,EAAauB,GAAO,EAAG,CACzB,IAAIC,GAAMnB,EAAWgB,IAAUC,EAAQD,GACnCI,EAAK1B,EAELpxE,EAAY,EAARwG,EAMR,GAJA2rE,EAAenyE,EAAI,GAAM8D,EAAI+uE,EAC7BV,EAAenyE,EAAI,GAAM+D,EACzBouE,EAAenyE,EAAI,GAAMonB,GAEpBuqD,EAAW,CACd,IAAIoB,EAAS,EAAJhxE,EAETqwE,EAAapyE,GAAM+xE,EAAeroE,EAAKopE,EAAIC,GAAMD,EAAIC,EAAK,GAAKF,GAC/DT,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIC,EAAK,GAAKF,GACvET,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIC,EAAK,GAAKF,GAGrE1jE,IAAWkjE,EAAgB7rE,GAAU2I,EAAWpN,EAAI6B,KAAK+d,MAAMkxD,KAEnExB,EAAauB,GAAOpsE,EACpB0rE,EAAO1lE,GAAWhG,EAElBA,GAAS,OAET0rE,EAAO1lE,GAAW6kE,EAAauB,GAInC,SAASI,EAAOjxE,EAAWyK,EAAgB1I,EAAWC,EAAWqjB,EAAWsrD,EAAeC,GACzF,IAAIC,EAAK,EAAI7wE,EAAI,EAEjB,GAAIsvE,EAAauB,GAAO,EAAG,CACzB,IAAIC,GAAMnB,EAAWgB,IAAUC,EAAQD,GACnCI,EAAK1B,EAELpxE,EAAY,EAARwG,EAMR,GAJA2rE,EAAenyE,GAAM8D,EACrBquE,EAAenyE,EAAI,GAAM+D,EAAI8uE,EAC7BV,EAAenyE,EAAI,GAAMonB,GAEpBuqD,EAAW,CACd,IAAIoB,EAAS,EAAJhxE,EACLkxE,EAAKF,EAAU,EAALf,EAEdI,EAAapyE,GAAM+xE,EAAeroE,EAAKopE,EAAIC,GAAMD,EAAIG,GAAMJ,GAC3DT,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIG,EAAK,GAAKJ,GACvET,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIG,EAAK,GAAKJ,GAGrE1jE,IAAWkjE,EAAgB7rE,GAAU2I,EAAWpN,EAAI6B,KAAK+d,MAAMkxD,GAAMb,IAEzEX,EAAauB,GAAOpsE,EACpB0rE,EAAO1lE,GAAWhG,EAElBA,GAAS,OAET0rE,EAAO1lE,GAAW6kE,EAAauB,GAInC,SAASM,EAAOnxE,EAAWyK,EAAgB1I,EAAWC,EAAWqjB,EAAWsrD,EAAeC,GACzF,IAAIC,EAAK,EAAI7wE,EAAI,EAEjB,GAAIsvE,EAAauB,GAAO,EAAG,CACzB,IAAIC,GAAMnB,EAAWgB,IAAUC,EAAQD,GACnCI,EAAK1B,EAELpxE,EAAY,EAARwG,EAMR,GAJA2rE,EAAenyE,GAAM8D,EACrBquE,EAAenyE,EAAI,GAAM+D,EACzBouE,EAAenyE,EAAI,GAAMonB,EAAIyrD,GAExBlB,EAAW,CACd,IAAIoB,EAAS,EAAJhxE,EACLkxE,EAAKF,EAAU,EAALd,EAEdG,EAAapyE,GAAM+xE,EAAeroE,EAAKopE,EAAIC,GAAMD,EAAIG,GAAMJ,GAC3DT,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIG,EAAK,GAAKJ,GACvET,EAAapyE,EAAI,GAAM+xE,EAAeroE,EAAKopE,EAAIC,EAAK,GAAKD,EAAIG,EAAK,GAAKJ,GAGrE1jE,IAAWkjE,EAAgB7rE,GAAU2I,EAAWpN,EAAI6B,KAAK+d,MAAMkxD,GAAMZ,IAEzEZ,EAAauB,GAAOpsE,EACpB0rE,EAAO1lE,GAAWhG,EAElBA,GAAS,OAET0rE,EAAO1lE,GAAW6kE,EAAauB,GAInC,SAASO,EAAUpxE,GACjB,IAAIgxE,EAAS,EAAJhxE,EAEiB,IAAtBqvE,EAAa2B,KACf3B,EAAa2B,GAAO/B,GAAQjvE,EAAI,EAAIkF,GAAKA,GAAM+pE,GAAQjvE,EAAI,GAAKkF,GAChEmqE,EAAa2B,EAAK,GAAM/B,GAAQjvE,EAAIiwE,EAAK/qE,GAAKA,GAAM+pE,GAAQjvE,EAAIiwE,GAAM/qE,GACtEmqE,EAAa2B,EAAK,GAAM/B,GAAQjvE,EAAIkwE,EAAKhrE,GAAKA,GAAM+pE,GAAQjvE,EAAIkwE,GAAMhrE,IAI1E,SAASmsE,EAAYC,EAAYC,EAAYC,EAAYxxE,EAAWyxE,GAElE,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlC,GACF9vE,EAAIpC,EAAM0zE,EAAIC,EAAIC,GAClBE,EAAK9zE,EAAM0zE,EAAK,EAAGC,EAAIC,GACvBG,EAAK/zE,EAAM0zE,EAAIC,EAAK,EAAGC,GACvBI,EAAKh0E,EAAM0zE,EAAIC,EAAIC,EAAK,GACxBK,EAAMj0E,EAAM0zE,EAAK,EAAGC,EAAK,EAAGC,GAC5BM,EAAMl0E,EAAM0zE,EAAK,EAAGC,EAAIC,EAAK,GAC7BO,EAAMn0E,EAAM0zE,EAAIC,EAAK,EAAGC,EAAK,GAC7BQ,EAAOp0E,EAAM0zE,EAAK,EAAGC,EAAK,EAAGC,EAAK,KAElCE,EAAK1xE,EAAI,EAGT6xE,GAFAF,EAAK3xE,EAAIiwE,GAEE,EACX6B,GAFAF,EAAK5xE,EAAIkwE,GAEE,EAEX8B,GADAD,EAAMJ,EAAKzB,GACE,GAGf,IAAI+B,EAAY,EACZC,EAASjD,EAAOjvE,GAChBmyE,EAASlD,EAAOyC,GAChBU,EAASnD,EAAO0C,GAChBU,EAASpD,EAAO4C,GAChBS,EAASrD,EAAO2C,GAChBW,EAAStD,EAAO6C,GAChBU,EAASvD,EAAO8C,GAChBU,EAASxD,EAAO+C,GAEhBE,EAASvC,IAAUsC,GAAa,GAChCE,EAASxC,IAAUsC,GAAa,GAChCG,EAASzC,IAAUsC,GAAa,GAChCI,EAAS1C,IAAUsC,GAAa,GAChCK,EAAS3C,IAAUsC,GAAa,IAChCM,EAAS5C,IAAUsC,GAAa,IAChCO,EAAS7C,IAAUsC,GAAa,KAChCQ,EAAS9C,IAAUsC,GAAa,IAIpC,IAAIS,EAAOnC,EAAW0B,GACtB,GAAa,IAATS,EAAY,OAAO,EAEvB,IAAIC,EAAMrB,EAAK,EACXsB,EAAMrB,EAAK,EACXsB,EAAMrB,EAAK,EAIJ,EAAPkB,IACG9C,IACHwB,EAASpxE,GACToxE,EAASM,IAEXhB,EAAM1wE,EAAG,EAAGsxE,EAAIC,EAAIC,EAAIU,EAAQC,IAGvB,EAAPO,IACG9C,IACHwB,EAASM,GACTN,EAASS,IAEXZ,EAAMS,EAAI,EAAGiB,EAAKpB,EAAIC,EAAIW,EAAQE,IAGzB,EAAPK,IACG9C,IACHwB,EAASO,GACTP,EAASS,IAEXnB,EAAMiB,EAAI,EAAGL,EAAIsB,EAAKpB,EAAIY,EAAQC,IAGzB,EAAPK,IACG9C,IACHwB,EAASpxE,GACToxE,EAASO,IAEXV,EAAMjxE,EAAG,EAAGsxE,EAAIC,EAAIC,EAAIU,EAAQE,IAKvB,GAAPM,IACG9C,IACHwB,EAASQ,GACTR,EAASU,IAEXpB,EAAMkB,EAAI,EAAGN,EAAIC,EAAIsB,EAAKP,EAAQC,IAGzB,GAAPG,IACG9C,IACHwB,EAASU,GACTV,EAASY,IAEXf,EAAMa,EAAK,EAAGa,EAAKpB,EAAIsB,EAAKN,EAAQE,IAG3B,GAAPC,IACG9C,IACHwB,EAASW,GACTX,EAASY,IAEXtB,EAAMqB,EAAK,EAAGT,EAAIsB,EAAKC,EAAKL,EAAQC,IAG3B,IAAPC,IACG9C,IACHwB,EAASQ,GACTR,EAASW,IAEXd,EAAMW,EAAI,EAAGN,EAAIC,EAAIsB,EAAKP,EAAQE,IAKzB,IAAPE,IACG9C,IACHwB,EAASpxE,GACToxE,EAASQ,IAEXT,EAAMnxE,EAAG,EAAGsxE,EAAIC,EAAIC,EAAIU,EAAQI,IAGvB,IAAPI,IACG9C,IACHwB,EAASM,GACTN,EAASU,IAEXX,EAAMO,EAAI,EAAGiB,EAAKpB,EAAIC,EAAIW,EAAQI,IAGzB,KAAPG,IACG9C,IACHwB,EAASS,GACTT,EAASY,IAEXb,EAAMU,EAAK,GAAIc,EAAKC,EAAKpB,EAAIa,EAAQI,IAG5B,KAAPC,IACG9C,IACHwB,EAASO,GACTP,EAASW,IAEXZ,EAAMQ,EAAI,GAAIL,EAAIsB,EAAKpB,EAAIY,EAAQI,IAYrC,IATA,IAEIM,EACAC,EACAC,EAJAC,EAAWhB,GAAa,EAKxB35E,EAAI,GAI6B,IAA9Bk4E,EAAUyC,EAAW36E,IAC1Bw6E,EAAKtC,EAAUyC,EAAW36E,GAC1By6E,EAAKvC,EAAUyC,EAAW36E,EAAI,GAC9B06E,EAAKxC,EAAUyC,EAAW36E,EAAI,GAE1Bu3E,GACEY,EAAiBqC,GAAMC,GAAOtB,IAChCrjB,EAAYmhB,KAAaY,EAAO2C,GAChC1kB,EAAYmhB,KAAaY,EAAO4C,IAE9BtC,EAAiBsC,GAAMC,GAAOvB,IAChCrjB,EAAYmhB,KAAaY,EAAO4C,GAChC3kB,EAAYmhB,KAAaY,EAAO6C,IAE9BvC,EAAiBqC,GAAME,GAAOvB,IAChCrjB,EAAYmhB,KAAaY,EAAO2C,GAChC1kB,EAAYmhB,KAAaY,EAAO6C,MAGlC5kB,EAAYmhB,KAAaY,EAAOJ,EAAgB+C,EAAKC,GACrD3kB,EAAYmhB,KAAaY,EAAOJ,EAAgBgD,EAAKD,GACrD1kB,EAAYmhB,KAAaY,EAAO6C,IAGlC16E,GAAK,EAIT,SAAS46E,EAAaC,EAAeC,EAAeC,EAAeC,EAAeC,EAAeC,GAC/Fn7E,IAAI2H,EACAgxE,EACAjvE,EACAC,EACAqjB,EACAouD,EACAC,EA8BAC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAEvC,GA9BAb,OAAgB37E,IAAT27E,EAAqBA,EAAO,EACnCC,OAAgB57E,IAAT47E,EAAqBA,EAAO,EACnCC,OAAgB77E,IAAT67E,EAAqBA,EAAO,EAEnCC,OAAgB97E,IAAT87E,EAAqBA,EAAOpE,EAAK,EACxCqE,OAAgB/7E,IAAT+7E,EAAqBA,EAAOpE,EAAK,EACxCqE,OAAgBh8E,IAATg8E,EAAqBA,EAAOpE,EAAK,EAEnCU,IACCF,GACFuD,EAAOtxE,KAAK3E,IAAI,EAAGi2E,GACnBC,EAAOvxE,KAAK3E,IAAI,EAAGk2E,GACnBC,EAAOxxE,KAAK3E,IAAI,EAAGm2E,GAEnBC,EAAOzxE,KAAK5E,IAAIiyE,EAAK,EAAGoE,GACxBC,EAAO1xE,KAAK5E,IAAIkyE,EAAK,EAAGoE,GACxBC,EAAO3xE,KAAK5E,IAAImyE,EAAK,EAAGoE,KAExBL,EAAOtxE,KAAK3E,IAAI,EAAGi2E,GACnBC,EAAOvxE,KAAK3E,IAAI,EAAGk2E,GACnBC,EAAOxxE,KAAK3E,IAAI,EAAGm2E,GAEnBC,EAAOzxE,KAAK5E,IAAIiyE,EAAK,EAAGoE,GACxBC,EAAO1xE,KAAK5E,IAAIkyE,EAAK,EAAGoE,GACxBC,EAAO3xE,KAAK5E,IAAImyE,EAAK,EAAGoE,KAMvB1D,EAiCH,IARA6D,EAAQR,EAAO,EACfS,EAAQR,EAAO,EAGfU,EAAQR,EAAO,EACfS,EAAQR,EAAO,EACfS,EAAQR,EAAO,EAEVnuD,EANLwuD,EAAQR,EAAO,EAMChuD,EAAI2uD,IAAS3uD,EAC3B,IAAKrjB,EAAI4xE,EAAO5xE,EAAI+xE,IAAS/xE,EAC3B,IAAKD,EAAI4xE,EAAO5xE,EAAI+xE,IAAS/xE,EAC3BivE,EAAsB,EAAjBpzE,EAAMmE,EAAGC,EAAGqjB,GACjBiqD,EAAa0B,IAAQ,EACrB1B,EAAa0B,EAAK,IAAO,EACzB1B,EAAa0B,EAAK,IAAO,OA3B/B,IARA2C,EAAQ9xE,KAAK3E,IAAI,EAAGi2E,EAAO,GAC3BS,EAAQ/xE,KAAK3E,IAAI,EAAGk2E,EAAO,GAC3BS,EAAQhyE,KAAK3E,IAAI,EAAGm2E,EAAO,GAE3BS,EAAQjyE,KAAK5E,IAAIiyE,EAAIoE,EAAO,GAC5BS,EAAQlyE,KAAK5E,IAAIkyE,EAAIoE,EAAO,GAC5BS,EAAQnyE,KAAK5E,IAAImyE,EAAIoE,EAAO,GAEvBnuD,EAAIwuD,EAAOxuD,EAAI2uD,IAAS3uD,EAE3B,IADAquD,EAAUxD,EAAK7qD,EACVrjB,EAAI4xE,EAAO5xE,EAAI+xE,IAAS/xE,EAE3B,IADAyxE,EAAUC,EAAUzD,EAAKjuE,EACpBD,EAAI4xE,EAAO5xE,EAAI+xE,IAAS/xE,EAE3ButE,EADAtvE,EAAI,GAAKyzE,EAAU1xE,KACC,EACpButE,EAAatvE,EAAI,IAAO,EACxBsvE,EAAatvE,EAAI,IAAO,EAyBhC,IAAK8vE,EAAM,CAGT,IAAImE,EACAC,EAASf,EAAUgB,EAASf,EAAUgB,EAASf,EAC/CgB,EAASf,EAAUgB,EAASf,EAAUgB,EAASf,EAGnD,IADAS,GAAU,EACL5uD,EAAIguD,EAAMhuD,EAAImuD,IAAQnuD,EAAG,CAC5B,IAAKrjB,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAAG,CAC5B,IAAKD,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAEzB,GAAIktE,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1ByE,EAAS/uD,EACT4uD,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAIf,IADAA,GAAU,EACLjyE,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAAG,CAC5B,IAAKqjB,EAAI+uD,EAAQ/uD,EAAImuD,IAAQnuD,EAAG,CAC9B,IAAKtjB,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAEzB,GAAIktE,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1BwE,EAASnyE,EACTiyE,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAIf,IADAA,GAAU,EACLlyE,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAAG,CAC5B,IAAKC,EAAImyE,EAAQnyE,EAAIuxE,IAAQvxE,EAAG,CAC9B,IAAKqjB,EAAI+uD,EAAQ/uD,EAAImuD,IAAQnuD,EAE3B,GAAI4pD,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1BuE,EAASnyE,EACTkyE,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAIf,IADAA,GAAU,EACL5uD,EAAImuD,EAAMnuD,GAAKguD,IAAQhuD,EAAG,CAC7B,IAAKrjB,EAAIuxE,EAAMvxE,GAAKoxE,IAAQpxE,EAAG,CAC7B,IAAKD,EAAIuxE,EAAMvxE,GAAKoxE,IAAQpxE,EAE1B,GAAIktE,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1B4E,EAASlvD,EACT4uD,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAIf,IADAA,GAAU,EACLjyE,EAAIuxE,EAAMvxE,GAAKoxE,IAAQpxE,EAAG,CAC7B,IAAKqjB,EAAIkvD,EAAQlvD,GAAKguD,IAAQhuD,EAAG,CAC/B,IAAKtjB,EAAIuxE,EAAMvxE,GAAKoxE,IAAQpxE,EAE1B,GAAIktE,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1B2E,EAAStyE,EACTiyE,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAIf,IADAA,GAAU,EACLlyE,EAAIuxE,EAAMvxE,GAAKoxE,IAAQpxE,EAAG,CAC7B,IAAKC,EAAIsyE,EAAQtyE,GAAKoxE,IAAQpxE,EAAG,CAC/B,IAAKqjB,EAAIkvD,EAAQlvD,GAAKguD,IAAQhuD,EAE5B,GAAI4pD,EADJjvE,EAAMkvE,EAAKC,EAAM9pD,EAAM6pD,EAAKltE,EAAKD,IACf4tE,EAAU,CAC1B0E,EAAStyE,EACTkyE,GAAU,EACV,MAGJ,GAAIA,EAAS,MAEf,GAAIA,EAAS,MAKXrE,GACFuD,EAAOtxE,KAAK3E,IAAI,EAAGg3E,EAAS,GAC5Bd,EAAOvxE,KAAK3E,IAAI,EAAGi3E,EAAS,GAC5Bd,EAAOxxE,KAAK3E,IAAI,EAAGk3E,EAAS,GAE5Bd,EAAOzxE,KAAK5E,IAAIiyE,EAAK,EAAGmF,EAAS,GACjCd,EAAO1xE,KAAK5E,IAAIkyE,EAAK,EAAGmF,EAAS,GACjCd,EAAO3xE,KAAK5E,IAAImyE,EAAK,EAAGmF,EAAS,KAEjCpB,EAAOtxE,KAAK3E,IAAI,EAAGg3E,EAAS,GAC5Bd,EAAOvxE,KAAK3E,IAAI,EAAGi3E,EAAS,GAC5Bd,EAAOxxE,KAAK3E,IAAI,EAAGk3E,EAAS,GAE5Bd,EAAOzxE,KAAK5E,IAAIiyE,EAAK,EAAGmF,EAAS,GACjCd,EAAO1xE,KAAK5E,IAAIkyE,EAAK,EAAGmF,EAAS,GACjCd,EAAO3xE,KAAK5E,IAAImyE,EAAK,EAAGmF,EAAS,IAKrC,IAAI9C,EAAa,GACjB,IAAKpsD,EAAIguD,EAAMhuD,EAAImuD,IAAQnuD,EAAGosD,IAAc,EAG1C,IAFAiC,EAAUxD,EAAK7qD,EACfosD,GAAc,EACTzvE,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAAGyvE,IAAc,EAG1C,IAFAgC,EAAUC,EAAUzD,EAAKjuE,EACzByvE,GAAc,EACT1vE,EAAIoxE,EAAMpxE,EAAIuxE,IAAQvxE,EAAG0vE,IAAc,EAE1CJ,EAAWtvE,EAAGC,EAAGqjB,EADjBrlB,EAAIyzE,EAAU1xE,EACS0vE,GA5kB/Bx1E,KAAKi3E,YAAc,SAAUsB,EAAmBC,EAAqBC,EAA4BC,EAAmBC,GAElH7E,GADAJ,EAAW6E,GACgB,EAC3B3E,EAAU8E,EACV7E,EAAO8E,GAEPhF,EAAY6E,GAAc5E,KAGxBG,EAAeL,EAAW,GAAK,EAAM,EAChCN,IACHA,EAAc,IAAItwE,aAAiB,EAAJmG,KAInC,IAAI2vE,EAAmB,EAAJ3vE,EASnB,GAPKoqE,GAAeA,EAAY/2E,SAAWs8E,IACzCvF,EAAc,IAAI3wE,WAAWk2E,IAG/BpwE,EAAQ,EACR8qE,EAAS,OAEI/3E,IAATk9E,EAAoB,CACtB,IAAIz3E,EAAMy3E,EAAM,GAAIvhE,IAAItR,KAAK+d,OACzB1iB,EAAMw3E,EAAM,GAAIvhE,IAAItR,KAAK+d,OAE7B4vD,EAAKN,EAAKrtE,KAAKyvB,KAAKzvB,KAAKK,IAAIjF,EAAK,IAAOiyE,GACzCO,EAAKN,EAAKttE,KAAKyvB,KAAKzvB,KAAKK,IAAIjF,EAAK,IAAOkyE,GACzCO,EAAKN,EAAKvtE,KAAKyvB,KAAKzvB,KAAKK,IAAIjF,EAAK,IAAOmyE,GAEzC8D,EACEj2E,EAAK,GAAKA,EAAK,GAAKA,EAAK,GACzBC,EAAK,GAAKA,EAAK,GAAKA,EAAK,SAG3BsyE,EAAKC,EAAKC,EAAK,EAEfwD,IAQF,OALA9C,EAAc73E,OAAiB,EAARkM,EAClBmrE,IAAWS,EAAY93E,OAAiB,EAARkM,GACrC2pD,EAAW71D,OAASg3E,EAChBniE,IAAWkjE,EAAe/3E,OAASkM,GAEhC,CACLP,SAAU,IAAInF,aAAaqxE,GAC3BrkD,OAAQ6jD,OAAYp4E,EAAY,IAAIuH,aAAasxE,GACjDzyE,MAAOqB,GAAamvD,EAAYgiB,EAAc73E,OAAS,GACvD6U,UAAWA,EAAY,IAAIzO,WAAW2xE,QAAkB94E,EACxDq4E,QAASA,IDJfnyD,GAAe1W,IAAI,QAASqkE,IAC5B3tD,GAAe1W,IAAI,MAAOimE,IAC1BvvD,GAAe1W,IAAI,OAAQilE,IAC3BvuD,GAAe1W,IAAI,WAAYmkE,IAC/BztD,GAAe1W,IAAI,YAAa6lE,IAChCnvD,GAAe1W,IAAI,aAAc+lE,IACjCrvD,GAAe1W,IAAI,SAAUwmE,IAC7B9vD,GAAe1W,IAAI,cAAe4mE,IAClClwD,GAAe1W,IAAI,QAAS8mE,IAC5BpwD,GAAe1W,IAAI,QAASynE,IAC5B/wD,GAAe1W,IAAI,WAAY2nE,ICwhB/B92E,OAAOC,OAAOk3E,GAAe,CAACl1D,OAAQ,CAAE+0D,GAAcC,GAAaC,GAAoB9vE,UC98B1E61E,GAIX,SAAsBC,EAAuBC,GAAvB/4E,UAAA84E,EAAuB94E,UAAA+4E,EAC3C/4E,KAAKy4B,KAAOz4B,KAAK84E,KAAO94E,KAAK+4E,KAC7B/4E,KAAKzC,KAAO,IAAIuF,aAAa9C,KAAKy4B,gBAQtBkC,GAAWq+C,EAAYpvE,GAWrC,IAVAxN,IAAIC,EAAI,EACJoJ,EAAI,EACFwzE,EAAQrvE,EAAEmvE,KACVG,EAAQtvE,EAAEkvE,KACZK,EAAK,EACLC,EAAM,EACNC,EAAM,EACJC,EAAK1vE,EAAErM,KACPg8E,EAAMP,EAAGz7E,KAERlB,EAAI48E,EAAOG,GAAO,EAAGD,GAAMD,EAAO78E,IAEvC,IADAg9E,EAAMD,EACD3zE,EAAI,EAAGA,EAAIyzE,EAAOG,GAAOJ,EAAOxzE,IAAK8zE,EAAIF,GAAOC,EAAGH,EAAK1zE,YAoCjD+zE,GAAajwE,EAAWK,EAAWqsD,GAgBjD,IAfA75D,IAAIC,EAAI,EACJoJ,EAAI,EACJ3J,EAAI,EACJ29E,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACHV,EAAQtvE,EAAEkvE,KACVG,EAAQrvE,EAAEmvE,KACVc,EAAQ5jB,EAAE8iB,KACVO,EAAK1vE,EAAErM,KACPu8E,EAAK7jB,EAAE14D,KACPw8E,EAAKxwE,EAAEhM,KACTm6B,EAAM,EAEHr7B,EAAI48E,EAAOQ,GAAMP,EAAO78E,IAC7B,IAAKs9E,EAAK,EAAGl0E,EAAI,EAAGA,EAAIo0E,EAAOD,IAAMn0E,IAAK,CAGxC,IAFAi0E,EAAKD,EACL/hD,EAAM,EACD57B,EAAI,EAAGA,EAAIo9E,EAAOQ,IAAMC,IAAM79E,IACjC47B,GAAO4hD,EAAGI,GAAMI,EAAGH,GAErBI,EAAGH,GAAMliD,YA8ECsiD,GAAazwE,EAAWK,EAAWqsD,GACjDp7D,IAAMo/E,EAAK1wE,EAAEhM,KACP28E,EAAKtwE,EAAErM,KACP48E,EAAKlkB,EAAE14D,KACP68E,EAAMF,EAAG,GACTG,EAAMH,EAAG,GACTI,EAAMJ,EAAG,GACTK,EAAML,EAAG,GACTM,EAAMN,EAAG,GACTO,EAAMP,EAAG,GACTQ,EAAMR,EAAG,GACTS,EAAMT,EAAG,GACTU,EAAMV,EAAG,GAETW,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTa,EAAMb,EAAG,GACTc,EAAMd,EAAG,GACTe,EAAMf,EAAG,GACTgB,EAAMhB,EAAG,GACTiB,EAAMjB,EAAG,GACTkB,EAAMlB,EAAG,GAEfF,EAAG,GAAKG,EAAMS,EAAMR,EAAMW,EAAMV,EAAMa,EACtClB,EAAG,GAAKG,EAAMU,EAAMT,EAAMY,EAAMX,EAAMc,EACtCnB,EAAG,GAAKG,EAAMW,EAAMV,EAAMa,EAAMZ,EAAMe,EACtCpB,EAAG,GAAKM,EAAMM,EAAML,EAAMQ,EAAMP,EAAMU,EACtClB,EAAG,GAAKM,EAAMO,EAAMN,EAAMS,EAAMR,EAAMW,EACtCnB,EAAG,GAAKM,EAAMQ,EAAMP,EAAMU,EAAMT,EAAMY,EACtCpB,EAAG,GAAKS,EAAMG,EAAMF,EAAMK,EAAMJ,EAAMO,EACtClB,EAAG,GAAKS,EAAMI,EAAMH,EAAMM,EAAML,EAAMQ,EACtCnB,EAAG,GAAKS,EAAMK,EAAMJ,EAAMO,EAAMN,EAAMS,WAGxBC,GAAU1xE,GAMxB,IALA/O,IAAMo+E,EAAQrvE,EAAEmvE,KACVG,EAAQtvE,EAAEkvE,KACVoB,EAAKtwE,EAAErM,KACPg+E,EAAO,IAAIh/E,MAAM28E,GAEdzzE,EAAI,EAAGA,EAAIyzE,IAASzzE,EAC3B81E,EAAM91E,GAAM,EAGd,IAAKrJ,IAAIC,EAAI,EAAG6R,EAAI,EAAG7R,EAAI48E,IAAS58E,EAClC,IAAKD,IAAIqJ,EAAI,EAAGA,EAAIyzE,IAASzzE,IAAKyI,EAChCqtE,EAAM91E,IAAOy0E,EAAIhsE,GAIrB,IAAK9R,IAAIqJ,EAAI,EAAGA,EAAIyzE,IAASzzE,EAC3B81E,EAAM91E,IAAOwzE,EAGf,OAAOsC,WA0BOC,GAAS5xE,EAAW6xE,GAKlC,IAJA5gF,IAAMo+E,EAAQrvE,EAAEmvE,KACVG,EAAQtvE,EAAEkvE,KACVoB,EAAKtwE,EAAErM,KAEJlB,EAAI,EAAG6R,EAAI,EAAG7R,EAAI48E,IAAS58E,EAClC,IAAKD,IAAIqJ,EAAI,EAAGA,EAAIyzE,IAASzzE,IAAKyI,EAChCgsE,EAAIhsE,IAAOutE,EAAKh2E,YAyCNyrC,GAAMtnC,EAAgB8xE,EAAYC,EAAYzvE,GAC5DA,EAAItC,EAAE8xE,GACN9xE,EAAE8xE,GAAM9xE,EAAE+xE,GACV/xE,EAAE+xE,GAAMzvE,WAGM0vE,GAAOj+E,EAAW0Z,GAGhC,OAFA1Z,EAAIiI,KAAKK,IAAItI,KACb0Z,EAAIzR,KAAKK,IAAIoR,KAEXA,GAAK1Z,EACEA,EAAIiI,KAAK2tC,KAAK,EAAMl8B,EAAIA,IAE7BA,EAAI,GACN1Z,GAAK0Z,EACEA,EAAIzR,KAAK2tC,KAAK,EAAM51C,EAAIA,IAE1B,eA7SPk+E,gBAAQ7hD,GACNA,EAAOz8B,KAAKiQ,IAAIxN,KAAKzC,gBAogBTu+E,GAAKlyE,EAAWwwD,EAAWkB,EAAWrE,GACpD76D,IAAI2/E,EAAK,EACL1/E,EAAI,EACF2/E,EAAKpyE,EAAEmvE,KACP9kD,EAAKrqB,EAAEkvE,KACTh+E,EAAIkhF,EACJ/yE,EAAIgrB,EAEJn5B,EAAImO,IACN8yE,EAAK,EACL1/E,EAAIvB,EACJA,EAAImO,EACJA,EAAI5M,GAGNxB,IAAMohF,EAAM,IAAIpD,GAAO/9E,EAAGA,GACpBohF,EAAM,IAAIrD,GAAO,EAAG5vE,GACpBkzE,EAAM,IAAItD,GAAO5vE,EAAGA,GAE1B,GAAW,IAAP8yE,EACFphD,GAAUshD,EAAKryE,OACV,CACL,IAAKvN,EAAI,EAAGA,EAAI43B,EAAK+nD,EAAI3/E,IACvB4/E,EAAI1+E,KAAKlB,GAAKuN,EAAErM,KAAKlB,GAEvB,KAAOA,EAAI4M,EAAInO,EAAGuB,IAChB4/E,EAAI1+E,KAAKlB,GAAK,EAMlB,YAlP6B28E,EAAiBoD,EAAeC,EAAiBC,EAAiBC,EAAezhF,EAAWmO,EAAWo7D,GAgCpI,IA/BAxpE,IAEIwB,EAAI,EACJoJ,EAAI,EACJ3J,EAAI,EACJ0gF,EAAO,EACLC,EAAU72E,KAAK3E,IAAInG,EAAG,IACxBq+E,EAAK,EACLuD,EAAK,EACLC,EAAK,EACLC,EAAK,EACLj/B,EAAU,EACV37C,EAAI,EACJgP,EAAI,EACJ9E,EAAI,EACJ2wE,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAO,EACPC,EAAQ,EACR5sD,EAAQ,EACR1yB,EAAI,EACJuQ,EAAI,EACJmJ,EAAI,EACJ6lE,EAAO,KACP73B,EAAM,EACN83B,EAAO,EACPC,EAAO,EAELhjB,EAAI,IAAIijB,aAAap0E,GAAK,GAEzB5M,EAAI4M,EAAG5M,IAAK,CACjB,IAAKP,EAAI,EAAGihF,EAAK,EAAGjhF,EAAIhB,EAAGgB,IAEzBihF,IADA7wE,EAAI8sE,EAAG38E,EAAI+/E,EAAQtgF,IACToQ,EAIZ,GAFAkuD,EAAE/9D,GAAK0gF,EAEHT,EAAI,CACN,IAAKxgF,EAAI,EAAGA,EAAImN,EAAGnN,IACjBwgF,EAAGjgF,EAAIkgF,EAAQzgF,GAAK,EAEtBwgF,EAAGjgF,EAAIkgF,EAAQlgF,GAAK,GAIxB,KAAOmgF,EAAOC,EAASD,IAAQ,CAG7B,IAFA7+B,EAAU,EAELthD,EAAI,EAAGA,EAAI4M,EAAI,EAAG5M,IACrB,IAAKoJ,EAAIpJ,EAAI,EAAGoJ,EAAIwD,EAAGxD,IAAK,CAW1B,IAVA0zE,EAAM98E,EAAI+/E,EAAS,EACnBM,EAAMj3E,EAAI22E,EAAS,EACnBz+E,EAAIy8D,EAAE/9D,GACN6R,EAAI,EACJmJ,EAAI+iD,EAAE30D,GAEN3J,EAAI,EACJoS,GAAK8qE,EAAGG,GAAMH,EAAG0D,GACjBxuE,GAAK8qE,EAAGG,EAAK,GAAKH,EAAG0D,EAAK,GAEnB5gF,EAAIhB,EAAGgB,IAAOoS,GAAK8qE,EAAGG,EAAKr9E,GAAKk9E,EAAG0D,EAAK5gF,GAE/C,KAAI8J,KAAKK,IAAIiI,IA/DPovE,eA+DmB13E,KAAK2tC,KAAK51C,EAAI0Z,IAAvC,CA4BA,IAxBA4lE,EAAQrB,GAFR1tE,GAAK,EACL8uE,EAAOr/E,EAAI0Z,GAEP2lE,EAAO,GACT3sD,EAAyB,IAAhB4sD,EAAQD,GAEjBh7E,EAAKkM,GAAK+uE,GADVjsE,EAAIpL,KAAK2tC,KAAKljB,EAAQ4sD,IACA,IAGtBjsE,EAAK9C,GAAK+uE,GADVj7E,EAAI4D,KAAK2tC,MAAM0pC,EAAQD,IAAiB,EAARC,KACV,GAGxBt/E,EAAI,EACJ0Z,EAAI,EAEJvb,EAAI,EACJ+gF,EAAK76E,EAAIg3E,EAAGG,GAAMnoE,EAAIgoE,EAAG0D,GACzBI,GAAM9rE,EAAIgoE,EAAGG,GAAMn3E,EAAIg3E,EAAG0D,GAC1B1D,EAAGG,GAAM0D,EAAI7D,EAAG0D,GAAMI,EACtBn/E,GAAKk/E,EAAKA,EAAIxlE,GAAKylE,EAAKA,EAExBD,EAAK76E,EAAIg3E,EAAGG,EAAK,GAAKnoE,EAAIgoE,EAAG0D,EAAK,GAClCI,GAAM9rE,EAAIgoE,EAAGG,EAAK,GAAKn3E,EAAIg3E,EAAG0D,EAAK,GACnC1D,EAAGG,EAAK,GAAK0D,EAAI7D,EAAG0D,EAAK,GAAKI,EAC9Bn/E,GAAKk/E,EAAKA,EAAIxlE,GAAKylE,EAAKA,EAEjBhhF,EAAIhB,EAAGgB,IACZ+gF,EAAK76E,EAAIg3E,EAAGG,EAAKr9E,GAAKkV,EAAIgoE,EAAG0D,EAAK5gF,GAClCghF,GAAM9rE,EAAIgoE,EAAGG,EAAKr9E,GAAKkG,EAAIg3E,EAAG0D,EAAK5gF,GACnCk9E,EAAGG,EAAKr9E,GAAK+gF,EAAI7D,EAAG0D,EAAK5gF,GAAKghF,EAE9Bn/E,GAAKk/E,EAAKA,EAAIxlE,GAAKylE,EAAKA,EAQ1B,GALA1iB,EAAE/9D,GAAKsB,EACPy8D,EAAE30D,GAAK4R,EAEPsmC,EAAU,EAEN2+B,EAaF,IAXAM,EAAMn3E,EAAI82E,EAAS,EAEnBzgF,EAAI,EACJ+gF,EAAK76E,EAAIs6E,EAJTK,EAAMtgF,EAAIkgF,EAAS,GAIDvrE,EAAIsrE,EAAGM,GACzBE,GAAM9rE,EAAIsrE,EAAGK,GAAM36E,EAAIs6E,EAAGM,GAC1BN,EAAGK,GAAME,EAAIP,EAAGM,GAAME,EAEtBD,EAAK76E,EAAIs6E,EAAGK,EAAK,GAAK3rE,EAAIsrE,EAAGM,EAAK,GAClCE,GAAM9rE,EAAIsrE,EAAGK,EAAK,GAAK36E,EAAIs6E,EAAGM,EAAK,GACnCN,EAAGK,EAAK,GAAKE,EAAIP,EAAGM,EAAK,GAAKE,EAEvBhhF,EAAImN,EAAGnN,IACZ+gF,EAAK76E,EAAIs6E,EAAGK,EAAK7gF,GAAKkV,EAAIsrE,EAAGM,EAAK9gF,GAClCghF,GAAM9rE,EAAIsrE,EAAGK,EAAK7gF,GAAKkG,EAAIs6E,EAAGM,EAAK9gF,GACnCwgF,EAAGK,EAAK7gF,GAAK+gF,EAAIP,EAAGM,EAAK9gF,GAAKghF,GAKtC,GAAgB,IAAZn/B,EAAe,MAGrB,IAAKthD,EAAI,EAAGA,EAAI4M,EAAG5M,IAAK,CACtB,IAAKP,EAAI,EAAGihF,EAAK,EAAGjhF,EAAIhB,EAAGgB,IAEzBihF,IADA7wE,EAAI8sE,EAAG38E,EAAI+/E,EAAQtgF,IACToQ,EAEZkuD,EAAE/9D,GAAKuJ,KAAK2tC,KAAKwpC,GAGnB,IAAK1gF,EAAI,EAAGA,EAAI4M,EAAI,EAAG5M,IAAK,CAE1B,IADAoJ,EAAIpJ,EACCP,EAAIO,EAAI,EAAGP,EAAImN,EAAGnN,IACjBs+D,EAAE30D,GAAK20D,EAAEt+D,KAAM2J,EAAI3J,GAEzB,GAAIO,IAAMoJ,IACRyrC,GAAKkpB,EAAG/9D,EAAGoJ,EAAGs3E,GACVT,GAAI,CACN,IAAKxgF,EAAI,EAAGA,EAAIhB,EAAGgB,IACjBo1C,GAAK8nC,EAAI38E,EAAI+/E,EAAQtgF,EAAG2J,EAAI22E,EAAQtgF,EAAGoQ,GAGzC,IAAKpQ,EAAI,EAAGA,EAAImN,EAAGnN,IACjBo1C,GAAKorC,EAAIjgF,EAAIkgF,EAAQzgF,EAAG2J,EAAI82E,EAAQzgF,EAAGoQ,IAM/C,IAAK7P,EAAI,EAAGA,EAAI4M,EAAG5M,IACjBggF,EAAGhgF,GAAK+9D,EAAE/9D,GAGZ,GAAKigF,EAIL,IAAKjgF,EAAI,EAAGA,EAAIgoE,EAAIhoE,IAAK,CAGvB,IAFA0gF,EAAK1gF,EAAI4M,EAAImxD,EAAE/9D,GAAK,EAEb0gF,GAzKK,OAyKS,CAKnB,IADAI,EAAQ,EAAMriF,EACTgB,EAAI,EAAGA,EAAIhB,EAAGgB,IAEjBupD,EAA0C,IAAnB,KADvB63B,EAAe,OAAPA,EAAgB,UACP,IAA6BC,GAAQA,EACtDnE,EAAG38E,EAAI+/E,EAAQtgF,GAAKupD,EAEtB,IAAKm3B,EAAO,EAAGA,EAAO,EAAGA,IACvB,IAAK/2E,EAAI,EAAGA,EAAIpJ,EAAGoJ,IAAK,CAEtB,IADAs3E,EAAK,EACAjhF,EAAI,EAAGA,EAAIhB,EAAGgB,IACjBihF,GAAM/D,EAAG38E,EAAI+/E,EAAQtgF,GAAKk9E,EAAGvzE,EAAI22E,EAAQtgF,GAG3C,IADAshF,EAAO,EACFthF,EAAI,EAAGA,EAAIhB,EAAGgB,IACjBoQ,EAAK8sE,EAAG38E,EAAI+/E,EAAQtgF,GAAKihF,EAAK/D,EAAGvzE,EAAI22E,EAAQtgF,GAC7Ck9E,EAAG38E,EAAI+/E,EAAQtgF,GAAKoQ,EACpBkxE,GAAQx3E,KAAKK,IAAIiG,GAGnB,IADAkxE,EAAOA,EAAO,EAAMA,EAAO,EACtBthF,EAAI,EAAGA,EAAIhB,EAAGgB,IACjBk9E,EAAG38E,EAAI+/E,EAAQtgF,IAAMshF,EAK3B,IADAL,EAAK,EACAjhF,EAAI,EAAGA,EAAIhB,EAAGgB,IAEjBihF,IADA7wE,EAAI8sE,EAAG38E,EAAI+/E,EAAQtgF,IACToQ,EAEZ6wE,EAAKn3E,KAAK2tC,KAAKwpC,GAIjB,IADA/rE,EAAK,EAAM+rE,EACNjhF,EAAI,EAAGA,EAAIhB,EAAGgB,IACjBk9E,EAAG38E,EAAI+/E,EAAQtgF,IAAMkV,GAmCzBusE,CAActB,EAAI1+E,KAAMzC,EAAGohF,EAAI3+E,KAAM4+E,EAAI5+E,KAAM0L,EAAGnO,EAAGmO,EAAGnO,GAEpDs/D,EAAG,CACL,IAAK/9D,EAAI,EAAGA,EAAI4M,EAAG5M,IACjB+9D,EAAE78D,KAAKlB,GAAK6/E,EAAI3+E,KAAKlB,GAEvB,KAAOA,EAAI43B,EAAI53B,IACb+9D,EAAE78D,KAAKlB,GAAK,EAIL,IAAP0/E,GACEzgB,GAAG3gC,GAAU2gC,EAAG2gB,GAChBhlB,GAAGt8B,GAAUs8B,EAAGklB,KAEhB7gB,GAAG3gC,GAAU2gC,EAAG6gB,GAChBllB,GAAGt8B,GAAUs8B,EAAGglB,aAMRuB,KACd,OAAO,IAAI16E,aAAa,CACtB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,aAIG26E,GAAOpvE,EAAmBqvE,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GAC3OpwE,EAAK,GAAMqvE,EAAKrvE,EAAK,GAAMsvE,EAAKtvE,EAAK,GAAMuvE,EAAKvvE,EAAK,IAAOwvE,EAC5DxvE,EAAK,GAAMyvE,EAAKzvE,EAAK,GAAM0vE,EAAK1vE,EAAK,GAAM2vE,EAAK3vE,EAAK,IAAO4vE,EAC5D5vE,EAAK,GAAM6vE,EAAK7vE,EAAK,GAAM8vE,EAAK9vE,EAAK,IAAO+vE,EAAK/vE,EAAK,IAAOgwE,EAC7DhwE,EAAK,GAAMiwE,EAAKjwE,EAAK,GAAMkwE,EAAKlwE,EAAK,IAAOmwE,EAAKnwE,EAAK,IAAOowE,WAa/CC,GAAYrwE,EAAmB1Q,EAAiB0Z,GAC9Dxc,IAAM8jF,EAAMhhF,EAAG,GACTihF,EAAMjhF,EAAG,GACTkhF,EAAMlhF,EAAG,GACTmhF,EAAMnhF,EAAG,IACTohF,EAAMphF,EAAG,GACTqhF,EAAMrhF,EAAG,GACTshF,EAAMthF,EAAG,GACTuhF,EAAMvhF,EAAG,IACTwhF,EAAMxhF,EAAG,GACT6H,EAAM7H,EAAG,GACTyhF,EAAMzhF,EAAG,IACT0hF,EAAM1hF,EAAG,IACT2hF,EAAM3hF,EAAG,GACT4hF,EAAM5hF,EAAG,GACT6hF,EAAM7hF,EAAG,IACT8hF,EAAM9hF,EAAG,IAET+hF,EAAMroE,EAAG,GACTsoE,EAAMtoE,EAAG,GACTuoE,EAAMvoE,EAAG,GACTwoE,EAAMxoE,EAAG,IACTyoE,EAAMzoE,EAAG,GACT0oE,EAAM1oE,EAAG,GACT2oE,EAAM3oE,EAAG,GACT4oE,EAAM5oE,EAAG,IACT6oE,EAAM7oE,EAAG,GACT8oE,EAAM9oE,EAAG,GACT+oE,EAAM/oE,EAAG,IACTgpE,EAAMhpE,EAAG,IACTipE,EAAMjpE,EAAG,GACTkpE,EAAMlpE,EAAG,GACTmpE,EAAMnpE,EAAG,IACTopE,EAAMppE,EAAG,IAEfhJ,EAAK,GAAMswE,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EACrDjyE,EAAK,GAAMswE,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EACrDlyE,EAAK,GAAMswE,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EACrDnyE,EAAK,IAAOswE,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,EAEtDpyE,EAAK,GAAM0wE,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EACrDjyE,EAAK,GAAM0wE,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EACrDlyE,EAAK,GAAM0wE,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EACrDnyE,EAAK,IAAO0wE,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAEtDpyE,EAAK,GAAM8wE,EAAMO,EAAMl6E,EAAMs6E,EAAMV,EAAMc,EAAMb,EAAMiB,EACrDjyE,EAAK,GAAM8wE,EAAMQ,EAAMn6E,EAAMu6E,EAAMX,EAAMe,EAAMd,EAAMkB,EACrDlyE,EAAK,IAAO8wE,EAAMS,EAAMp6E,EAAMw6E,EAAMZ,EAAMgB,EAAMf,EAAMmB,EACtDnyE,EAAK,IAAO8wE,EAAMU,EAAMr6E,EAAMy6E,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAEtDpyE,EAAK,GAAMixE,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EACrDjyE,EAAK,GAAMixE,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EACrDlyE,EAAK,IAAOixE,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EACtDnyE,EAAK,IAAOixE,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,WAGxCC,GAAaryE,EAAmBvI,EAAWC,EAAWqjB,GACpEq0D,GAAMpvE,EACJvI,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGqjB,EAAG,EACT,EAAG,EAAG,EAAG,YAKGu3D,GAAmBtyE,EAAmBvI,EAAWC,EAAWqjB,GAC1Eq0D,GAAMpvE,EACJ,EAAG,EAAG,EAAGvI,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGqjB,EACT,EAAG,EAAG,EAAG,YAKGw3D,GAAiBvyE,EAAmBwyE,GAClDhmF,IAAMmH,EAAI4D,KAAKqwB,IAAI4qD,GACb7vE,EAAIpL,KAAKswB,IAAI2qD,GACnBpD,GAAMpvE,EACJrM,EAAG,EAAGgP,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAGhP,EAAG,EACV,EAAG,EAAG,EAAG,YAOG8+E,KACd,OAAO,IAAIh+E,aAAa,CACtB,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,aAIMi+E,GAAc1yE,EAAmB2yE,GAC/CnmF,IAAMomF,EAAKn5B,GAAM,CAAEk5B,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAC9BE,EAAKp5B,GAAM,CAAEk5B,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAC9BG,EAAKr5B,GAAM,CAAEk5B,EAAG,GAAIA,EAAG,GAAIA,EAAG,MAC9B5rC,EAAK0S,KAIXK,GAAQ/S,EAAI8rC,EAAIC,GAChB9yE,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GACf+S,GAAQ/S,EAAI+rC,EAAIF,GAChB5yE,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GACf+S,GAAQ/S,EAAI6rC,EAAIC,GAChB7yE,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GACf/mC,EAAK,GAAM+mC,EAAI,GC3sBjB,SAASgsC,GAAiBC,EAAqBhgD,EAAqBigD,EAAiBC,GAanFD,EAAUA,GAAW,EACrBC,EAAUA,IAAW,EAErB1mF,IAAM2mF,EAAKH,EAAM/kF,OAAS,EACpBmlF,EAAKpgD,EAAM/kC,OAAS,EACtBolF,OAAkCnmF,EAElCgmF,IACFG,EAAQ,IAAI5+E,aAAkB,EAAL0+E,IAG3B3mF,IAEIwB,EAYAoJ,EAAGk8E,EACHC,EAfEC,EAAM,IAAI/+E,aAAkB,EAAL0+E,GAIvBM,EAAU,IAAIvlF,MADP,IAGb,IAAKF,EAAI,EAAGA,EAHC,KAGWA,EACtBylF,EAASzlF,GAAM,IAAIwG,YAAY2+E,GAGjC,IAAKnlF,EAAI,EAAGA,EAAImlF,IAAMnlF,EACpBylF,EAAS,GAAKzlF,GAAM,EAQtB,IAAKA,EAAI,EAAGA,EAAIolF,IAAMplF,EAAG,CACvB,IAAI0lF,EAAS,EAAJ1lF,EACL2lF,EAAS,EAAJ3lF,EAAQ,EACb4lF,EAAS,EAAJ5lF,EAAQ,EAKjB,IADAulF,GAAW,EACNn8E,EAAI,EAAGk8E,EAAKG,EAAS,GAAKzgD,EAAM0gD,IAAOt8E,EAAIk8E,IAAMl8E,EACpD,GAAI47B,EAAO2gD,KAASF,EAASr8E,EAAI,GAAK47B,EAAO0gD,IAAQ,CACnDH,GAAW,EACX,MASJ,IANIA,IACFE,EAAS,GAAKzgD,EAAO0gD,MACrBD,EAASA,EAAS,GAAKzgD,EAAO0gD,KAAU1gD,EAAO0gD,IAAS1gD,EAAO2gD,IAGjEJ,GAAW,EACNn8E,EAAI,EAAGk8E,EAAKG,EAAS,GAAKzgD,EAAO0gD,IAAQt8E,EAAIk8E,IAAMl8E,EACtD,GAAI47B,EAAO4gD,KAASH,EAASr8E,EAAI,GAAK47B,EAAO0gD,IAAQ,CACnDH,GAAW,EACX,MAWJ,IARIA,IACFE,EAAS,GAAKzgD,EAAO0gD,MACrBD,EAASA,EAAS,GAAKzgD,EAAO0gD,KAAU1gD,EAAO0gD,IAAS1gD,EAAO4gD,IAKjEL,GAAW,EACNn8E,EAAI,EAAGk8E,EAAKG,EAAS,GAAKzgD,EAAO2gD,IAAQv8E,EAAIk8E,IAAMl8E,EACtD,GAAI47B,EAAO0gD,KAASD,EAASr8E,EAAI,GAAK47B,EAAO2gD,IAAQ,CACnDJ,GAAW,EACX,MASJ,IANIA,IACFE,EAAS,GAAKzgD,EAAO2gD,MACrBF,EAASA,EAAS,GAAKzgD,EAAO2gD,KAAU3gD,EAAO2gD,IAAS3gD,EAAO0gD,IAGjEH,GAAW,EACNn8E,EAAI,EAAGk8E,EAAKG,EAAS,GAAKzgD,EAAO2gD,IAAQv8E,EAAIk8E,IAAMl8E,EACtD,GAAI47B,EAAO4gD,KAASH,EAASr8E,EAAI,GAAK47B,EAAO2gD,IAAQ,CACnDJ,GAAW,EACX,MAWJ,IARIA,IACFE,EAAS,GAAKzgD,EAAO2gD,MACrBF,EAASA,EAAS,GAAKzgD,EAAO2gD,KAAU3gD,EAAO2gD,IAAS3gD,EAAO4gD,IAKjEL,GAAW,EACNn8E,EAAI,EAAGA,EAAIq8E,EAAS,GAAKzgD,EAAO4gD,MAAUx8E,EAC7C,GAAI47B,EAAO0gD,KAASD,EAASr8E,EAAI,GAAK47B,EAAO4gD,IAAQ,CACnDL,GAAW,EACX,MASJ,IANIA,IACFE,EAAS,GAAKzgD,EAAO4gD,MACrBH,EAASA,EAAS,GAAKzgD,EAAO4gD,KAAU5gD,EAAO4gD,IAAS5gD,EAAO0gD,IAGjEH,GAAW,EACNn8E,EAAI,EAAGk8E,EAAKG,EAAS,GAAKzgD,EAAO4gD,IAAQx8E,EAAIk8E,IAAMl8E,EACtD,GAAI47B,EAAO2gD,KAASF,EAASr8E,EAAI,GAAK47B,EAAO4gD,IAAQ,CACnDL,GAAW,EACX,MAGAA,IACFE,EAAS,GAAKzgD,EAAO4gD,MACrBH,EAASA,EAAS,GAAKzgD,EAAO4gD,KAAU5gD,EAAO4gD,IAAS5gD,EAAO2gD,IAanE,IATA,IAEIh4B,EAAIk4B,EAAKC,EAAKC,EAAMC,EADpBC,EAAM,GAINC,EAAQ,QAIHzmF,EAAI,EAAGA,EAAIwlF,IAAWxlF,EAAG,CAGhC,IAAKO,EAAI,EAAGA,EAAImlF,IAAMnlF,EAIpB,GAHA2tD,EAAS,EAAJ3tD,GACL8lF,EAAML,EAAS,GAAKzlF,IAEV,EACRwlF,EAAK73B,GAAOq3B,EAAOr3B,GACnB63B,EAAK73B,EAAK,GAAMq3B,EAAOr3B,EAAK,GAC5B63B,EAAK73B,EAAK,GAAMq3B,EAAOr3B,EAAK,QACvB,GAAY,IAARm4B,GAAqB,IAARA,EAAW,CAKjC,IAJAN,EAAK73B,GAAO,EACZ63B,EAAK73B,EAAK,GAAM,EAChB63B,EAAK73B,EAAK,GAAM,EAEXvkD,EAAI,EAAGA,EAAI08E,IAAO18E,EACrBy8E,EAA8B,EAAxBJ,EAASr8E,EAAI,GAAKpJ,GACxBwlF,EAAK73B,IAAQq3B,EAAOa,GACpBL,EAAK73B,EAAK,IAAOq3B,EAAOa,EAAM,GAC9BL,EAAK73B,EAAK,IAAOq3B,EAAOa,EAAM,GAGhCL,EAAK73B,IAAQs4B,EAAMjB,EAAOr3B,GAC1B63B,EAAK73B,EAAK,IAAOs4B,EAAMjB,EAAOr3B,EAAK,GACnC63B,EAAK73B,EAAK,IAAOs4B,EAAMjB,EAAOr3B,EAAK,GAEnCq4B,EAAQC,EAAMH,EACdN,EAAK73B,IAAQq4B,EACbR,EAAK73B,EAAK,IAAOq4B,EACjBR,EAAK73B,EAAK,IAAOq4B,MACZ,CAKL,IAJAR,EAAK73B,GAAO,EACZ63B,EAAK73B,EAAK,GAAM,EAChB63B,EAAK73B,EAAK,GAAM,EAEXvkD,EAAI,EAAGA,EAAI08E,IAAO18E,EACrBy8E,EAA8B,EAAxBJ,EAASr8E,EAAI,GAAKpJ,GACxBwlF,EAAK73B,IAAQq3B,EAAOa,GACpBL,EAAK73B,EAAK,IAAOq3B,EAAOa,EAAM,GAC9BL,EAAK73B,EAAK,IAAOq3B,EAAOa,EAAM,GAGhCL,EAAK73B,IApDF,EAoDeq3B,EAAOr3B,GACzB63B,EAAK73B,EAAK,IArDP,EAqDmBq3B,EAAOr3B,EAAK,GAClC63B,EAAK73B,EAAK,IAtDP,EAsDmBq3B,EAAOr3B,EAAK,GAElCo4B,EAxDG,EAwDSD,EACZN,EAAK73B,IAAQo4B,EACbP,EAAK73B,EAAK,IAAOo4B,EACjBP,EAAK73B,EAAK,IAAOo4B,EAMrB,GAFAf,EAAM7zE,IAAIq0E,GAENN,EAAS,CACXiB,GAAqBnB,EAAOhgD,EAAOqgD,GACnC,IAAIe,EAAW,EAALjB,EAEV,IAAKx3B,EAAK,EAAGA,EAAKy4B,EAAKz4B,GAAM,EAI3Bq3B,EAAOr3B,KAtED,EAsEiBu4B,EAAQb,EAAQ13B,GACvCq3B,EAAOr3B,EAAK,KAvEN,EAuEqBu4B,EAAQb,EAAQ13B,EAAK,GAChDq3B,EAAOr3B,EAAK,KAxEN,EAwEqBu4B,EAAQb,EAAQ13B,EAAK,KAOxD,SAASw4B,GAAsBv6E,EAAwBtG,EAAqBmuB,GAC1E,IAAIzzB,EAAGk7B,EAEP,QAAeh8B,IAAXu0B,EACFA,EAAS,IAAIhtB,aAAamF,EAAS3L,aAGnC,IAAKD,EAAI,EAAGk7B,EAAKzH,EAAOxzB,OAAQD,EAAIk7B,EAAIl7B,IACtCyzB,EAAQzzB,GAAM,EAIlB,IAAIsB,EAAI,IAAImF,aAAa,GACrBuU,EAAI,IAAIvU,aAAa,GACrBd,EAAI,IAAIc,aAAa,GACrByiD,EAAK,IAAIziD,aAAa,GACtB4/E,EAAK,IAAI5/E,aAAa,GAE1B,GAAInB,EAEF,IAAKtF,EAAI,EAAGk7B,EAAK51B,EAAMrF,OAAQD,EAAIk7B,EAAIl7B,GAAK,EAAG,CAC7C,IAAIu0C,EAAkB,EAAbjvC,EAAOtF,GACZw0C,EAAsB,EAAjBlvC,EAAOtF,EAAI,GAChBsmF,EAAsB,EAAjBhhF,EAAOtF,EAAI,GAEpBwsD,GAAYlrD,EAAGsK,EAAU2oC,GACzBiY,GAAYxxC,EAAGpP,EAAU4oC,GACzBgY,GAAY7mD,EAAGiG,EAAU06E,GAEzBh6B,GAAMpD,EAAIvjD,EAAGqV,GACbsxC,GAAM+5B,EAAI/kF,EAAG0Z,GACb8wC,GAAQ5C,EAAIA,EAAIm9B,GAEhB5yD,EAAQ8gB,IAAQ2U,EAAI,GACpBz1B,EAAQ8gB,EAAK,IAAO2U,EAAI,GACxBz1B,EAAQ8gB,EAAK,IAAO2U,EAAI,GAExBz1B,EAAQ+gB,IAAQ0U,EAAI,GACpBz1B,EAAQ+gB,EAAK,IAAO0U,EAAI,GACxBz1B,EAAQ+gB,EAAK,IAAO0U,EAAI,GAExBz1B,EAAQ6yD,IAAQp9B,EAAI,GACpBz1B,EAAQ6yD,EAAK,IAAOp9B,EAAI,GACxBz1B,EAAQ6yD,EAAK,IAAOp9B,EAAI,QAI1B,IAAKlpD,EAAI,EAAGk7B,EAAKtvB,EAAS3L,OAAQD,EAAIk7B,EAAIl7B,GAAK,EAC7CwsD,GAAYlrD,EAAGsK,EAAU5L,GACzBwsD,GAAYxxC,EAAGpP,EAAU5L,EAAI,GAC7BwsD,GAAY7mD,EAAGiG,EAAU5L,EAAI,GAE7BssD,GAAMpD,EAAIvjD,EAAGqV,GACbsxC,GAAM+5B,EAAI/kF,EAAG0Z,GACb8wC,GAAQ5C,EAAIA,EAAIm9B,GAEhB5yD,EAAQzzB,GAAMkpD,EAAI,GAClBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GACtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GAEtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GACtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GACtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GAEtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GACtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GACtBz1B,EAAQzzB,EAAI,GAAMkpD,EAAI,GAM1B,OAFA0C,GAAsBn4B,GAEfA,EAMT,SAAS8yD,GAAeC,GAEtB,IADA,IAAIC,EAAqC,GAChCzmF,EAAI,EAAGk7B,EAAKsrD,EAAWvmF,OAAQD,EAAIk7B,IAAMl7B,EAChDymF,EAAYD,EAAYxmF,KAAQ,EAElC,OAAOymF,EAGT,SAASC,GAAgB/hF,EAAmBC,EAAmB+hF,EAAmBnqC,EAAqBoqC,GAErG,IAAIC,EAAU,EAAIrqC,EAAe,EAGjCyQ,GAAYtoD,EAAKA,EAAKiiF,GAFtBC,GAAUF,IAGVz5B,GAAYtoD,EAAKA,EAAKgiF,EAAcC,GAEpC/5B,GAAiBnoD,EAAKA,EAAK63C,GAC3B2Q,GAAQxoD,EAAKA,GACbkoD,GAAeloD,EAAKA,EAAK63C,GAEzBsQ,GAAiBloD,EAAKA,EAAK43C,GAC3B4Q,GAAOxoD,EAAKA,GACZioD,GAAejoD,EAAKA,EAAK43C,GAEzB,IAAIsqC,EAAM,IAAIrgF,aAAa,GAC3B6lD,GAAMw6B,EAAKliF,EAAKD,GAChBmoD,GAAiBg6B,EAAKA,EAAKtqC,GAC3B4Q,GAAO05B,EAAKA,GACZ55B,GAAY45B,EAAKA,EAAK,GAEtB,IAAIC,EAA4B,IAAlBx9E,KAAKI,IAAI,GAAI,GACvBq9E,EAAUF,EAAK,GAAMA,EAAK,GAAMA,EAAK,GAAM,EAE3CC,GAAWC,IAGbl6B,GAAiBnoD,EAAKA,EAFtB63C,GAAejzC,KAAKI,IAAIo9E,EAAUC,EAAS,EAAI,IAG/C75B,GAAQxoD,EAAKA,GACbkoD,GAAeloD,EAAKA,EAAK63C,GAEzBsQ,GAAiBloD,EAAKA,EAAK43C,GAC3B4Q,GAAOxoD,EAAKA,GACZioD,GAAejoD,EAAKA,EAAK43C,GAEzB8P,GAAMw6B,EAAKliF,EAAKD,GAChBmoD,GAAiBg6B,EAAKA,EAAKtqC,GAC3B4Q,GAAO05B,EAAKA,GACZ55B,GAAY45B,EAAKA,EAAK,IAGxB,IAAIG,EAAO,IAAIxgF,aAAa9B,GAC5B0oD,GAAS45B,EAAMA,GAGf,IAAItpD,EAASwjD,KACT+F,EAAQ/F,KACZoD,GAAgB2C,EAAO14E,GAAS,KAChC6zE,GAAW1kD,EAAQA,EAAQupD,GAE3B,IAAIC,EAAShG,KACbkD,GACE8C,GACC,EAAI3qC,EACL,EAAIA,EACJ,EAAIA,GAEN6lC,GAAW1kD,EAAQA,EAAQwpD,GAE3B,IAAIC,EAASjG,KASb,OARAmD,GACE8C,GACC5qC,EAAcyqC,EAAK,IACnBzqC,EAAcyqC,EAAK,IACnBzqC,EAAcyqC,EAAK,IAEtB5E,GAAW1kD,EAAQA,EAAQypD,GAEpB,CACLN,IAAKA,EACLG,KAAMA,EACNtpD,OAAQA,EACR6e,YAAaA,GDsShB6nC,GAAoB7iE,OAAS,CAAE4/D,IAU/BkD,GAA0B9iE,OAAS,CAAE4/D,IAYrCmD,GAAwB/iE,OAAS,CAAE4/D,IAiCnCsD,GAAqBljE,OAAS,CAAEiqC,GAAOK,IC9fxCvsD,OAAOC,OAAOulF,GAAiB,CAACvjE,OAAQ,CAAE2kE,MA4E1C5mF,OAAOC,OAAO2mF,GAAsB,CAAC3kE,OAAQ,CAC3C8qC,GAAOR,GAASU,GAAaZ,MAuF/BrsD,OAAOC,OAAOknF,GAAgB,CAACllE,OAAU,CACvChT,GACAy+C,GAAaC,GAAaL,GAAgBC,GAC1CK,GAASC,GAAQd,GAAOe,GACxB8zB,GAAOkB,GAAYiC,GAAmBD,GAAaE,MC7WrD,IAAM8C,GAiCJ,SAAar5E,EAAc+a,EAAc7nB,GACvCyC,KAAKqK,KAAOA,GAAQ,GACpBrK,KAAKolB,KAAOA,GAAQ,GACpBplB,KAAKuf,KAAO,GAEZvf,KAAKu2B,OAAS,IAAI5yB,EAClB3D,KAAKypC,YAAc,IAAI3I,EAEnBvjC,aAAgBomF,GAClBpmF,aAAgBwrC,GAChBxrC,aAAgBonC,EAGhB3kC,KAAK4jF,aAAarmF,GACTA,IACTyC,KAAKwN,IACHjQ,EAAK0K,SACL1K,EAAKoE,MACLpE,EAAKuyB,OACLvyB,EAAKgR,MACLhR,EAAK4T,UACL5T,EAAKq2E,SAGP5zE,KAAKypC,YAAYo6C,aAAatmF,EAAK0K,UACnCjI,KAAKypC,YAAYwoC,UAAUjyE,KAAKu2B,+CCjDtButD,GAAmCvmF,EAAmB01E,EAAYC,EAAYC,EAAYhiE,GACxG,IAAI4yE,EAAK,IAAKhR,GAAsBx1E,EAAM01E,EAAIC,EAAIC,EAAIhiE,GAmBtDnR,KAAKgkF,WAjBL,SAAqBtQ,EAAkBuQ,EAAwBliD,EAA2B/H,EAAsB45C,EAAkBC,mBAAgB,GAChJh5E,IAAMkiF,EAAKgH,EAAG9M,YAAYvD,EAAUuQ,EAAmBliD,EAAK6xC,EAASC,GAKrE,GAJIoQ,IAAWrQ,IACbwN,GAAgBrE,EAAG90E,SAAU80E,EAAGp7E,MAAcsiF,GAAkB,GAChElH,EAAGjtD,OAAS0yD,GAAqBzF,EAAG90E,SAAU80E,EAAGp7E,QAE/Cq4B,IACF+tB,GAA2B/tB,EAAQ+iD,EAAG90E,UAClC80E,EAAGjtD,QAAQ,CACbj1B,IAAMqpF,EAAepD,KACrBC,GAAamD,EAAclqD,GAC3BguB,GAA2Bk8B,EAAcnH,EAAGjtD,QAGhD,OAAOitD,GDoCT9xE,GAAIjG,oBAAU,MAAO,wBAYrBwI,aAAKvF,EACDtG,EACAmuB,EACAvhB,EACA4C,EACAyiE,mBAAmB,GAIrB5zE,KAAKiI,SAAWA,EAIhBjI,KAAK2B,MAAQA,EAIb3B,KAAK8vB,OAASA,EAId9vB,KAAKuO,MAAQA,EAIbvO,KAAKmR,UAAYA,EAEjBnR,KAAKy4B,KAAOxwB,EAAS3L,OAAS,EAC9B0D,KAAK4zE,QAAUA,gBAGjBgQ,sBAAc9jD,GAGZ1jC,IAAI+nF,EAgBAl8E,EAAiBtG,EAAOmuB,EAE5B,GApBInP,IAAOtB,GAAII,KAAK,gCAIhBqgB,aAAoB6jD,GACtB7jD,EAAS0iD,sBAAqB,GAC9B2B,GAAM,IAAIp7C,GAAiB66C,aAAa9jD,IAExCqkD,EADSrkD,aAAoBiJ,EACvBjJ,EAECA,EAAkB,GAGtBqkD,EAAI16C,aAAa06C,EAAIh5C,qBAE1BnrC,KAAKypC,YAAY/O,KAAKypD,EAAI16C,aAC1BzpC,KAAKypC,YAAYwoC,UAAUjyE,KAAKu2B,QAI5B4tD,aAAep7C,EAAgB,CACjCluC,IAAMw2C,EAAO8yC,EAAI36C,WACXwkB,IAAM3c,EAAavhB,QAAUuhB,EAAavhB,OAAO5zB,QAGlD8xD,GAAmB,IAAZA,EAAI,IAAyB,IAAZA,EAAI,IAAyB,IAAZA,EAAI,KAChDm2B,EAAI3B,uBAGNv6E,EAAiBopC,EAAMppC,SAAS/L,MAChCyF,EAAc0vC,EAAM1vC,MAAc0vC,EAAM1vC,MAAMzF,MAAQ,KACtD4zB,EAAeuhB,EAAMvhB,OAAO5zB,MAG9B8D,KAAKwN,IAAIvF,EAAUtG,EAAOmuB,EAhBZvhB,eAgB2BhT,GAErColB,IAAOtB,GAAIK,QAAQ,6CAGzBq7B,uBACE,OAAO/6C,KAAKiI,uBAGdm8E,kBAAU3oF,GACRZ,IAAMqT,EAAIzS,GAAU,GACpByS,EAAEohB,QAAUtvB,KAEZnF,IAAMoO,EAAIjJ,KAAKy4B,KACTv8B,EAAQ,IAAI4G,aAAiB,EAAJmG,GACzBo7E,EAAa9rE,GAAmBI,UAAUzK,GAEhD,GAAIm2E,EAAWn1E,aAA4B,WAAbhB,EAAEuK,OAC9B,IAAKrc,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBgoF,EAAWp1E,mBAAmB5S,EAAGH,EAAW,EAAJG,QAErC,GAAIgoF,EAAWh1E,cAIpB,IAHAxU,IAAM6I,EAAI,IAAIC,EACRuE,EAAMlI,KAAKiI,SAER5L,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1B,IAAI2tD,EAAS,EAAJ3tD,EACTqH,EAAE8J,IAAItF,EAAK8hD,GAAM9hD,EAAK8hD,EAAK,GAAK9hD,EAAK8hD,EAAK,IAC1Cq6B,EAAWl1E,qBAAqBzL,EAAGxH,EAAO8tD,QAEvC,GAAIq6B,EAAW11E,WAAa3O,KAAKmR,UAItC,IAHAtW,IAAMkT,EAAYG,EAAEJ,UAAWE,eACzBmD,EAAYnR,KAAKmR,UAEd9U,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB0R,EAAUpM,MAAQwP,EAAW9U,GAC7BgoF,EAAW51E,iBAAiBV,EAAW7R,EAAW,EAAJG,OAE3C,CACLxB,IAAMypF,EAAK,IAAIt3E,EAAMkB,EAAE7S,OACvBu7B,GAAc3tB,EAAGq7E,EAAGh5E,EAAGg5E,EAAGzrD,EAAGyrD,EAAGjtE,EAAGnb,GAGrC,OAAOA,gBAGTqoF,oBAAYz2E,GACV,OAAI9N,KAAKmR,WAAarD,EACb,IAAIwhE,GAAWtvE,KAAKmR,UAAkBrD,GAEtC,IAAI2jE,GAAc56C,GAAY72B,KAAKy4B,MAAOz4B,oBAIrDukE,qBACE,OAAOvkE,KAAK8vB,qBAGd8b,iBAASnT,EAAc9rB,GACrB,OAAO+pB,GAAa12B,KAAKy4B,KAAMA,EAAO9rB,iBAGxCkiE,oBACE,OAAO7uE,KAAK2B,oBAGd6iF,0BAAkB7tE,EAAc7I,GAC9B,GAAI6I,GAAQ3W,KAAKmR,UAAW,CAY1B,IAXAtW,IAAMmZ,EAAY,IAAIsB,GAAUqB,GAC1B87C,EAAU3kD,EAAU0gE,WAAWx6D,GAC/BywE,EAAgB,GAEhBtzE,EAAYnR,KAAKmR,UACjBxP,EAAQ3B,KAAK2B,MACbsH,EAAItH,EAAOrF,OACXooF,EAAc1kF,KAAK4zE,QAAU,EAAI,EAEnCnuE,EAAI,EAECpJ,EAAI,EAAGA,EAAI4M,EAAG5M,GAAKqoF,EAAa,CAGvC,IAFAtoF,IAAIuoF,GAAU,EAELhnF,EAAI,EAAGA,EAAI+mF,EAAa/mF,IAAK,CACpC9C,IACM+1C,EAAKz/B,EADCxP,EAAQtF,EAAIsB,IAExB,IAAK80D,EAAQnoD,IAAIsmC,GAAK,CACpB+zC,GAAU,EACV,OAIJ,GAAKA,EAEL,IAAKvoF,IAAIuB,EAAI,EAAGA,EAAI+mF,EAAa/mF,IAAK8H,IACpCg/E,EAAeh/E,GAAM9D,EAAQtF,EAAIsB,GAIrC,OAAOqF,GAAayhF,EAAezkF,KAAKiI,SAAS3L,OAAS,GAE1D,OAAO0D,KAAK2B,oBAIhBijF,wBACE,OAAO5kF,KAAKmR,wBAGd2S,8DCzNFloB,OAAOC,OAAOioF,GAAe,CAACjmE,OAAQ,CACpCujE,GAAiBoB,GAAsBzP,GACvChrB,GAA4BC,GAC5B84B,GAAOC,MAGTxiE,GAAexT,IAAI,QAAQ,SAAexD,EAAQxC,GAChDlK,IAAM8C,EAAI4J,EAAEhK,KAAKgC,KACX2O,EAAI3G,EAAEhK,KAAK9B,OAKjB,GAJIkC,IAED6M,KAAaq6E,QAAU,IAAKf,GAAsBnmF,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAE3EuQ,EAAG,CACLrT,IAAMkiF,EAAOvyE,KAAaq6E,QAA0Bb,WAClD91E,EAAEwlE,SAAUxlE,EAAE+1E,OAAQ/1E,EAAE6zB,IAAK7zB,EAAE8rB,OAAQ9rB,EAAE0lE,QAAS1lE,EAAE2lE,MAEhDz1D,EAAe,CAAE2+D,EAAG90E,SAAS7E,OAAQ25E,EAAGp7E,MAAMyB,QAChD25E,EAAGjtD,QAAQ1R,EAAa3hB,KAAKsgF,EAAGjtD,OAAO1sB,QACvC25E,EAAG5rE,WAAWiN,EAAa3hB,KAAKsgF,EAAG5rE,UAAU/N,QAKjD2B,EAJa,CACXg4E,GAAIA,EACJ7uE,EAAGA,GAEUkQ,MAEhB,CAAE0lE,SAMCgB,GAsCJ,SAAaz6E,EAAc+a,EAAc7nB,EAAqB01E,EAAaC,EAAaC,EAAahiE,GACnGnR,KAAKqK,KAAOA,EACZrK,KAAKolB,KAAOA,EAEZplB,KAAKg6B,OAAS,IAAIn2B,EAClB7D,KAAKkkF,aAAe,IAAIa,EACxB/kF,KAAKglF,cAAgB,IAAInhF,EACzB7D,KAAKu2B,OAAS,IAAI5yB,EAClB3D,KAAKypC,YAAc,IAAI3I,EAEvB9gC,KAAKilF,QAAQ1nF,EAAM01E,EAAIC,EAAIC,EAAIhiE,0KChHnC,SAAS+zE,GAAcniC,GACrB,MAAa,UAATA,EACKoiC,EACW,SAATpiC,EACFqiC,EAEAC,ED6GTp6E,GAAIjG,oBAAU,MAAO,uBAWrBigF,iBAAS1nF,EAAqB01E,EAAaC,EAAaC,EAAahiE,GACnEnR,KAAKizE,GAAKA,GAAM,EAChBjzE,KAAKkzE,GAAKA,GAAM,EAChBlzE,KAAKmzE,GAAKA,GAAM,EAEhBnzE,KAAKzC,KAAOA,GAAQ,IAAIuF,aAAa,GACrC9C,KAAKslF,aAAan0E,UAEXnR,KAAKulF,iBAELvlF,KAAKwlF,YACLxlF,KAAKylF,YACLzlF,KAAK0lF,aACL1lF,KAAK2lF,KAER3lF,KAAKumD,QAAQvmD,KAAKumD,OAAOQ,0BAW/B6+B,kBAAU5kF,EAAuBC,EAAuBs6E,EAAwBsK,GAC9E7lF,KAAKwlF,KAAOxkF,EACZhB,KAAKylF,KAAOxkF,EACZjB,KAAK0lF,MAAQnK,EACbv7E,KAAK2lF,KAAOE,gBAQdC,mBAAW9rD,GACTh6B,KAAKg6B,OAAOU,KAAKV,GAEjBn/B,IAAM6yD,EAAK1tD,KAAKypC,YACV/lC,EAAI1D,KAAKu2B,OAETzwB,EAAI9F,KAAKizE,GAAK,EACdltE,EAAI/F,KAAKkzE,GAAK,EACd9pD,EAAIppB,KAAKmzE,GAAK,EAEpBzlB,EAAG/hB,YAEH+hB,EAAGnB,cAAc7oD,EAAE8J,IAAI1H,EAAGC,EAAGqjB,IAC7BskC,EAAGnB,cAAc7oD,EAAE8J,IAAI1H,EAAGC,EAAG,IAC7B2nD,EAAGnB,cAAc7oD,EAAE8J,IAAI1H,EAAG,EAAGsjB,IAC7BskC,EAAGnB,cAAc7oD,EAAE8J,IAAI1H,EAAG,EAAG,IAC7B4nD,EAAGnB,cAAc7oD,EAAE8J,IAAI,EAAGzH,EAAGqjB,IAC7BskC,EAAGnB,cAAc7oD,EAAE8J,IAAI,EAAG,EAAG4b,IAC7BskC,EAAGnB,cAAc7oD,EAAE8J,IAAI,EAAGzH,EAAG,IAC7B2nD,EAAGnB,cAAc7oD,EAAE8J,IAAI,EAAG,EAAG,IAE7BkgD,EAAGjjB,aAAazqC,KAAKg6B,QACrB0zB,EAAGukB,UAAUjyE,KAAKu2B,QAIlB17B,IAAMkrF,EAAK/lF,KAAKg6B,OAAOgsD,SACjB/E,EAAK,IAAIt9E,EAAQoiF,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAClC7E,EAAK,IAAIv9E,EAAQoiF,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAClC5E,EAAK,IAAIx9E,EAAQoiF,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAClC3wC,EAAK,IAAIzxC,EAITsiF,EAAKjmF,KAAKkkF,aAAa8B,SAC7B5wC,EAAGqvB,aAAayc,EAAIC,GACpB8E,EAAI,GAAM7wC,EAAGtvC,EACbmgF,EAAI,GAAM7wC,EAAGrvC,EACbkgF,EAAI,GAAM7wC,EAAGhsB,EACbgsB,EAAGqvB,aAAa0c,EAAIF,GACpBgF,EAAI,GAAM7wC,EAAGtvC,EACbmgF,EAAI,GAAM7wC,EAAGrvC,EACbkgF,EAAI,GAAM7wC,EAAGhsB,EACbgsB,EAAGqvB,aAAawc,EAAIC,GACpB+E,EAAI,GAAM7wC,EAAGtvC,EACbmgF,EAAI,GAAM7wC,EAAGrvC,EACbkgF,EAAI,GAAM7wC,EAAGhsB,EAEbppB,KAAKglF,cAAcxqD,WAAWx6B,KAAKg6B,sBAQrCsrD,sBAAcn0E,GACZnR,KAAKmR,UAAYA,gBAGnB+0E,gBAAQ3vD,EAAiBkC,EAAc75B,GAUrC,OATKA,IAAQA,EAAS,IAAIkiC,GAE1BliC,EAAO4O,IAAI+oB,EAAQA,GACnB33B,EAAO2sC,eAAe9S,GACtB75B,EAAO6rC,aAAazqC,KAAKglF,eAEzBpmF,EAAOoC,IAAI2iB,QACX/kB,EAAOqC,IAAI0iB,QAEJ/kB,gBAGTunF,iBAAS5vD,EAA2BkC,GAClC,GAAKlC,GAAWkC,EAAhB,CAEKz4B,KAAKomF,QAAOpmF,KAAKomF,MAAQ,IAAItlD,GAClCjmC,IAAMknC,EAAM/hC,KAAKkmF,OAAO3vD,EAAQkC,EAAMz4B,KAAKomF,OAC3C,MAAO,CAAErkD,EAAI/gC,IAAIouB,UAAW2S,EAAI9gC,IAAImuB,0BAGtCi3D,sBAActJ,EAASrJ,EAAkBuQ,GACvCppF,IAAMwP,EAAOrK,KAAKqK,KAAO,IAAMqpE,EAASvqD,YAAY,GAC9CmG,EAAU,IAAIo0D,GAAQr5E,EAAM,GAAI0yE,GAKtC,OAJAztD,EAAQ/P,KAAKm0D,SAAWA,EACxBpkD,EAAQ/P,KAAK0kE,OAASA,EACtB30D,EAAQ/P,KAAKq9B,OAAS58C,KAEfsvB,gBAGT00D,oBAAYtQ,EAAkBuQ,EAAgB1tD,EAAiBkC,EAAcm7C,EAAkBC,mBAAgB,GAC7GH,EAAWvtE,MAAMutE,GAAY1zE,KAAKsmF,iBAAiB,GAAK5S,EACxDuQ,EAAS7oF,GAAS6oF,EAAQ,QAIL1oF,IAAjByE,KAAK6kF,UACP7kF,KAAK6kF,QAAU,IAAKf,GAClB9jF,KAAKzC,KAAMyC,KAAKizE,GAAIjzE,KAAKkzE,GAAIlzE,KAAKmzE,GAAInzE,KAAKmR,YAI/CtW,IAAMknC,EAAM/hC,KAAKmmF,QAAQ5vD,EAAQkC,GAC3BskD,EAAK/8E,KAAK6kF,QAAQb,WACtBtQ,EAAUuQ,EAAQliD,EAAM/hC,KAAKg6B,OAAOgsD,SAAqCpS,EAASC,GAGpF,OAAO7zE,KAAKqmF,aAAatJ,EAAIrJ,EAAUuQ,iBAGzCsC,0BAAkB7S,EAAkBuQ,EAAgB1tD,EAAiBkC,EAAcm7C,EAAkBC,EAAe9uE,cAMlH,GALA2uE,EAAWvtE,MAAMutE,GAAY1zE,KAAKsmF,iBAAiB,GAAK5S,EACxDuQ,EAASA,GAAU,EAIfrpF,OAAOyZ,eAAe,UAAW,MACX9Y,IAApByE,KAAKwmF,aACPxmF,KAAKwmF,WAAa,IAAIx/B,GAAW,OAAQ,IAG3CnsD,IAAMkiD,EAAM,GACNwJ,EAASvmD,KAAKwmF,WAAWt7B,gBAEL,IAAtB3E,EAAQM,WACVjrD,OAAOC,OAAOkhD,EAAK,CACjBx9C,KAAM,CACJS,KAAKzC,KAAMyC,KAAKizE,GAAIjzE,KAAKkzE,GAAIlzE,KAAKmzE,GAAInzE,KAAKmR,aAKjDvV,OAAOC,OAAOkhD,EAAK,CACjBthD,OAAQ,CACNi4E,SAAUA,EACVuQ,OAAQA,EACRliD,IAAK/hC,KAAKmmF,QAAQ5vD,EAAQkC,GAC1BuB,OAAQh6B,KAAKg6B,OAAOgsD,SACpBpS,QAASA,EACTC,KAAMA,KAIVttB,EAAQK,KAAK7J,OAAKxhD,YACfgM,GACC1M,IAAMkiF,EAAKx1E,EAAEhK,KAAKw/E,GACZ7uE,EAAI3G,EAAEhK,KAAK2Q,EACjBnJ,EAAS/E,EAAKqmF,aAAatJ,EAAI7uE,EAAEwlE,SAAUxlE,EAAE+1E,qBAE9C18E,GACCjD,QAAQkb,KACN,wDAAyDjY,GAE3D1M,IAAMy0B,EAAUtvB,EAAKgkF,WAAWtQ,EAAUuQ,EAAQ1tD,EAAQkC,EAAMm7C,EAASC,GACzE9uE,EAASuqB,UAGR,CACLz0B,IAAMy0B,EAAUtvB,KAAKgkF,WAAWtQ,EAAUuQ,EAAQ1tD,EAAQkC,EAAMm7C,EAASC,GACzE9uE,EAASuqB,kBAIbg3D,0BAAkBG,GAChB,OAAOzmF,KAAKu7E,KAAOngF,GAASqrF,EAAO,GAAKzmF,KAAK6lF,kBAG/Ca,0BAAkBrrF,GAChB,OAAQD,GAASC,EAAO,GAAK2E,KAAKu7E,MAAQv7E,KAAK6lF,KAGjD56E,GAAIhD,wBACF,IAAKjI,KAAKulF,UAAW,CAOnB,IANA1qF,IAAMs4E,EAAKnzE,KAAKmzE,GACVD,EAAKlzE,KAAKkzE,GACVD,EAAKjzE,KAAKizE,GACVhrE,EAAW,IAAInF,aAAamwE,EAAKC,EAAKC,EAAK,GAE7CjlE,EAAI,EACCkb,EAAI,EAAGA,EAAI+pD,IAAM/pD,EACxB,IAAKhtB,IAAI2J,EAAI,EAAGA,EAAImtE,IAAMntE,EACxB,IAAK3J,IAAI0J,EAAI,EAAGA,EAAImtE,IAAMntE,EACxBmC,EAAUiG,EAAI,GAAMpI,EACpBmC,EAAUiG,EAAI,GAAMnI,EACpBkC,EAAUiG,EAAI,GAAMkb,EACpBlb,GAAK,EAKX65C,GAA2B/nD,KAAKg6B,OAAOgsD,SAAqC/9E,GAC5EjI,KAAKulF,UAAYt9E,EAGnB,OAAOjI,KAAKulF,wBAGdoB,4BACE,OAAO3mF,KAAKmR,wBAGdy1E,2BACE,OAAO5mF,KAAKiI,uBAGd4+E,sBAAcprF,GACZZ,IAAMqT,EAAIzS,GAAU,GACpByS,EAAE0uC,OAAS58C,KACXkO,EAAEvB,MAAQuB,EAAEvB,OAAS,WACrBuB,EAAErB,OAASqB,EAAErB,QAAU,CAAE7M,KAAKgB,IAAKhB,KAAKiB,KAUxC,IARApG,IAAMwpF,EAAa9rE,GAAmBI,UAAUzK,GAE1CjF,EAAIjJ,KAAKiI,SAAS3L,OAAS,EAC3BJ,EAAQ,IAAI4G,aAAiB,EAAJmG,GAKtB5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBgoF,EAAWp1E,mBAAmB5S,EAAGH,EAAW,EAAJG,GAK1C,OAAOH,gBAGT4qF,0BACEjsF,IAAMsxC,EAAUtV,GAAY72B,KAAKiI,SAAS3L,OAAS,GACnD,OAAO,IAAI41E,GAAa/lC,EAASnsC,oBAGnC+mF,qBAAatuD,EAAyB9rB,GACpC9R,IAEIqB,EAFEqB,EAAOyC,KAAKzC,KACZ0L,EAAIjJ,KAAKiI,SAAS3L,OAAS,EAGjC,OAAQm8B,GACN,IAAK,QACHv8B,EAAQ,IAAI4G,aAAavF,GACzB,MAEF,IAAK,YACHrB,EAAQ,IAAI4G,aAAavF,GACzB,IAAKnB,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAMuJ,KAAKK,IAAI/J,EAAOG,IAE/B,MAEF,IAAK,YACHH,EAAQ,IAAI4G,aAAavF,GAEzB,IADA1C,IAAMmG,EAAMhB,KAAKgB,IACR3E,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,IAAO2E,EAEhB,MAGF,IAAK,YACH9E,EAAQ,IAAI4G,aAAavF,GACzB,MAEF,QACErB,EAAQw6B,GAAaztB,EAAGwvB,GAI5B,GAAc,IAAV9rB,EACF,IAAKvQ,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,IAAOsQ,EAIlB,OAAOzQ,GAGT+O,GAAIjK,mBAIF,YAHkBzF,IAAdyE,KAAKwlF,OACPxlF,KAAKwlF,KAAOhuD,GAASx3B,KAAKzC,OAErByC,KAAKwlF,MAGdv6E,GAAIhK,mBAIF,YAHkB1F,IAAdyE,KAAKylF,OACPzlF,KAAKylF,KAAOnuD,GAASt3B,KAAKzC,OAErByC,KAAKylF,MAGdx6E,GAAIysB,mBAIF,YAHkBn8B,IAAdyE,KAAKgnF,OACPhnF,KAAKgnF,KAAOvvD,GAASz3B,KAAKzC,OAErByC,KAAKgnF,MAGd/7E,GAAIswE,oBAIF,YAHmBhgF,IAAfyE,KAAK0lF,QACP1lF,KAAK0lF,MAAQ/tD,GAAU33B,KAAKzC,OAEvByC,KAAK0lF,OAGdz6E,GAAI46E,mBAIF,YAHkBtqF,IAAdyE,KAAK2lF,OACP3lF,KAAK2lF,c1CQezpF,GAGxB,IAFArB,IAAMoO,EAAI/M,EAAMI,OACZ2qF,EAAQ,EACH5qF,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAMqsF,EAAKhrF,EAAOG,GAClB4qF,GAASC,EAAKA,EAEhB,OAAOthF,KAAK2tC,KAAK0zC,EAAQh+E,G0CfTk+E,CAASnnF,KAAKzC,OAErByC,KAAK2lF,mBAGdt6C,iBACExwC,IAAMu3E,EAAM,IAAI0S,GACd9kF,KAAKqK,KACLrK,KAAKolB,KAELplB,KAAKzC,KAELyC,KAAKizE,GACLjzE,KAAKkzE,GACLlzE,KAAKmzE,GAELnzE,KAAKmR,WAMP,OAHAihE,EAAIp4C,OAAOU,KAAK16B,KAAKg6B,QACrBo4C,EAAIgV,OAASxrF,OAAOC,OAAO,GAAImE,KAAKonF,QAE7BhV,gBAGTtuD,mBACM9jB,KAAKwmF,YAAYxmF,KAAKwmF,WAAWz/B,+kGCtezClsD,IAAMy2C,GAAW,CACfn9B,EAAK,EAAG+mC,GAAM,EAAGkpB,GAAM,EAAGpiE,EAAK,GAGjC,SAASqlF,GAAiB5/E,EAAkBuyB,GAC1CvyB,EAAOuyB,OAAOU,KAAKV,GACnBvyB,EAAOuyB,OAAOkkB,UAAUz2C,EAAOQ,SAAUR,EAAOmjC,WAAYnjC,EAAOkF,OACnElF,EAAO6/E,wBAAyB,EAa3BzsF,IAAM0sF,GAA0B,CACrCC,YAAY,EACZzkC,KAAM,SACNziC,QAAS,EACTkoB,YAAY,EACZrF,SAAU,EACVwf,WAAY,EACZE,WAAY,IAAIl/C,EAChBm/C,YAAY,EACZK,WAAW,EACXQ,UAAW,GACXC,UAAW,EACXC,QAAS,SACTC,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAe,SACfC,kBAAmB,EACnBwjC,kBAAkB,EAClBztD,OAAQ,IAAIn2B,EACZqgD,gBAAgB,EAChBhU,eAAe,EACfhG,YAAY,GAIDw9C,GAAuB,CAClCF,WAAY,CAAEG,cAAc,GAC5B5kC,KAAM,CAAE4kC,cAAc,EAAMC,UAAU,GACtCtnE,QAAS,CAAEunE,SAAS,GACpBr/C,WAAY,CAAEo/C,UAAU,GACxBzkD,SAAU,CAAEwkD,cAAc,EAAMC,UAAU,GAC1CjlC,WAAY,CAAEglC,cAAc,EAAME,SAAS,GAC3ChlC,WAAY,CAAEglC,SAAS,GACvB/kC,WAAY,CAAE6kC,cAAc,GAC5Bz9C,WAAY,CAAEy9C,cAAc,GAC5BxkC,UAAW,CAAE2kC,kBAAkB,GAC/BnkC,UAAW,CAAEkkC,SAAS,GACtBjkC,UAAW,CAAEikC,SAAS,GACtBhkC,QAAS,CAAEgkC,SAAS,GACpB/jC,gBAAiB,CAAE6jC,cAAc,GACjC5jC,iBAAkB,CAAE4jC,cAAc,GAClC3jC,cAAe,CAAE6jC,SAAS,GAC1B5jC,kBAAmB,CAAE4jC,SAAS,GAC9B7tD,OAAQ,IAkBJyxB,GA4CJ,SAAaluD,EAAkB9B,kBAAoC,IA3CnEuE,oBAAiB0nF,GAQjB1nF,cAAW,IAAI+oC,EACf/oC,kBAAe,EACfA,4BAAyB,EACzBA,WAAQ,IAAI2kC,EACZ3kC,oBAAiB,IAAI2kC,EACrB3kC,kBAAe,IAAI2kC,EAEnB3kC,kBAAe,GACfA,oBAAiB,GACjBA,iBAAa,EACbA,aAAS,EACTA,gBAAY,EACZA,cAAU,EACVA,aAAS,EACTA,cAAU,EACVA,cAAU,EASVA,yBAAsB,EAYpBA,KAAK6N,WAAarS,GAAaC,EAAQuE,KAAK+nF,mBAE5C/nF,KAAKw4B,SAAWwvD,EAAcC,MAAM,CAClCC,EAAYC,OACZ,CACEvlD,SAAU,CAAEvnC,MAAO,IAAI2R,EAAM,IAC7B61B,QAAS,CAAExnC,MAAO,GAClBynC,OAAQ,CAAEznC,MAAO,GACjBilB,QAAS,CAAEjlB,MAAO2E,KAAK6N,WAAWyS,SAClC6iB,SAAU,CAAE9nC,MAAO,GACnBsnD,WAAY,CAAEtnD,MAAO2E,KAAK6N,WAAW80C,YACrCE,WAAY,CAAExnD,MAAO2E,KAAK6N,WAAWg1C,aAEvC,CACEulC,SAAU,CAAE/sF,MAAO,IAAI2R,EAAM,IAC7B22C,UAAW,CAAEtoD,MAAO2E,KAAK6N,WAAW81C,WACpCC,UAAW,CAAEvoD,MAAO2E,KAAK6N,WAAW+1C,WACpCI,cAAe,CAAE3oD,MAAO,IAAI2R,EAAMhN,KAAK6N,WAAWm2C,gBAClDC,kBAAmB,CAAE5oD,MAAO2E,KAAK6N,WAAWo2C,oBAE9CikC,EAAYG,SAGdroF,KAAKw4B,SAASqrB,QAAQxoD,MAAMmS,IAAIxN,KAAK6N,WAAWg2C,SAEhD7jD,KAAKsoF,gBAAkB,CACrBnlD,SAAU,CAAE9nC,MAAO,GACnB2kC,SAAU,CAAE3kC,MAAO,GACnBilB,QAAS,CAAEjlB,MAAO2E,KAAK6N,WAAWyS,UAKpCzlB,IAAMoN,EAAW1K,EAAK0K,UAAY1K,EAAKssD,UACvC7pD,KAAKuoF,kBAAoBtgF,EAAWA,EAAS3L,OAAS,EAAI,EAErDiB,EAAK8sD,cACR9sD,EAAK8sD,YAAcxzB,GAAY72B,KAAKuoF,oBAGtCvoF,KAAKwoF,cAAc,CACjBvgF,SAAU,CAAEjD,KAAM,KAAM3J,MAAOkC,EAAK0K,UACpCsG,MAAO,CAAEvJ,KAAM,IAAK3J,MAAOkC,EAAKgR,OAChC87C,YAAa,CAAErlD,KAAM,IAAK3J,MAAOkC,EAAK8sD,eAGpC5uD,EAAOu+B,SACTh6B,KAAKg6B,OAASv+B,EAAOu+B,QAGnBz8B,EAAKoE,OACP3B,KAAKyoF,UAAUlrF,EAAKoE,OAEtB3B,KAAKmsC,QAAU5uC,EAAK4uC,QAEpBnsC,KAAK0oF,2MAlGPz9E,GAAI88E,iCAAsB,OAAOR,IAqGjCt8E,GAAI+uB,oBAAQl/B,GACVkF,KAAK8lF,UAAUhrF,IAEjBmQ,GAAI+uB,sBACF,OAAOh6B,KAAKu6B,MAAMP,OAAOqR,SAG3BpgC,GAAI4sB,2BACF,OAAO73B,KAAK6N,WAAWyS,QAAU,GAAKtgB,KAAK6N,WAAW45E,kBAGxDx8E,GAAIwtB,oBACF,OAAOz4B,KAAKuoF,mBAGdt9E,GAAI09E,6BACF,OAAO3oF,KAAKy4B,MAGdxtB,GAAIk/B,wBACF,QAASnqC,KAAKmsC,UAAYnsC,KAAK6N,WAAWq2C,6BAG5C4hC,mBAAWhrF,GACTusF,GAAgBrnF,KAAKu6B,MAAOz/B,GAC5BusF,GAAgBrnF,KAAKiqC,eAAgBnvC,GACrCusF,GAAgBrnF,KAAK8kC,aAAchqC,iBAGrC2tF,mBAAW9mF,GACT3B,KAAK8/B,SAASkJ,SACZ,IAAIC,EAAgBtnC,EAAO,IAE7B9G,IAAM+tF,EAAS5oF,KAAK8/B,SAAS+uC,WACxB+Z,EACLA,EAAOC,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,GADrD1pE,GAAI1X,MAAM,+BAI3BqhF,wBACEnuF,IAAMkoD,EAAOmiC,GAAallF,KAAK6N,WAAWk1C,MAEpCjoD,EAAI,IAAImtC,EAAe,CAC3BzP,SAAUx4B,KAAKw4B,SACf0P,aAAc,GACdC,eAAgB,GAChBI,WAAW,EACX1Q,YAAa73B,KAAK63B,YAClB2Q,WAAYxoC,KAAK6N,WAAW26B,WAC5B6/C,QAAQ,EACRpjD,KAAK,EACL8d,KAAMA,IAERjoD,EAAEmuF,cAAe,EACjBnuF,EAAEqrC,WAAW+iD,aAAc,EAC3BpuF,EAAEqrC,WAAWgjD,UAAYnpF,KAAKopF,WAE9BvuF,IAAMwuF,EAAK,IAAIphD,EAAe,CAC5BzP,SAAUx4B,KAAKw4B,SACf0P,aAAc,GACdC,eAAgB,GAChBI,WAAW,EACX1Q,YAAa73B,KAAK63B,YAClB2Q,WAAYxoC,KAAK6N,WAAW26B,WAC5B6/C,QAAQ,EACRpjD,KAAK,EACL8d,KAAMA,IAERsmC,EAAGJ,cAAe,EAElBpuF,IAAMyuF,EAAK,IAAIrhD,EAAe,CAC5BzP,SAAUx4B,KAAKsoF,gBACfpgD,aAAc,GACdC,eAAgB,GAChBI,WAAW,EACX1Q,aAAa,EACb2Q,WAAYxoC,KAAK6N,WAAW26B,WAC5B6/C,QAAQ,EACRpjD,KAAK,EACL8d,KAAMA,EACN1a,SAAUkhD,IAEZD,EAAGL,cAAe,EAClBK,EAAGnjD,WAAWgjD,UAAYnpF,KAAKopF,WAE7BtuF,EAAUqoC,SAAWnjC,KAAK6N,WAAWs1B,SACrCkmD,EAAWlmD,SAAWnjC,KAAK6N,WAAWs1B,SACtCmmD,EAAWnmD,SAAWnjC,KAAK6N,WAAWs1B,SAExCnjC,KAAKu4B,SAAWz9B,EAChBkF,KAAKwpF,kBAAoBH,EACzBrpF,KAAKypF,gBAAkBH,EAGvBtpF,KAAK2nF,6BAGPe,iCACE1oF,KAAK0pF,qBAEL7uF,IAAMilC,EAAW9/B,KAAK8/B,SAChB6pD,EAAiB3pF,KAAK2pF,eACtBC,EAAoB,IAAI7gD,EAE9B6gD,EAAkBpgD,WAAa1J,EAAS0J,WACpCmgD,IACFC,EAAkB5gD,SAChB,IAAIC,EAAgB0gD,EAAgB,GAAGd,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,IAEtGa,EAAkBC,aAAa,EAAG7pF,KAAK8pF,sBAGzC9pF,KAAK4pF,kBAAoBA,gBAG3BF,8BACE7uF,IAAM82D,EAAoB,GAE1B,SAASo4B,EAAWpsF,EAAW0Z,GAC7B,GAAI1Z,EAAI0Z,EAAG,CACTxc,IAAMk2C,EAAMpzC,EACZA,EAAI0Z,EACJA,EAAI05B,EAGNl2C,IAAMggD,EAAO8W,EAAOh0D,GAEpB,YAAapC,IAATs/C,GACF8W,EAAOh0D,GAAM,CAAE0Z,IACR,IACGwjC,EAAKjyC,SAASyO,KACxBwjC,EAAKp+C,KAAK4a,IACH,GAMXxc,IAAMilC,EAAW9/B,KAAK8/B,SAChBn+B,EAAQm+B,EAASn+B,MAEvB,GAAK3B,KAAK6N,WAAWs1C,UAGd,GAAIxhD,EAAO,CAChB9G,IAKI8uF,EALEztF,EAAQyF,EAAMzF,MAChB+M,EAAI/M,EAAMI,OAKd,GAJIwjC,EAASkqD,UAAUxhF,QAAUE,EAAAA,IAC/BO,EAAI62B,EAASkqD,UAAUxhF,OAGrBxI,KAAK2pF,gBAAkB3pF,KAAK2pF,eAAertF,OAAa,EAAJ2M,EACtD0gF,EAAiB3pF,KAAK2pF,oBAGtBA,EAAiB3mF,GAAiB,EAAJiG,EADf62B,EAAS0J,WAAmBvhC,SAASO,OAItDpM,IAAIqJ,EAAI,EACRksD,EAAMr1D,OAAS,EAEf,IAAKF,IAAIC,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAAG,CAC7BxB,IAAM8C,EAAIzB,EAAOG,EAAI,GACfgb,EAAInb,EAAOG,EAAI,GACf2F,EAAI9F,EAAOG,EAAI,GAEjB0tF,EAAUpsF,EAAG0Z,KACfsyE,EAAgBlkF,EAAI,GAAM9H,EAC1BgsF,EAAgBlkF,EAAI,GAAM4R,EAC1B5R,GAAK,GAEHskF,EAAU1yE,EAAGrV,KACf2nF,EAAgBlkF,EAAI,GAAM4R,EAC1BsyE,EAAgBlkF,EAAI,GAAMzD,EAC1ByD,GAAK,GAEHskF,EAAU/nF,EAAGrE,KACfgsF,EAAgBlkF,EAAI,GAAMzD,EAC1B2nF,EAAgBlkF,EAAI,GAAM9H,EAC1B8H,GAAK,GAITzF,KAAK2pF,eAAiBA,EACtB3pF,KAAK8pF,oBAAsBrkF,EAC3BzF,KAAKiqF,sBAAwBjqF,KAAKkqF,iBAC7B,CACLrvF,IAEI8uF,EAFE1gF,EAAK62B,EAAS0J,WAAmBvhC,SAASO,MAI9CmhF,EADE3pF,KAAK2pF,gBAAkB3pF,KAAK2pF,eAAertF,OAAa,EAAJ2M,EACrCjJ,KAAK2pF,eAEL3mF,GAAiB,EAAJiG,EAAOA,GAGvC,IAAK7M,IAAIC,EAAI,EAAGoJ,EAAI,EAAGpJ,EAAI4M,EAAG5M,GAAK,EACjCstF,EAAgBlkF,EAAI,GAAMpJ,EAC1BstF,EAAgBlkF,EAAI,GAAMpJ,EAAI,EAC9BstF,EAAgBlkF,EAAI,GAAMpJ,EAAI,EAC9BstF,EAAgBlkF,EAAI,GAAMpJ,EAAI,EAC9BstF,EAAgBlkF,EAAI,GAAMpJ,EAAI,EAC9BstF,EAAgBlkF,EAAI,GAAMpJ,EAE1BoJ,GAAK,EAGPzF,KAAK2pF,eAAiBA,EACtB3pF,KAAK8pF,oBAA0B,EAAJ7gF,EAC3BjJ,KAAKiqF,sBAAwBjqF,KAAKkqF,kBAnElClqF,KAAK2pF,eAAiB,IAAI/mF,YAAY,GACtC5C,KAAK8pF,oBAAsB,gBAsE/BK,gCACE,GAAKnqF,KAAK4pF,mBAAsB5pF,KAAK2pF,eAArC,CAKA,GAHA3pF,KAAK4pF,kBAAkBC,aAAa,EAAGnhF,EAAAA,GACnC1I,KAAKiqF,sBAAwBjqF,KAAKkqF,cAAclqF,KAAK0pF,qBAErD1pF,KAAK4pF,kBAAkBjoF,OACvB3B,KAAK2pF,eAAertF,OAAS0D,KAAK4pF,kBAAkBjoF,MAAMzF,MAAMI,OAClE0D,KAAK4pF,kBAAkB5gD,SACrB,IAAIC,EAAgBjpC,KAAK2pF,eAAgB,GAAGd,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,QAEtG,CACLluF,IAAM8G,EAAQ3B,KAAK4pF,kBAAkB/a,WACrC,IAAKltE,EAAqC,YAA5B0d,GAAI1X,MAAM,iBACxBhG,EAAM6L,IAAIxN,KAAK2pF,gBACfhoF,EAAM+nC,YAAc1pC,KAAK8pF,oBAAsB,EAC/CnoF,EAAMyoF,YAAY5hF,MAAQxI,KAAK8pF,oBAGjC9pF,KAAK4pF,kBAAkBC,aAAa,EAAG7pF,KAAK8pF,oCAG9CO,0BACEjuF,IAAIkuF,EAAc,EAYlB,OAVItqF,KAAKuqF,OACPD,EAAc,EACLtqF,KAAK63B,cAEZyyD,EADEtqF,KAAKid,UACO,EAEA,GAIXqtE,gBAGTE,kBAAUC,GACHzqF,KAAKu4B,UAAUv4B,KAAKgpF,eAEzBnuF,IAGI0vC,EAHE1R,EAAI74B,KAAK8/B,SACThlC,EAAIkF,KAAMyqF,GAehB,OAVElgD,EADEvqC,KAAK0qF,OACA,IAAIphD,EAAazQ,EAAG/9B,GAClBkF,KAAK2qF,QACP,IAAI16C,EAAOpX,EAAG/9B,GAEd,IAAI6tC,EAAK9P,EAAG/9B,IAGhB8vF,eAAgB,EACrBrgD,EAAK+/C,YAActqF,KAAKqqF,iBAEjB9/C,gBAGTC,mBACE,OAAOxqC,KAAKwqF,SAAS,0BAGvB7/C,4BACEvuC,IAAImuC,EAYJ,OAVKvqC,KAAKu4B,UAAUv4B,KAAKgpF,eACpBhpF,KAAK4pF,mBAAmB5pF,KAAK0oF,yBAElCn+C,EAAO,IAAIjB,EACTtpC,KAAK4pF,kBAAmB5pF,KAAKwpF,oBAG1BoB,eAAgB,EACrBrgD,EAAK+/C,YAActqF,KAAKqqF,iBAEjB9/C,gBAGTO,0BACE,OAAO9qC,KAAKwqF,SAAS,iCAGvB14D,mBAAWznB,EAAcrF,GACvB,OAAO8sB,GAAUznB,EAAMrK,KAAKkyB,WAAWltB,kBAGzC6lF,yBAAiB7lF,GACf,OAAOhF,KAAK8xB,UAAU9xB,KAAKkoC,aAAcljC,iBAG3C8lF,2BAAmB9lF,GACjB,OAAOhF,KAAK8xB,UAAU9xB,KAAKmoC,eAAgBnjC,iBAG7CktB,oBAAYltB,GACVnK,IAAMk3B,EAAyB,GA8B/B,OA5BI/xB,KAAK6N,WAAWs1B,WAClBpR,EAAQg5D,UAAY,GAGlB/qF,KAAK6N,WAAW80C,aAClB5wB,EAAQi5D,YAAc,GAGX,YAAThmF,EACF+sB,EAAQk5D,QAAU,IAEL,eAATjmF,GAAyBhF,KAAK6N,WAAWq8B,cAC3CnY,EAAQm5D,QAAU,GAEhBlrF,KAAK6N,WAAWi1C,aAClB/wB,EAAQo5D,YAAc,GAEpBnrF,KAAK6N,WAAW25E,aAClBz1D,EAAQq5D,YAAc,GAEpBprF,KAAK6N,WAAWi2C,kBAClB/xB,EAAQs5D,iBAAmB,GAEzBrrF,KAAK6N,WAAWk2C,mBAClBhyB,EAAQu5D,mBAAqB,IAI1Bv5D,gBAGTq0B,yBACE,OAAOpmD,KAAK6N,yBAGd09E,qBAAa/yD,GACXx4B,KAAKw4B,SAAWwvD,EAAcC,MAC5B,CAAEjoF,KAAKw4B,SAAUA,IAGnBx4B,KAAKsoF,gBAAkBN,EAAcC,MACnC,CAAEjoF,KAAKsoF,gBAAiB9vD,kBAI5BgwD,uBAAeh/C,GACb,IAAKptC,IAAIiO,KAAQm/B,EAAY,CAC3BptC,IAAIovF,SACE7tF,EAAI6rC,EAAYn/B,GAChB9H,EAAYvC,KAAK2oF,cAAgBr3C,GAAU3zC,EAAEqH,MAE/CrH,EAAEtC,OACAkH,IAAc5E,EAAEtC,MAAMiB,QACxB+iB,GAAI1X,MAAM,mCAAoC0C,GAEhDmhF,EAAM7tF,EAAEtC,OAERmwF,EAAMnpF,GAAc,UAAWE,GAGjCvC,KAAK8/B,SAASoJ,aACZ7+B,EACA,IAAI4+B,EAAgBuiD,EAAKl6C,GAAU3zC,EAAEqH,OAAQ6jF,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,mBAKhH0C,6BACE5wF,IAAMyvF,EAActqF,KAAKqqF,iBACzB,SAASqB,EAAgBnhD,GACvBA,EAAK+/C,YAAcA,EAGrBtqF,KAAKu6B,MAAM8P,SAAS/xB,QAAQozE,GACxB1rF,KAAK8kC,cACP9kC,KAAK8kC,aAAauF,SAAS/xB,QAAQozE,iBAIvC/D,wBACE9sF,IAAMC,EAAIkF,KAAKu4B,SACT8wD,EAAKrpF,KAAKwpF,kBACVF,EAAKtpF,KAAKypF,gBAEhB3uF,EAAEotC,aAAeloC,KAAK6qF,kBACtB/vF,EAAEqtC,eAAiBnoC,KAAK8qF,oBACxBhwF,EAAE4uC,aAAc,EAEhB2/C,EAAGnhD,aAAeloC,KAAK8xB,UAAU,aACjCu3D,EAAGlhD,eAAiBnoC,KAAK8xB,UAAU,aACnCu3D,EAAG3/C,aAAc,EAEjB4/C,EAAGphD,aAAeloC,KAAK6qF,gBAAgB,WACvCvB,EAAGnhD,eAAiBnoC,KAAK8qF,kBAAkB,WAC3CxB,EAAG5/C,aAAc,gBAQnByL,uBAAe15C,GACbZ,IAAMqT,EAAIzS,EACJkwF,EAAK3rF,KAAK4rF,eACVC,EAAK7rF,KAAK6N,WAEVi+E,EAAqC,GACrCC,EAAoC,GACtCC,GAAiB,EACjBC,GAAqB,EAEzB,IAAKpxF,IAAMwP,KAAQ6D,EAAG,CACpBrT,IAAMQ,EAAQ6S,EAAG7D,QAEH9O,IAAVF,IACJwwF,EAAIxhF,GAAShP,OAEME,IAAfowF,EAAIthF,KAEJshF,EAAIthF,GAAOu9E,YACe,IAAxB+D,EAAIthF,GAAOu9E,SACbkE,EAAcH,EAAIthF,GAAOu9E,UAAoBvsF,EAE7CywF,EAAczhF,GAAShP,GAIvBswF,EAAIthF,GAAOw9E,WACc,IAAvB8D,EAAIthF,GAAOw9E,QACbkE,EAAaJ,EAAIthF,GAAOw9E,SAAmBxsF,EAE3C0wF,EAAa1hF,GAAShP,GAItBswF,EAAIthF,GAAOs9E,eACbqE,GAAiB,GAGfL,EAAIthF,GAAOy9E,mBACbmE,GAAqB,GAGnBjsF,KAAK8oF,SAAoB,cAATz+E,IAAkC,IAAVhP,GAC1C2E,KAAKmqF,uBAGM,qBAAT9/E,IACFyhF,EAAaj0D,YAAc73B,KAAK63B,aAGrB,WAATxtB,IACFrK,KAAKg6B,OAAS3+B,KAIlB2E,KAAKksF,cAAcJ,GACnB9rF,KAAKmsF,YAAYJ,GACbC,GAAgBhsF,KAAK2nF,eACrBsE,GAAoBjsF,KAAK8lD,cAAc9lD,KAAK0xC,uBAWlD06C,uBAAe7uF,GACb1C,IAAMilC,EAAW9/B,KAAK8/B,SAChB0J,EAAa1J,EAAS0J,WAE5B,IAAK3uC,IAAMwP,KAAQ9M,EACjB,GAAa,YAAT8M,EAAJ,CAEAxP,IAAMqB,EAAQqB,EAAM8M,GACd/N,EAASJ,EAAMI,OAErB,GAAa,UAAT+N,EAAkB,CACpBxP,IAAM8G,EAAQm+B,EAAS+uC,WACvB,IAAKltE,EAAO,CAAE0d,GAAI1X,MAAM,iBAAkB,SAC1Cm4B,EAAS+pD,aAAa,EAAGnhF,EAAAA,GAErBpM,EAASqF,EAAMzF,MAAMI,OACvBwjC,EAASkJ,SACP,IAAIC,EAAgB/sC,EAAO,GACxB2sF,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,KAGlEpnF,EAAM6L,IAAItR,GACVyF,EAAM6G,MAAQlM,EACdqF,EAAM+nC,YAAcptC,EAAS,EAC7BqF,EAAMyoF,YAAY5hF,MAAQlM,EAC1BwjC,EAAS+pD,aAAa,EAAGvtF,IAG3B0D,KAAKkqF,eACDlqF,KAAK6N,WAAWs1C,WAAWnjD,KAAKmqF,2BAC/B,CACLtvF,IAAMwxF,EAAY7iD,EAAYn/B,GAE1B/N,EAAS+vF,EAAUnwF,MAAMI,OAC3BwjC,EAASoJ,aACP7+B,EACA,IAAI4+B,EAAgB/sC,EAAOmwF,EAAU/6C,UAClCu3C,SAAS7oF,KAAK8oF,QAAUz2D,sBAAsB02D,aAAe,KAGlEv/C,EAAYn/B,GAAOmD,IAAItR,GACvBstC,EAAYn/B,GAAOq/B,YAAcptC,EAAS,EAC1CktC,EAAYn/B,GAAO+/E,YAAY5hF,MAAQlM,mBAM/C6vF,qBAAa5uF,GACX,GAAKA,EAAL,CAEA1C,IAAM+/B,EAAI56B,KAAKu4B,SAASC,SAClB8zD,EAAKtsF,KAAKwpF,kBAAkBhxD,SAC5BiI,EAAKzgC,KAAKypF,gBAAgBjxD,SAEhC,IAAKp8B,IAAIiO,KAAQ9M,EACF,YAAT8M,GACFrK,KAAKksF,cAAc,CAAEr0D,YAAa73B,KAAK63B,mBAGvBt8B,IAAdq/B,EAAGvwB,KACDuwB,EAAGvwB,GAAOhP,MAAMkxF,UAClB3xD,EAAGvwB,GAAOhP,MAAMq/B,KAAKn9B,EAAM8M,IAClBuwB,EAAGvwB,GAAOhP,MAAMmS,IACzBotB,EAAGvwB,GAAOhP,MAAMmS,IAAIjQ,EAAM8M,IAE1BuwB,EAAGvwB,GAAOhP,MAAQkC,EAAM8M,SAIT9O,IAAf+wF,EAAIjiF,KACFiiF,EAAIjiF,GAAOhP,MAAMkxF,UACnBD,EAAIjiF,GAAOhP,MAAMq/B,KAAKn9B,EAAM8M,IACnBiiF,EAAIjiF,GAAOhP,MAAMmS,IAC1B8+E,EAAIjiF,GAAOhP,MAAMmS,IAAIjQ,EAAM8M,IAE3BiiF,EAAIjiF,GAAOhP,MAAQkC,EAAM8M,SAIV9O,IAAfklC,EAAIp2B,KACFo2B,EAAIp2B,GAAOhP,MAAMkxF,UACnB9rD,EAAIp2B,GAAOhP,MAAMq/B,KAAKn9B,EAAM8M,IACnBo2B,EAAIp2B,GAAOhP,MAAMmS,IAC1BizB,EAAIp2B,GAAOhP,MAAMmS,IAAIjQ,EAAM8M,IAE3Bo2B,EAAIp2B,GAAOhP,MAAQkC,EAAM8M,mBAMjC6hF,uBAAe3uF,GACb,GAAKA,EAAL,CAEA1C,IAAMC,EAAIkF,KAAKu4B,SACT8wD,EAAKrpF,KAAKwpF,kBACVF,EAAKtpF,KAAKypF,gBAEhB,IAAK5uF,IAAMsS,KAAS5P,EAAM,CACxB1C,IAAMwP,EAAO8C,EAET9R,EAAQkC,EAAM8M,GAEL,gBAATA,EACFrK,KAAKyrF,oBACa,SAATphF,IACThP,EAAQ6pF,GAAa7pF,IAGtBP,EAAGuP,GAAiBhP,EACpBguF,EAAIh/E,GAAiBhP,EACrBiuF,EAAIj/E,GAAiBhP,EAGxBP,EAAE4uC,aAAc,EAChB2/C,EAAG3/C,aAAc,EACjB4/C,EAAG5/C,aAAc,iBAQnBoc,uBAAezqD,GACb2E,KAAK0xC,QAAUr2C,EAEX2E,KAAK6N,WAAWs1C,WAClBnjD,KAAKu6B,MAAMmX,SAAU,EACrB1xC,KAAKiqC,eAAeyH,QAAUr2C,EAC1B2E,KAAKmqC,WACPnqC,KAAK8kC,aAAa4M,SAAU,KAG9B1xC,KAAKu6B,MAAMmX,QAAUr2C,EACrB2E,KAAKiqC,eAAeyH,SAAU,EAC1B1xC,KAAKmqC,WACPnqC,KAAK8kC,aAAa4M,QAAUr2C,kBASlCyoB,mBACM9jB,KAAKu4B,UAAUv4B,KAAKu4B,SAASzU,UAC7B9jB,KAAKwpF,mBAAmBxpF,KAAKwpF,kBAAkB1lE,UAC/C9jB,KAAKypF,iBAAiBzpF,KAAKypF,gBAAgB3lE,UAE/C9jB,KAAK8/B,SAAShc,UACV9jB,KAAK4pF,mBAAmB5pF,KAAK4pF,kBAAkB9lE,wBAMrD0oE,kBACE,IAAIruF,EAAc,GAClB,IAAK,IAAI2H,KAAK9F,KACF,UAAN8F,GAAuB,mBAANA,GAA+B,gBAALA,GACnC,YAANA,IACJ3H,EAAO2H,GAAK9F,KAAK8F,IAGrB,OAAO3H,gDC/0BLsuF,eAYJ,WAAalvF,EAAkB9B,kBAAoC,IACjE2c,YAAM7a,EAAM9B,GAZduE,kBAAe,YACfA,oBAAiB,YAafA,KAAKwoF,cAAc,CACjB14D,OAAU,CAAE9qB,KAAM,KAAM3J,MAAOkC,EAAKuyB,eAGlBv0B,IAAhBgC,EAAKuyB,QACP9vB,KAAK8/B,SAAS0iD,wHApBK/2B,ICbnBihC,eAAN,qCACE1sF,gBAAY,mGADcysF,ICC5B,SAASE,GAAmB7xF,GAAeA,EAAE42C,SAAU,EACvD,SAASk7C,GAAoB9xF,GAAeA,EAAE42C,SAAU,EAiBxD,IAAMm7C,GAwBJ,SAAazpF,GAfbpD,WAAQ,IAAI2kC,EACZ3kC,oBAAiB,IAAI2kC,EACrB3kC,kBAAe,IAAI2kC,EAEnB3kC,iBAAqC,GACrCA,gBAAoC,GAWlCA,KAAKy4B,KAAOr1B,EAAOq1B,KACnBz4B,KAAK+iD,KAAO3/C,EAAOyK,WAAWk1C,KAC9B/iD,KAAK0xC,QAAUtuC,EAAOsuC,QACtB1xC,KAAK8/B,SAAW18B,EAAO08B,SACvB9/B,KAAKmsC,QAAU/oC,EAAO+oC,QAEtBnsC,KAAKu6B,MAAQ,IAAIoK,EACjB3kC,KAAKiqC,eAAiB,IAAItF,EAC1B3kC,KAAK8kC,aAAe,IAAIH,EAGxB3kC,KAAKg6B,OAAS52B,EAAO42B,OAErBn/B,IAAMiyF,EAAc1pF,EACd2pF,EAAa,IAAK3pF,EAAeG,YAAY,CACjD0E,SAAU,IAAInF,aAAa,KAG7BgqF,EAAY9D,eACZ+D,EAAW/D,eAEX+D,EAAW5gD,QAAU/oC,EAAO+oC,QAC5B4gD,EAAWjtD,SAAW18B,EAAO08B,SAC7BitD,EAAWnD,kBAAoBxmF,EAAOwmF,kBACtCmD,EAAW53C,cAAc/xC,EAAOgjD,iBAChC2mC,EAAWpF,eAEXmF,EAAY33C,cAAc,CACxB4N,KAAM,UAERgqC,EAAW53C,cAAc,CACvB4N,KAAM,OACNziC,QAASysE,EAAWl/E,WAAWyS,UAGjCtgB,KAAKoD,OAASA,EACdpD,KAAK8sF,YAAcA,EACnB9sF,KAAK+sF,WAAaA,yFAGpB9hF,GAAI+uB,oBAAQl/B,GACV2wD,GAAO7mD,UAAUkhF,UAAUj+E,KAAK7H,KAAMlF,IAExCmQ,GAAI+uB,sBACF,OAAOh6B,KAAKu6B,MAAMP,OAAOqR,SAG3BpgC,GAAIk/B,wBACF,QAASnqC,KAAKmsC,UAAYnsC,KAAK6N,WAAWq2C,gBAG5Cj5C,GAAI4C,0BACF,OAAO7N,KAAKoD,OAAOyK,yBAGrBu4C,yBACEvrD,IAAMqT,EAAItS,OAAOC,OAAO,GAAImE,KAAKoD,OAAOyK,YAExC,OADAK,EAAE60C,KAAO/iD,KAAK+iD,KACP70C,gBAGTs8B,iBAAS2B,GACP/vC,IAAI4mD,EAAOC,EAeX,OAbI9W,GACF8W,EAAOjjD,KAAK+sF,WAAWjiD,iBACvBkY,EAAQhjD,KAAK8sF,YAAYhiD,mBAEzBmY,EAAOjjD,KAAK+sF,WAAWviD,UACvBwY,EAAQhjD,KAAK8sF,YAAYtiD,WAG3BxqC,KAAKgtF,YAAYvwF,KAAwBumD,GACzChjD,KAAKitF,WAAWxwF,KAAwBwmD,GAExCjjD,KAAKm1C,cAAc,CAAE4N,KAAM/iD,KAAK+iD,QAEzB,IAAIpe,GAAQ55B,IAAIk4C,EAAMD,iBAG/BrY,4BACE,OAAO3qC,KAAKoD,OAAOunC,iCAGrBG,0BACE,OAAO9qC,KAAKwqC,SAAQ,iBAGtB4hD,uBAAe7uF,GACbyC,KAAKoD,OAAOgpF,cAAc7uF,iBAG5B43C,uBAAe53C,GAGK,WAFlBA,EAAO3B,OAAOC,OAAO,GAAI0B,IAEhBwlD,MACP/iD,KAAKgtF,YAAY10E,QAAQq0E,IACzB3sF,KAAKitF,WAAW30E,QAAQs0E,KACD,SAAdrvF,EAAKwlD,MACd/iD,KAAKgtF,YAAY10E,QAAQs0E,IACzB5sF,KAAKitF,WAAW30E,QAAQq0E,KACD,WAAdpvF,EAAKwlD,OACd/iD,KAAKgtF,YAAY10E,QAAQq0E,IACzB3sF,KAAKitF,WAAW30E,QAAQq0E,UAGRpxF,IAAdgC,EAAKwlD,OACP/iD,KAAK+iD,KAAOxlD,EAAKwlD,aAEZxlD,EAAKwlD,UAEQxnD,IAAhBgC,EAAKy8B,SACPh6B,KAAKg6B,OAASz8B,EAAKy8B,eAEdz8B,EAAKy8B,OAEZh6B,KAAK8sF,YAAY33C,cAAc53C,QAERhC,IAAnBgC,EAAK4lD,YACPnjD,KAAKmjD,UAAY5lD,EAAK4lD,UACtBnjD,KAAK8lD,cAAc9lD,KAAK0xC,iBAEnBn0C,EAAK4lD,UAEZnjD,KAAK+sF,WAAW53C,cAAc53C,iBAGhCuoD,uBAAezqD,GACb2E,KAAK0xC,QAAUr2C,EAEX2E,KAAK6N,WAAWs1C,WAClBnjD,KAAKu6B,MAAMmX,SAAU,EACrB1xC,KAAKiqC,eAAeyH,QAAUr2C,EAC1B2E,KAAKmqC,WACPnqC,KAAK8kC,aAAa4M,SAAU,KAG9B1xC,KAAKu6B,MAAMmX,QAAUr2C,EACrB2E,KAAKiqC,eAAeyH,SAAU,EAC1B1xC,KAAKmqC,WACPnqC,KAAK8kC,aAAa4M,QAAUr2C,kBAKlCyoB,mBACE9jB,KAAK8sF,YAAYhpE,UACjB9jB,KAAK+sF,WAAWjpE,wBAOlB0oE,kBACE,IAAIruF,EAAc,GAClB,IAAK,IAAI2H,KAAK9F,KACR,CAAC,OAAQ,OAAQ,UAAW,SAAU,cAAc4I,SAAS9C,KAC/D3H,EAAO2H,GAAK9F,KAAK8F,IAGrB,OAAO3H,2+BC1MX,IAAM+uF,eAAN,qCACEltF,aAAS,EACTA,kBAAe,YACfA,oBAAiB,6GAHSyrD,IC0CtB0hC,eA8BJ,WAAa79D,EAAkBiE,EAAgB93B,GAC7C2c,YAAMkX,EAASiE,EAAQ93B,GAEvBuE,KAAKgF,KAAO,UAEZhF,KAAK6N,WAAajS,OAAOC,OAAO,CAE9BuxF,aAAc,CACZpoF,KAAM,SACN3F,QAAS,CACPhE,MAAS,QAASorF,MAAS,UAG/B/S,SAAU,CACR1uE,KAAM,SAAU49C,UAAW,EAAG3hD,IAAK,IAAMD,KAAM,KAEjDqsF,eAAgB,CACdroF,KAAM,WAERsoF,eAAgB,CACdtoF,KAAM,WAERi/E,OAAQ,CACNj/E,KAAM,UAAW49C,UAAW,EAAG3hD,IAAK,GAAID,IAAK,GAE/CkpC,WAAY,CACVllC,KAAM,UAAWm/C,SAAS,GAE5BqjC,WAAY,CACVxiF,KAAM,UAAW5B,QAAQ,GAE3BmqF,QAAS,CACPvoF,KAAM,UAAW49C,UAAW,EAAG3hD,IAAK,IAAKD,IAAK,GAEhDwsF,YAAa,CACXxoF,KAAM,UAER4uE,QAAS,CACP5uE,KAAM,UAAWm/C,SAAS,GAE5BspC,UAAW,CACTzoF,KAAM,UAAWm/C,SAAS,GAE5B0vB,KAAM,CACJ7uE,KAAM,UAAWm/C,SAAS,IAG3BnkD,KAAK6N,YAEJyhB,aAAmBw1D,IACrB9kF,KAAKsvB,aAAU/zB,EACfyE,KAAK48C,OAASttB,IAEdtvB,KAAKsvB,QAAUA,EACftvB,KAAK48C,YAASrhD,GAGhByE,KAAK0tF,UAAY,IAAI/pF,EACrB3D,KAAK2tF,YAAc,IAAIhqF,EACvB3D,KAAK+hC,IAAM,IAAIjB,EACf9gC,KAAKomF,MAAQ,IAAItlD,EAEjB9gC,KAAKulF,UAAY,IAAI5hF,EACrB3D,KAAKglF,cAAgB,IAAInhF,EAEzB7D,KAAK4tF,OAAS,WACZ5tF,KAAKulF,UAAU7qD,KAAKnH,EAAOqR,iBAAiB38B,UAAUiM,SACtDlU,KAAKulF,UAAU96C,aAAazqC,KAAKglF,eAC5BhlF,KAAKulF,UAAUj6C,OAAOtrC,KAAK0tF,YAC9B1tF,KAAKm1C,cAAc,CAAEu4C,UAAa1tF,KAAKulF,aAI3CvlF,KAAKukD,cAAe,EAEpBvkD,KAAKuzB,OAAOhe,QAAQgsB,OAAOx2B,IAAI/K,KAAK4tF,OAAQ5tF,MAE5CA,KAAKwkD,KAAK/oD,6GAGZ+oD,cAAM/oD,GACJZ,IAAMqT,EAAIzS,GAAU,GACpByS,EAAEm1C,YAAcjoD,GAAS8S,EAAEm1C,YAAa,WACxCn1C,EAAEs1C,WAAapoD,GAAS8S,EAAEs1C,WAAY,UAEtCxjD,KAAKotF,aAAehyF,GAAS8S,EAAEk/E,aAAc,SAC7CptF,KAAK0zE,SAAWt4E,GAAS8S,EAAEwlE,SAAU,GACrC1zE,KAAKqtF,eAAiBjyF,GAAS8S,EAAEm/E,gBAAgB,GACjDrtF,KAAKstF,eAAiBlyF,GAAS8S,EAAEo/E,gBAAgB,GACjDttF,KAAKikF,OAAS7oF,GAAS8S,EAAE+1E,OAAQ,GACjCjkF,KAAKkqC,WAAa9uC,GAAS8S,EAAEg8B,YAAY,GACzClqC,KAAKwnF,WAAapsF,GAAS8S,EAAEs5E,YAAY,GACzCxnF,KAAKutF,QAAUnyF,GAAS8S,EAAEq/E,QAAS,GACnCvtF,KAAKwtF,YAAcpyF,GAAS8S,EAAEs/E,iBAAajyF,GAC3CyE,KAAK4zE,QAAUx4E,GAAS8S,EAAE0lE,SAAS,GACnC5zE,KAAKytF,UAAYryF,GAAS8S,EAAEu/E,WAAW,GACvCztF,KAAK6zE,KAAOz4E,GAAS8S,EAAE2lE,MAAM,GAE7Bz7D,YAAMosC,eAAKt2C,GAEXlO,KAAKglF,cAAcxqD,WAAWx6B,KAAKg6B,QAEnCh6B,KAAK2kD,qBAGPkB,gBAAQ9gD,cACN/E,KAAKskD,WAAWhsC,kBAAQlV,GACtBpD,EAAKuzB,OAAOxoB,IAAI3H,MAGlBpD,KAAK8lD,cAAc9lD,KAAK0xC,SAExB3sC,iBAGFugD,iBAASvgD,OAED2uE,SADN,GAAI1zE,KAAK48C,OAUP,GANE82B,EADwB,UAAtB1zE,KAAKotF,aACIptF,KAAK48C,OAAO0pC,iBAAiBtmF,KAAK0zE,UAElC1zE,KAAK0zE,SAEd1zE,KAAKqtF,iBAAgB3Z,IAAa,IAEjC1zE,KAAKsvB,SACRtvB,KAAK6tF,aAAena,GACpB1zE,KAAK8tF,WAAa9tF,KAAKikF,QACvBjkF,KAAK+tF,YAAc/tF,KAAK4zE,SACxB5zE,KAAKguF,SAAWhuF,KAAK6zE,MACrB7zE,KAAKiuF,YAAcjuF,KAAKutF,SACvBvtF,KAAKutF,QAAU,IACXvtF,KAAK2tF,YAAYriD,OAAOtrC,KAAK0tF,WAClC,CACA1tF,KAAK6tF,WAAana,EAClB1zE,KAAK8tF,SAAW9tF,KAAKikF,OACrBjkF,KAAK+tF,UAAY/tF,KAAK4zE,QACtB5zE,KAAKguF,OAAShuF,KAAK6zE,KACnB7zE,KAAKiuF,UAAYjuF,KAAKutF,QACtBvtF,KAAK2tF,YAAYjzD,KAAK16B,KAAK0tF,WAC3B1tF,KAAKomF,MAAM1rD,KAAK16B,KAAK+hC,KAErBlnC,IAAMqzF,WAAmB5+D,GACvBtvB,EAAKsvB,QAAUA,EACfvqB,KAGE/E,KAAKytF,UACPztF,KAAK48C,OAAO2pC,iBACV7S,EAAU1zE,KAAKikF,OAAQjkF,KAAK0tF,UAAW1tF,KAAKutF,QAC5CvtF,KAAK4zE,QAAS5zE,KAAK6zE,KAAMqa,GAG3BA,EACEluF,KAAK48C,OAAOonC,WACVtQ,EAAU1zE,KAAKikF,OAAQjkF,KAAK0tF,UAAW1tF,KAAKutF,QAC5CvtF,KAAK4zE,QAAS5zE,KAAK6zE,YAKzB9uE,SAGFA,iBAIJygD,kBACE3qD,IAMIuI,EANE25E,EAAK,CACT90E,SAAWjI,KAAKsvB,QAAoByrB,cACpCxsC,MAAQvO,KAAKsvB,QAAoB80D,SAASpkF,KAAKmlD,kBAC/CxjD,MAAQ3B,KAAKsvB,QAAoBu/C,YAKnC,GAAI7uE,KAAK4zE,QACPxwE,EAAS,IAAI8pF,GACXnQ,EACA/8E,KAAKolD,gBAAgB,CAAEjC,WAAW,SAE/B,CACLvnD,OAAOC,OAAOkhF,EAAI,CAChBjtD,OAAS9vB,KAAKsvB,QAAoBi1C,YAClCp4B,QAAUnsC,KAAKsvB,QAAoBi1D,eAGrC1pF,IAAMszF,EAAgB,IAAIzB,GACxB3P,EACA/8E,KAAKolD,gBAAgB,CACnBlb,WAAYlqC,KAAKkqC,WACjBs9C,WAAYxnF,KAAKwnF,WACjB4G,cAAc,KAIlBhrF,EAAS,IAAIypF,GAAkBsB,GAGjCnuF,KAAKskD,WAAW7nD,KAAK2G,gBAGvB6tB,gBAAQ4zB,GACN,GAA+B,IAA3B7kD,KAAKskD,WAAWhoD,OAApB,CAIAzB,IAAMwzF,EAAoC,IAF1CxpC,EAAOA,GAAQ,IAIN58C,WACPomF,EAAYpmF,SAAYjI,KAAKsvB,QAAoByrB,eAG/C8J,EAAKt2C,QACP8/E,EAAY9/E,MAASvO,KAAKsvB,QAAoB80D,SAC5CpkF,KAAKmlD,mBAILN,EAAKljD,QACP0sF,EAAY1sF,MAAS3B,KAAKsvB,QAAoBu/C,YAG5ChqB,EAAK/0B,SACPu+D,EAAYv+D,OAAU9vB,KAAKsvB,QAAoBi1C,aAGjDvkE,KAAKskD,WAAWhsC,SAAQ,SAAUlV,GAChCA,EAAOgpF,cAAciC,oBAkBzBl5C,uBAAe15C,EAAkDopD,EAA0BV,GA4DzF,OA3DI1oD,QAAkCF,IAAxBE,EAAO2xF,cACnBptF,KAAK48C,SAEqB,UAAtB58C,KAAKotF,cACiB,UAAxB3xF,EAAO2xF,aAEPptF,KAAK0zE,SAAW1zE,KAAK48C,OAAO8pC,iBAAiB1mF,KAAK0zE,UACnB,UAAtB1zE,KAAKotF,cACU,UAAxB3xF,EAAO2xF,eAEPptF,KAAK0zE,SAAW1zE,KAAK48C,OAAO0pC,iBAAiBtmF,KAAK0zE,WAGpD1zE,KAAKotF,aAAe3xF,EAAO2xF,cAGzB3xF,GAAUA,EAAOiyF,YACnB1tF,KAAK0tF,UAAUhzD,KAAKj/B,EAAOiyF,kBACpBjyF,EAAOiyF,WAIZjyF,GAAUA,EAAO0nD,YACnB1nD,EAAOm4E,cAA+Br4E,IAAnBE,EAAOm4E,SAAyB5zE,KAAK4zE,WAExDn4E,EAAO0nD,WAAY,GAGrB/qC,YAAM+8B,wBAAc15C,EAAQopD,EAAMV,GAE9B1oD,EAAOu+B,QACTh6B,KAAKglF,cAAcxqD,WAAW/+B,EAAOu+B,QAGnCh6B,KAAK48C,QACP58C,KAAK48C,OAAOspC,OAAOlmF,KAAK0tF,UAAW1tF,KAAKutF,QAASvtF,KAAK+hC,KAGpDtmC,QAAiCF,IAAvBE,EAAO+xF,aACf3oC,IAAMA,EAAKt2C,OAAQ,GAGrBvO,KAAKsvB,eACa/zB,IAApBE,EAAOi4E,eACmBn4E,IAA1BE,EAAO4xF,qBACW9xF,IAAlBE,EAAOwoF,aACS1oF,IAAhBE,EAAOo4E,WACYt4E,IAAnBE,EAAO8xF,SACNvtF,KAAKutF,QAAU,IACbvtF,KAAKomF,MAAM96C,OAAOtrC,KAAK+hC,OAE1B/hC,KAAK2kD,MAAM,CACT18C,UAAY,EACZsG,OAAS,EACT5M,OAAS,EACTmuB,QAAW9vB,KAAK4zE,UAIb5zE,kBAGTmlD,0BACEtqD,IAAMqT,EAAIkK,YAAM+sC,0BAIhB,OAFAj3C,EAAE0uC,OAAS58C,KAAKwtF,YAETt/E,eAGT4V,mBACE9jB,KAAKuzB,OAAOhe,QAAQgsB,OAAO3Q,OAAO5wB,KAAK4tF,OAAQ5tF,MAE/CoY,YAAM0L,uBAhW0B0+B,ICpC9B8rC,gBAOJA,GAAOC,oBAAY9nE,EAAc4J,GAC/B5J,EAAM+nE,kBAAkB5/C,KAAKve,IAS/Bi+D,GAAOG,wBAAgBhoE,EAAc4J,GACnCx1B,IAAMo2C,EAAKxqB,EAAM2/B,gBACjB3/B,EAAM0uB,cAAc,CAAEhS,SAAU8N,EAAG9N,SAAW9S,EAAQ,MASxDi+D,GAAOI,qBAAajoE,EAAc4J,GAChCx1B,IAAM8zF,EAAQloE,EAAMmoE,WAEdlsC,EADO98C,KAAKM,KAAKmqB,YhF4CKh1B,EAAeZ,EAAekR,GAC5D,GAAItQ,EAAQZ,EAAO,OAAOY,EAC1BR,IAEMqR,EAAI7Q,EAAQZ,EAClB,QAHU,EAAIkR,EAAOlR,GAGTyR,GAFF,EAAIzR,EAAQ,EAAIkR,IAELO,EAAIA,EAAIP,EgFhDPkjF,EAAgB,IAAMF,GAAS,GAAI,EAAG,IAC1DloE,EAAMqoE,SAASH,EAAQjsC,IAUzB4rC,GAAOS,yBAAiBtoE,EAAc4J,GACpC5J,EAAM+nE,kBAAkB5/C,KAAKve,GAC7Bx1B,IAAMuuB,EAAI3C,EAAM8M,OAAOD,OAAOrrB,SAASmhB,EACvC3C,EAAMqoE,SAAS,IAAMlpF,KAAKK,IAAImjB,EAAI,KASpCklE,GAAOhB,wBAAgB7mE,EAAc4J,GACnCx1B,IAAM2oB,EAAI5d,KAAKM,KAAKmqB,GAAS,GAC7B5J,EAAMuoE,6BAAoBC,EAAUC,GAClC,GAAID,EAASE,gBAAgBhC,GAAuB,CAClDtyF,IAAMqT,EAAI+gF,EAAS7oC,gBACfl4C,EAAEo/E,gBACJ2B,EAAS95C,cAAc,CAAEu+B,SAAUxlE,EAAEwlE,SAAWlwD,SAaxD8qE,GAAOc,iBAAS3oE,EAAcysB,EAAYG,GACxC5sB,EAAM+nE,kBAAkBh1C,IAAItG,EAAIG,IAUlCi7C,GAAOe,oBAAY5oE,EAAcysB,EAAYG,GAC3C5sB,EAAM+nE,kBAAkBz0C,OAAO7G,EAAIG,IAUrCi7C,GAAOgB,qBAAa7oE,EAAcysB,EAAYG,GAC5C5sB,EAAM+nE,kBAAkBr0C,QAAQjH,EAAIG,IAUtCi7C,GAAOiB,kBAAU9oE,EAAcysB,EAAYG,GACzC5sB,EAAM+nE,kBAAkB5/C,MAAMsE,EAAKG,IAAO,IAW5Ci7C,GAAOkB,uBAAe/oE,EAAcysB,EAAYG,GAC9C5sB,EAAM+nE,kBAAkB5/C,MAAMsE,EAAKG,IAAO,GAC1Cx4C,IAAMuuB,EAAI3C,EAAM8M,OAAOD,OAAOrrB,SAASmhB,EACvC3C,EAAMqoE,SAAS,IAAMlpF,KAAKK,IAAImjB,EAAI,KAUpCklE,GAAOmB,0BAAkBhpE,EAAcysB,EAAYG,GACjD5sB,EAAM+nE,kBAAkB90C,aAAaxG,EAAIG,IAU3Ci7C,GAAOoB,qBAAajpE,EAAcysB,EAAYG,GAC5C5sB,EAAM+nE,kBAAkB70C,QAAQzG,EAAIG,IAUtCi7C,GAAOqB,6BAAqBlpE,EAAcysB,EAAYG,GACpD5sB,EAAM+nE,kBAAkBl0C,gBAAgBpH,EAAIG,IAS9Ci7C,GAAOsB,kBAAUnpE,EAAcopE,GACzBA,GACFppE,EAAMqpE,kBAAkBnuC,KAAKkuC,EAAa5nF,SAASojC,UAUvDijD,GAAOyB,qBAAatpE,EAAcopE,GAChCh1F,IAAMm1F,EAAKvpE,EAAMwpE,QAEjB,GADWxpE,EAAM2/B,gBACV6pC,SAAWJ,EAAc,CAC9Bh1F,IAAMq1F,EAAKL,EAAax3C,MAAMpwC,SAC9B+nF,EAAGG,UAAYN,EAAa/yC,WAC5BkzC,EAAGxxF,MAAMmvC,OAAU/yC,OAAOknC,YAAcouD,EAAGnqF,EAAI,EAAK,KACpDiqF,EAAGxxF,MAAMgvC,KAAQ0iD,EAAGpqF,EAAI,EAAK,KAC7BkqF,EAAGxxF,MAAMC,QAAU,aAEnBuxF,EAAGxxF,MAAMC,QAAU,QAgBlB5D,IAAMu1F,GAAqB,CAChCC,QAAS,CACP,CAAE,SAAU/B,GAAaC,YACzB,CAAE,eAAgBD,GAAaI,aAC/B,CAAE,cAAeJ,GAAahB,gBAC9B,CAAE,oBAAqBgB,GAAaS,iBAEpC,CAAE,YAAaT,GAAae,YAC5B,CAAE,aAAcf,GAAac,SAC7B,CAAE,iBAAkBd,GAAac,SACjC,CAAE,kBAAmBd,GAAagB,aAClC,CAAE,kBAAmBhB,GAAaiB,UAClC,CAAE,cAAejB,GAAakB,eAE9B,CAAE,wBAAyBlB,GAAamB,kBACxC,CAAE,uBAAwBnB,GAAaqB,qBAEvC,CAAE,kBA7BJrB,GAAOgC,qBAAa7pE,EAAcopE,GAChC,GAAIA,IAAiBA,EAAanhF,MAAQmhF,EAAahhF,MAAO,CAC5DhU,IAAM6T,EAAOmhF,EAAanhF,MAAQmhF,EAAa70C,gBACpC60C,EAAap3C,UACrB63C,YAAY5hF,QAEf+X,EAAM8pE,iBAwBR,CAAE,sBAAuBjC,GAAagC,aACtC,CAAE,mBAAoBhC,GAAasB,UACnC,CAAE,iBAAkBtB,GAAasB,UACjC,CAAE,YAAatB,GAAayB,cAE9BS,MAAO,CACL,CAAE,YAAalC,GAAae,YAC5B,CAAE,cAAef,GAAac,SAC9B,CAAE,aAAcd,GAAaiB,UAC7B,CAAE,mBAAoBjB,GAAaI,aAEnC,CAAE,8BAA+BJ,GAAasB,UAC9C,CAAE,YAAatB,GAAayB,cAE9BU,KAAM,CACJ,CAAE,SAAUnC,GAAahB,gBAEzB,CAAE,YAAagB,GAAae,YAC5B,CAAE,cAAef,GAAac,SAC9B,CAAE,iBAAkBd,GAAac,SACjC,CAAE,aAAcd,GAAakB,eAC7B,CAAE,kBAAmBlB,GAAaI,aAElC,CAAE,mBAAoBJ,GAAasB,UACnC,CAAE,YAAatB,GAAayB,cAE9BW,YAAa,CACX,CAAE,YAAapC,GAAae,YAC5B,CAAE,iBAAkBf,GAAac,SACjC,CAAE,kBAAmBd,GAAaiB,UAClC,CAAE,SAAUjB,GAAaI,aACzB,CAAE,mBAAoBJ,GAAasB,UACnC,CAAE,YAAatB,GAAayB,eCrNhC,SAASY,GAAmB3xF,GAC1BnE,IAAM+1F,EAAS5xF,EAAIwF,MAAM,QAErBQ,EAAO,GACP4rF,EAAOhoF,SAAS,YAAW5D,EAAO,UAClC4rF,EAAOhoF,SAAS,UAAS5D,EAAO,QAChC4rF,EAAOhoF,SAAS,WAAU5D,EAAO,SACjC4rF,EAAOhoF,SAAS,iBAAgB5D,EAAO,eACvC4rF,EAAOhoF,SAAS,WAAU5D,EAAO,SACjC4rF,EAAOhoF,SAAS,eAAc5D,EAAO,aACrC4rF,EAAOhoF,SAAS,eAAc5D,EAAO,aAEzC5I,IAAI4O,EAAM,EACN4lF,EAAOhoF,SAAS,SAAQoC,GAAO,GAC/B4lF,EAAOhoF,SAAS,UAASoC,GAAO,GAChC4lF,EAAOhoF,SAAS,UAASoC,GAAO,GAChC4lF,EAAOhoF,SAAS,WAAUoC,GAAO,GAErC5O,IAAI06C,EAAS,EAKb,OAJI85C,EAAOhoF,SAAS,UAASkuC,GAAU,GACnC85C,EAAOhoF,SAAS,WAAUkuC,GAAU,GACpC85C,EAAOhoF,SAAS,YAAWkuC,GAAU,GAElC,CAAE9xC,EAAMgG,EAAK8rC,GAMtB,IAAM+5C,GAYJ,SAAsBpqE,EAAchrB,kBAA8B,IAA5CuE,WAAAymB,EAXtBzmB,gBAA4B,GAY1BA,KAAKq4C,MAAQ5xB,EAAM6xB,cACnBt4C,KAAK8wF,SAAWr1F,EAAOq1F,WAAY,EACnC9wF,KAAK+wF,OAAOt1F,EAAOs1F,QAAU,yBAG/BvqE,aAAKxhB,wEACH,IAAIhF,KAAK8wF,SAAT,CAEAj2F,IAAMmQ,EAAMhL,KAAKq4C,MAAMrtC,KAAO,EACxB8rC,EAAS92C,KAAKq4C,MAAMxB,SAAW,EAErC72C,KAAKgxF,WAAW14E,kBAAQ3a,GAClBA,EAAEqH,OAASA,GAAQrH,EAAEqN,MAAQA,GAAOrN,EAAEm5C,SAAWA,GAClDn5C,EAAEoH,kBAAiB/E,EAAKymB,cAAUlnB,sBA2BzCwL,aAAKkmF,EAAoBlsF,SACO4rF,GAAkBM,wBAEhDjxF,KAAKgxF,WAAWv0F,KAAK,MAAEuI,MAAMgG,SAAK8rC,WAAQ/xC,kBA0B5C6rB,gBAAQqgE,EAAoBlsF,GAC1BlK,IAAMq2F,EAAWD,EAAWroF,SAAS,OACP+nF,GAAkBM,wBAE1CD,EAAahxF,KAAKgxF,WAAWtvF,QAAO,SAAU/D,GAClD,SACGA,EAAEqH,OAASA,GAASksF,GAAqB,KAATlsF,KAChCrH,EAAEqN,MAAQA,GAAQkmF,GAAoB,IAARlmF,KAC9BrN,EAAEm5C,SAAWA,GAAWo6C,GAAuB,IAAXp6C,KACpCn5C,EAAEoH,WAAaA,QAAyBxJ,IAAbwJ,OAIhC/E,KAAKgxF,WAAaA,gBAQpBD,gBAAQ1mF,cACNrK,KAAKmwB,SAEQigE,GAAoB/lF,IAAU,IAEtCiO,kBAAQ64E,UAAUnxF,EAAK+K,IAAIomF,EAAO,GAAIA,EAAO,qBAOpDhhE,iBACEnwB,KAAKgxF,WAAW10F,OAAS,OC9LvB80F,gBAIJA,GAAOC,kBAAU5qE,GACfA,EAAM4qE,SAAS,MAMjBD,GAAOE,0BAAkB7qE,GACvBA,EAAMqpE,kBAAkBnwC,UAM1ByxC,GAAOG,oBAAY9qE,GACjBA,EAAM8qE,cAoBH12F,IAAM22F,GAAmB,CAC9BnB,QAAS,CACP,CAAE,IAhBJe,GAAOK,oBAAYhrE,GACjBA,EAAMgrE,eAgBN,CAAE,IAAKL,GAAWG,YAClB,CAAE,IAAKH,GAAWE,kBAClB,CAAE,IAZJF,GAAOM,4BAAoBjrE,GACzB5rB,IAAMqT,EAAIuY,EAAM2/B,gBAChB3/B,EAAM0uB,cAAc,CAAEzgB,aAAgC,IAAnBxmB,EAAEwmB,YAAqB,GAAK,MAW/D,CAAE,IAAK08D,GAAWC,YCnChBM,GAWJ,SAAsBlrE,EAAchrB,kBAA4B,IAA1CuE,WAAAymB,EAVtBzmB,gBAA0B,GAWxBA,KAAK8wF,SAAWr1F,EAAOq1F,WAAY,EACnC9wF,KAAK+wF,OAAOt1F,EAAOs1F,QAAU,yBAG/BvqE,aAAKxb,cACChL,KAAK8wF,UAET9wF,KAAKgxF,WAAW14E,kBAAQ3a,GAClBA,EAAEqN,MAAQA,GACZrN,EAAEoH,SAAS/E,EAAKymB,wBAkBtB1b,aAAK6mF,EAAc7sF,GACjB/E,KAAKgxF,WAAWv0F,KAAK,CAAEuO,IAAK4mF,WAAM7sF,kBAmBpC6rB,gBAAQghE,EAAc7sF,GAEpBlK,IAAMm2F,EAAahxF,KAAKgxF,WAAWtvF,QAAO,SAAU/D,GAClD,QACGA,EAAEqN,MAAQ4mF,IACVj0F,EAAEoH,WAAaA,QAAyBxJ,IAAbwJ,OAIhC/E,KAAKgxF,WAAaA,gBAQpBD,gBAAQ1mF,cACNrK,KAAKmwB,SAEQqhE,GAAkBnnF,IAAU,IAEpCiO,kBAAQ64E,UAAUnxF,EAAK+K,IAAIomF,EAAO,GAAIA,EAAO,qBAOpDhhE,iBACEnwB,KAAKgxF,WAAW10F,OAAS,GCrG7B,IAAMu1F,GAKJ,SAAsBprE,GAAAzmB,WAAAymB,EACpBzmB,KAAKymB,MAAQA,EACbzmB,KAAKq4C,MAAQ5xB,EAAM6xB,cACnBt4C,KAAKu4C,SAAW9xB,EAAMqrE,cAEtB9xF,KAAKq4C,MAAM9iC,QAAQs+B,QAAQ9oC,IAAI/K,KAAK+xF,SAAU/xF,MAC9CA,KAAKq4C,MAAM9iC,QAAQu+B,QAAQ/oC,IAAI/K,KAAKgyF,SAAUhyF,oBAGhD+xF,kBAAUjsF,EAAWC,GACnBlL,IAAMg1F,EAAe7vF,KAAKymB,MAAMwrE,gBAAgB5jD,KAAKvoC,EAAGC,GACxD/F,KAAKymB,MAAMlR,QAAQs+B,QAAQ77B,SAAS63E,GACpC7vF,KAAKu4C,SAAS/xB,IAAI,YAAaqpE,iBAGjCmC,kBAAUlsF,EAAWC,GACnBlL,IAAMg1F,EAAe7vF,KAAKymB,MAAMwrE,gBAAgB5jD,KAAKvoC,EAAGC,GACpD8pF,GAAgB7vF,KAAKq4C,MAAM1B,KAAKrL,OAAOtrC,KAAKq4C,MAAMpwC,YACpDjI,KAAKymB,MAAMiyB,mBAAqBm3C,EAAap3C,UAC7Cz4C,KAAKymB,MAAMkyB,cAAgBk3C,EAAanhF,MAE1C1O,KAAKymB,MAAMlR,QAAQu+B,QAAQ97B,SAAS63E,GACpC7vF,KAAKu4C,SAAS/xB,IAAI,YAAaqpE,iBAGjC/rE,mBACE9jB,KAAKq4C,MAAM9iC,QAAQs+B,QAAQjjB,OAAO5wB,KAAK+xF,SAAU/xF,MACjDA,KAAKq4C,MAAM9iC,QAAQu+B,QAAQljB,OAAO5wB,KAAKgyF,SAAUhyF,OChCrD,IAAMkyF,GAMJ,SAAsBzrE,GAAAzmB,WAAAymB,EACpBzmB,KAAKymB,MAAQA,EACbzmB,KAAKq4C,MAAQ5xB,EAAM6xB,cACnBt4C,KAAKu4C,SAAW9xB,EAAMqrE,cAEtB9xF,KAAKq4C,MAAM9iC,QAAQk+B,MAAM1oC,IAAI/K,KAAKmyF,QAASnyF,MAC3CA,KAAKq4C,MAAM9iC,QAAQm+B,SAAS3oC,IAAI/K,KAAKoyF,UAAWpyF,MAChDA,KAAKq4C,MAAM9iC,QAAQo+B,QAAQ5oC,IAAI/K,KAAKqyF,QAASryF,MAC7CA,KAAKq4C,MAAM9iC,QAAQs+B,QAAQ9oC,IAAI/K,KAAK+xF,SAAU/xF,MAC9CA,KAAKq4C,MAAM9iC,QAAQu+B,QAAQ/oC,IAAI/K,KAAKgyF,SAAUhyF,MAC9CA,KAAKq4C,MAAM9iC,QAAQw+B,cAAchpC,IAAI/K,KAAKsyF,YAAatyF,oBAGzDmyF,mBACEnyF,KAAKymB,MAAMwpE,QAAQzxF,MAAMC,QAAU,qBAGrC2zF,mBAAW/hE,GACTrwB,KAAKu4C,SAAS/xB,IAAI,SAAU6J,iBAG9BgiE,iBAASn/C,EAAYG,GACnBrzC,KAAKu4C,SAAS/xB,IAAI,OAAQ0sB,EAAIG,iBAGhC0+C,kBAAUjsF,EAAWC,GACnB/F,KAAKu4C,SAAS/xB,IAAI,QAAS1gB,EAAGC,iBAGhCusF,qBAAaxsF,EAAWC,GACtB/F,KAAKu4C,SAAS/xB,IAAI,cAAe1gB,EAAGC,iBAGtCisF,kBAAUlsF,EAAWC,GACnB/F,KAAKu4C,SAAS/xB,IAAI,QAAS1gB,EAAGC,iBAGhC+d,mBACE9jB,KAAKq4C,MAAM9iC,QAAQk+B,MAAM7iB,OAAO5wB,KAAKmyF,QAASnyF,MAC9CA,KAAKq4C,MAAM9iC,QAAQm+B,SAAS9iB,OAAO5wB,KAAKoyF,UAAWpyF,MACnDA,KAAKq4C,MAAM9iC,QAAQo+B,QAAQ/iB,OAAO5wB,KAAKqyF,QAASryF,MAChDA,KAAKq4C,MAAM9iC,QAAQs+B,QAAQjjB,OAAO5wB,KAAK+xF,SAAU/xF,MACjDA,KAAKq4C,MAAM9iC,QAAQu+B,QAAQljB,OAAO5wB,KAAKgyF,SAAUhyF,OChDrD,IAAMuyF,GAIJ,SAAsB9rE,GAAAzmB,WAAAymB,EACpBzmB,KAAKuzB,OAAS9M,EAAM8M,OACpBvzB,KAAK8vF,kBAAoBrpE,EAAMqpE,kBAE/B9vF,KAAKuzB,OAAOhe,QAAQgsB,OAAOx2B,IAAI/K,KAAKwyF,QAASxyF,oBAG/CwyF,iBAAShuD,GACPxkC,KAAK8vF,kBAAkBtpE,IAAIge,iBAG7B1gB,mBACE9jB,KAAKuzB,OAAOhe,QAAQgsB,OAAO3Q,OAAO5wB,KAAKwyF,QAASxyF,OChBpDnF,IAAMi6C,KAAUl2B,IAA8B,CAAEk2B,SAAS,GAEnD29C,GAQJ,SAAsBhsE,GAAAzmB,WAAAymB,EACpBzmB,KAAKymB,MAAQA,EACbzmB,KAAKu4C,SAAW9xB,EAAMisE,YACtB1yF,KAAKo1B,WAAa3O,EAAM8M,OAAOF,SAAS+B,WAGxCp1B,KAAKo1B,WAAW8T,aAAa,WAAY,MACzClpC,KAAKo1B,WAAW52B,MAAMm0F,QAAU,OAEhC3yF,KAAK4yF,iBAAmB5yF,KAAK4yF,iBAAiBrlF,KAAKvN,MACnDA,KAAK6yF,WAAa7yF,KAAK6yF,WAAWtlF,KAAKvN,MACvCA,KAAK8yF,SAAW9yF,KAAK8yF,SAASvlF,KAAKvN,MACnCA,KAAK+yF,YAAc/yF,KAAK+yF,YAAYxlF,KAAKvN,MAEzCA,KAAKo1B,WAAWtW,iBAAiB,YAAa9e,KAAK4yF,kBACnD5yF,KAAKo1B,WAAWtW,iBAAiB,aAAc9e,KAAK4yF,iBAAkB99C,IACtE90C,KAAKo1B,WAAWtW,iBAAiB,UAAW9e,KAAK6yF,YACjD7yF,KAAKo1B,WAAWtW,iBAAiB,QAAS9e,KAAK8yF,UAC/C9yF,KAAKo1B,WAAWtW,iBAAiB,WAAY9e,KAAK+yF,2BAQpDF,qCASAC,mCASAC,qBAAa1uE,GAEXjoB,IAAI42F,EAEFA,EADE,QAASC,cAAcruF,UACZyf,EAAMrZ,IAGN/I,OAAOC,aAAamiB,EAAMuyB,OAASvyB,EAAM6uE,SAExDlzF,KAAKu4C,SAAS/xB,IAAIwsE,iBAGpBJ,4BACE5yF,KAAKo1B,WAAWu5D,sBAGlB7qE,mBACE9jB,KAAKo1B,WAAWiiB,oBAAoB,YAAar3C,KAAK4yF,kBACtD5yF,KAAKo1B,WAAWiiB,oBAAoB,aAAcr3C,KAAK4yF,iBAAkB99C,IACzE90C,KAAKo1B,WAAWiiB,oBAAoB,UAAWr3C,KAAK+yF,aACpD/yF,KAAKo1B,WAAWiiB,oBAAoB,QAASr3C,KAAK+yF,aAClD/yF,KAAKo1B,WAAWiiB,oBAAoB,WAAYr3C,KAAK+yF,kBC/DpCI,GAuBnB,SAAsB16C,EAA+BxwC,EAAmBmrF,EAA6B33F,kBAA2B,IAA1GuE,eAAAy4C,EAA+Bz4C,cAAAiI,EACnDjI,KAAK60B,QAAUz5B,GAASK,EAAOo5B,QAAS,GACxC70B,KAAK80B,QAAU15B,GAASK,EAAOq5B,QAAS,GACxC90B,KAAK0xC,QAAUt2C,GAASK,EAAOi2C,SAAS,GAExC1xC,KAAKymB,MAAQgyB,EAAUhyB,MACvBzmB,KAAKuzB,OAASklB,EAAUhyB,MAAM8M,OAE9BvzB,KAAKqzF,gBAAkB,IAAI1vF,EAC3B3D,KAAKszF,wBACLtzF,KAAKuzF,gBAAkB,IAAIp5D,EAC3Bn6B,KAAKwzF,gBAAkB,IAAI7vF,EAE3B3D,KAAKS,QAAU7C,SAASC,cAAc,OACtCjC,OAAOC,OAAOmE,KAAKS,QAAQjC,MAAO,CAChCC,QAAS,QACTwJ,SAAU,WACVwrF,cAAe,OACfC,WAAY,SACZlmD,KAAM,aAGRxtC,KAAKuzB,OAAO2O,QAAQvjC,YAAYqB,KAAKS,SACrCT,KAAK2zF,WAAWP,GAChBpzF,KAAK8nF,mBACL9nF,KAAKuzB,OAAOhe,QAAQisB,SAASz2B,IAAI/K,KAAK4zF,QAAS5zF,MAC/CA,KAAKy4C,UAAUljC,QAAQs+E,cAAc9oF,IAAI/K,KAAKszF,sBAAuBtzF,oBAQvE2zF,oBAAYt4F,GACVR,IAAMi5F,EAAe9zF,KAAKS,QAAQjC,MAAMC,QAMxC,GALqB,SAAjBq1F,IACF9zF,KAAKS,QAAQjC,MAAMgvC,KAAO,WAC1BxtC,KAAKS,QAAQjC,MAAMC,QAAU,SAG3BpD,aAAiBumC,YACnB5hC,KAAKS,QAAQ9B,YAAYtD,OACpB,CACLR,IAAMu4F,EAAUx1F,SAASC,cAAc,OACvCu1F,EAAQjD,UAAY90F,EACpBO,OAAOC,OAAOu3F,EAAQ50F,MAAO,CAC3By5B,gBAAiB,uBACjB1pB,MAAO,YACPwlF,QAAS,MACTC,WAAY,eAEdh0F,KAAKS,QAAQ9B,YAAYy0F,GAG3BpzF,KAAKi0F,YAAcj0F,KAAKS,QAAQuhC,wBAEX,SAAjB8xD,IACF9zF,KAAKS,QAAQjC,MAAMC,QAAUq1F,iBASjChuC,uBAAezqD,GACb2E,KAAK0xC,QAAUr2C,EACf2E,KAAK8nF,iCAGPoM,yBACE,OAAOl0F,KAAK0xC,SAAW1xC,KAAKy4C,UAAU5qC,WAAW6jC,sBAGnDo2C,4BACE9nF,KAAKS,QAAQjC,MAAMC,QAAUuB,KAAKk0F,gBAAkB,QAAU,qBAGhEZ,iCACEtzF,KAAKqzF,gBACF34D,KAAK16B,KAAKiI,UACVwiC,aAAazqC,KAAKy4C,UAAUze,sBAGjC45D,mBACE,GAAK5zF,KAAKk0F,gBAAV,CAEAr5F,IAAMmW,EAAIhR,KAAKS,QAAQjC,MACjB42C,EAAKp1C,KAAKuzF,gBACVY,EAAKn0F,KAAKqzF,gBACVe,EAAKp0F,KAAKi0F,YAOhB,GALAj0F,KAAKwzF,gBAAgB94D,KAAKy5D,GACvBppF,IAAI/K,KAAKuzB,OAAOqR,iBAAiB38B,UACjCwiC,aAAazqC,KAAKuzB,OAAOmR,cAAc1K,QACvCqtB,IAAIrnD,KAAKuzB,OAAOD,OAAOrrB,UAEtBjI,KAAKwzF,gBAAgBpqE,EAAI,EAC3BpY,EAAEvS,QAAU,WADd,CAIEuS,EAAEvS,QAAU,QAGd5D,IAAMw5F,EAAQr0F,KAAKwzF,gBAAgBl3F,SAC7B2oC,EAAMjlC,KAAKuzB,OAAO8E,MAAM4M,IAE9Bj0B,EAAEsP,SAAW,EAAI/T,GAAW04B,EAAIyH,KAAMzH,EAAI0H,IAAK0nD,IAAQjwF,WACvD4M,EAAEsjF,OAAU1uF,KAAK+d,MAA0B,KAAnBshB,EAAI0H,IAAM0nD,IAAejwF,WAEjDpE,KAAKymB,MAAM+xB,eAAe6C,oBAAoB84C,EAAI/+C,GAElDpkC,EAAE28B,OAAU3tC,KAAK60B,QAAUugB,EAAGrvC,EAAIquF,EAAG//D,OAAS,EAAK,KACnDrjB,EAAEw8B,KAAQxtC,KAAK80B,QAAUsgB,EAAGtvC,EAAIsuF,EAAGjgE,MAAQ,EAAK,qBAOlDrQ,mBACE9jB,KAAKuzB,OAAO2O,QAAQpjC,YAAYkB,KAAKS,SACrCT,KAAKuzB,OAAOhe,QAAQgsB,OAAO3Q,OAAO5wB,KAAK4zF,QAAS5zF,MAChDA,KAAKy4C,UAAUljC,QAAQs+E,cAAcjjE,OAAO5wB,KAAKszF,sBAAuBtzF,OC7J5EnF,IAAM48C,GAAkB,IAAI5zC,EACtB8zC,GAAkB,IAAIh0C,EACtBi0C,GAAsB,IAAI5zC,EAK1BuwF,GAWJ,SAAsB97C,GAAAz4C,eAAAy4C,EAVtBz4C,aAAU,CACR29C,QAAS,IAAIztB,GAAeza,QAU5BzV,KAAKymB,MAAQgyB,EAAUhyB,MACvBzmB,KAAKuzB,OAASklB,EAAUhyB,MAAM8M,mEAOhCtoB,GAAIhD,wBACF,OAAOjI,KAAKy4C,UAAUxwC,UAOxBgD,GAAI2yC,wBACF,OAAO59C,KAAKy4C,UAAU7N,yBAQxB+S,mBACE39C,KAAKy4C,UAAUhJ,eACfzvC,KAAKuzB,OAAOuG,gBACZ95B,KAAKuV,QAAQooC,QAAQ3lC,yBASvBomC,cAAMC,EAAeroB,GACnByhB,GAAgBjd,WAAWx6B,KAAKuzB,OAAOmR,cAAc1K,QACrD2d,GACGjd,KAAKj3B,GAAc46C,IAAO5T,aAAagN,IAE1CA,GAAgByB,gBAAgBl5C,KAAKy4C,UAAUa,WAC/C7B,GAAgB8B,YAAYv5C,KAAKuzB,OAAOmR,cAAc1K,QACtDyd,GAAgBjd,WAAWid,IAE3BE,GAAgBjd,KAAKj3B,GAAc46C,IACnC1G,GAAgBlN,aAAagN,IAC7BA,GAAgB8C,iBAAiB5C,GAAiB3hB,GAClD4hB,GAAoB4C,sBAAsB/C,IAE1Cz3C,KAAKy4C,UAAU7N,WAAW2O,YAAY3B,IACtC53C,KAAK29C,oDC3EF9iD,IAAM25F,GAAqB,CAChC,GAAI,GACJhoB,IAAO,gBACPioB,SAAY,qBACZljF,OAAU,yBACV+X,QAAW,aACXmP,KAAQ,OACRl7B,KAAQ,OACRm3F,SAAa,YAWTC,GAUJ,SAAal5F,kBAAuB,IATpCuE,SAAM,GAUJA,KAAKgF,KAAO5J,GAASK,EAAOuJ,KAAM,QAClChF,KAAK2M,MAAQvR,GAASK,EAAOkR,MAAO,GACpC3M,KAAKy4B,KAAOr9B,GAASK,EAAOg9B,KAAM,GAClCz4B,KAAKzC,KAAOnC,GAASK,EAAO8B,KAAM,kBAGpCq3F,oBAAYj3F,GACVvB,IAAIkP,EAEJ,OAAQtL,KAAKgF,MACX,IAAK,MACHsG,EAAI3N,EAAE6uE,IACN,MAEF,IAAK,WACHlhE,EAAI3N,EAAE82F,SACN,MAEF,IAAK,UACHnpF,EAAI3N,EAAE2rB,SAAW,EACjB,MAEF,IAAK,SACHzuB,IAAM0W,EAAS5T,EAAE4T,OAEfjG,EADa,MAAXiG,GAEkB,MAAXA,GAEW,MAAXA,GAEW,MAAXA,GAEW,MAAXA,EAPL,IASKkuD,GAAqB72D,SAASjL,EAAEsT,UACrC,GAEA,GAEN,MAEF,IAAK,OACH3F,EAAIlQ,GAAS4E,KAAKzC,KAAMI,EAAEgE,OAAS,GACnC,MAEF,IAAK,WAIO,QADV2J,EAAI3N,EAAE+9C,UACUpwC,EAAItL,KAAKy4B,MACzB,MAEF,QACEntB,EAAItL,KAAKy4B,KAIb,OAAO7yB,KAAK5E,IAAIsK,EAAItL,KAAK2M,MAAO3M,KAAKiB,MAjEhC0zF,SAAQH,GCjBjB35F,IAAMg6F,GAAe,IAAIlxF,GAAS,GAAI,GAAI,GACpCi8B,GAAY,IAAI/7B,EAKhBixF,GAqBJ,SAAaxzD,GAGXzmC,IAAMoO,EAAIq4B,EAAOy3C,KACXgc,EAAK9rF,EAAI,EACT+rF,EAAU,IAAInc,GAAO5vE,EAAG,GACxBW,EAAI,IAAIivE,GAAO,EAAG,GAClBze,EAAI,IAAIye,GAAO,EAAG,GAClBvd,EAAI,IAAIud,GAAO,EAAG,GAClB5hB,EAAI,IAAI4hB,GAAO,EAAG,GAGlB0C,EAAOD,GAASh6C,GACtBk6C,GAAQl6C,EAAQi6C,GAChB5gD,GAAUq6D,EAAS1zD,GACnBk4C,GAAY5vE,EAAGorF,EAASA,GACxBlZ,GAAIlyE,EAAGwwD,EAAGkB,EAAGrE,GAMbp8D,IAAMo6F,EAAK,IAAItxF,EAAQ43E,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGxC2Z,EAAM,IAAIvxF,EAAQ23D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,IAC/C43F,EAAM,IAAIxxF,EAAQ23D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,IAC/C63F,EAAM,IAAIzxF,EAAQ23D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,GAAI+9D,EAAE/9D,KAAK,IAG/C83F,EAAKH,EAAI7pD,QAAQ0N,eAAenzC,KAAK2tC,KAAK6mB,EAAE78D,KAAK,GAAKw3F,IACtDO,EAAKH,EAAI9pD,QAAQ0N,eAAenzC,KAAK2tC,KAAK6mB,EAAE78D,KAAK,GAAKw3F,IACtDQ,EAAKH,EAAI/pD,QAAQ0N,eAAenzC,KAAK2tC,KAAK6mB,EAAE78D,KAAK,GAAKw3F,IAG5D/0F,KAAKw1F,KAAOP,EAAG5pD,QAAQgc,IAAIguC,GAC3Br1F,KAAKy1F,KAAOR,EAAG5pD,QAAQtgC,IAAIsqF,GAC3Br1F,KAAK01F,KAAOT,EAAG5pD,QAAQgc,IAAIiuC,GAC3Bt1F,KAAK21F,KAAOV,EAAG5pD,QAAQtgC,IAAIuqF,GAC3Bt1F,KAAK41F,KAAOX,EAAG5pD,QAAQgc,IAAIkuC,GAC3Bv1F,KAAK61F,KAAOZ,EAAG5pD,QAAQtgC,IAAIwqF,GAI3Bv1F,KAAKu2B,OAAS0+D,EAEdj1F,KAAK81F,KAAOT,EACZr1F,KAAK+1F,KAAOT,EACZt1F,KAAKg2F,KAAOT,EAEZv1F,KAAKi2F,SAAWf,EAChBl1F,KAAKk2F,SAAWf,EAChBn1F,KAAKm2F,SAAWf,gBAUlBgB,wBAAgBz/D,kBAAiB,IAAI9yB,GACnChJ,IAAM2jD,EAAQ7nB,EAOd,OALA6nB,EAAM63C,UAAUr2F,KAAKk2F,SAAUl2F,KAAKi2F,SAAUj2F,KAAKm2F,UAC/C33C,EAAM83C,cAAgB,GACxB93C,EAAM7xC,MAAMkoF,IAGPr2C,gBAQT+3C,+BAAuB5/D,kBAAiB,IAAI3yB,GAC1CnJ,IAAMkJ,EAAI4yB,EAGV,OAFA5yB,EAAEy2C,sBAAsBx6C,KAAKo2F,eAAex2D,KAErC77B,EAAEyyF,wBASXC,mCAA2B3oF,GACzB1R,IAAIs6F,GAAOhuF,EAAAA,EACPiuF,GAAOjuF,EAAAA,EACPkuF,GAAOluF,EAAAA,EACPmuF,GAAOnuF,EAAAA,EACPouF,GAAOpuF,EAAAA,EACPquF,GAAOruF,EAAAA,EAELwF,EAAI,IAAIvK,EACRuI,EAAI,IAAIvI,EAER4yB,EAASv2B,KAAKu2B,OACdygE,EAAMh3F,KAAKi2F,SACXgB,EAAMj3F,KAAKk2F,SACXgB,EAAMl3F,KAAKm2F,SA+BjB,OA7BAroF,EAAUgb,UAAS,SAAUoB,GAC3Bi9B,GAAqBj5C,EAAEwsB,KAAKxQ,GAAY8sE,EAAKzgE,GAC7C17B,IAAMs8F,EAAMjrF,EAAEw0D,WAAWxyD,EAAGqoB,GAAQ/pB,YAAY4qF,IAAIJ,GAC9CK,EAAMnpF,EAAEgpC,WAAW3gB,GACrB4gE,EAAM,EACJE,EAAMX,IAAKA,EAAMW,GAEjBA,EAAMV,IAAKA,EAAMU,GAGvBlwC,GAAqBj5C,EAAEwsB,KAAKxQ,GAAY+sE,EAAK1gE,GAC7C17B,IAAMy8F,EAAMprF,EAAEw0D,WAAWxyD,EAAGqoB,GAAQ/pB,YAAY4qF,IAAIH,GAC9CM,EAAMrpF,EAAEgpC,WAAW3gB,GACrB+gE,EAAM,EACJC,EAAMX,IAAKA,EAAMW,GAEjBA,EAAMV,IAAKA,EAAMU,GAGvBpwC,GAAqBj5C,EAAEwsB,KAAKxQ,GAAYgtE,EAAK3gE,GAC7C17B,IAAM28F,EAAMtrF,EAAEw0D,WAAWxyD,EAAGqoB,GAAQ/pB,YAAY4qF,IAAIF,GAC9CO,EAAMvpF,EAAEgpC,WAAW3gB,GACrBihE,EAAM,EACJC,EAAMX,IAAKA,EAAMW,GAEjBA,EAAMV,IAAKA,EAAMU,MAIlB,CACLf,IAAKA,EACLE,IAAKA,EACLE,IAAKA,EACLH,KAAMA,EACNE,KAAMA,EACNE,KAAMA,IC9KZ,IAAMW,GAkBJ,SAAa96C,EAAgB+6C,EAAmBC,EAAmBC,GACjE73F,KAAK48C,OAASA,EACd58C,KAAK83F,UAAUH,EAAUC,EAAUC,0QAGrC5sF,GAAIm8E,sBAAY,OAAOpnF,KAAK48C,OAAOwqC,QACnCn8E,GAAI+uB,sBAAqB,OAAOh6B,KAAK48C,OAAO5iB,QAC5C/uB,GAAIi5E,4BAA2B,OAAOlkF,KAAK48C,OAAOsnC,cAClDj5E,GAAI+5E,6BAA4B,OAAOhlF,KAAK48C,OAAOooC,eACnD/5E,GAAIsrB,sBAAqB,OAAOv2B,KAAK48C,OAAOrmB,QAC5CtrB,GAAIw+B,2BAAuB,OAAOzpC,KAAK48C,OAAOnT,aAC9Cx+B,GAAIjK,mBAAS,OAAOhB,KAAK48C,OAAO57C,KAChCiK,GAAIhK,mBAAS,OAAOjB,KAAK48C,OAAO37C,KAChCgK,GAAIswE,oBAAU,OAAOv7E,KAAK48C,OAAO2+B,MACjCtwE,GAAI46E,mBAAS,OAAO7lF,KAAK48C,OAAOipC,kBAEhCkS,wBAAgBJ,EAAkBC,EAAkBC,GAClD,OAAOtxD,KAAKC,UAAU,CAAEmxD,EAAUC,EAAUC,kBAG9CC,mBAAWH,EAA4BC,EAA4BC,GAC7D1xF,MAAcwxF,IAAa33F,KAAKonF,SAClCuQ,EAAW33F,KAAKonF,OAAO4Q,MAAQ,EAAMh4F,KAAKonF,OAAO6Q,MAGnDN,OAAyBp8F,IAAbo8F,GAA2BxxF,MAAMwxF,IAAyBjvF,EAAAA,EAAZivF,EAC1DC,EAAWx8F,GAASw8F,EAAUlvF,EAAAA,GAC9BmvF,EAAUz8F,GAASy8F,GAAS,GAE5Bh9F,IAAM0C,EAAOyC,KAAK48C,OAAOr/C,KACnB0K,EAAWjI,KAAK48C,OAAO30C,SACvBkJ,EAAYnR,KAAK48C,OAAOzrC,UAExB+mF,EAAal4F,KAAK+3F,eAAeJ,EAAUC,EAAUC,GAE3D,GAAIK,IAAel4F,KAAKm4F,YAAxB,CAGO,GAAIR,KAAcjvF,EAAAA,GAAYkvF,IAAalvF,EAAAA,EAChD1I,KAAKzC,KAAOA,EACZyC,KAAKiI,SAAWA,EAChBjI,KAAKmR,UAAYA,MACZ,CACLtW,IAAMoO,EAAI1L,EAAKjB,OAEV0D,KAAKo4F,cAGRp4F,KAAKo4F,YAAc,IAAI/0F,YAAgB,EAAJ4F,GACnCjJ,KAAKq4F,gBAAkB,IAAIh1F,YAAgB,EAAJ4F,EAAQ,GAC3CkI,IAAWnR,KAAKs4F,iBAAmB,IAAIj1F,YAAgB,EAAJ4F,KAGzDpO,IAEI09F,EAFEC,EAAe,IAAI11F,aAAa9C,KAAKo4F,aACrCK,EAAmB,IAAI31F,aAAa9C,KAAKq4F,iBAE3ClnF,IAAWonF,EAAoB,IAAI11F,YAAY7C,KAAKs4F,mBAIxD,IAFAl8F,IAAIqJ,EAAI,EAECpJ,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAMmvD,EAAS,EAAJ3tD,EACLqH,EAAInG,EAAMlB,GAEhB,IAAMw7F,GAAWn0F,GAAKi0F,GAAYj0F,GAAKk0F,GAClCC,IAAYn0F,EAAIi0F,GAAYj0F,EAAIk0F,GACnC,CACA/8F,IAAMovD,EAAS,EAAJxkD,EAEX+yF,EAAc/yF,GAAM/B,EAEpB+0F,EAAkBxuC,EAAK,GAAMhiD,EAAU+hD,EAAK,GAC5CyuC,EAAkBxuC,EAAK,GAAMhiD,EAAU+hD,EAAK,GAC5CyuC,EAAkBxuC,EAAK,GAAMhiD,EAAU+hD,EAAK,GAExC74C,GAAaonF,IAAmBA,EAAmB9yF,GAAM0L,EAAW9U,IAExEoJ,GAAK,GAMTzF,KAAKzC,KAAO,IAAIuF,aAAa9C,KAAKo4F,YAAa,EAAG3yF,GAClDzF,KAAKiI,SAAW,IAAInF,aAAa9C,KAAKq4F,gBAAiB,EAAO,EAAJ5yF,GACtD0L,IAAWnR,KAAKmR,UAAY,IAAIzO,WAAW1C,KAAKs4F,iBAAkB,EAAG7yF,IAG3EzF,KAAKm4F,YAAcD,6CAIvBR,GAAe9yF,UAAU0hF,iBAAmBxB,GAAOlgF,UAAU0hF,iBAC7DoR,GAAe9yF,UAAU8hF,iBAAmB5B,GAAOlgF,UAAU8hF,iBAE7DgR,GAAe9yF,UAAU+hF,iBAAmB7B,GAAOlgF,UAAU+hF,iBAC7D+Q,GAAe9yF,UAAUgiF,gBAAkB9B,GAAOlgF,UAAUgiF,gBAC5D8Q,GAAe9yF,UAAUiiF,aAAe/B,GAAOlgF,UAAUiiF,aACzD6Q,GAAe9yF,UAAUkiF,eAAiBhC,GAAOlgF,UAAUkiF,eAC3D4Q,GAAe9yF,UAAUmiF,YAAcjC,GAAOlgF,UAAUmiF,YCtHxD,IAAM2R,GAKJ,SAAa/oB,EAAsB7lD,GACjCjvB,IAAM89F,EAAKjnC,GAAoB,CAC7BM,WAAY2d,EAAU7gE,WACtBmjD,WAAY0d,EAAU5gE,WACtBgjD,UAAW4d,EAAUnnE,MACrBqpD,UAAW/nC,IAGb9pB,KAAK4xD,WAAa+mC,EAAG/mC,WACrB5xD,KAAK8xD,YAAc6mC,EAAG7mC,YACtB9xD,KAAKmyD,WAAawmC,EAAGxmC,YCZJymC,2LAKnB3tF,EAAIykD,8BACF,MAAO,CACL,CAAE,aAAc,EAAG,SACnB,CAAE,aAAc,EAAG,SACnB,CAAE,YAAa,EAAG,sBAItBmpC,iBAAS59C,EAAkBE,EAAkB3wB,GAC3CxqB,KAAK+vD,aAELl1D,IAAMwB,EAAI2D,KAAKwI,MACTswF,EAAM79C,EAAMt5C,MACZo3F,EAAM59C,EAAMx5C,MAEdm3F,EAAMC,GACR/4F,KAAK8O,WAAYzS,GAAMy8F,EACvB94F,KAAK+O,WAAY1S,GAAM08F,IAEvB/4F,KAAK+O,WAAY1S,GAAMy8F,EACvB94F,KAAK8O,WAAYzS,GAAM08F,GAErBvuE,IAAWxqB,KAAKwqB,UAAWnuB,GAAMmuB,GAErCxqB,KAAKwI,OAAS,eAGhBwwF,4BAAoB/9C,EAAkBE,EAAkB3wB,GACtD,QAAIywB,EAAMovB,YAAYlvB,KACpBn7C,KAAK64F,QAAQ59C,EAAOE,EAAO3wB,IACpB,8CAnC0BglC,ICDlBypC,2LAenBhuF,EAAIykD,8BACF,MAAO,CACL,CAAE,eAAgB,EAAG,UACrB,CAAE,aAAc,EAAG,UAEnB,CAAE,IAAK,EAAG,WACV,CAAE,IAAK,EAAG,WACV,CAAE,IAAK,EAAG,WACV,CAAE,SAAU,EAAG,SACf,CAAE,UAAW,EAAG,WAChB,CAAE,SAAU,EAAG,SACf,CAAE,YAAa,EAAG,yBAItBwpC,mBAAW78F,EAAW2C,GACpBgB,KAAKkR,OAAQ7U,GAAM2C,EAAI0G,WAAW,gBAGpCyzF,mBAAW98F,GACTxB,IAAMu+F,EAAOp5F,KAAKkR,OAAQ7U,GAC1B,OAAO+8F,EAAOn3F,OAAOC,aAAak3F,GAAQ,8CApCP5pC,ICAlB6pC,2LAUnBpuF,EAAIykD,8BACF,MAAO,CACL,CAAE,aAAc,EAAG,UACnB,CAAE,aAAc,EAAG,UACnB,CAAE,YAAa,EAAG,UAClB,CAAE,gBAAiB,EAAG,UAEtB,CAAE,QAAS,EAAG,SACd,CAAE,SAAU,EAAG,SACf,CAAE,UAAW,EAAG,uBAIpB4pC,mBAAWj9F,EAAW2C,GACpBgB,KAAKuR,OAAQlV,GAAM2C,EAAI0G,WAAW,gBAGpC6zF,mBAAWl9F,GACTxB,IAAMu+F,EAAOp5F,KAAKuR,OAAQlV,GAC1B,OAAO+8F,EAAOn3F,OAAOC,aAAak3F,GAAQ,gBAG5CI,oBAAYn9F,EAAW2C,GACrBgB,KAAKqR,QAAShV,GAAM2C,EAAI0G,WAAW,gBAGrC+zF,oBAAYp9F,GACVxB,IAAMu+F,EAAOp5F,KAAKqR,QAAShV,GAC3B,OAAO+8F,EAAOn3F,OAAOC,aAAak3F,GAAQ,8CAtCJ5pC,ICArBkqC,2LASnBzuF,EAAIykD,8BACF,MAAO,CACL,CAAE,cAAe,EAAG,UACpB,CAAE,aAAc,EAAG,UACnB,CAAE,gBAAiB,EAAG,UACtB,CAAE,eAAgB,EAAG,UAErB,CAAE,YAAa,EAAG,SAClB,CAAE,UAAW,EAAG,uBAIpBiqC,sBAAct9F,EAAW2C,GACvBnE,IAAM4K,EAAI,EAAIpJ,EACd2D,KAAKyR,UAAWhM,GAAMzG,EAAI0G,WAAW,GACrC1F,KAAKyR,UAAWhM,EAAI,GAAMzG,EAAI0G,WAAW,GACzC1F,KAAKyR,UAAWhM,EAAI,GAAMzG,EAAI0G,WAAW,GACzC1F,KAAKyR,UAAWhM,EAAI,GAAMzG,EAAI0G,WAAW,gBAG3Ck0F,sBAAcv9F,GAEZ,IADAD,IAAIqV,EAAY,GACP3V,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1BjB,IAAMu+F,EAAOp5F,KAAKyR,UAAW,EAAIpV,EAAIP,GACrC,IAAIs9F,EAGF,MAFA3nF,GAAaxP,OAAOC,aAAak3F,GAKrC,OAAO3nF,eAGTooF,oBAAYx9F,EAAW2C,GACrBnE,IAAM4K,EAAI,EAAIpJ,EACd2D,KAAK85F,QAASr0F,GAAMzG,EAAI0G,WAAW,GACnC1F,KAAK85F,QAASr0F,EAAI,GAAMzG,EAAI0G,WAAW,GACvC1F,KAAK85F,QAASr0F,EAAI,GAAMzG,EAAI0G,WAAW,GACvC1F,KAAK85F,QAASr0F,EAAI,GAAMzG,EAAI0G,WAAW,gBAGzCq0F,oBAAY19F,GAEV,IADAD,IAAI09F,EAAU,GACLh+F,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1BjB,IAAMu+F,EAAOp5F,KAAK85F,QAAS,EAAIz9F,EAAIP,GACnC,IAAIs9F,EAGF,MAFAU,GAAW73F,OAAOC,aAAak3F,GAKnC,OAAOU,6CA5D6BtqC,ICAnBwqC,2LAInB/uF,EAAIykD,8BACF,MAAO,CACL,CAAE,cAAe,EAAG,UACpB,CAAE,aAAc,EAAG,sDAPeF,ICsBlCyqC,GAGJ,SAAsBC,GAAAl6F,aAAAk6F,EACpBl6F,KAAKy4B,KAAOyhE,EAAQC,2BAGtBC,2BAAmBnW,kBAAS,GAC1BppF,IAAM07B,EAASv2B,KAAK+6C,cAAcxkB,OAC5BkC,EAAOlC,EAAOj6B,OAAS,EAEzBD,EAAI,EACJoJ,GAAK,EAEH40F,EAAQ,CACZ,IAAI12F,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,GAoCN,MAAO,MAAE80B,OAjCT,WACE59B,IAAM40B,EAASzvB,KAAKsK,IAAI7E,GAExB,OADAA,GAAK,EACEgqB,OAGT,SAAcxM,GACZA,EAAMrd,KAAK5E,IAAIy3B,EAAO,EAAG7yB,KAAK3E,IAAI,EAAGgiB,IACrCpoB,IAAM6I,EAAI22F,EAAOh+F,EAAI,GACfi+F,EAAO,EAAIr3E,EAEjB,GADAvf,EAAEF,UAAU+yB,EAAe+jE,GACvBrW,EAAQ,CAEV,IADAppF,IAAMo6B,EAAIrvB,KAAK5E,IAAIijF,EAAQhhE,EAAKwV,EAAOxV,EAAM,GACpCnnB,EAAI,EAAGA,GAAKm5B,IAAKn5B,EAAG,CAC3BjB,IAAMgtD,EAAQ,EAAJ/rD,EACJoQ,GAAK+oB,EAAI,EAAIn5B,IAAMm5B,EAAI,GAC7BvxB,EAAEoC,GAAKoG,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAAM37C,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAC3DnkD,EAAEqC,GAAKmG,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAAM37C,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAC3DnkD,EAAE0lB,GAAKld,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAAM37C,EAAIqqB,EAAQ+jE,EAAOzyC,EAAI,GAE7DnkD,EAAEoC,GAAKmvB,EAAI,EACXvxB,EAAEqC,GAAKkvB,EAAI,EACXvxB,EAAE0lB,GAAK6L,EAAI,EAGb,OADA54B,GAAK,EACEqH,SAGT,WACErH,EAAI,EACJoJ,GAAK,kBAMT2+E,kBAAU3oF,GACRZ,IAAMq/F,EAAUl6F,KAAKk6F,QACfpsF,EAAYosF,EAAQpsF,UACpB7E,EAAIixF,EAAQC,aACZI,EAAoBL,EAAQK,kBAE5B7vC,EAAM,IAAI5nD,aAAiB,EAAJmG,GAEvBiF,EAAIzS,GAAU,GACpByS,EAAEJ,UAAYA,EAOd,IALAjT,IAAMwpF,EAAa9rE,GAAmBI,UAAUzK,GAE1CssF,EAAK1sF,EAAU2sF,kBACfvwE,EAAKpc,EAAUE,eAEZ3R,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBm+F,EAAG74F,MAAQ44F,EAAoBl+F,EAC/B6tB,EAAGvoB,MAAQ64F,EAAGE,eAEdrW,EAAW51E,iBAAiByb,EAAIwgC,EAAS,EAAJruD,GAGvC,MAAO,CACLkS,MAASm8C,iBAIb65B,sBASE,IARA1pF,IAAMq/F,EAAUl6F,KAAKk6F,QACfpsF,EAAYosF,EAAQpsF,UACpB7E,EAAIixF,EAAQC,aACZI,EAAoBL,EAAQK,kBAE5BlsD,EAAO,IAAIvrC,aAAamG,GACxBuxF,EAAK1sF,EAAU2sF,kBAEZp+F,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBm+F,EAAG74F,MAAQ44F,EAAoBl+F,EAC/BgyC,EAAMhyC,GAAMm+F,EAAGE,eAGjB,MAAO,CACLvuD,QAAW,IAAImjC,GAAWjhC,EAAMvgC,kBAIpC89B,iBAASnwC,GAYP,IAXAZ,IAAMq/F,EAAUl6F,KAAKk6F,QACfpsF,EAAYosF,EAAQpsF,UACpB7E,EAAIixF,EAAQC,aACZI,EAAoBL,EAAQK,kBAE5B9hE,EAAO,IAAI31B,aAAamG,GACxB0xF,EAAgB,IAAIhG,GAAcl5F,GAElC++F,EAAK1sF,EAAU2sF,kBACfvwE,EAAKpc,EAAUE,eAEZ3R,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBm+F,EAAG74F,MAAQ44F,EAAoBl+F,EAC/B6tB,EAAGvoB,MAAQ64F,EAAGE,eACdjiE,EAAMp8B,GAAMs+F,EAAc/F,WAAW1qE,GAGvC,MAAO,MAAEuO,iBAGXsiB,uBAqCE,IApCAlgD,IAAMq/F,EAAUl6F,KAAKk6F,QACfpsF,EAAYosF,EAAQpsF,UACpB7E,EAAIixF,EAAQC,aACZpF,EAAK9rF,EAAI,EAETstB,EAAS,IAAIzzB,aAAa,EAAImG,GAC9Bo1C,EAAO,IAAIv7C,aAAa,EAAImG,GAC5B2xF,EAAO,IAAI93F,aAAamG,GACxByyC,EAAS,IAAI54C,aAAamG,GAC1B4xF,EAAO,IAAI/3F,aAAamG,GACxB6xF,EAAQ,IAAIh4F,aAAamG,GACzB8xF,EAAS,IAAIj4F,aAAa,EAAImG,GAE9B+xF,EAAM,IAAIr3F,EACVs3F,EAAM,IAAIt3F,EACVu3F,EAAM,IAAIv3F,EAEVw3F,EAAS,IAAIx3F,EACby3F,EAAS,IAAIz3F,EAEb0I,EAAK,IAAI1I,EACTu3C,EAAK,IAAIv3C,EACT03F,EAAK,IAAI13F,EAET23F,EAAQ,IAAI33F,EACZ43F,EAAY,IAAI53F,EAEhB63F,EAAU,IAAI73F,EACd83F,EAAU,IAAI93F,EAAQ,EAAG,EAAG,GAE5BqB,EAAO,QACP02F,EAAK5tF,EAAUE,eACfm0D,EAAKr0D,EAAUE,aAAaksF,EAAQyB,mBAAmB,EAAG32F,IAC1D42F,EAAK9tF,EAAUE,aAAaksF,EAAQyB,mBAAmB,EAAG32F,IAC1D62F,EAAK/tF,EAAUE,aAAaksF,EAAQyB,mBAAmB,EAAG32F,IAEvD3I,EAAI,EAAGA,EAAI04F,IAAM14F,EAAG,CAC3Bq/F,EAAG/5F,MAAQwgE,EAAGxgE,MACdwgE,EAAGxgE,MAAQi6F,EAAGj6F,MACdi6F,EAAGj6F,MAAQk6F,EAAGl6F,MACdk6F,EAAGl6F,MAAQu4F,EAAQyB,mBAAmBt/F,EAAI,EAAG2I,GAE7CnK,IAAM4K,EAAI,EAAIpJ,EAId2+F,EAAIt6B,WAAWyB,EAAWu5B,GAC1BT,EAAIv6B,WAAWk7B,EAAWz5B,GAC1B+4B,EAAIx6B,WAAWm7B,EAAWD,GAE1BT,EAAOz6B,WAAWs6B,EAAKC,GACvBG,EAAO16B,WAAWu6B,EAAKC,GAEvBI,EAAM72B,aAAa02B,EAAQC,GAAQ5uF,YACnC8uF,EAAMlsE,QAAQivB,EAAa54C,GAEvBpJ,EAAI,IACNu+F,EAAMv+F,GAAMi/F,EAAM16B,QAAQ26B,IAG5B1gG,IAAMk2C,EAAMnrC,KAAKqwB,IAAIklE,EAAOv6B,QAAQw6B,IACpCN,EAAOz+F,GAAM,IAAQuJ,KAAK8vB,GAAK9vB,KAAKk2F,KAAK/qD,GAEzCl2C,IAAMkhG,EAAeZ,EAAO7+F,SACtB0/F,EAAeZ,EAAO9+F,SAE5Bo/C,EAAQr/C,GACNuJ,KAAK2tC,KAAKyoD,EAAeD,GAGzBn2F,KAAK3E,IAAI,EAAK,GAAO,EAAM8vC,IAG7B8pD,EAAMx+F,GAAMuJ,KAAKK,IAAIg1F,EAAI7D,IAAIkE,IAI7BjvF,EAAGquB,KAAKygE,GAAQpiD,eAAe2C,EAAQr/C,GAAM0/F,GAC7C7gD,EAAGxgB,KAAK0gE,GAAQriD,eAAe2C,EAAQr/C,GAAM2/F,GAE7C3vF,EAAGq0D,WAAWyB,EAAW91D,GACzB6uC,EAAGwlB,WAAWk7B,EAAW1gD,GAEzB7uC,EAAG+iB,QAAQmH,EAAe9wB,EAAI,GAC9By1C,EAAG9rB,QAAQmH,EAAe9wB,EAAI,GAI9B+1F,EAAQ96B,WAAWg7B,EAAWD,GAC9BD,EAAQpsE,QAAQ2rE,EAAet1F,GAE/B81F,EAAU7gE,KAAK4gE,GACfG,EAAQ/gE,KAAKruB,GAOfA,EAAG7I,UAAU+yB,EAAe,GAC5B2kB,EAAG13C,UAAU+yB,EAAe,GAC5B+kE,EAAM56B,WAAWr0D,EAAI6uC,GAAI1uC,YAEzBkvF,EAAG/5F,MAAQu4F,EAAQyB,mBAAmB,EAAG32F,GACzCy2F,EAAQ/gE,KAAKghE,GACbL,EAAG3gE,KAAKghE,GACRv0C,GAAqBk0C,EAAIC,EAAOjvF,GAChCgvF,EAAGjsE,QAAQmH,EAAe,GAG1BilE,EAAQ96B,WAAW+6B,EAASpvF,GAC5BmvF,EAAQpsE,QAAQ2rE,EAAe,GAI/B1uF,EAAG7I,UAAU+yB,EAAe,EAAIttB,EAAI,GACpCiyC,EAAG13C,UAAU+yB,EAAe,EAAIttB,EAAI,GACpCqyF,EAAM56B,WAAWr0D,EAAI6uC,GAAI1uC,YAEzBkvF,EAAG/5F,MAAQu4F,EAAQyB,mBAAmB1yF,EAAI,EAAGjE,GAC7Cy2F,EAAQ/gE,KAAKghE,GACbL,EAAG3gE,KAAKghE,GACRv0C,GAAqBk0C,EAAIC,EAAOjvF,GAChCgvF,EAAGjsE,QAAQmH,EAAe,EAAIttB,EAAI,GAGlC,IAAK7M,IAAIC,EAAI4M,EAAI,EAAG5M,EAAI4M,IAAK5M,EAC3BgQ,EAAG7I,UAAU+yB,EAAe,EAAIl6B,GAEhCq/F,EAAG/5F,MAAQu4F,EAAQyB,mBAAmBt/F,EAAG2I,GACzCy2F,EAAQ/gE,KAAKghE,GAEbF,EAAQ96B,WAAW+6B,EAASpvF,GAC5BmvF,EAAQpsE,QAAQ2rE,EAAe,EAAI1+F,GAKrCxB,IAAMohG,EAAY,IAAIn5F,aAAamG,GAC7BizF,EAAW,IAAIp5F,aAAamG,GAC5BkzF,EAAU,IAAIr5F,aAAamG,GAC3BmzF,EAAa,IAAIt5F,aAAamG,GAEpCgzF,EAAW,GAAMvgD,EAAQ,GACzBwgD,EAAU,GAAMpB,EAAO,GACvBqB,EAAS,GAAMzgD,EAAQ,GAEvB,IAAKt/C,IAAIC,EAAI,EAAGA,EAAI4M,EAAI,IAAK5M,EAC3B4/F,EAAW5/F,GAAM,IAAOq/C,EAAQr/C,EAAI,GAAMq/C,EAAQr/C,EAAI,IACtD6/F,EAAU7/F,GAAM,IAAOy+F,EAAOz+F,EAAI,GAAMy+F,EAAOz+F,EAAI,IACnD8/F,EAAS9/F,GAAM,IAAOw+F,EAAMx+F,EAAI,GAAMw+F,EAAMx+F,EAAI,IAEhDgQ,EAAG7I,UAAU66C,EAAa,GAAKhiD,EAAI,IACnC6+C,EAAG13C,UAAU66C,EAAa,GAAKhiD,EAAI,IACnC+/F,EAAY//F,GAAM,IAAQuJ,KAAK8vB,GAAK9vB,KAAKk2F,KAAKl2F,KAAKqwB,IAAI5pB,EAAGu0D,QAAQ1lB,KAGpE+gD,EAAWhzF,EAAI,GAAMyyC,EAAQzyC,EAAI,GACjCizF,EAAUjzF,EAAI,GAAM6xF,EAAO7xF,EAAI,GAC/BkzF,EAASlzF,EAAI,GAAM4xF,EAAM5xF,EAAI,GAI7BpO,IAAMwhG,EAAU,IAAIv5F,aAAa,EAAImG,GAErCguB,GAAUonB,EAAMg+C,EAAS,EAAG,EAAG,GAC/BplE,GAAUonB,EAAMg+C,EAAS,EAAG,EAAG,GAE/B,IAAKjgG,IAAIC,EAAI,EAAGA,EAAI4M,EAAI,IAAK5M,EAC3BgQ,EAAG7I,UAAU66C,EAAa,GAAKhiD,EAAI,IACnC6+C,EAAG13C,UAAU66C,EAAa,GAAKhiD,EAAI,IAEnCi/F,EAAMvrE,WAAWmrB,EAAI7uC,GAAI0sC,eAAe,IAAKvsC,YAC7C8uF,EAAMlsE,QAAQitE,EAAgB,EAAIhgG,GAMpC,OAHA46B,GAAUonB,EAAMg+C,EAAS,EAAIpzF,EAAI,GAAI,EAAIA,EAAI,EAAG,GAChDguB,GAAUonB,EAAMg+C,EAAS,EAAIpzF,EAAI,GAAI,EAAIA,EAAI,EAAG,GAEzC,QACLstB,EACA8nB,KAAMg+C,EACNC,QAASF,EACT1gD,OAAQugD,EACRpB,KAAMsB,EACNrB,MAAOoB,EACPnB,OAAQA,IC7Td,IAAMwB,GAIJ,SAAsBrC,GAAAl6F,aAAAk6F,EAEpBl6F,KAAKw8F,YAAc,IAAIvC,GAAYC,GACnCl6F,KAAKiI,SAAWjI,KAAKw8F,YAAYzhD,4BAGnC0hD,iBAASC,EAAoBC,EAAoBC,EAAmBC,EAAuDC,GACzHJ,EAAaA,GAAc,GAC3BC,EAAaA,GAAc,IAC3BC,OAAwBrhG,IAAbqhG,GAAiCA,EAE5C/hG,IAAMq/F,EAAUl6F,KAAKk6F,QACfpsF,EAAYosF,EAAQpsF,UACpB7E,EAAIixF,EAAQC,aACZI,EAAoBL,EAAQK,kBAE5BryF,EAAMlI,KAAKiI,SAEXmtC,EAAKynD,GAAe,GAC1BznD,EAAGtnC,UAAYA,EAmCf,IAjCAjT,IAoBIygG,EAAOG,EApBLpX,EAAa9rE,GAAmBI,UAAUy8B,GAE1CulD,EAAgB,IAAIhG,GAAcmI,GAEpCr3F,EAAI,EACJ3J,EAAI,EAEFuiD,EAAiB,GACjB9nB,EAAmB,GACnBwmE,EAAgB,GAChBx6E,EAAgB,GAChBmoC,EAAgB,GAChBrc,EAAO,GACP5V,EAAO,GACPukE,EAAgB,GAChB7C,EAAe,GAEjB8C,EAAU,IAAIn6F,aAAiB,EAAJmG,GAC3Bi0F,EAAY,IAAIp6F,aAAiB,EAAJmG,GAG3Bk0F,EAAO,IAAIx5F,EACXy5F,EAAO,IAAIz5F,EAEX05F,EAAMvvF,EAAU2sF,kBAChB6C,EAAMxvF,EAAU2sF,kBAChBvwE,EAAKpc,EAAUE,eAEf+9D,EAAK,IAAIpoE,EACTqoE,EAAK,IAAIroE,EAEXa,GAAQ,EAEHnI,EAAI,EAAGA,EAAI4M,IAAK5M,EAmBvB,GAlBAghG,EAAI17F,MAAQ44F,EAAoBl+F,EAChC0vE,EAAGvoE,UAAU0E,EAAIquB,OAAmB,EAAJl6B,GAE5BA,IAAM4M,EAAI,EACZzE,GAAQ,GAER84F,EAAI37F,MAAQ44F,EAAoBl+F,EAAI,EACpC2vE,EAAGxoE,UAAU0E,EAAIquB,OAAmB,EAAJl6B,EAAQ,IAEpCugG,GAAYS,EAAI9rF,SAAW+rF,EAAI/rF,QAExBw6D,EAAG70B,WAAW80B,GAAM2wB,GAEpBz0F,EAAIo0F,QAASjgG,GAAMqgG,KAH5Bl4F,GAAQ,IAQRA,EAAO,CACT,GAAInI,EAAIoJ,EAAI,EAAG,CACbA,EAAIpJ,EACJmI,GAAQ,EACR,SAGF0lB,EAAGvoB,MAAQ07F,EAAI3C,eAGfuC,EAAU/0F,EAAIm2C,KAAKl8C,SAAa,EAAJsD,EAAQ,EAAO,EAAJpJ,GACvC6gG,EAAYh1F,EAAIquB,OAAOp0B,SAAa,EAAJsD,EAAW,EAAJpJ,EAAQ,GAE/Ci/F,EAAQp0C,GAAqB+1C,GAASzwF,YACtCivF,EAAUv0C,GAAqBg2C,GAE/BC,EAAK35F,UAAU05F,GACf/1C,GAAqBg2C,EAAM7B,EAAOG,GAElC2B,EAAK55F,UAAU05F,EAAkBA,EAAU5gG,OAAS,GACpD6qD,GAAqBi2C,EAAM9B,EAAOG,GAElCH,EAAM56B,WAAW08B,EAAMD,GAEvB7B,EAAMlsE,QAAQivB,EAAaviD,GAC3B2/F,EAAQrsE,QAAQmH,EAAez6B,GAC/BqhG,EAAK/tE,QAAQ2tE,EAAYjhG,GACzBshG,EAAKhuE,QAAQ7M,EAAYzmB,GAEzBuoF,EAAW51E,iBAAiByb,EAAIwgC,EAAK5uD,GAErCuyC,EAAK5xC,KAAKytB,EAAGvoB,OAEb82B,EAAKh8B,KAAKk+F,EAAc/F,WAAW1qE,IAEnC8yE,EAAcvgG,KAAK89F,EAAoB90F,GACvC00F,EAAa19F,KAAK89F,EAAoBl+F,EAAI,EAAIoJ,GAE9C3J,GAAK,EACL2J,EAAIpJ,EACJmI,GAAQ,EAIZ3J,IAAMsxC,EAAU,IAAIrpC,aAAaurC,GAEjC,MAAO,CACLgQ,KAAM,IAAIv7C,aAAau7C,GACvB9nB,OAAQ,IAAIzzB,aAAayzB,GACzBvF,MAAO,IAAIluB,aAAai6F,GACxBx6E,IAAK,IAAIzf,aAAayf,GACtBhU,MAAO,IAAIzL,aAAa4nD,GACxBve,QAAS,IAAImjC,GAAWnjC,EAASr+B,GACjC2qB,KAAM,IAAI31B,aAAa21B,GACvBukE,cAAeA,EACf7C,aAAcA,ICpJpB,IAAMoD,GAGJ,SAAqBC,GAAAx9F,mBAAAw9F,EAFrBx9F,aAAe,GAIbA,KAAKw9F,cAAgBA,gBAGvB/gG,cAAMgE,GAEJT,KAAKozF,QAAQ32F,KAAKgE,GAGlBT,KAAKy9F,SAASz9F,KAAKozF,QAAQ92F,OAAS,iBAGtCoI,eAEE7J,IAAMsD,EAAS6B,KAAKozF,QAAS,GAGvB7wE,EAAMviB,KAAKozF,QAAQ1uF,MASzB,OALI6d,GAAOviB,KAAKozF,QAAQ92F,OAAS,IAC/B0D,KAAKozF,QAAS,GAAM7wE,EACpBviB,KAAK09F,SAAS,IAGTv/F,gBAGTw/F,gBACE,OAAO39F,KAAKozF,QAAS,iBAGvBxiE,gBAAQnwB,GAIN,IAHA5F,IAAMwK,EAAMrF,KAAKozF,QAAQ92F,OAGhBD,EAAI,EAAGA,EAAIgJ,EAAKhJ,IACvB,GAAI2D,KAAKozF,QAAS/2F,KAAQoE,EAAS,CAGjC5F,IAAM0nB,EAAMviB,KAAKozF,QAAQ1uF,MAYzB,YAVI6d,GAAOlmB,IAAMgJ,EAAM,IACrBrF,KAAKozF,QAAS/2F,GAAMkmB,EAEhBviB,KAAKw9F,cAAcj7E,GAAOviB,KAAKw9F,cAAc/8F,GAC/CT,KAAKy9F,SAASphG,GAEd2D,KAAK09F,SAASrhG,KAQtB,MAAM,IAAI0G,MAAM,iCAGlB01B,gBACE,OAAOz4B,KAAKozF,QAAQ92F,qBAGtBmhG,kBAAUx0F,GAKR,IAHApO,IAAM4F,EAAUT,KAAKozF,QAASnqF,GAGvBA,EAAI,GAAG,CAEZpO,IAAM+iG,EAAUh4F,KAAKY,OAAOyC,EAAI,GAAK,GAAK,EACpC40F,EAAS79F,KAAKozF,QAASwK,GAG7B,KAAI59F,KAAKw9F,cAAc/8F,GAAWT,KAAKw9F,cAAcK,IAQnD,MAPA79F,KAAKozF,QAASwK,GAAYn9F,EAC1BT,KAAKozF,QAASnqF,GAAM40F,EAGpB50F,EAAI20F,iBAQVF,kBAAUz0F,GASR,IAPApO,IAAMyB,EAAS0D,KAAKozF,QAAQ92F,OACtBmE,EAAUT,KAAKozF,QAASnqF,GACxB60F,EAAY99F,KAAKw9F,cAAc/8F,GAEjCs9F,EAAc,IAGL,CAEXljG,IAAMmjG,EAAoB,GAAT/0F,EAAI,GACfg1F,EAAUD,EAAU,EAGtB9sD,EAAO,KAGX,GAAI+sD,EAAU3hG,EAAQ,CAEpBzB,IAAMqjG,EAASl+F,KAAKozF,QAAS6K,IAC7BF,EAAc/9F,KAAKw9F,cAAcU,IAGfJ,IAAW5sD,EAAO+sD,GAItC,GAAID,EAAU1hG,EAAQ,CACpBzB,IAAMsjG,EAASn+F,KAAKozF,QAAS4K,GACfh+F,KAAKw9F,cAAcW,IAEL,OAATjtD,EAAgB4sD,EAAYC,KAAc7sD,EAAO8sD,GAItE,GAAa,OAAT9sD,EAMF,MALAlxC,KAAKozF,QAASnqF,GAAMjJ,KAAKozF,QAASliD,GAClClxC,KAAKozF,QAASliD,GAASzwC,EACvBwI,EAAIioC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GZ,IAAMktD,GAQJ,SAAqB98D,EAA8B+8D,GAA9Br+F,YAAAshC,EAA8BthC,YAAAq+F,EAHnDr+F,cAAW,EACXA,iBAAc,EAMZ,IAHAnF,IAAMoO,EAAIq4B,EAAOhlC,OAAS,EAEpBuzB,EAAU,IAAIhtB,YAAYoG,GACvB5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBwzB,EAASxzB,GAAMA,EAEjB2D,KAAK6vB,QAAUA,EACf7vB,KAAKs+F,MAAQ,IAAI57F,WAAe,EAAJuG,GAC5BjJ,KAAKu+F,UAAYv+F,KAAKw+F,UAAU,GAAI,EAAG,EAAGv1F,iBAG5Cu1F,mBAAWnK,EAAewJ,EAAgBY,EAAkBC,GACtDrK,EAAQr0F,KAAK2+F,WAAU3+F,KAAK2+F,SAAWtK,GAE3Cx5F,IAAM+jG,EAAUF,EAASD,EACzB,GAAgB,IAAZG,EACF,OAAQ,EAGV/jG,IAAMgkG,EAA+B,EAAnB7+F,KAAK8+F,YACjBR,EAAQt+F,KAAKs+F,MAGnB,GADAt+F,KAAK8+F,aAAe,EACJ,IAAZF,EAKF,OAJAN,EAAOO,GAAcJ,EACrBH,EAAOO,EAAY,IAAO,EAC1BP,EAAOO,EAAY,IAAO,EAC1BP,EAAOO,EAAY,GAAMhB,EAClBgB,EAgBT,IAVAhkG,IAOI4K,EAAGsrC,EAAKguD,EAAYC,EAAYC,EAP9BpvE,EAAU7vB,KAAK6vB,QACfyR,EAASthC,KAAKshC,OAEd49D,EAAYT,EAAW74F,KAAKY,MAAMo4F,EAAU,GAC5CO,EAAa9K,EAAQ,EAIvB7mD,EAAOixD,EACPhxD,EAAQixD,EAAS,EACdjxD,EAAQD,GAAM,CAQnB,IANAwxD,EAAa19D,EAAgC,EAAxBzR,EADrBkvE,EAAcvxD,EAAOC,GAAU,GACkB0xD,GAEjDpuD,EAAMlhB,EAASkvE,GACflvE,EAASkvE,GAAelvE,EAAS4d,GACjC5d,EAAS4d,GAAUsD,EACnBkuD,EAAazxD,EACR/nC,EAAI+nC,EAAM/nC,EAAIgoC,IAAShoC,EACtB67B,EAAuB,EAAfzR,EAASpqB,GAAU05F,GAAeH,IAE5CjuD,EAAMlhB,EAASovE,GACfpvE,EAASovE,GAAepvE,EAASpqB,GACjCoqB,EAASpqB,GAAMsrC,IACbkuD,GAQN,GAJAluD,EAAMlhB,EAAS4d,GACf5d,EAAS4d,GAAU5d,EAASovE,GAC5BpvE,EAASovE,GAAeluD,EAEpBmuD,KADJH,EAAaE,GAEX,MACSC,EAAYH,EACrBtxD,EAAQsxD,EAAa,EAErBvxD,EAAOuxD,EAAa,EASxB,OALAT,EAAOO,GAAcK,EACrBZ,EAAOO,EAAY,GAAM7+F,KAAKw+F,UAAUnK,EAAQ,EAAGwK,EAAWJ,EAAUS,GACxEZ,EAAOO,EAAY,GAAM7+F,KAAKw+F,UAAUnK,EAAQ,EAAGwK,EAAWK,EAAY,EAAGR,GAC7EJ,EAAOO,EAAY,GAAMhB,EAElBgB,gBAGTO,sBAAcP,GACZhkG,IAAMwkG,EAAcr/F,KAAKs+F,MAAOO,EAAY,GAC5C,OAAyB,IAAjBQ,EAAsB,EAAIr/F,KAAKo/F,aAAaC,GAAe,gBAarEC,iBAAShjD,EAAoBijD,EAAkBv7B,cACvCw7B,EAAY,IAAIjC,aAA6Bh2F,UAAMA,EAAG,MAEtD+2F,EAAQt+F,KAAKs+F,MACbh9D,EAASthC,KAAKshC,OACdzR,EAAU7vB,KAAK6vB,QAEf4vE,WAAiBZ,GACrBziG,IAAIsjG,EAAWC,EACTC,EAAY5/F,EAAKo/F,aAAaP,GAAa,EAC3CgB,EAA6C,EAAhChwE,EAASyuE,EAAOO,IAC7BiB,EAAW,CACfx+D,EAAQu+D,EAAa,GACrBv+D,EAAQu+D,EAAa,GACrBv+D,EAAQu+D,EAAa,IAEjBE,EAAc//F,EAAKq+F,OAAO/hD,EAAOwjD,GAEvC,SAASE,EAAUnB,EAAmB1iD,GACpCqjD,EAAU/iG,KAAK,CAAEoiG,EAAW1iD,IACxBqjD,EAAU/mE,OAAS8mE,GACrBC,EAAU96F,MAId7J,IAAMolG,EAAY3B,EAAOO,EAAY,GAC/BqB,EAAa5B,EAAOO,EAAY,GAGtC,IAAoB,IAAhBqB,IAAoC,IAAfD,EAAzB,CAUEP,GADkB,IAAhBQ,EACUD,GACY,IAAfA,EACGC,EAER5jD,EAAOsjD,IAAet+D,EAAQu+D,EAAaD,GACjCK,EAEAC,EAKhBT,EAAcC,IAETF,EAAU/mE,OAAS8mE,GAAYQ,EAAcP,EAAU7B,OAAQ,KAClEoC,GAAe/7B,GAEfg8B,EAASnB,EAAWkB,GAKtB,IADAllG,IAAMslG,EAAc,GACX9jG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAExB8jG,EAAa9jG,GADXA,IAAMujG,EACWtjD,EAAOjgD,GAEPilC,EAAQu+D,EAAaxjG,GAG5CxB,IAAMulG,EAAiBpgG,EAAKq+F,OAAO8B,EAAaL,IAE3CN,EAAU/mE,OAAS8mE,GAAY35F,KAAKK,IAAIm6F,GAAkBZ,EAAU7B,OAAQ,KAC/E/3F,KAAKK,IAAIm6F,IAAmBp8B,IAOR,KAJlB27B,EADED,IAAcO,EACHC,EAEAD,IAGbR,EAAcE,QAjDXH,EAAU/mE,OAAS8mE,GAAYQ,EAAcP,EAAU7B,OAAQ,KAClEoC,GAAe/7B,GAEfg8B,EAASnB,EAAWkB,IAmD1BN,EAAcz/F,KAAKu+F,WAGnB,IADA1jG,IAAMsD,EAAS,GACN9B,EAAI,EAAGk7B,EAAK3xB,KAAK5E,IAAIw+F,EAAU/mE,OAAQ8mE,GAAWljG,EAAIk7B,EAAIl7B,GAAK,EACtE8B,EAAO1B,KAAK+iG,EAAUpM,QAAS/2F,IAGjC,OAAO8B,gBAGTkiG,gBAAQxB,EAAoBxK,kBAAQ,GAClCj4F,IAAIoM,EAAQ,EAMZ,QAJkBjN,IAAdsjG,IACFA,EAAY7+F,KAAKu+F,YAGA,IAAfM,EACF,MAAM,IAAI97F,MAAM,gBAGlBlI,IAAMsoF,EAAMkR,EAAQ,EACdiK,EAAQt+F,KAAKs+F,MACbh9D,EAASthC,KAAKshC,OACdzR,EAAU7vB,KAAK6vB,QAEfowE,EAAY3B,EAAOO,EAAY,GAC/BqB,EAAa5B,EAAOO,EAAY,GAEtC,IAAmB,IAAfoB,EAAkB,CACpB,GAAI3+D,EAAwC,EAAhCzR,EAASyuE,EAAO2B,IAAoB9c,GAC9C7hD,EAAwC,EAAhCzR,EAASyuE,EAAOO,IAAoB1b,GAE5C,MAAM,IAAIpgF,MAAM,2BAElByF,GAASxI,KAAKqgG,OAAOJ,EAAW5L,EAAQ,GAG1C,IAAoB,IAAhB6L,EAAmB,CACrB,GAAI5+D,EAAyC,EAAjCzR,EAASyuE,EAAO4B,IAAqB/c,GAC/C7hD,EAAwC,EAAhCzR,EAASyuE,EAAOO,IAAoB1b,GAE5C,MAAM,IAAIpgF,MAAM,4BAElByF,GAASxI,KAAKqgG,OAAOH,EAAY7L,EAAQ,GAG3C,OAAO7rF,OC9OL83F,GAcJ,SAAsBxyF,EAAsBnM,kBAAQ,GAA9B3B,eAAA8N,EACpB9N,KAAK2B,MAAQA,EACb3B,KAAKugG,WAAazyF,EAAUyyF,WAC5BvgG,KAAKwgG,aAAe1yF,EAAU0yF,aAC9BxgG,KAAKmkE,UAAYr2D,EAAUq2D,UAC3BnkE,KAAKygG,WAAa3yF,EAAU2yF,WAC5BzgG,KAAK+oE,QAAUj7D,EAAUi7D,s5BCzC7B,SAAS23B,GAAgB/iG,EAAa0Z,GACpCxc,IAAMq4C,EAAKv1C,EAAE,GAAK0Z,EAAE,GACdg8B,EAAK11C,EAAE,GAAK0Z,EAAE,GACd+iC,EAAKz8C,EAAE,GAAK0Z,EAAE,GACpB,OAAO67B,EAAKA,EAAKG,EAAKA,EAAK+G,EAAKA,EAGlC,SAASumD,GAAchjG,EAAa0Z,GAClC,OAAOzR,KAAK2tC,KAAKmtD,GAAgB/iG,EAAG0Z,IDuCpCpM,GAAI21F,wBAAkC,OAAO5gG,KAAK8N,UAAU8yF,UAM5D31F,GAAI4I,sBACF,OAAO7T,KAAK8N,UAAU+yF,WAAY7gG,KAAK8gG,cAEzC71F,GAAI61F,2BACF,OAAO9gG,KAAKugG,WAAWO,YAAa9gG,KAAK+gG,aAE3C91F,GAAIuI,0BACF,OAAOxT,KAAKugG,WAAW/sF,WAAYxT,KAAK+gG,aAE1C91F,GAAI81F,0BACF,OAAO/gG,KAAKwgG,aAAaO,WAAY/gG,KAAKinE,eAK5Ch8D,GAAI+1F,uBAEF,OADA18F,QAAQkb,KAAK,gCACNxf,KAAK8N,UAAU2sF,gBAAgBz6F,KAAKinE,eAG7Ch8D,GAAIg8D,4BACF,OAAOjnE,KAAKmkE,UAAU8C,aAAcjnE,KAAK2B,QAE3CsJ,GAAIg8D,0BAAc5rE,GAChB2E,KAAKmkE,UAAU8C,aAAcjnE,KAAK2B,OAAUtG,GAS9C4P,GAAIsG,sBACF,OAAOvR,KAAKwgG,aAAajH,UAAUv5F,KAAKinE,eAM1Ch8D,GAAIoG,uBACF,OAAOrR,KAAKwgG,aAAa/G,WAAWz5F,KAAKinE,eAM3Ch8D,GAAIuG,qBACF,OAAOxR,KAAKwgG,aAAahvF,MAAOxR,KAAKinE,eAMvCh8D,GAAIwG,yBACF,OAAOzR,KAAKugG,WAAW3G,aAAa55F,KAAK+gG,aAM3C91F,GAAI6uF,uBACF,OAAO95F,KAAKugG,WAAWxG,WAAW/5F,KAAK+gG,aAQzC91F,GAAIu9D,2BACF,OAAOxoE,KAAKygG,WAAWn2F,IAAItK,KAAKwgG,aAAaS,cAAejhG,KAAKinE,gBAKnEh8D,GAAIi2F,wBACF,OAAOlhG,KAAK+oE,QAAQz+D,IAAItK,KAAKmkE,UAAU0E,WAAY7oE,KAAK2B,SAE1DsJ,GAAI29D,iCACF,OAAO5oE,KAAKwgG,aAAa9sF,WAAY1T,KAAKinE,eAQ5Ch8D,GAAIqG,uBACF,OAAOtR,KAAKwoE,YAAYl3D,SAK1BrG,GAAI+d,sBACF,OAAOhpB,KAAKwoE,YAAYx/C,QAQ1B/d,GAAIgG,wBACF,OAAOjR,KAAKkhG,SAASjwF,UAKvBhG,GAAI7B,sBACF,OAAOpJ,KAAKkhG,SAAS93F,QAKvB6B,GAAIxK,uBACF,OAAOT,KAAKkhG,SAASzgG,SAKvBwK,GAAIuhE,mBACF,OAAOxsE,KAAKkhG,SAAS10B,KAKvBvhE,GAAIwpF,wBACF,OAAOz0F,KAAKkhG,SAASzM,UAQvBxpF,GAAInF,iBACF,OAAO9F,KAAKmkE,UAAUr+D,EAAG9F,KAAK2B,QAEhCsJ,GAAInF,eAAGzK,GACL2E,KAAKmkE,UAAUr+D,EAAG9F,KAAK2B,OAAUtG,GAMnC4P,GAAIlF,iBACF,OAAO/F,KAAKmkE,UAAUp+D,EAAG/F,KAAK2B,QAEhCsJ,GAAIlF,eAAG1K,GACL2E,KAAKmkE,UAAUp+D,EAAG/F,KAAK2B,OAAUtG,GAMnC4P,GAAIme,iBACF,OAAOppB,KAAKmkE,UAAU/6C,EAAGppB,KAAK2B,QAEhCsJ,GAAIme,eAAG/tB,GACL2E,KAAKmkE,UAAU/6C,EAAGppB,KAAK2B,OAAUtG,GAMnC4P,GAAIge,sBACF,OAAOjpB,KAAKmkE,UAAUl7C,OAAQjpB,KAAK2B,QAErCsJ,GAAIge,oBAAQ5tB,GACV2E,KAAKmkE,UAAUl7C,OAAQjpB,KAAK2B,OAAUtG,GAMxC4P,GAAIqe,uBACF,OAAOtpB,KAAKmkE,UAAU76C,QAAStpB,KAAK2B,QAEtCsJ,GAAIqe,qBAASjuB,GACX2E,KAAKmkE,UAAU76C,QAAStpB,KAAK2B,OAAUtG,GAMzC4P,GAAIoe,yBACF,OAAOrpB,KAAKmkE,UAAU96C,UAAWrpB,KAAK2B,QAExCsJ,GAAIoe,uBAAWhuB,GACb2E,KAAKmkE,UAAU96C,UAAWrpB,KAAK2B,OAAUtG,GAM3C4P,GAAIiG,sBACF,OAAOlR,KAAKmkE,UAAUg1B,UAAUn5F,KAAK2B,QAEvCsJ,GAAIiG,oBAAQ7V,GACV2E,KAAKmkE,UAAU+0B,UAAUl5F,KAAK2B,MAAOtG,IAMvC4P,GAAIk2F,6BACF,OAAOnhG,KAAKmkE,UAAUg9B,cAAgBnhG,KAAKmkE,UAAUg9B,cAAenhG,KAAK2B,OAAU,MAErFsJ,GAAIk2F,2BAAe9lG,GACb2E,KAAKmkE,UAAUg9B,gBACjBnhG,KAAKmkE,UAAUg9B,cAAenhG,KAAK2B,OAAUtG,IAOjD4P,GAAIywC,sBACF,OAAO17C,KAAKmkE,UAAUzoB,OAAS17C,KAAKmkE,UAAUzoB,OAAQ17C,KAAK2B,OAAU,MAEvEsJ,GAAIywC,oBAAQrgD,GACN2E,KAAKmkE,UAAUzoB,SACjB17C,KAAKmkE,UAAUzoB,OAAQ17C,KAAK2B,OAAUtG,IAO1C4P,GAAIie,4BACF,OAAOlpB,KAAKmkE,UAAUj7C,aAAelpB,KAAKmkE,UAAUj7C,aAAclpB,KAAK2B,OAAU,MAEnFsJ,GAAIie,0BAAc7tB,GACZ2E,KAAKmkE,UAAUj7C,eACjBlpB,KAAKmkE,UAAUj7C,aAAclpB,KAAK2B,OAAUtG,IAOhD4P,GAAIm2F,wBACF,OAAIphG,KAAKmkE,UAAUi9B,SACVphG,KAAKmkE,UAAUi9B,SAAUphG,KAAK2B,OAE9B3B,KAAKwoE,YAAYz2D,WAAW/R,MAAQ,EAAI,GAGnDiL,GAAIm2F,sBAAU/lG,GACR2E,KAAKmkE,UAAUi9B,WACjBphG,KAAKmkE,UAAUi9B,SAAUphG,KAAK2B,OAAUtG,IAM5C4P,GAAI8e,yBACF,OAAO/pB,KAAK4gG,SAAUhvC,WAAY5xD,KAAK2B,qBAWzCipB,kBAAU7lB,EAAmCwlB,GAC3CA,EAAKA,GAAMvqB,KAAK8N,UAAUi0D,IAO1B,IANAlnE,IAAMooB,EAAMjjB,KAAK2B,MACXi/F,EAAW5gG,KAAK4gG,SAChBzuC,EAAayuC,EAASzuC,WACtBlpD,EAAI23F,EAAShvC,WAAY3uC,GACzBzU,EAASoyF,EAAS9uC,YAAa7uC,GAE5B5mB,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBkuB,EAAG5oB,MAAQwwD,EAAY3jD,EAASnS,GAChC0I,EAASwlB,iBAUbo2C,wBAAgB57D,EAAmCs8F,GACjDxmG,IAAMqvB,EAAKm3E,GAAYrhG,KAAK8N,UAAUuzF,IAChCp+E,EAAMjjB,KAAK2B,MAEjB3B,KAAK4qB,UAAS,SAAUL,GACtBL,EAAGvoB,MAAQshB,IAAQsH,EAAGzb,WAAayb,EAAGzb,WAAayb,EAAGxb,WACtDhK,EAASmlB,MAEXlqB,KAAK2B,MAAQshB,gBASfq+E,mBAAWp3E,GACT9tB,IAAI8lE,GAAO,EAIX,OAHAliE,KAAK2gE,gBAAe,SAAU4gC,GACxBr3E,EAAGvoB,QAAU4/F,EAAI5/F,QAAOugE,GAAO,MAE9BA,gBAGTV,4BAAoB/gE,GAClBrE,IAAIoM,EAAQ,EACNya,EAAMjjB,KAAK2B,MAKjB,OAJA3B,KAAK2gE,gBAAe,SAAU4gC,GACxBA,EAAIn4F,SAAW3I,IAAS+H,GAAS,MAEvCxI,KAAK2B,MAAQshB,EACNza,gBAGTg5F,0BAAkB/gG,GAChB,OAAOT,KAAKwhE,mBAAmB/gE,GAAW,gBAS5CkR,sBACE9W,IAAM4mG,EAAoBzhG,KAAKwoE,YAAYi5B,kBAC3C,OAAIA,EAAkBnlG,OAAS,GACtBmlG,EAAkB74F,SAAS5I,KAAK2B,MAAQ3B,KAAK4oE,iCAUxDl2D,qBACE,GAAI1S,KAAK8N,UAAU+yF,WAAWvkG,OAAS,EACrC,OAAO0D,KAAK6T,OAAOnB,YAEnB7X,IAAM6mG,EAAe1hG,KAAKwoE,YAAYk5B,aACtC,O/ClZqB,I+CmZnBA,G/ClZe,I+CmZfA,G/ClZe,I+CmZfA,gBASN9vF,uBACE,OAAO5R,KAAK0S,cAAgB1S,KAAK2R,2BAOnCgwF,gBACE9mG,IAAM+mG,EAAe5hG,KAAKwoE,YAAYo5B,aACtC,O/C9ZiC,I+C+Z/BA,G/C9Z2B,I+C+Z3BA,G/C9Z2B,I+C+Z3BA,gBAIJC,mBACE,OAAO7hG,KAAK2B,QAAW3B,KAAKwoE,YAAYkyB,eAAiB16F,KAAK4oE,gCAOhE32D,oBACE,OAAmC,IAA5BjS,KAAKwoE,YAAYx/C,qBAO1B7W,qBACE,O/ChcuB,I+CgchBnS,KAAKwoE,YAAYk5B,2BAO1BrvF,qBACExX,IAAM6mG,EAAe1hG,KAAKwoE,YAAYk5B,aACtC,O/CxcmB,I+CwcZA,G/CvcY,I+CucgBA,gBAOrCnvF,iBACE,O/ChdmB,I+CgdZvS,KAAKwoE,YAAYk5B,2BAO1BjvF,iBACE,O/CvdmB,I+CudZzS,KAAKwoE,YAAYk5B,2BAO1B/uF,mBACE,O/CneqB,I+Cmed3S,KAAKwoE,YAAYk5B,2BAO1BvuF,iBACE,O/C1emB,I+C0eZnT,KAAKwoE,YAAYk5B,2BAO1BruF,wBACE,O/C9e0B,I+C8enBrT,KAAKwoE,YAAYk5B,2BAO1B7uF,mBACE,OAAO2iD,GAAc5sD,SAAS5I,KAAKuR,sBAOrCwB,mBACE,OAAO0iD,GAAc7sD,SAAS5I,KAAKuR,sBAOrC0B,kBACE,OAAOyiD,GAAa9sD,SAAS5I,KAAKuR,SAAWvR,KAAKmS,0BAGpDN,oBACE,OAAmD,IAA5C7R,KAAK4gG,SAAUhvC,WAAY5xD,KAAK2B,qBAOzCmQ,kBAEE,YAA4DvW,IAD1CyE,KAAKwoE,YAAYC,WAAYq5B,UAC7B9hG,KAAK2B,MAAQ3B,KAAK4oE,iCAGtC72D,sBACE,OAAyB,IAAlB/R,KAAKohG,uBAGd7tF,2BACEnX,IAAI+B,GAAS,EAEb,OAAoB,IAAhB6B,KAAKoJ,OAAqBjL,EAE9BA,GAAU6B,KAAKwhG,kCAKjBluF,mBAAa,OAAOtT,KAAKkhG,SAAS5tF,wBAClCyuF,sBAAgB,OAAO/hG,KAAKkhG,SAASa,2BACrCC,uBAAiB,OAAOhiG,KAAKkhG,SAASc,4BACtC14B,qBAAe,OAAOtpE,KAAKkhG,SAAS53B,0BACpC24B,8BAAwB,OAAOjiG,KAAKkhG,SAASe,mCAC7CC,gCAA0B,OAAOliG,KAAKkhG,SAASgB,qCAC/CC,yBAAmB,OAAOniG,KAAKkhG,SAASiB,8BACxCC,gCAA0B,OAAOpiG,KAAKkhG,SAASkB,qCAC/CC,sBAAgB,OAAOriG,KAAKkhG,SAASmB,2BACrC74B,6BAAuB,OAAOxpE,KAAKkhG,SAAS13B,kCAC5C84B,iCAA2B,OAAOtiG,KAAKkhG,SAASoB,sCAChDC,wBAAkB,OAAOviG,KAAKkhG,SAASqB,6BACvCC,sBAAgB,OAAOxiG,KAAKkhG,SAASsB,2BAErCC,6BAAuB,OAAOziG,KAAKkhG,SAASuB,kCAC5CC,0BAAoB,OAAO1iG,KAAKkhG,SAASwB,+BACzCC,sCAAgC,OAAO3iG,KAAKkhG,SAASyB,2CAOrDzrD,oBAAYxoC,GACV7T,IAAM+nG,EAAM5iG,KAAKmkE,UACX0+B,EAAMn0F,EAAKy1D,UACXc,EAAKjlE,KAAK2B,MACVivC,EAAKliC,EAAK/M,MACVmE,EAAI88F,EAAI98F,EAAGm/D,GAAO49B,EAAI/8F,EAAG8qC,GACzB7qC,EAAI68F,EAAI78F,EAAGk/D,GAAO49B,EAAI98F,EAAG6qC,GACzBxnB,EAAIw5E,EAAIx5E,EAAG67C,GAAO49B,EAAIz5E,EAAGwnB,GACzBkyD,EAAch9F,EAAIA,EAAIC,EAAIA,EAAIqjB,EAAIA,EACxC,OAAOxjB,KAAK2tC,KAAKuvD,iBAQnBz4B,qBAAa37D,GACX7T,IAAM+nG,EAAM5iG,KAAKmkE,UACX0+B,EAAMn0F,EAAKy1D,UACXc,EAAKjlE,KAAK2B,MACVivC,EAAKliC,EAAK/M,MAEhB,GAAIihG,EAAI1xF,QAAU2xF,EAAI3xF,OAAQ,CAC5BrW,IAAMkoG,EAAKH,EAAI1xF,OAAQ+zD,GACjB+9B,EAAKH,EAAI3xF,OAAQ0/B,GAEvB,GAAa,IAAPmyD,GAAmB,IAAPC,GAAmB,KAAPD,GAAoB,KAAPC,GAAcD,IAAOC,EAAM,OAAO,EAG/EnoG,IAAMiL,EAAI88F,EAAI98F,EAAGm/D,GAAO49B,EAAI/8F,EAAG8qC,GACzB7qC,EAAI68F,EAAI78F,EAAGk/D,GAAO49B,EAAI98F,EAAG6qC,GACzBxnB,EAAIw5E,EAAIx5E,EAAG67C,GAAO49B,EAAIz5E,EAAGwnB,GAEzBkyD,EAAch9F,EAAIA,EAAIC,EAAIA,EAAIqjB,EAAIA,EAGxC,GAAI05E,EAAc,IAAQ9iG,KAAK2hG,OAAQ,OAAO,EAE9C,GAAIx7F,MAAM28F,GAAc,OAAO,EAE/BjoG,IAAM2oB,EAAIxjB,KAAKy0F,SAAW/lF,EAAK+lF,SACzBj0B,EAAKh9C,EAAI,GACTi9C,EAAKj9C,EAAI,GAEf,OAAOs/E,EAAetiC,EAAKA,GAAOsiC,EAAeriC,EAAKA,gBASxDwiC,2BAAmB/mG,EAAoBsS,GAKrC,sBAL8C,GAC9CxO,KAAK8F,EAAI5J,EAAOsS,EAAS,GACzBxO,KAAK+F,EAAI7J,EAAOsS,EAAS,GACzBxO,KAAKopB,EAAIltB,EAAOsS,EAAS,GAElBxO,mBASTkjG,yBAAiBhnG,EAAyBsS,kBAAJ,mBAAa,GACjD3T,IAAM8G,EAAQ3B,KAAK2B,MACbwiE,EAAYnkE,KAAKmkE,UAMvB,OAJAjoE,EAAOsS,EAAS,GAAM21D,EAAUr+D,EAAGnE,GACnCzF,EAAOsS,EAAS,GAAM21D,EAAUp+D,EAAGpE,GACnCzF,EAAOsS,EAAS,GAAM21D,EAAU/6C,EAAGznB,GAE5BzF,gBAQT09C,2BAAmBl2C,GAOjB,YANUnI,IAANmI,IAAiBA,EAAI,IAAIC,GAE7BD,EAAEoC,EAAI9F,KAAK8F,EACXpC,EAAEqC,EAAI/F,KAAK+F,EACXrC,EAAE0lB,EAAIppB,KAAKopB,EAEJ1lB,gBAQTy/F,6BAAqBz/F,GAKnB,OAJA1D,KAAK8F,EAAIpC,EAAEoC,EACX9F,KAAK+F,EAAIrC,EAAEqC,EACX/F,KAAKopB,EAAI1lB,EAAE0lB,EAEJppB,mBAQT65C,qBAAan2C,GAKX,OAJA1D,KAAK8F,GAAKpC,EAAEoC,EACZ9F,KAAK+F,GAAKrC,EAAEqC,EACZ/F,KAAKopB,GAAK1lB,EAAE0lB,EAELppB,mBAQTojG,qBAAa1/F,GAKX,OAJA1D,KAAK8F,GAAKpC,EAAEoC,EACZ9F,KAAK+F,GAAKrC,EAAEqC,EACZ/F,KAAKopB,GAAK1lB,EAAE0lB,EAELppB,mBAQTqjG,yBAAiBC,mBAAY,GAC3BzoG,IAKIu3D,EAAMC,EAAMkxC,EACZC,EANE56B,EAAoB5oE,KAAK4oE,kBACzB66B,EAAgBzjG,KAAK2B,MAAQ3B,KAAK4oE,kBAClC86B,EAAQ1jG,KAAKwoE,YAAYm7B,WACzBC,EAAeF,EAAME,aACrBC,EAAeH,EAAMG,aAO3B,IAHKP,IAAWE,EAAuB,IAEvCpxC,EAAOwxC,EAAat7F,QAAQm7F,IACX,IAAVrxC,GAAa,CAElB,GADAmxC,EAAqBM,EAAczxC,GAASwW,GACxC46B,EAIF,OAAOD,EAHPC,EAAqB/mG,KAAK8mG,GAC1BnxC,EAAOwxC,EAAat7F,QAAQm7F,EAAerxC,EAAO,GAOtD,IADAC,EAAOwxC,EAAav7F,QAAQm7F,IACX,IAAVpxC,GAAa,CAElB,GADAkxC,EAAqBK,EAAcvxC,GAASuW,GACxC46B,EAIF,OAAOD,EAHPC,EAAqB/mG,KAAK8mG,GAC1BlxC,EAAOwxC,EAAav7F,QAAQm7F,EAAepxC,EAAO,GAMtD,OAAOmxC,gBAKTxmD,uBAAe8mD,mBAAY,GACzB,IAAIz5F,EAAO,GAQX,OAPIrK,KAAKsR,UAAYwyF,IAAWz5F,GAAQ,IAAMrK,KAAKsR,QAAU,UAC1C/V,IAAfyE,KAAKwR,QAAqBnH,GAAQrK,KAAKwR,OACvCxR,KAAKqR,UAAShH,GAAQ,IAAMrK,KAAKqR,SACjCrR,KAAKyR,YAAWpH,GAAQ,IAAMrK,KAAKyR,WACnCzR,KAAKiR,WAAU5G,GAAQ,IAAMrK,KAAKiR,UAClCjR,KAAKkR,SAAQ7G,GAAQ,IAAMrK,KAAKkR,QAChClR,KAAK8N,UAAUi2F,WAAWv7F,MAAQ,IAAG6B,GAAQ,IAAMrK,KAAKwT,YACrDnJ,gBAOTghC,iBACE,OAAO,IAAIi1D,GAAUtgG,KAAK8N,UAAW9N,KAAK2B,qBAG5CqiG,oBACE,MAAO,CACLriG,MAAO3B,KAAK2B,MACZslE,aAAcjnE,KAAKinE,aAEnB31D,QAAStR,KAAKsR,QACdxL,EAAG9F,KAAK8F,EACRC,EAAG/F,KAAK+F,EACRqjB,EAAGppB,KAAKopB,EACR3oB,QAAST,KAAKS,QACdgR,UAAWzR,KAAKyR,UAChBD,MAAOxR,KAAKwR,MACZyX,OAAQjpB,KAAKipB,OACbujD,IAAKxsE,KAAKwsE,IACVioB,SAAUz0F,KAAKy0F,SACfzrE,OAAQhpB,KAAKgpB,OACbM,QAAStpB,KAAKspB,QACdpY,OAAQlR,KAAKkR,OACbD,SAAUjR,KAAKiR,SACfuC,WAAYxT,KAAKwT,sDC7wBvB3Y,IAAMopG,GAAa,IAAInhG,aAAa,GAE9Bs7F,GAKJ,SAAYtwF,EAAmCo2F,mBAAiB,GAC1DvjF,IAAOtB,GAAII,KAAK,gBAEpB5kB,IAAMwjG,EAAS6F,EAAiBxD,GAAkBC,GAE5Cr/D,EAAS,IAAIx+B,aAAmC,EAAtBgL,EAAUgc,WACpCq6E,EAAc,IAAIthG,YAAYiL,EAAUgc,WAC1CztB,EAAI,EAERyR,EAAUgb,UAAS,SAAUoB,GAC3BoX,EAAQjlC,EAAI,GAAM6tB,EAAGpkB,EACrBw7B,EAAQjlC,EAAI,GAAM6tB,EAAGnkB,EACrBu7B,EAAQjlC,EAAI,GAAM6tB,EAAGd,EACrB+6E,EAAa9nG,EAAI,GAAM6tB,EAAGvoB,MAC1BtF,GAAK,KAGP2D,KAAKmkG,YAAcA,EACnBnkG,KAAKshC,OAASA,EACdthC,KAAKokG,OAAS,IAAIC,GAAQ/iE,EAAQ+8D,GAE9B19E,IAAOtB,GAAIK,QAAQ,8BAKzB4/E,iBAAShjD,EAAyBijD,EAAkBv7B,GAG9C1nB,aAAiB34C,EACnB24C,EAAMltB,QAAQ60E,IACL3nD,aAAiBgkD,IAC1BhkD,EAAM4mD,gBAAgBe,IAUxB,IAPAppG,IAAMypG,EAAWtkG,KAAKokG,OAAO9E,QAAQ2E,GAAY1E,EAAUv7B,GAErDn0C,EAAU7vB,KAAKokG,OAAOv0E,QACtByuE,EAAQt+F,KAAKokG,OAAO9F,MACpB6F,EAAcnkG,KAAKmkG,YACnBI,EAAa,GAEVloG,EAAI,EAAG4M,EAAIq7F,EAAShoG,OAAQD,EAAI4M,IAAK5M,EAAG,CAC/CxB,IAAM2oB,EAAI8gF,EAAUjoG,GACdwiG,EAAYr7E,EAAG,GACf+pB,EAAO/pB,EAAG,GAEhB+gF,EAAW9nG,KAAK,CACdkF,MAAOwiG,EAAat0E,EAASyuE,EAAOO,KACpC1iD,SAAU5O,IAMd,OAAOg3D,GCjFJ1pG,IAAM2pG,GAAqC,CAChD,IAAK,IACL,IAAK,IACL,IAAK,IACLC,EAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,EAAK,SACL,EAAK,SACL,EAAK,SACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,MACL76F,EAAK,QACLqsD,EAAK,QACL1sD,EAAK,QACLssD,EAAK,QACL6uC,EAAK,SACLvuC,EAAK,UACLwuC,EAAK,UACL/uC,EAAK,SACLmD,EAAK,QACL6rC,EAAK,QACL/tC,EAAK,SACLguC,EAAK,UACLC,EAAK,UACL5uC,EAAK,SACLptD,EAAK,QACL2tD,EAAK,QACLsuC,EAAK,QACLC,EAAK,QACLtuC,EAAK,UACLjtD,EAAK,UACL6xD,EAAK,QACLrE,EAAK,QACLmD,EAAK,QACL6L,EAAK,QACLhO,EAAK,QACLgtC,EAAK,UACL,IAAK,UACL,IAAK,QACL,IAAK,QACLC,EAAK,QACL,IAAK,QACLvnG,EAAK,QACL0Z,EAAK,QACLrV,EAAK,QACLwhB,EAAK,QACLjc,EAAK,QACL4M,EAAK,QACL0kB,EAAK,MAIMssE,GAAwC,CACnD,MAAO,MACP,OAAQ,SACR,UAAW,SACX,WAAY,SACZ,UAAW,eACX,UAAW,SACX,UAAW,SACX,UAAW,eACX,UAAW,eACX,YAAa,eACb,aAAc,eACd,YAAa,2BACb,YAAa,eACb,aAAc,eACd,YAAa,2BACb,UAAW,eACX,WAAY,eACZ,YAAa,eACb,aAAc,eACd,WAAY,2BACZ,UAAW,2BACX,UAAW,mDACX,UAAW,2BACX,aAAc,2BACd,UAAW,eACX,WAAY,eACZ,UAAW,eACX,UAAW,eACX,WAAY,eACZ,UAAW,eACX,WAAY,eACZ,UAAW,eACX,WAAY,eACZ,UAAW,eACX,UAAW,2BACX,WAAY,2BACZ,UAAW,2BACX,UAAW,2BACX,UAAW,2BACX,UAAW,2BACX,UAAW,2BACX,UAAW,mDACX,UAAW,mDACX,UAAW,2BACX,UAAW,2BACX,UAAW,2BACX,gBAAiB,2BACjB,gBAAiB,2BACjB,gBAAiB,2BACjB,gBAAiB,2BACjB,iBAAkB,2BAClB,iBAAkB,2BAClB,iBAAkB,2BAClB,iBAAkB,2BAClB,kBAAmB,2BACnB,kBAAmB,2BACnB,kBAAmB,2BACnB,kBAAmB,2BACnB,kBAAmB,2BACnB,kBAAmB,2BACnB,mBAAoB,2BACpB,mBAAoB,2BACpB,iBAAkB,mDAClB,iBAAkB,mDAClB,gBAAiB,mDACjB,gBAAiB,mDACjB,gBAAiB,mDACjB,gBAAiB,mDACjB,gBAAiB,mGACjB,gBAAiB,mGACjB,gBAAiB,mDACjB,gBAAiB,mDACjB,mBAAoB,mDACpB,mBAAoB,mDACpB,MAAO,eACP,OAAQ,eACR,OAAQ,eACR,OAAQ,eACR,MAAO,2BACP,OAAQ,2BACR,OAAQ,eACR,OAAQ,2BACR,QAAS,2BACT,SAAU,2BACV,QAAS,2BACT,SAAU,2BACV,QAAS,mDACT,SAAU,mDACV,UAAW,2BACX,WAAY,2BACZ,WAAY,2BACZ,YAAa,2BACb,WAAY,2BACZ,YAAa,2BACb,WAAY,2BACZ,YAAa,2BACb,UAAW,mDACX,WAAY,mDACZ,UAAW,2BACX,UAAW,2BACX,WAAY,2BACZ,WAAY,2BACZ,UAAW,2BACX,UAAW,2BACX,WAAY,2BACZ,WAAY,2BACZ,UAAW,mDACX,UAAW,mDACX,WAAY,mDACZ,WAAY,mDACZ,WAAY,2BACZ,WAAY,2BACZ,YAAa,2BACb,YAAa,2BACb,WAAY,2BACZ,WAAY,2BACZ,WAAY,2BACZ,WAAY,2BACZ,WAAY,mDACZ,WAAY,mDACZ,WAAY,mDACZ,WAAY,mDACZ,gBAAiB,mDACjB,gBAAiB,mDACjB,gBAAiB,mDACjB,gBAAiB,mDACjB,iBAAkB,mDAClB,iBAAkB,mDAClB,iBAAkB,mDAClB,gBAAiB,mDACjB,iBAAkB,mDAClB,iBAAkB,mDAClB,iBAAkB,mDAClB,iBAAkB,mDAClB,kBAAmB,mDACnB,kBAAmB,mDACnB,kBAAmB,mDACnB,kBAAmB,mDACnB,gBAAiB,mGACjB,gBAAiB,mGACjB,iBAAkB,mGAClB,iBAAkB,mGAClB,MAAO,YACP,OAAQ,YACR,OAAQ,YACR,MAAO,8BACP,MAAO,YACP,OAAQ,qBACR,OAAQ,yDACR,OAAQ,qBACR,UAAW,qBACX,UAAW,qBACX,WAAY,qBACZ,WAAY,qBACZ,WAAY,qBACZ,WAAY,qBACZ,QAAS,yDACT,QAAS,qBACT,UAAW,qBACX,UAAW,qBACX,UAAW,qBACX,UAAW,qBACX,QAAS,yDACT,QAAS,qBACT,QAAS,yDACT,QAAS,qBACT,aAAc,uCACd,aAAc,uCACd,aAAc,uCACd,aAAc,uCACd,WAAY,+GACZ,WAAY,uCACZ,WAAY,+GACZ,WAAY,uCACZ,MAAO,qBACP,OAAQ,qBACR,OAAQ,qBACR,OAAQ,qBACR,OAAQ,qBACR,OAAQ,qBACR,OAAQ,qBACR,QAAS,uCACT,SAAU,uCACV,UAAW,uCACX,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,UAAW,uCACX,UAAW,uCACX,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,WAAY,uCACZ,gBAAiB,2EACjB,gBAAiB,2EACjB,iBAAkB,2EAClB,iBAAkB,2EAClB,QAAS,uCACT,QAAS,mJACT,QAAS,2EACT,SAAU,uCACV,SAAU,2EACV,WAAY,2EACZ,WAAY,2EACZ,WAAY,mSACZ,WAAY,mSACZ,WAAY,mJACZ,YAAa,2EACb,YAAa,mJACb,UAAW,2EACX,WAAY,2EACZ,UAAW,mSACX,WAAY,mSACZ,UAAW,mJACX,WAAY,2EACZ,WAAY,2EACZ,WAAY,mJACZ,WAAY,2EACZ,WAAY,mSACZ,WAAY,mJACZ,WAAY,2EACZ,WAAY,mSACZ,WAAY,mJACZ,eAAgB,mJAChB,eAAgB,mJAChB,gBAAiB,mJACjB,gBAAiB,mJACjB,eAAgB,mkBAChB,eAAgB,mkBAChB,gBAAiB,mkBACjB,gBAAiB,mkBACjB,eAAgB,mSAChB,gBAAiB,mSACjB,UAAW,SACX,WAAY,SACZ,UAAW,eACX,UAAW,eACX,WAAY,eACZ,UAAW,eACX,WAAY,eACZ,UAAW,SACX,UAAW,SACX,UAAW,eACX,UAAW,eACX,YAAa,eACb,aAAc,eACd,YAAa,2BACb,YAAa,eACb,aAAc,eACd,YAAa,2BACb,WAAY,eACZ,WAAY,eACZ,gBAAiB,eACjB,YAAa,eACb,YAAa,eACb,aAAc,2BACd,WAAY,2BACZ,WAAY,mDACZ,WAAY,2BACZ,oBAAqB,2BACrB,aAAc,2BACd,SAAU,4EC/UNC,GAAY,UCElB,SAASC,GAAqBC,GAC5BlpG,IAAIua,EAAO,GAIX,OAHI2uF,EAAUhpG,OAAS,IACrBqa,EAAO,IAAMnV,GAAY8jG,GAAWljG,KAAK,UAEpC,IAAIkT,GAAUqB,OAMjB4uF,GAMJ,SAAsBl7F,kBAAO,IAAPrK,UAAAqK,EALtBrK,cAA2B,gCAO3BiL,GAAIjG,oBAAU,MAAO,yBAerBwgG,iBAASC,EAAwBH,GAC/BzqG,IAAM6qG,EAAO,IAAIC,GAAaF,EAAYH,GAE1C,OADAtlG,KAAK4lG,SAASnpG,KAAKipG,GACZA,gBAQTG,sBAAc/3F,GACZ,OAAO9N,KAAK4lG,SAASE,iBAClBt9F,EAAOk9F,UAASl9F,EAAQk9F,EAAKG,aAAa/3F,KAAY,iBAS3Di4F,yBAAiBj4F,GACf,OAAO9N,KAAK4lG,SAASE,iBAClBt9F,EAAOk9F,UAASl9F,EAAQk9F,EAAKK,gBAAgBj4F,KAAY,iBAS9Dk4F,4BACE5pG,IAAI6pG,EAAgB,EAMpB,OAJAjmG,KAAK4lG,SAASttF,SAAQ,SAAUotF,GAC9BO,GAAiBP,EAAKD,WAAWnpG,UAG5B2pG,gBAQTC,oBAAYp4F,GACV,GAA6B,IAAzB9N,KAAK4lG,SAAStpG,OAAc,OAAO,EAEvCzB,IAAM6qG,EAAO1lG,KAAK4lG,SAAU,GAC5B,GAA+B,IAA3BF,EAAKD,WAAWnpG,OAAc,OAAO,EAGzC,KADuB,IAAIuH,GACPynC,OAAOo6D,EAAKD,WAAY,IAAM,OAAO,EAEzDrpG,IAAI+pG,EAA+B,GAKnC,OAJAr4F,EAAUs4F,WAAU,SAAUhxD,GAC5B+wD,EAAmB1pG,KAAK24C,EAAG3jC,cAE7B00F,EAAqB3kG,GAAY2kG,GAC7BT,EAAKJ,UAAUhpG,SAAW6pG,EAAmB7pG,qBAKnD+pG,wBAAgBv4F,GACdjT,IAAM4uC,EAAc,IAAI3I,EAQxB,OANA9gC,KAAK4lG,SAASttF,SAAQ,SAAUotF,GAC9B7qG,IAAMyrG,EAAUZ,EAAKW,eAAev4F,GACpC27B,EAAY8iB,cAAc+5C,EAAQtlG,KAClCyoC,EAAY8iB,cAAc+5C,EAAQrlG,QAG7BwoC,gBAGTwoC,mBAAWnkE,GACT,OAAO9N,KAAKqmG,eAAev4F,GAAWmkE,UAAU,IAAItuE,iBAGtD4lB,wBACEntB,IAAIkpG,EAAsB,GAI1B,OAHAtlG,KAAK4lG,SAASttF,SAAQ,SAAUotF,GAC9BJ,EAAYA,EAAUliF,OAAOsiF,EAAKJ,cAE7BD,GAAoBC,iDAIlBK,GACX,SAAsBF,EAAqCH,kBAAb,mBAAmC,IAA3DtlG,gBAAAylG,EAAqCzlG,eAAAslG,+BAE3DnkD,GAAIn8C,oBAAU,MAAO,6BAErBuhG,mBAAWz4F,EAAsB04F,cAC3Bh+F,EAAQ,EAQZ,OANAsF,EAAUs4F,oBAAUhxD,IACY,IAA1Bp1C,EAAKslG,UAAUhpG,QAAgB0D,EAAKslG,UAAU18F,SAASwsC,EAAG3jC,cAC5DjJ,GAAS4sC,EAAIoxD,OAIVxmG,KAAKylG,WAAWnpG,OAASkM,gBAGlCq9F,sBAAc/3F,GACZ,OAAO9N,KAAKumG,UAAUz4F,EAAW,2BAGnCi4F,yBAAiBj4F,GACf,OAAO9N,KAAKumG,UAAUz4F,EAAW,8BAGnCu4F,wBAAgBv4F,GACdjT,IAAMyrG,EAAU,IAAIxlE,EACd2lE,EAAc,IAAI3lE,EAElB9sB,EAAYhU,KAAKupB,eACjBm9E,EAAe54F,EAAUu4F,eAAeryF,GAQ9C,OANAhU,KAAKylG,WAAWntF,SAAQ,SAAU0hB,GAChCysE,EAAY/rE,KAAKgsE,GAAcj8D,aAAazQ,GAC5CssE,EAAQ/5C,cAAck6C,EAAYzlG,KAClCslG,EAAQ/5C,cAAck6C,EAAYxlG,QAG7BqlG,gBAGT/8E,wBACE,OAAO87E,GAAoBrlG,KAAKslG,yBAGlCqB,iBAAS74F,GACPjT,IAAMmZ,EAAYhU,KAAKupB,eACvB,OAAIvV,EACKlG,EAAU64F,QAAQ3yF,GAElBlG,gBAIX84F,2BAEE,IADA/rG,IAAMivC,EAAe,GACZrkC,EAAI,EAAGk8E,EAAK3hF,KAAKylG,WAAWnpG,OAAQmJ,EAAIk8E,IAAMl8E,EACrDqkC,EAAartC,KAAK,CAChB9B,GAAI8K,EAAI,EACR4E,KAAM5E,EACNu0B,OAAQh6B,KAAKylG,WAAYhgG,KAG7B,OAAOqkC,4CClMX,IAAM+8D,GAgBJ,SAAqB/4F,GAAA9N,eAAA8N,EAfrB9N,uBAAiC,KACjCA,oBAA8B,KAC9BA,oBAA8B,KAC9BA,kBAA4B,KAC5BA,yBAAmCzE,EACnCyE,mBAA8B,KAE9BA,qBAA+B,GAC/BA,oBAA+B,KAE/BA,SAAM,EACNA,SAAM,EACNA,SAAM,EACNA,SAAM,YCuCQ8mG,GAA0Bh5F,EAAsBi5F,GAC9D,GAAKA,EAAL,CAEIpmF,IAAOtB,GAAII,KAAK,4BAEpB5kB,IAAMmsG,EAAuB,GAC7Bl5F,EAAU+a,WAAU,SAAUqnE,GAC5BA,EAAGkW,WAAU,SAAUhxD,GACrB4xD,EAAWvqG,KAAK24C,EAAG3jC,iBAIvB5W,IAAMosG,EAAmBD,EAAW74F,QAAQ1M,OACtCylG,EAA4B,GAClCD,EAAiB3uF,SAAQ,SAAUtW,GACjCklG,EAAgBzqG,KAAKuqG,EAAW1+F,QAAQtG,OAK1CnH,IAAMssG,EAAUJ,EAAUI,QAAQzlG,QAAO,SAAUwzB,GACjD,OAAO10B,GAAoBymG,EAAkB/xE,EAAG,KAAQ,KAG1DiyE,EAAQ1lG,MAAK,SAAU2lG,EAAIC,GACzBxsG,IAAMkxE,EAAKq7B,EAAI,GACTp7B,EAAKq7B,EAAI,GACTnmB,EAAKkmB,EAAI,GACTjmB,EAAKkmB,EAAI,GAEf,GAAIt7B,IAAOC,EACT,OAAIkV,IAAOC,EACF,EAEAD,EAAKC,GAAM,EAAI,EAGxBtmF,IAAMu3D,EAAO5xD,GAAoBymG,EAAkBl7B,GAC7C1Z,EAAO7xD,GAAoBymG,EAAkBj7B,GACnD,OAAOk7B,EAAiB90C,GAAS80C,EAAiB70C,IAAU,EAAI,KAIpEx3D,IAAM2lG,EAAe1yF,EAAU0yF,aAE/B1yF,EAAU+a,WAAU,SAAUqnE,GAC5B9zF,IAAIC,EAAI,EACF4M,EAAIk+F,EAAQ7qG,OAClB,GAAU,IAAN2M,EAAJ,CACA7M,IAAIkrG,EAAQH,EAAS9qG,GACjBkrG,GAAW,EACX1oD,GAAO,EAEXqxC,EAAGkW,WAAU,SAAUhxD,GACrBh5C,IAAIorG,GAAc,EAElB,GAAIpyD,EAAG3jC,YAAc61F,EAAO,GAK1B,IAJAzsG,IAAM2N,EAAQ4sC,EAAG+kD,aACX3rF,EAAS4mC,EAAG4nD,cACZz6E,EAAM/T,EAAShG,EAEZ/C,EAAI+I,EAAQ/I,EAAI8c,IAAO9c,EA4B9B,GA3BI+6F,EAAahvF,MAAO/L,KAAQ6hG,EAAO,IACnC9G,EAAa/G,WAAWh0F,KAAO6hG,EAAO,KAExCC,GAAW,GAGTA,IACF/G,EAAajvF,OAAQ9L,GAAM6hG,EAAO,GAE9B9G,EAAahvF,MAAO/L,KAAQ6hG,EAAO,IACnC9G,EAAa/G,WAAWh0F,KAAO6hG,EAAO,KAExCC,GAAW,GACXlrG,GAAK,GAEG4M,GAGNxD,EAAI+I,EAAS,EACb84F,EAAQH,EAAS9qG,GACjBmrG,EAAcpyD,EAAG3jC,YAAc61F,EAAO,IAEtCzoD,GAAO,IAKT2oD,GAAe3oD,EAAM,cAQjChkD,IAAM4sG,EAASV,EAAUU,OAAO/lG,QAAO,SAAUsP,GAC/C,OAAOxQ,GAAoBymG,EAAkBj2F,EAAG,KAAQ,KAG1Dy2F,EAAOhmG,MAAK,SAAUimG,EAAIC,GACxB9sG,IAAMkxE,EAAK27B,EAAI,GACT17B,EAAK27B,EAAI,GAEf,GAAI57B,IAAOC,EAAI,OAAO,EACtBnxE,IAAMu3D,EAAO5xD,GAAoBymG,EAAkBl7B,GAC7C1Z,EAAO7xD,GAAoBymG,EAAkBj7B,GACnD,OAAOk7B,EAAiB90C,GAAS80C,EAAiB70C,IAAU,EAAI,KAGlEx3D,IAAM+sG,EAAiB,IAAIliG,WAAW,GACtCoI,EAAU+a,WAAU,SAAUqnE,GAC5B9zF,IAAIC,EAAI,EACF4M,EAAIw+F,EAAOnrG,OACjB,GAAU,IAAN2M,EAAJ,CACA7M,IAAIyrG,EAAQJ,EAAQprG,GAChByrG,GAAW,EACXjpD,GAAO,EAEXqxC,EAAGkW,WAAU,SAAUhxD,GACrBh5C,IAAIorG,GAAc,EAElB,GAAIpyD,EAAG3jC,YAAco2F,EAAO,GAK1B,IAJAhtG,IAAM2N,EAAQ4sC,EAAG+kD,aACX3rF,EAAS4mC,EAAG4nD,cACZz6E,EAAM/T,EAAShG,EAEZ/C,EAAI+I,EAAQ/I,EAAI8c,IAAO9c,EA4B9B,GA3BI+6F,EAAahvF,MAAO/L,KAAQoiG,EAAO,IACnCrH,EAAa/G,WAAWh0F,KAAOoiG,EAAO,KAExCC,GAAW,GAGTA,IACFtH,EAAajvF,OAAQ9L,GAAMmiG,EAEvBpH,EAAahvF,MAAO/L,KAAQoiG,EAAO,IACnCrH,EAAa/G,WAAWh0F,KAAOoiG,EAAO,KAExCC,GAAW,GACXzrG,GAAK,GAEG4M,GAGNxD,EAAI+I,EAAS,EACbq5F,EAAQJ,EAAQprG,GAChBmrG,EAAcpyD,EAAG3jC,YAAco2F,EAAO,IAEtChpD,GAAO,IAKT2oD,GAAe3oD,EAAM,cAM7Bl+B,IAAOtB,GAAIK,QAAQ,0CDrMvBqoF,wBAAgBC,GAQd,IAPAntG,IAAMspE,EAAYnkE,KAAK8N,UAAUq2D,UAC3Bq8B,EAAexgG,KAAK8N,UAAU0yF,aAC9BC,EAAazgG,KAAK8N,UAAU2yF,WAE5Bj4F,EAAQg4F,EAAa12E,UAAWk+E,GAChCx5F,EAASgyF,EAAa9sF,WAAYs0F,GAClCl/B,EAAiB,IAAIvsE,MAAMiM,GACxBnM,EAAI,EAAGA,EAAImM,IAASnM,EAC3BysE,EAAgBzsE,GAAM8nE,EAAU0E,WAAYr6D,EAASnS,GAEvDmkG,EAAaS,cAAe+G,GAAOvH,EAAW11F,IAC5C/K,KAAKioG,gBAAkBn/B,EAAgB9oE,KAAKkoG,8BAIhDx1C,iBAASy1C,EAAoB12F,EAAmBqoF,EAAiBxoF,EAAiBE,EAAewX,EAAiBzX,EAA2BF,GAC3IxW,IAAMspE,EAAYnkE,KAAK8N,UAAUq2D,UAC3Bq8B,EAAexgG,KAAK8N,UAAU0yF,aAC9BD,EAAavgG,KAAK8N,UAAUyyF,WAC5BwD,EAAa/jG,KAAK8N,UAAUi2F,WAE9BqE,GAAW,EACXC,GAAW,EACXC,GAAa,EAEbtoG,KAAKuoG,oBAAsBJ,GAC7BC,GAAW,EACXC,GAAW,EACXC,GAAa,EACbtoG,KAAKwoG,IAAM,EACXxoG,KAAK2iF,IAAM,EACX3iF,KAAKgoG,IAAM,GACFhoG,KAAKyoG,iBAAmB3O,GACjCuO,GAAW,EACXC,GAAa,EACbtoG,KAAK2iF,IAAM,EACX3iF,KAAKgoG,IAAM,GACFhoG,KAAK0oG,eAAiBl3F,GAASxR,KAAK2oG,iBAAmBr3F,GAAWtR,KAAK4oG,iBAAmBv3F,IACnGi3F,GAAa,EACbtoG,KAAKgoG,IAAM,GAEbhoG,KAAK4wC,IAAM,EAEPw3D,IACFrE,EAAWh0C,aACXg0C,EAAW8E,YAAa7oG,KAAKwoG,IAAOxoG,KAAK2iF,GACzCohB,EAAW+E,WAAY9oG,KAAKwoG,IAAO,EACnCzE,EAAWv7F,OAAS,EACpB+3F,EAAW/sF,WAAYxT,KAAK2iF,IAAO3iF,KAAKwoG,IAGtCH,IACF9H,EAAWxwC,aACXwwC,EAAW5G,aAAa35F,KAAK2iF,GAAIlxE,GACjC8uF,EAAW1G,WAAW75F,KAAK2iF,GAAImX,GAC/ByG,EAAWvD,cAAeh9F,KAAK2iF,IAAO3iF,KAAKgoG,GAC3CzH,EAAWpG,aAAcn6F,KAAK2iF,IAAO,EACrC4d,EAAW/3F,OAAS,EACpB+3F,EAAW/sF,WAAYxT,KAAK2iF,IAAO3iF,KAAKwoG,GACxCzE,EAAW+E,WAAY9oG,KAAKwoG,KAAQ,EACpChI,EAAaO,WAAY/gG,KAAKgoG,IAAOhoG,KAAK2iF,IAGxC2lB,IACFtoG,KAAKioG,gBAAkBjoG,KAAK2oG,eAC5B3oG,KAAKkoG,eAAiBloG,KAAK+oG,cACvB/oG,KAAKgoG,GAAK,GAAGhoG,KAAK+nG,eAAe/nG,KAAKgoG,GAAK,GAC/CxH,EAAazwC,aACbywC,EAAahvF,MAAOxR,KAAKgoG,IAAOx2F,OACjBjW,IAAXgW,IACFivF,EAAajvF,OAAQvR,KAAKgoG,IAAOz2F,EAAO7L,WAAW,SAErCnK,IAAZ8V,IACFmvF,EAAanvF,QAASrR,KAAKgoG,IAAO32F,EAAQ3L,WAAW,IAEvD86F,EAAa9sF,WAAY1T,KAAKgoG,IAAOhoG,KAAK4wC,GAC1C4vD,EAAa12E,UAAW9pB,KAAKgoG,IAAO,EACpCxH,EAAah4F,OAAS,EACtBg4F,EAAaO,WAAY/gG,KAAKgoG,IAAOhoG,KAAK2iF,GAC1C4d,EAAWpG,aAAcn6F,KAAK2iF,KAAQ,GAGxCxe,EAAU37D,OAAS,EACnB27D,EAAU8C,aAAcjnE,KAAK4wC,IAAO5wC,KAAKgoG,GACzCxH,EAAa12E,UAAW9pB,KAAKgoG,KAAQ,EAErChoG,KAAKuoG,kBAAoBJ,EACzBnoG,KAAKyoG,eAAiB3O,EACtB95F,KAAK2oG,eAAiBr3F,EACtBtR,KAAK0oG,aAAel3F,EACpBxR,KAAK4oG,eAAiBv3F,EACtBrR,KAAK+oG,cAAgB//E,gBAGvBggF,oBACEhpG,KAAKioG,gBAAkBjoG,KAAK2oG,eAC5B3oG,KAAKkoG,eAAiBloG,KAAK+oG,cACvB/oG,KAAKgoG,IAAM,GAAGhoG,KAAK+nG,eAAe/nG,KAAKgoG,KCsGxCntG,IAUCouG,GA8BAC,GAMAn2F,GA9CKo2F,IAULF,GAAkB,SAAU/O,EAAkB79F,EAAW+sG,EAAqB/4E,GAQlF,IAPAx1B,IAAMiT,EAAYosF,EAAQpsF,UACpBU,EAAS0rF,EAAQK,kBACjB8C,EAAMvvF,EAAU2sF,kBAChB6C,EAAMxvF,EAAU2sF,kBAChBp6B,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,eAEbvI,EAAIG,KAAK3E,IAAI,EAAG5E,EAAI,GAAIoJ,GAAKpJ,IAAKoJ,EACzC,IAAKrJ,IAAIN,EAAI,EAAGA,EAAI,IAAKA,EACvB,KAAI2J,EAAI3J,GAAKo+F,EAAQC,cAArB,CAIAkD,EAAI17F,MAAQ6M,EAAS/I,EACrB63F,EAAI37F,MAAQ6M,EAAS/I,EAAI3J,EACzBukE,EAAI1+D,MAAQ07F,EAAI3C,eAChBp6B,EAAI3+D,MAAQ27F,EAAI5C,eAEhB7/F,IAAM2oB,EAAI68C,EAAInpB,WAAWopB,GAEzB,GAAI16D,KAAKK,IAAIud,EAAI4lF,EAAWttG,EAAI,IAAOu0B,EACrC,OAAO,EAKb,OAAO,GAGH64E,GAAY,SAAUhP,EAAkB79F,GAG5C,OAAO4sG,GAAgB/O,EAAS79F,EAFT,CAAE,KAAM,KAAM,MAClB,MAIf0W,GAAU,SAAUmnF,EAAkB79F,GAG1C,OAAO4sG,GAAgB/O,EAAS79F,EAFT,CAAE,IAAK,KAAM,IACjB,OA2Cd,SAAsCyR,GACvC6S,IAAOtB,GAAII,KAAK,+BAEpB3R,EAAUu7F,aAAY,SAAUn7F,GAE9B,KAAIA,EAAEisF,aAAe,GAArB,CACA,GAAIjsF,EAAEyzF,QA/BQ,SAAUzzF,GAa1B,IAZArT,IAGM2lG,EAAetyF,EAAEsyF,aACjBhyF,EAASN,EAAEqsF,kBAGXryF,EADc,IAAIq0F,GAAYruF,GACZjG,SAElB8jE,EAAK,IAAIpoE,EACTqoE,EAAK,IAAIroE,EAENtH,EAAI,EAAGk7B,EAAKrpB,EAAEisF,aAAc99F,EAAIk7B,IAAMl7B,EAAG,CAChD0vE,EAAGvoE,UAAU0E,EAAIquB,OAAmB,EAAJl6B,GAChC2vE,EAAGxoE,UAAU0E,EAAIquB,OAAmB,EAAJl6B,EAAQ,GACxCxB,IAAM2oB,EAAIuoD,EAAG70B,WAAW80B,GAEpBxoD,EAhBa,GAgBKA,EAAI,GAAOtb,EAAIo0F,QAASjgG,GAjB7B,KAkBfmkG,EAAajvF,OAAQ/C,EAASnS,GAAM,IAAIqJ,WAAW,GACnD86F,EAAajvF,OAAQ/C,EAASnS,EAAI,GAAM,IAAIqJ,WAAW,KAYvD4jG,CAAUp7F,OACL,CAAA,IAAIA,EAAEiE,YAGX,QAlDiB,SAAUjE,GAG/B,IAFArT,IAAM2lG,EAAetyF,EAAEsyF,aACjBhyF,EAASN,EAAEqsF,kBACRl+F,EAAI,EAAGk7B,EAAKrpB,EAAEisF,aAAc99F,EAAIk7B,IAAMl7B,EAAG,CAChDD,IAAImV,EAAS,IACT23F,GAAUh7F,EAAG7R,GACfkV,EAAS,IACAwB,GAAQ7E,EAAG7R,KACpBkV,EAAS,KAEXivF,EAAajvF,OAAQ/C,EAASnS,GAAMkV,EAAO7L,WAAW,IAsCpD6jG,CAAer7F,GAMjB9R,IAAIotG,EACAC,EAAc,EAClBv7F,EAAEk5D,aAAY,SAAU97D,GAClBA,EAAEiG,SAAWi4F,EACfC,GAAe,GAEK,IAAhBA,IACFn+F,EAAE3J,OAAS,EACX2J,EAAEiG,OAAS,KAEbk4F,EAAc,EACdD,EAAal+F,EAAEiG,eAKjBoP,IAAOtB,GAAIK,QAAQ,0CASXk6E,GAAcj4F,GAK5B,IAJA9G,IAAMoO,EAHkB,6BAGI3M,OACxBmJ,EAAI9D,EACJ7F,EAAI,EACJ2V,EANoB,6BAMUhM,EAAIwD,GAC/BxD,GAAKwD,GAEVwI,GATsB,8BAQtBhM,EAAIG,KAAKY,MAAMf,EAAIwD,IACgBA,GACnCnN,GAAK,EAKP,OAHIA,GAAK,GACPujB,GAAIG,KAAK,sBAEJ/N,WAUOi4F,GAAqB57F,EAAsB67F,mBAAmB,GACxEhpF,IAAOtB,GAAII,KAAK,uBAEpBrjB,IAAIwtG,GAAkB,EAKtB,GAJA97F,EAAUs4F,WAAU,SAAUpkG,GACxBA,EAAEyP,YAAWm4F,GAAkB,MAGjCA,EAAiB,CACnB/uG,IAAMkpG,EAAaj2F,EAAUi2F,WACvBxD,EAAazyF,EAAUyyF,WACvBC,EAAe1yF,EAAU0yF,aAiBzBngC,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,eAElB3R,EAAI,EACJmsG,EAAK,EACLqB,EAAS,EACTC,EAAO,EACLC,EAAyB,GAEJ,IAAvBvJ,EAAah4F,MACfuhG,EAAUttG,KAAK,CACbutG,OAAQ,EACRv4F,UAAW,IACXo4F,OAAQ,EACRI,OAAQ,IAGVn8F,EAAUo8F,aAAa,GAAG,SAAU7M,EAAmBC,GACrDlhG,IAAI+tG,GAAW,EAETC,EAAU/M,EAAIuE,aACdyI,EAAU/M,EAAIsE,aAGpBkI,EAAOzM,EAAI17F,MAEP07F,EAAI7pF,aAAe8pF,EAAI9pF,YAEhB6pF,EAAIqE,eAAiBpE,EAAIoE,aADlCyI,GAAW,ErD5Zc,IqD+ZhBC,GAAyBA,IAAYC,IAC9ChqC,EAAI1+D,MAAQ07F,EAAIiN,qBAChBhqC,EAAI3+D,MAAQ27F,EAAIiN,uBAEdJ,EADER,GACUtpC,EAAIihC,UAAUhhC,IAEdD,EAAIgK,YAAY/J,IAK3B6pC,GAAY7M,EAAI37F,QAAU6+F,EAAah4F,MAAQ,IAClD2hG,GAAW,EACXL,EAAOxM,EAAI37F,OAGTwoG,IACFJ,EAAUttG,KAAK,CACbutG,OAAQxB,EACR/2F,UAAWmoF,GAAav9F,GACxBwtG,OAAQA,EACRI,OAAQH,EAAOD,EAAS,IAG1BxtG,GAAK,EAEDghG,EAAI7pF,aAAe8pF,EAAI9pF,aACzBnX,EAAI,EACJmsG,GAAM,GAIJlL,EAAI37F,QAAU6+F,EAAah4F,MAAQ,GAAKshG,IAASxM,EAAI37F,OACvDooG,EAAUttG,KAAK,CACbutG,OAAQxB,EACR/2F,UAAWmoF,GAAav9F,GACxBwtG,OAAQrJ,EAAah4F,MAAQ,EAC7ByhG,OAAQ,IAIZJ,EAASvM,EAAI37F,MACbmoG,EAAOxM,EAAI37F,UAOjB4+F,EAAW/3F,MAAQ,EACnBuhG,EAAUzxF,SAAQ,SAAUkL,IA/FX,SAAUwmF,EAAgBv4F,EAAmB+4F,EAAiBP,GAE7E,IADApvG,IAAM8nF,EAAK4d,EAAW/3F,MACbnM,EAAI,EAAGA,EAAI4tG,IAAU5tG,EAC5BmkG,EAAaO,WAAYyJ,EAAUnuG,GAAMsmF,EAE3C4d,EAAWxwC,aACXwwC,EAAW/sF,WAAYmvE,GAAOqnB,EAC9BzJ,EAAW5G,aAAahX,EAAIlxE,GAC5B8uF,EAAW1G,WAAWlX,EAAIlxE,GAC1B8uF,EAAWvD,cAAera,GAAO6nB,EACjCjK,EAAWpG,aAAcxX,GAAOsnB,EAChC1J,EAAW/3F,OAAS,EACpBu7F,EAAW+E,WAAYkB,IAAY,EAoFnC3B,CAAS7kF,EAAEwmF,OAAQxmF,EAAE/R,UAAW+R,EAAEqmF,OAAQrmF,EAAEymF,WAG9C7tG,IAAIysG,EAAc,EAClB/6F,EAAU+a,WAAU,SAAUqnE,GAC5B6T,EAAW8E,YAAa3Y,EAAGvuF,OAAUknG,EACrC9E,EAAW+E,WAAY5Y,EAAGvuF,QAAW,EACrCknG,GAAe9E,EAAW+E,WAAY5Y,EAAGvuF,UAIzCgf,IAAOtB,GAAIK,QAAQ,gCAGT+qF,GAAgB38F,GAC1B6S,IAAOtB,GAAII,KAAK,kBAEpBirF,GAAqB58F,GACrB68F,GAAsB78F,GAElB6S,IAAOtB,GAAIK,QAAQ,kBAUzB7kB,IAAM+vG,GAA0C,CAC9C,aAAc,EACd,cAAe,EACf,aAAc,EACd,aAAc,EACd,cAAe,EACf,aAAc,EACd,aAAc,EACd,cAAe,EACf,cAAe,EACf,cAAe,EACf,aAAc,EACd,aAAc,EACd,aAAc,EACd,cAAe,EACf,aAAc,EACd,aAAc,EACd,aAAc,EAEd,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EAEX,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,WAAY,GAEd,SAASC,GAAuBv5F,EAAiBw5F,EAAmBC,SAElE,OADED,KAAyBA,EAAYC,EAAY,CAAED,EAAWC,GAAc,CAAEA,EAAWD,OAA9EC,OACT/rC,GAAIp2D,SAAS0I,IAA0B,MAAdw5F,GAAmC,MAAdC,GAC9C3rC,GAAMx2D,SAAS0I,IAA0B,QAAdw5F,GAAqC,MAAdC,EADsB,EAErEH,GAAmBt5F,MAAWw5F,MAAaC,IAAiB,WA+ErDL,GAAsB58F,EAAsBk9F,mBAAc,GACpErqF,IAAOtB,GAAII,KAAK,wBAEpB5kB,IAAM80E,EAAY7hE,EAAU6hE,UACtBs7B,EAAgBn9F,EAAUm9F,cAC1BC,EAAcp9F,EAAU0gE,YAAW,GACnCktB,EAAK5tF,EAAUE,eACfm0D,EAAKr0D,EAAUE,eACfuc,EAAKzc,EAAUk0D,eACfmpC,EAAcH,EAAc,cA1BEl9F,GAChC6S,IAAOtB,GAAII,KAAK,wBAEpB,IAAI0rF,EAA0B,GAW9B,OATAr9F,EAAU8c,UAAS,SAAUL,GAC3B,IAAIuuE,EAAMvuE,EAAGzb,WACTiqF,EAAMxuE,EAAGxb,gBACcxT,IAAvB4vG,EAAarS,KAAqBqS,EAAarS,GAAQ,IAC3DqS,EAAarS,GAAOC,GAAQxuE,EAAG5oB,SAG7Bgf,IAAOtB,GAAIK,QAAQ,wBAEhByrF,EAYkCC,CAAqBt9F,GAE9DA,EAAUs5D,aAAY,SAAU97D,GAC9B,IAAK0/F,GAAeG,EAAa,CAC/BtwG,IAAM2N,EAAQ8C,EAAEwe,UACVtb,EAASlD,EAAEoI,WAEjB,GAAIlL,EAAQ,IAEV,YADA6W,GAAIG,KAAK,qDAAsDlU,EAAE0xC,iBAUnE,IANAniD,IAAM6oG,EAAQp4F,EAAEq4F,WACVC,EAAeF,EAAME,aACrBC,EAAeH,EAAMG,aACrBwH,EAAa3H,EAAM2H,WACnBC,EAAK1H,EAAatnG,OAEfD,EAAI,EAAGA,EAAIivG,IAAMjvG,EAAG,CAC3BxB,IAAM0wG,EAAO3H,EAAcvnG,GACrBmvG,EAAO3H,EAAcxnG,GACrBy8F,EAAMyS,EAAO/8F,EACbuqF,EAAMyS,EAAOh9F,EACbuiC,EAAMo6D,EAAarS,GACzB,QAAYv9F,IAARw1C,QAAoCx1C,IAAfw1C,EAAKgoD,GAC5BxuE,EAAG5oB,MAAQovC,EAAKgoD,GAGhBsS,EAF6B//F,EAAEk9D,YAAYijC,aAAaF,EAAMC,IAEzBjhF,EAAGC,eAExCkxE,EAAG/5F,MAAQm3F,EACX32B,EAAGxgE,MAAQo3F,EAEXppB,EAAUkpB,QAAQ6C,EAAIv5B,EAAIkpC,EAAYhvG,KAM5CxB,IAAM6/F,EAAiBpvF,EAAEk9D,YAAYkyB,eAC/BgR,EAAmBpgG,EAAEk9D,YAAYkjC,kBACf,IAApBhR,IAA+C,IAAtBgR,IAC3BhQ,EAAG/5F,MAAQ2J,EAAEovF,eACbv4B,EAAGxgE,MAAQ2J,EAAEogG,iBACbT,EAAcpS,QAAQ6C,EAAIv5B,GAC1B+oC,EAAY19F,IAAIkuF,EAAG/5F,OACnBupG,EAAY19F,IAAI20D,EAAGxgE,WAIvBmM,EAAU69F,YAAYC,KAAOV,EAEzBvqF,IAAOtB,GAAIK,QAAQ,iCAGTirF,GAAuB78F,EAAsB+9F,EAAyBlC,mBAAP,mBAA0B,GACnGhpF,IAAOtB,GAAII,KAAK,yBAEpB5kB,IAAM80E,EAAY7hE,EAAU6hE,UACtBm8B,EAAoBh+F,EAAUg+F,kBAC9BC,EAAkBj+F,EAAU0gE,YAAW,GACvCnO,EAAMvyD,EAAUE,eAChBsyD,EAAMxyD,EAAUE,eAMtB,SAASgrF,EAAoBqE,EAAmBC,GAC9CziG,IAAMuvG,EAAU/M,EAAIuE,aACdyI,EAAU/M,EAAIsE,arDnsBW,IqDosB3BwI,GAAmCA,IAAYC,IACjDhqC,EAAI1+D,MAAQ07F,EAAIiN,qBAChBhqC,EAAI3+D,MAAQ27F,EAAIiN,wBACXZ,GAAoBtpC,EAAIihC,UAAUhhC,IAASD,EAAIgK,YAAY/J,MACzDurC,GACHl8B,EAAUkpB,QAAQx4B,EAAKC,EAAK,GAE9BD,EAAI1+D,MAAQ07F,EAAI3C,eAChBp6B,EAAI3+D,MAAQ27F,EAAI5C,eAChBoR,EAAkBjT,QAAQx4B,EAAKC,GAC/ByrC,EAAgBv+F,IAAI6yD,EAAI1+D,OACxBoqG,EAAgBv+F,IAAI8yD,EAAI3+D,SAlBE,IAA5BmqG,EAAkBtjG,OACpBsjG,EAAkBj8C,OAAO/hD,EAAU0yF,aAAah4F,OAsBlDsF,EAAUo8F,aAAa,EAAGlR,GAE1Bn+F,IAAMwiG,EAAMvvF,EAAU2sF,kBAChB6C,EAAMxvF,EAAU2sF,kBAYtB,GATA3sF,EAAUs4F,WAAU,SAAUhxD,GACJ,IAApBA,EAAG+kD,eACPkD,EAAI17F,MAAQyzC,EAAG4nD,cACfM,EAAI37F,MAAQyzC,EAAG4nD,cAAgB5nD,EAAG+kD,aAAe,EACjDnB,EAAmBsE,EAAKD,OAG1BvvF,EAAU69F,YAAYK,SAAWD,GAE5BF,EAAiB,CAChBlrF,IAAOtB,GAAII,KAAK,+BACpB5kB,IAAMkqE,EAAcj3D,EAAUi3D,YAC9Bj3D,EAAUs5D,aAAY,SAAUozB,GrDtuBD,IqDuuBzBA,EAAGoH,cAAyCpH,EAAG7nF,WACjD6nF,EAAG1xE,UAAS,SAAUoB,GAChBA,EAAG5W,WACPyxD,EAAapW,WAAWzkC,EAAGpkB,EAAGokB,EAAGnkB,EAAGmkB,EAAGd,EAAG,GAAG,SAAUnG,GACrDq9C,EAAI3+D,MAAQshB,EACRiH,EAAG1W,aAAe8sD,EAAI9sD,YACtB0W,EAAG+8C,eAAiB3G,EAAI2G,cACvB3G,EAAIhtD,WAEPq8D,EAAUqpB,mBAAmB9uE,EAAIo2C,EAAK,YAM5C3/C,IAAOtB,GAAIK,QAAQ,+BAGrBiB,IAAOtB,GAAIK,QAAQ,kCAGTusF,GAAuBn+F,GACrC,GAAKA,EAAU4uC,SAAf,CAEI/7B,IAAOtB,GAAII,KAAK,yBAEpB5kB,IAAMqxG,EAAKp+F,EAAU4uC,SAEfyvD,EAAsBr+F,EAAUyoB,OAAO8U,QAAQZ,aAAayhE,EAAGE,YAC/DC,EAAaF,EAAoB9gE,QAAQ7kC,QACzC8lG,WH/wB+BC,GACrC1xG,IAAM2xG,EAAmBrH,GAAcoH,GACjCE,EAAuC,GAE7C,QAAyBlxG,IAArBixG,EAEF,OADAloG,QAAQkb,oBAAoB+sF,kCACrBE,EAIT,IADA5xG,IAAM6xG,EAAY,GACTrwG,EAAI,EAAGk7B,EAAKi1E,EAAiBlwG,OAAQD,EAAIk7B,EAAIl7B,GAAK,EAAG,CAE5D,IADAxB,IAAM8xG,EAAQ,GACLlnG,EAAI,EAAGA,EAAI,IAAKA,EACvBknG,EAAMlwG,KAAK+nG,GAAWgI,EAAkBnwG,EAAIoJ,KAE9CinG,EAAUjwG,KAAKkwG,GAkDjB,OA/CAD,EAAUp0F,SAAQ,SAAUq0F,GAC1BvwG,IAAIq/E,EAAM,EACJzhD,GAAS,IAAIn2B,GAAU2J,IAC3B,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAELu4E,EAAK/rD,EAAOgsD,SAElBymB,EAAYE,EAAMvoG,YAAe41B,EAEjC2yE,EAAMr0F,SAAQ,SAAUmpB,GAItB,IAHArlC,IAAI8X,GAAS,EACT04F,GAAc,EAETvwG,EAAI,EAAG4M,EAAIw4B,EAAInlC,OAAQD,EAAI4M,IAAK5M,EAAG,CAC1CxB,IAAMmH,EAAIy/B,EAAKplC,GAEf,GAAU,MAAN2F,EACFkS,GAAS,OACJ,GAAU,MAANlS,EACTkS,GAAS,OACJ,GAAU,MAANlS,EACT4qG,GAAc,OACT,GAAU,MAAN5qG,EACT+jF,EAAI,EAAItK,GAAQvnE,GAAU,EAAI,OACzB,GAAU,MAANlS,EACT+jF,EAAI,EAAItK,GAAQvnE,GAAU,EAAI,OACzB,GAAU,MAANlS,EACT+jF,EAAI,EAAItK,GAAQvnE,GAAU,EAAI,OACzB,GAAIkxF,GAAUnoG,KAAK+E,GAAI,CAC5BnH,IAAMgyG,EAAU9jG,SAAS/G,GACrB4qG,EACF7mB,EAAI,GAAKtK,IAASoxB,EAElB9mB,EAAI,GAAKtK,GAAQoxB,OAGnBxtF,GAAIG,8CAA8Cxd,OAItDy5E,GAAO,QAIJgxB,EG8sBqCK,CAAsBZ,EAAGK,YAE/DQ,EAAkB,IAAIppG,EACtBqpG,EAAoB,IAAIrpG,EAyBxBspG,EAAmB,IAAI1H,GAAS,YAChC2H,EAAqBC,IACrBC,EAA2B,GACjC,GAAIt/F,EAAUu/F,WAAWC,IAAK,CAC5BF,EAAc3wG,cACZ,IAAIoH,UAAciK,EAAUu/F,WAAWC,IAAI1H,SAAU,GAAIH,aAE3D5qG,IAAM0yG,EAAmC,GACzCL,EAAmB50F,kBAAQktD,GACzB4nC,EAAc90F,kBAAQk1F,GACpBD,EAAsB9wG,KAAK+oE,EAAGn6B,QAAQ8N,SAASq0D,UAGnDP,EAAiBzH,QAAQ+H,QAEzBN,EAAiBzH,QAAQ0H,GAG3BryG,IAAM4yG,EAAM,IAAI9pG,EACV+pG,EAAoB,IAAInI,GAAS,aACjCoI,EAAsBpxG,MAAMqI,UAAUwe,OAAOvb,KACjDslG,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAC5B2/F,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAC5B2/F,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAE5B2/F,EAAcM,EAAIjgG,KAAK,EAAG,EAAG,IAC7B2/F,EAAcM,EAAIjgG,IAAI,GAAI,EAAG,IAC7B2/F,EAAcM,EAAIjgG,IAAI,EAAG,GAAI,IAE7B2/F,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAC5B2/F,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAC5B2/F,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAE5B2/F,EAAcM,EAAIjgG,KAAK,GAAI,EAAG,IAC9B2/F,EAAcM,EAAIjgG,KAAK,EAAG,GAAI,IAC9B2/F,EAAcM,EAAIjgG,IAAI,GAAI,GAAI,IAE9B2/F,EAAcM,EAAIjgG,IAAI,GAAI,GAAI,IAC9B2/F,EAAcM,EAAIjgG,IAAI,EAAG,GAAI,IAC7B2/F,EAAcM,EAAIjgG,IAAI,GAAI,EAAG,IAC7B2/F,EAAcM,EAAIjgG,KAAK,EAAG,EAAG,IAC7B2/F,EAAcM,EAAIjgG,KAAK,GAAI,EAAG,IAC9B2/F,EAAcM,EAAIjgG,KAAK,EAAG,GAAI,IAE9B2/F,EAAcM,EAAIjgG,IAAI,EAAG,GAAI,IAC7B2/F,EAAcM,EAAIjgG,IAAI,GAAI,EAAG,IAC7B2/F,EAAcM,EAAIjgG,IAAI,EAAG,GAAI,IAC7B2/F,EAAcM,EAAIjgG,KAAK,EAAG,EAAG,IAC7B2/F,EAAcM,EAAIjgG,IAAI,GAAI,EAAG,IAC7B2/F,EAAcM,EAAIjgG,KAAK,EAAG,EAAG,IAE7B2/F,IACAA,EAAcM,EAAIjgG,IAAI,EAAG,EAAG,IAC5B2/F,EAAcM,EAAIjgG,KAAK,GAAI,GAAI,KAEjC,GAAIM,EAAUu/F,WAAWC,IAAK,CAC5BzyG,IAAM+yG,EAAoC,GAC1CD,EAAoBr1F,SAAQ,SAAUktD,GACpC4nC,EAAc90F,SAAQ,SAAUk1F,GAC9BI,EAAuBnxG,KAAK+oE,EAAGn6B,QAAQ8N,SAASq0D,UAGpDE,EAAkBlI,QAAQoI,QAE1BF,EAAkBlI,QAAQmI,GAG5B7/F,EAAUu/F,WAAWQ,SAAWZ,EAChCn/F,EAAUu/F,WAAWS,UAAYJ,EAE7B/sF,IAAOtB,GAAIK,QAAQ,yBA7FvB,SAASytF,EAAe9qD,GACtBxnD,IAAM4qG,EAAwB,GAmB9B,OAjBA7pG,OAAOsL,KAAKolG,GAAWh0F,SAAQ,SAAUjO,GACvCxP,IAAMC,EAAIwxG,EAAWjiG,GAAOghC,QAE5B0hE,EAAgBryE,KAAKyxE,GAAqB1hE,aAAa3vC,GAAG0L,QAC1DwmG,EAAkBe,sBAAsBjzG,GACxCkyG,EAAkB3lD,IAAI0lD,GACtBC,EAAkBjiG,IAAIshG,GAElBhqD,GAAO2qD,EAAkBjiG,IAAIs3C,GAEjCvnD,EAAEkjD,YAAYgvD,GACdlyG,EAAEulC,iBAAiB6rE,EAAG8B,WAAYlzG,GAClCA,EAAEq+C,SAAS+yD,EAAGE,YAEd3G,EAAWhpG,KAAK3B,MAGX2qG,GA4EX5qG,IAAMyF,GAAO,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCC,GAAO,CAAE,KAAM,KAAM,eAEX0tG,GAAcC,GAC5B9xG,IAAI2/E,EAAKmyB,EAASl4F,OAAOU,cAErB3N,SAASgzE,EAAG9lE,OAAO,KAAO,IAAG8lE,EAAKA,EAAG7lE,OAAO,IAE5CnN,SAASgzE,EAAG9lE,OAAO,KAAO,IAAG8lE,EAAKA,EAAG7lE,OAAO,IAChDrb,IAAMoO,EAAI8yE,EAAGz/E,OAEb,GAAU,IAAN2M,EAAS,MAAO,GACpB,GAAU,IAANA,EAAS,OAAO8yE,EACpB,GAAU,IAAN9yE,EAAS,CACX,IAA0B,IAAtB1I,GAAK+H,QAAQyzE,GAAY,OAAOA,EACpC,IAA6B,IAAzBz7E,GAAKgI,QAAQyzE,EAAG,IAAY,OAAOA,EAAG,GAE5C,OAAI9yE,GAAK,IACsB,IAAzB3I,GAAKgI,QAAQyzE,EAAG,IAAmBA,EAAG,GAErC,YAQOoyB,GAAwBrgG,GAGtCjT,IAAM+lG,EAAW9yF,EAAU8yF,SACrBhvC,EAAagvC,EAAShvC,WACtBE,EAAc8uC,EAAS9uC,YACvBK,EAAayuC,EAASzuC,WACtB5nC,EAAKzc,EAAUk0D,eAErBl0D,EAAUs5D,aAAY,SAAUozB,GAC9B3/F,IAAM2tE,EAAcgyB,EAAGhyB,YACvB,QAA0BjtE,IAAtBitE,EAAYk7B,MAAhB,CAEA,IAAIhwF,EAAa8mF,EAAG9mF,WAChBkwF,EAAyB,GACzBC,EAAyB,GACzBwH,EAAuB,GACvB+C,EAAqC,GAEnCC,EAAiB36F,EAAa8mF,EAAG1wE,UAEvC0wE,EAAG1xE,UAAS,SAAUoB,GAIpB,IAHArvB,IAAM8G,EAAQuoB,EAAGvoB,MACX6M,EAASsjD,EAAanwD,GAEnBtF,EAAI,EAAGk7B,EADFq6B,EAAYjwD,GACEtF,EAAIk7B,IAAMl7B,EAAG,CACvCkuB,EAAG5oB,MAAQwwD,EAAY3jD,EAASnS,GAChCD,IAAIg2D,EAAO7nC,EAAGzb,WACd,KAAIsjD,EAAO1+C,GAAc0+C,GAAQi8C,GAAjC,CAIAjyG,IAAIi2D,EAAO9nC,EAAGxb,WACd,KAAIsjD,EAAO3+C,GAAc2+C,GAAQg8C,GAAjC,CAIA,GAAIj8C,EAAOC,EAAM,CACfx3D,IAAMk2C,EAAMshB,EACZA,EAAOD,EACPA,EAAOrhB,EAETl2C,IAAMm3B,EAAOogC,EAAO,IAAMC,OACD92D,IAArB6yG,EAAUp8E,KACZo8E,EAAUp8E,IAAS,EACnB4xE,EAAannG,KAAK21D,EAAO1+C,GACzBmwF,EAAapnG,KAAK41D,EAAO3+C,GACzB23F,EAAW5uG,KAAK8tB,EAAGC,kBAKzBg+C,EAAYk7B,MAAQ,CAClBE,aAAcA,EACdC,aAAcA,EACdwH,WAAYA,gBAOFiD,GAAkBjkG,iEAC5BsW,IAAQtB,GAAII,KAAM,oBAEtB5kB,IAAMmW,EAAI,IAAIu9F,GAAUlkG,EAAM,IACxBmkG,EAAK,IAAI3H,GAAiB71F,GAE1BmzD,EAAYnzD,EAAEmzD,UACd4E,EAAU/3D,EAAE+3D,QAClB5E,EAAUvU,SAAS,eAAgB,EAAG,QACtCuU,EAAUvU,SAAS,gBAAiB,EAAG,WAEvC/0D,IAAM4zG,EAAyC,GAE3CxrF,EAAM,EACN6G,EAAY,EACZ4kF,EAAa,EACjBC,EAAWr2F,kBAAQxK,GACjBA,EAAUgb,mBAASnrB,GACjBwmE,EAAUpU,aACVoU,EAAU0E,WAAY5lD,GAAQ8lD,EAAQh+D,IAAIpN,EAAEsT,SAAUtT,EAAE8C,SAExD0jE,EAAUr+D,EAAGmd,GAAQtlB,EAAEmI,EACvBq+D,EAAUp+D,EAAGkd,GAAQtlB,EAAEoI,EACvBo+D,EAAU/6C,EAAGnG,GAAQtlB,EAAEyrB,EACvB+6C,EAAUl7C,OAAQhG,GAAQtlB,EAAEsrB,OAC5Bk7C,EAAUj7C,aAAcjG,GAAQtlB,EAAEurB,aAClCi7C,EAAUg9B,cAAel+E,GAAQtlB,EAAEwjG,cACnCh9B,EAAUjzD,OAAQ+R,GAAQtlB,EAAEuT,OAC5BizD,EAAU96C,UAAWpG,GAAQtlB,EAAE0rB,UAC/B86C,EAAU76C,QAASrG,GAAQtlB,EAAE2rB,QAE7BklF,EAAG97C,QACD/0D,EAAE6V,WAAak7F,EACf/wG,EAAE8T,UACF9T,EAAEm8F,QACFn8F,EAAE2T,QACF3T,EAAE6T,MACW,IAAb7T,EAAEqrB,OACFrrB,EAAE4T,OACF5T,EAAE0T,SAGJo9F,EAAc9wG,EAAEgE,MAAQmoB,GAAa7G,EACrCA,GAAO,KAET6G,GAAahc,EAAUq2D,UAAU37D,MACjCkmG,GAAc5gG,EAAUi2F,WAAWv7F,SAGrC3N,IAAM80E,EAAY3+D,EAAE2+D,UACd+rB,EAAK1qF,EAAEhD,eACPm0D,EAAKnxD,EAAEhD,eAuBb,OArBA8b,EAAY,EACZ6kF,EAAWr2F,kBAAQxK,GACjBA,EAAU8c,mBAASvT,GACjBqkF,EAAG/5F,MAAQ8sG,EAAep3F,EAAEvI,WAAagb,GACzCq4C,EAAGxgE,MAAQ8sG,EAAep3F,EAAEtI,WAAa+a,GACzC6lD,EAAUkpB,QAAQ6C,EAAIv5B,EAAI9qD,EAAEmT,cAE9BV,GAAahc,EAAUq2D,UAAU37D,SAGnCgmG,EAAGxF,WAEH2B,GAAsB35F,GAAG,GACzB05F,GAAqB15F,GAAG,GAExBA,EAAE49F,gBACF59F,EAAE69F,gBACFV,GAAuBn9F,GAEnB2P,IAAQtB,GAAIK,QAAS,oBAElB1O,ECphCTnW,IAAMi0G,GAAe,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpCC,GAAsB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IAG3CC,GAAsB,CAAE,EAAG,GAAI,GAAI,IAGnCC,GAAoB,CAAE,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAG1CC,GAAa,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IAGlCC,GAAuB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGzEC,GAAa,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAGtCC,GAAW,CAAE,EAAG,GAAI,GAAI,GAAI,IAK5BC,GAWJ,SAAsBxhG,EAA+BmD,EAAkBxQ,GAAjDT,eAAA8N,EAA+B9N,cAAAiR,EACnDxQ,EAAUA,GAAWwtG,GAAah9F,GAElCjR,KAAKS,QAAUA,EACfT,KAAKoJ,OAASusD,GAAel1D,ItDSE,EsDR/BT,KAAKwsE,IAAMvP,GAAUj9D,KAAKoJ,StD2BE,EsD1B5BpJ,KAAKy0F,SAAWv3B,GAAel9D,KAAKoJ,StD+vBH,kBsD5vBnCq5F,6BACE5nG,IAAMmwD,EAAKmS,GAAUn9D,KAAKoJ,QAC1B,OAAO4hD,EAAKA,EAAI,ItD6yBU,gBsD1yB5B03C,0BACE,OAAOvlC,GAAUn9D,KAAKoJ,SAAY,iBAGpCu5F,sCACE,OAAOvlC,GAA0Bp9D,KAAKoJ,StD0yBI,gBsDvyB5CkK,mBACE,OACEtT,KAAKmiG,iBACLniG,KAAKoiG,wBACLpiG,KAAKuiG,gBACLviG,KAAKwiG,cACLxiG,KAAKwpE,qBACLxpE,KAAKsiG,sCAITP,sBACE,OACE/hG,KAAKiiG,sBACLjiG,KAAKkiG,wBACLliG,KAAKqiG,2BAITL,uBACE,OAAOoN,GAAWxmG,SAAS5I,KAAKoJ,sBAGlCkgE,qBACE,OAAO+lC,GAASzmG,SAAS5I,KAAKoJ,sBAGhC64F,8BACE,OAAOgN,GAAkBrmG,SAAS5I,KAAKoJ,sBAGzC84F,gCACE,OAAO8M,GAAoBpmG,SAAS5I,KAAKoJ,sBAG3C+4F,yBACE,OAAO2M,GAAalmG,SAAS5I,KAAKoJ,sBAGpCg5F,gCACE,OAAO2M,GAAoBnmG,SAAS5I,KAAKoJ,sBAG3Ci5F,sBACE,OAAO6M,GAAWtmG,SAAS5I,KAAKoJ,sBAGlCogE,6BACE3uE,IAAM00G,EAAKvvG,KAAKoJ,OAChB,OACGmmG,GAAM,IAAMA,GAAM,IAClBA,GAAM,IAAMA,GAAM,IAClBA,GAAM,IAAMA,GAAM,IAClBA,GAAM,KAAOA,GAAM,kBAIxBjN,iCACE,OAAO6M,GAAqBvmG,SAAS5I,KAAKoJ,sBAG5Cm5F,wBACE,OAAOviG,KAAKoJ,QAAU,IAAMpJ,KAAKoJ,QAAU,iBAG7Co5F,sBACE,OAAOxiG,KAAKoJ,QAAU,IAAMpJ,KAAKoJ,QAAU,KChI/C,IAAMomG,GAIJ,SAAsB1hG,GAAA9N,eAAA8N,EAHtB9N,UAAgC,GAChCA,UAAmB,GAGjBA,KAAK8N,UAAYA,gBAGnB/C,aAAKkG,EAAkBxQ,GAOrB5F,IAAMm3B,EAnBV,SAAkB/gB,EAAkBxQ,GAClC,OAAOwQ,EAAW,IAAMxQ,EAkBTgvG,CANbx+F,EAAWA,EAASyF,cAIlBjW,EAHGA,EAGOA,EAAQiW,cAFRu3F,GAAah9F,IAKrBtW,EAAKqF,KAAK0vG,KAAM19E,GACpB,QAAWz2B,IAAPZ,EAAkB,CACpBE,IAAMqmG,EAAW,IAAIoO,GAAStvG,KAAK8N,UAAWmD,EAAUxQ,GACxD9F,EAAKqF,KAAK66C,KAAKv+C,OACf0D,KAAK0vG,KAAM19E,GAASr3B,EACpBqF,KAAK66C,KAAKp+C,KAAKykG,GAEjB,OAAOvmG,gBAGT2P,aAAK3P,GACH,OAAOqF,KAAK66C,KAAMlgD,QCJDg1G,GAsCnB,SAAsB7hG,EAAsBwD,EAAiBw3D,EAA0B9/C,EAAiB4mF,EAAsBlM,GAAxG1jG,eAAA8N,EAXtB9N,8BAAqC,GAYnCA,KAAKsR,QAAUA,EACftR,KAAK8oE,eAAiBA,EACtB9oE,KAAKgpB,OAASA,EAAS,EAAI,EAC3BhpB,KAAK4vG,aAAeA,EACpB5vG,KAAK0jG,MAAQA,EACb1jG,KAAK8pB,UAAYg/C,EAAexsE,OAEhC0D,KAAK0hG,aAAe1hG,KAAK6vG,kBACzB7vG,KAAK4hG,aAAe5hG,KAAK8vG,gBAAgB,GACzC9vG,KAAK+vG,gBAAkB/vG,KAAK8vG,iBAAiB,GAC7C9vG,KAAKgwG,kBAAoBhwG,KAAK8vG,gBAAgB,GAC9C9vG,KAAKyhG,kBAAoBzhG,KAAKiwG,uBAE9Bp1G,IAAMq1G,EAAYxwC,GAAkB1/D,KAAK4hG,cACnCuO,EAAiBzwC,GAAkB1/D,KAAKgwG,mBACxCI,EAAe1wC,GAAkB1/D,KAAK+vG,iBAEtCM,EAAarwG,KAAKswG,mBAAmBJ,EAAUrwC,OACrD7/D,KAAK06F,eAAiBt/F,GAASi1G,GAAa,GAE5Cx1G,IAAM01G,EAAYvwG,KAAKswG,mBAAmBJ,EAAUpwC,YACpD9/D,KAAKwwG,oBAAsBp1G,GAASm1G,GAAY,GAEhD11G,IAAM41G,EAAYzwG,KAAKswG,mBAAmBJ,EAAUnwC,YACpD//D,KAAK0wG,oBAAsBt1G,GAASq1G,GAAY,GAEhD51G,IAAM81G,EAAe3wG,KAAKswG,mBAAmBH,EAAenwC,eAC5DhgE,KAAKuqG,uBAAyBnvG,GAASu1G,GAAe,GAEtD91G,IAGI+1G,EAHEC,EAAa7wG,KAAKswG,mBAAmBF,EAAanwC,aACxDjgE,KAAKsqG,qBAAuBlvG,GAASy1G,GAAa,GAIhDD,EADEzxC,GAAWv2D,SAAS0I,GACPtR,KAAKswG,mBAAmB,MAExBtwG,KAAKswG,mBAAmB,MAEzCtwG,KAAK0rG,iBAAmBtwG,GAASw1G,GAAe,iBAGlDX,gCACEp1G,IACIi2G,EADErP,EAA8B,GAEpC,OAAQzhG,KAAK0hG,cACX,KxDxGqB,EwDyGnBoP,EAAetxC,GACf,MACF,KxD1GiB,EwD2GjB,KxD1GiB,EwD2GfsxC,EAAerxC,GACf,MACF,QACE,OAAOgiC,EAIX,IAFA5mG,IAAMkuE,EAAU/oE,KAAK8N,UAAUi7D,QACzBD,EAAiB9oE,KAAK8oE,eACnBzsE,EAAI,EAAGk7B,EAAKv3B,KAAK8pB,UAAWztB,EAAIk7B,IAAMl7B,EAAG,CAChDxB,IAAMqmG,EAAWn4B,EAAQz+D,IAAIw+D,EAAgBzsE,IACzCy0G,EAAaloG,SAASs4F,EAASjwF,WACjCwwF,EAAkBhlG,KAAKJ,GAG3B,OAAOolG,gBAGToO,2BACE,OAAI7vG,KAAKmS,YxD9Hc,EwDgIZnS,KAAKuS,QxD/HG,EwDiIRvS,KAAKyS,QxDhIG,EwDkIRzS,KAAK2S,UxDtIK,EwDwIV3S,KAAKmT,QxDvIG,EwDyIRnT,KAAKqT,exDrIU,EANH,gBwDkJzBy8F,yBAAiB7nG,GACf,OAAIjI,KAAK+wG,mBAAmB9oG,GxDzIG,EwD2IpBjI,KAAKgxG,eAAe/oG,GxD1IJ,EwD4IhBjI,KAAKixG,eAAehpG,GxD3IJ,EwD6IhBjI,KAAKkxG,qBAAqBjpG,GxD5IJ,EwD8ItBjI,KAAKmxG,iBAAiBlpG,GxD7IJ,EwD+IlBjI,KAAKoxG,iBAAiBnpG,GxD9IJ,EANE,gBwD2JjCkK,qBACE,OAAInS,KAAK4vG,aACAz6C,GAAgBvsD,SAAS5I,KAAK4vG,cAGnC5vG,KAAKqxG,gBAAgB,KAAM,IAAK,MAChCryC,GAAIp2D,SAAS5I,KAAKsR,uBAKxBqwF,gBACE9mG,IAAM+mG,EAAe5hG,KAAK4hG,aAC1B,OxDpKiC,IwDqK/BA,GxDpK2B,IwDqK3BA,GxDpK2B,IwDqK3BA,gBAIJvvF,qBACE,OAAOrS,KAAKuS,SAAWvS,KAAKyS,sBAG9BF,iBACE,OAAIvS,KAAK4vG,aACAx6C,GAAYxsD,SAAS5I,KAAK4vG,cACR,IAAhB5vG,KAAKgpB,SAIZhpB,KAAKqxG,gBACH,CAAE,IAAK,MAAO,OAAS,CAAE,MAAO,OAAS,CAAE,MAAO,MAAO,MAAO,SAEjEpyC,GAASr2D,SAAS5I,KAAKsR,UACrBtR,KAAKqxG,gBAAgB,CAAE,MAAO,MAAO,MAAO,uBAKrD5+F,iBACE,OAAIzS,KAAK4vG,aACAv6C,GAAYzsD,SAAS5I,KAAK4vG,cACR,IAAhB5vG,KAAKgpB,SAIXhpB,KAAKqxG,gBAAgB,CAAE,IAAK,MAAO,OAAS,CAAE,MAAO,UACnDrxG,KAAKqxG,gBAAgB,CAAE,MAAO,MAAO,MAAO,SAC/CnyC,GAASt2D,SAAS5I,KAAKsR,wBAK7BW,oBACE,OAAuB,IAAhBjS,KAAKgpB,qBAGd7V,iBACE,OAAOmsD,GAAS12D,SAAS5I,KAAKsR,uBAGhCqB,mBACE,OAAO0sD,GAAWz2D,SAAS5I,KAAKsR,uBAGlC+B,wBACE,OAAIrT,KAAK4vG,aACAt6C,GAAmB1sD,SAAS5I,KAAK4vG,cAEjCrwC,GAAgB32D,SAAS5I,KAAKsR,uBAIzC83D,+BACE,OAAOpK,GAAIp2D,SAAS5I,KAAKsR,uBAG3B+3D,0BACE,OAAOjK,GAAMx2D,SAAS5I,KAAKsR,uBAG7BggG,0BAAkBrpG,EAAkBjD,GAClCnK,IAAMq1G,EAAYxwC,GAAkB16D,GACpC,OAAkB,IAAdiD,EACKjI,KAAKqxG,gBACVnB,EAAUrwC,MACVqwC,EAAUjwC,YACViwC,EAAUpwC,WACVowC,EAAUnwC,YAEU,IAAb93D,EACFjI,KAAKqxG,gBACVnB,EAAUrwC,MACVqwC,EAAUpwC,WACVowC,EAAUnwC,YAEU,IAAb93D,EACFjI,KAAKqxG,gBACVnB,EAAUrwC,MACVqwC,EAAUlwC,cACVkwC,EAAUpwC,WACVowC,EAAUnwC,YAGL//D,KAAKqxG,gBACVnB,EAAUrwC,MACVqwC,EAAUlwC,cACVkwC,EAAUjwC,YACViwC,EAAUpwC,WACVowC,EAAUnwC,0BAKhBgxC,4BAAoB9oG,GAClB,OACEjI,KAAKmS,aACLnS,KAAKsxG,iBAAiBrpG,ExDhRO,iBwDoRjC+oG,wBAAgB/oG,GACd,OACEjI,KAAKuS,SACLvS,KAAKsxG,iBAAiBrpG,ExDtRG,iBwD0R7BgpG,wBAAgBhpG,GACd,OACEjI,KAAKyS,SACLzS,KAAKsxG,iBAAiBrpG,ExD5RG,iBwDgS7BipG,8BAAsBjpG,GACpB,OACEjI,KAAK8pB,UAAY,GACjB9pB,KAAKmS,aACLnS,KAAKsxG,iBAAiBrpG,ExDnSS,iBwDuSnCkpG,0BAAkBlpG,GAChB,OACEjI,KAAK8pB,UAAY,IACjB9pB,KAAKuS,SACLvS,KAAKsxG,iBAAiBrpG,ExD1SK,iBwD8S/BmpG,0BAAkBnpG,GAChB,OACEjI,KAAK8pB,UAAY,IACjB9pB,KAAKyS,SACLzS,KAAKsxG,iBAAiBrpG,ExDjTK,iBwDqT/BspG,qBAAatpG,GACX,OACEjI,KAAK+wG,mBAAmB9oG,IACxBjI,KAAKgxG,eAAe/oG,IACpBjI,KAAKixG,eAAehpG,IACpBjI,KAAKkxG,qBAAqBjpG,IAC1BjI,KAAKmxG,iBAAiBlpG,IACtBjI,KAAKoxG,iBAAiBnpG,iBAI1BqoG,4BAAoBr/F,GAClBpW,IAAMoO,EAAIjJ,KAAK8pB,UACTi/C,EAAU/oE,KAAK8N,UAAUi7D,QACzBD,EAAiB9oE,KAAK8oE,eAC5B,GAAIvsE,MAAMC,QAAQyU,GAChB,IAAK7U,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAM8G,EAAQmnE,EAAgBzsE,GAC9B,GAAI4U,EAASrI,SAASmgE,EAAQz+D,IAAI3I,GAAOsP,UACvC,OAAO5U,OAIX,IAAKD,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAM8G,EAAQmnE,EAAgBzsE,GAC9B,GAAI4U,IAAa83D,EAAQz+D,IAAI3I,GAAOsP,SAClC,OAAO5U,iBAOfg1G,kFAEE,IADAx2G,IAAMoO,EAAIinG,EAAU5zG,OACXD,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB,QAAuBd,IAAnB20G,EAAW7zG,SACiCd,IAA5CyE,KAAKswG,mBAAmBJ,EAAW7zG,IACrC,OAAO,EAGX,OAAO,gBAGTsnG,kBAAUr4F,GAIR,YAHmB/P,IAAfyE,KAAK0jG,QACP1jG,KAAK0jG,eH+L4Bp4F,GACrCzQ,IAAMiT,EAAYxC,EAAEwC,UACd4tF,EAAK5tF,EAAUE,eACfm0D,EAAKr0D,EAAUE,eAEfxF,EAAQ8C,EAAEwe,UACVtb,EAASlD,EAAEoI,WAEX89F,EADMhjG,EAAShG,EACF,EAEbo7F,EAAe,GACfC,EAAe,GACfwH,EAAa,GAEnB,GAAI7iG,EAAQ,IACNmY,IAAOtB,GAAIG,KAAK,qDAAsDlU,EAAE0xC,sBAE5E,GAAIx0C,EAAQ,GAIV,IAHA3N,IAAMupG,EAAS,IAAIhG,GAAO9yF,GAAG,GACvBowC,EAASpwC,EAAEq2F,OAAS,IAAM,IAEvBtlG,EAAImS,EAAQnS,EAAIm1G,IAAQn1G,EAAG,CAClCq/F,EAAG/5F,MAAQtF,EAIX,IAHAxB,IAAM42G,EAAO/V,EAAGjH,SAAW/4C,EAAS,GAC9Bg2D,EAAetN,EAAO9E,QAAQ5D,EAAWhzF,EAAAA,EAAU+oG,EAAOA,GAC1D32G,EAAI42G,EAAap1G,OACdmJ,EAAI,EAAGA,EAAI3K,IAAK2K,EACvB08D,EAAGxgE,MAAQ+vG,EAAcjsG,GAAI9D,MACzB+5F,EAAG/5F,MAAQwgE,EAAGxgE,OACZ+5F,EAAGrxB,YAAYlI,KACjByhC,EAAannG,KAAKi/F,EAAG/5F,MAAQ6M,GAC7Bq1F,EAAapnG,KAAK0lE,EAAGxgE,MAAQ6M,GAC7B68F,EAAW5uG,KAAKouG,GAAsBnP,EAAGpqF,QAASoqF,EAAGzqF,SAAUkxD,EAAGlxD,iBAM1E,IAAK7U,IAAIC,EAAImS,EAAQnS,EAAIm1G,IAAQn1G,EAAG,CAClCq/F,EAAG/5F,MAAQtF,EACX,IAAKD,IAAIqJ,EAAIpJ,EAAI,EAAGoJ,GAAK+rG,IAAQ/rG,EAC/B08D,EAAGxgE,MAAQ8D,EACPi2F,EAAGrxB,YAAYlI,KACjByhC,EAAannG,KAAKJ,EAAImS,GACtBq1F,EAAapnG,KAAKgJ,EAAI+I,GACtB68F,EAAW5uG,KAAKouG,GAAsBnP,EAAGpqF,QAASoqF,EAAGzqF,SAAUkxD,EAAGlxD,YAO5E,MAAO,CACL2yF,aAAcA,EACdC,aAAcA,EACdwH,WAAYA,GGtPGsG,CAAsBrmG,IAE9BtL,KAAK0jG,oBAGdj7B,oBAIE,YAHmBltE,IAAfyE,KAAK+nE,OACP/nE,KAAK4xG,iBAEA5xG,KAAK+nE,oBAGd8pC,wBAIE,YAHuBt2G,IAAnByE,KAAK8xG,WACP9xG,KAAK+xG,qBAEA/xG,KAAK8xG,wBAGdE,qBAAar0G,GAIX,YAH2BpC,IAAvByE,KAAKiyG,eACPjyG,KAAKkyG,kBAAkBlyG,KAAK8N,UAAU2sF,gBAAgB,EAAKxzB,eAEtDjnE,KAAKiyG,4BAGdjqC,0BAAkB18D,GAIhB,YAH2B/P,IAAvByE,KAAKmyG,eACPnyG,KAAKkyG,kBAAkB5mG,GAElBtL,KAAKmyG,4BAOdJ,8BAOE,IANAl3G,IAAMi3G,EAAuB9xG,KAAK8xG,UAAY,GACxCpO,EAAQ1jG,KAAK2jG,WACbyO,EAAK1O,EAAME,aAAatnG,OACxBsnG,EAAeF,EAAME,aACrBC,EAAeH,EAAMG,aAElBxnG,EAAI,EAAGA,EAAI+1G,IAAM/1G,EAAG,CAC3BxB,IAAMi+F,EAAM8K,EAAavnG,GACnB08F,EAAM8K,EAAaxnG,IAEdy1G,EAAWhZ,GAAQgZ,EAAWhZ,IAAS,IAC/Cr8F,KAAKs8F,IAEG+Y,EAAW/Y,GAAQ+Y,EAAW/Y,IAAS,IAC/Ct8F,KAAKq8F,kBAOZ8Y,0BAIE,IAHA/2G,IACM83D,EA8RV,SAAyB+wC,EAAkB2O,GAczC,IAbAx3G,IAAM83D,EAAQ,CACZnqD,MAAO6pG,EACPC,QAAS,IAAI5vG,WAAW2vG,GACxBjwD,MAAO,IAAI1/C,WAAW2vG,GACtBE,KAAM,IAAI7vG,WAAW2vG,GACrB7kE,KAAM,IAAI9qC,WAAW8vG,IACrB/kE,MAAO,IAAI/qC,WAAW8vG,IACtBjkG,MAAO,IAAI7L,WAAW2vG,GACtBI,aAAc,EACd1qC,MAAO,GACP+5B,UAAW,SACX4B,GAEOrnG,EAAI,EAAGA,EAAIg2G,EAAUh2G,IAC5Bs2D,EAAM2/C,QAAQj2G,IAAM,EACpBs2D,EAAM4/C,KAAKl2G,IAAM,EAEnB,OAAOs2D,EAhTS+/C,CADI1yG,KAAK6xG,eACkB7xG,KAAK8pB,WAErCztB,EAAI,EAAGA,EAAIs2D,EAAMnqD,MAAOnM,IAC3Bs2D,EAAM2/C,QAAQj2G,IAAM,GACxBs2G,GAAUhgD,EAAOt2D,GAGnB2D,KAAK+nE,MAAQ,CAAE+5B,UAAWnvC,EAAMmvC,UAAW/5B,MAAOpV,EAAMoV,qBAG1Dh2D,oBAAYrD,GAEV,OADA1O,KAAKiyG,cAAgBjyG,KAAKgyG,YAAYtjG,GAC6B,IAA5D1O,KAAKiyG,cAAcvjG,EAAK/M,MAAQ+M,EAAKk6D,iCAG9CspC,2BAAmB5mG,cACX2mG,EAAgBjyG,KAAKiyG,cAAgB,IAAItvG,WAAW3C,KAAK8pB,WACzDi+C,EAAQ/nE,KAAKyoE,WAAYV,MAEzB6qC,EAAoB7qC,EAAM7wD,cAAI+wD,GAClC,OAwHN,SAAyBA,GACvB,GAAIA,EAAKU,eAAKhrE,UAAMk1G,GAAqBjqG,SAASjL,EAAEyL,WAAU,OAAO,EAErEhN,IAAIC,EAAI,EACF+S,EAAS,IAAIypE,GAAO,EAAG5Q,EAAK3rE,QAC5By9E,EAAK3qE,EAAO7R,KAWlB,OATA0qE,EAAK3vD,kBAAQ3a,GACXo8E,EAAI19E,EAAI,GAAMsB,EAAEmI,EAChBi0E,EAAI19E,EAAI,GAAMsB,EAAEoI,EAChBg0E,EAAI19E,EAAI,GAAMsB,EAAEyrB,EAChB/sB,GAAK,KAGI,IAAIy4F,GAAc1lF,GAEnB4mF,KAAK15F,SAlBsB,IAtH1Bw2G,CAAe7qC,EAAK/wD,cAAI+L,GAC7B,OAAOjjB,EAAK8N,UAAUE,aAAaiV,EAAM3X,EAAEoI,mBAIzCy+F,EAA4BnyG,KAAKmyG,cAAgB,GACvDpqC,EAAMzvD,kBAAS2vD,EAAM5rE,GACfu2G,EAAkBv2G,KACpB81G,EAAc11G,KAAKwrE,GACnBA,EAAK3vD,kBAAQ2K,UAAOgvF,EAAchvF,GAAO,uBAS/C8vF,0CACEl4G,IAAMi3G,EAAY9xG,KAAK6xG,eACjB9pC,EAAQ/nE,KAAKyoE,WACbq5B,EAAY/5B,EAAM+5B,UAClBv5B,EAAWR,EAAMA,MAEjB27B,EAAQ1jG,KAAK0jG,MACbE,EAAeF,EAAME,aACrBC,EAAeH,EAAMG,aACrBwH,EAAa3H,EAAM2H,WACnB2H,EAA2BhzG,KAAKgzG,yBAEhCZ,EAAK1O,EAAME,aAAatnG,OAE9B02G,EAAyB12G,OAAS,EAElC,IAAKF,IAAIC,EAAI,EAAGA,EAAI+1G,IAAM/1G,EAExB,KAAIgvG,EAAWhvG,IAAM,GAArB,CAEAD,IAAI62G,SAEEna,EAAM8K,EAAavnG,GACnB08F,EAAM8K,EAAaxnG,GAEnB62G,EAASpR,EAAWhJ,GACpBqa,EAASrR,EAAW/I,GAE1B,GAAIma,GAAUC,EAEZ,IAAK/2G,IAAIg3G,EAAM,EAAGA,EAAMF,EAAO52G,OAAQ82G,IACrC,IAAuC,IAAnCD,EAAO7qG,QAAQ4qG,EAAQE,IAAe,CACxCH,EAAU1qC,EAAU2qC,EAAQE,IAC5B,MAMN,GAAItB,EAAWhZ,GAAMx8F,OAAS,EAC5B,IAAKF,IAAIqJ,EAAI,EAAGA,EAAIqsG,EAAWhZ,GAAMx8F,SAAUmJ,EAAG,CAChD5K,IAAMw4G,EAAMvB,EAAWhZ,GAAOrzF,GAC9B,GAAI4tG,IAAQta,SACMx9F,IAAZ03G,IAAmD,IAA1BA,EAAQ3qG,QAAQ+qG,IAAY,CACvDL,EAAyB32G,GAAKg3G,EAC9B,YAID,GAAIvB,EAAW/Y,GAAMz8F,OAAS,EACnC,IAAKF,IAAIqJ,EAAI,EAAGA,EAAIqsG,EAAW/Y,GAAMz8F,SAAUmJ,EAAG,CAChD5K,IAAMw4G,EAAMvB,EAAW/Y,GAAOtzF,GAC9B,GAAI4tG,IAAQva,SACMv9F,IAAZ03G,IAAmD,IAA1BA,EAAQ3qG,QAAQ+qG,IAAY,CACvDL,EAAyB32G,GAAKg3G,EAC9B,uBAQZ5H,sBAAc38F,EAAoBC,GAOhC,IANAlU,IAAM6oG,EAAQ1jG,KAAK0jG,MACbE,EAAeF,EAAME,aACrBC,EAAeH,EAAMG,aACvBzxC,EAAOwxC,EAAat7F,QAAQwG,GAC5BujD,EAAOwxC,EAAav7F,QAAQyG,GAC1BukG,EAAQjhD,GACG,IAAVD,GAAa,CAClB,MAAiB,IAAVC,GAAa,CAClB,GAAID,IAASC,EAAM,OAAOD,EAC1BC,EAAOwxC,EAAav7F,QAAQyG,EAAYsjD,EAAO,GAEjDD,EAAOwxC,EAAat7F,QAAQwG,EAAYsjD,EAAO,GAC/CC,EAAOihD,iBAKXC,mCAA2BzkG,EAAoBC,GAC7ClU,IAAM24G,EAAYxzG,KAAKyrG,aAAa38F,EAAYC,GAChD,QAAkBxT,IAAdi4G,EAIJ,OAH6C,IAAzCxzG,KAAKgzG,yBAAyB12G,QAChC0D,KAAK+yG,iCAEA/yG,KAAKgzG,yBAA0BQ,IAM1C34G,IAAMg4G,GAAuB,kCAoC7B,SAASY,GAAQ9gD,EAAwBh1D,EAAW0Z,GAElD,KAAIA,EAAI1Z,GAAR,CAOA,IALQ,0CACFm3E,IAAOniB,EAAM8/C,aAEfiB,EAAU/1G,EAELuO,EAAI,EAAGA,EAAIsmG,KAClBjkG,EAAMmlG,GAAW5+B,KACjB4+B,EAAUnB,EAAKmB,IACD,IAHwBxnG,KAMxC9P,IAAIu3G,EAAa,EACbC,EAAc,EAEdC,GAAQ,EACRj1G,EAAS,EACb80G,EAAUr8F,EACV,IAAKjb,IAAI8P,EAAI,EAAGA,EAAIsmG,GAAoBtmG,IAAK,CAC3C,GAAIqC,EAAMmlG,KAAa5+B,EAAI,CACzBl2E,EAAS80G,EACTG,GAAQ,EACR,MAIF,GAFApmE,EAAMmmE,KAAiBF,GACvBA,EAAUnB,EAAKmB,IACD,EAAG,MAEnB,GAAKG,EAAL,CAEAH,EAAU/1G,EACV,IAAKvB,IAAI8P,EAAI,EAAGA,EAAIsmG,KAClBhlE,EAAKmmE,KAAgBD,EACjB90G,IAAW80G,OACfA,EAAUnB,EAAKmB,IACD,GAJwBxnG,KAUxC,IAHArR,IAAMi5G,EAAKH,EAAaC,EAClB3rC,EAAiB,IAAI1rE,MAAMu3G,GAC7BC,EAAa,EACR7nG,EAAI,EAAGA,EAAIynG,EAAYznG,IAC9B+7D,EAAK8rC,KAAgBvmE,EAAKthC,GAE5B,IAAK9P,IAAI8P,EAAI0nG,EAAc,EAAG1nG,GAAK,EAAGA,IACpC+7D,EAAK8rC,KAAgBtmE,EAAMvhC,GAK7B,IAFArR,IAAMmtG,EAAKr1C,EAAMoV,MAAMzrE,OAEdD,EAAI,EAAGA,EAAIy3G,IAAMz3G,EAAG,CAC3BxB,IAAM+1C,EAAKq3B,EAAK5rE,GACZs2D,EAAMmvC,UAAUlxD,GAClB+hB,EAAMmvC,UAAUlxD,GAAIn0C,KAAKurG,GAEzBr1C,EAAMmvC,UAAUlxD,GAAM,CAACo3D,GAI3Br1C,EAAMoV,MAAMtrE,KAAKwrE,KAGnB,SAAS0qC,GAAUhgD,EAAwBzpD,GACjC,6CAERopG,EAAQppG,GAAQ,EAChBk5C,EAAM,GAAKl5C,EAKX,IAHA9M,IAAI43G,EAAO,EACPv7E,EAAO,EAEJu7E,EAAOv7E,GAAM,CAClB59B,IAAM6yC,EAAM0U,EAAM4xD,KAElB,QAAmBz4G,IAAfmoG,EAAMh2D,GAKV,IAFA7yC,IAAM0nB,EAAMmhF,EAAMh2D,GAAKpxC,OAEdD,EANK,EAMMA,EAAIkmB,EAAKlmB,IAAK,CAChCxB,IAAMo1D,EAAQyzC,EAAMh2D,GAAKrxC,GAErBi2G,EAAQriD,GAAS,EACfsiD,EAAKtiD,KAAWviB,GAAO6kE,EAAK7kE,KAASuiB,GACvCwjD,GAAQ9gD,EAAOjlB,EAAKuiB,IAKxBqiD,EAAQriD,GAAS,EACjB7N,EAAM3pB,KAAUw3B,EAChBsiD,EAAKtiD,GAASviB,KAKpB7yC,IAAM23G,GAAqB,ECprB3B,IAAMyB,GAIJ,SAAsBnmG,GAAA9N,eAAA8N,EAHtB9N,UAAgC,GAChCA,UAAsB,iBAItB+K,aAAKuG,EAAiBw3D,EAA0B9/C,EAAiB4mF,EAAmBlM,kBAAJ,IAE9E7oG,IAAMm3B,EAjBV,SAAkB1gB,EAAiBw3D,EAA0B9/C,EAAiB4mF,GAC5E,sBAD2F,IAEzFt+F,EAAU,IACVw3D,EAAe1mE,KAAK,KAAO,KAC1B4mB,EAAS,EAAI,GAAK,IACnB4mF,EAYaH,CADbn+F,EAAUA,EAAQoF,cACYoyD,EAAgB9/C,EAAQ4mF,GAClDj1G,EAAKqF,KAAK0vG,KAAM19E,GACpB,QAAWz2B,IAAPZ,EAAkB,CACpBE,IAAM2tE,EAAc,IAAImnC,GACtB3vG,KAAK8N,UAAWwD,EAASw3D,EAAgB9/C,EAAQ4mF,EAAclM,GAEjE/oG,EAAKqF,KAAK66C,KAAKv+C,OACf0D,KAAK0vG,KAAM19E,GAASr3B,EACpBqF,KAAK66C,KAAKp+C,KAAK+rE,GAEjB,OAAO7tE,gBAGT2P,aAAK3P,GACH,OAAOqF,KAAK66C,KAAMlgD,IC1BtB,IAAMu5G,GAeJ,SAAsBpmG,EAAsBnM,kBAAQ,GAA9B3B,eAAA8N,EACpB9N,KAAK2B,MAAQA,EACb3B,KAAK2vE,UAAY7hE,EAAU6hE,UAE3B3vE,KAAKm0G,KAAO,IAAIxwG,EAChB3D,KAAKo0G,KAAO,IAAIzwG,EAChB3D,KAAKq0G,KAAOr0G,KAAK8N,UAAUE,eAC3BhO,KAAKs0G,KAAOt0G,KAAK8N,UAAUE,eAC3BhO,KAAKu0G,KAAOv0G,KAAK8N,UAAUE,2JAM7B/C,GAAIgwC,qBACF,OAAOj7C,KAAK8N,UAAUE,aAAahO,KAAK8O,aAM1C7D,GAAIkwC,qBACF,OAAOn7C,KAAK8N,UAAUE,aAAahO,KAAK+O,aAM1C9D,GAAI6D,0BACF,OAAO9O,KAAK2vE,UAAU7gE,WAAY9O,KAAK2B,QAEzCsJ,GAAI6D,wBAAYzT,GACd2E,KAAK2vE,UAAU7gE,WAAY9O,KAAK2B,OAAUtG,GAM5C4P,GAAI8D,0BACF,OAAO/O,KAAK2vE,UAAU5gE,WAAY/O,KAAK2B,QAEzCsJ,GAAI8D,wBAAY1T,GACd2E,KAAK2vE,UAAU5gE,WAAY/O,KAAK2B,OAAUtG,GAM5C4P,GAAIuf,yBACF,OAAOxqB,KAAK2vE,UAAUnlD,UAAWxqB,KAAK2B,QAExCsJ,GAAIuf,uBAAWnvB,GACb2E,KAAK2vE,UAAUnlD,UAAWxqB,KAAK2B,OAAUtG,gBAG3Cm5G,2BAAmB5lD,GACjB,OAAOA,IAAc5uD,KAAK8O,WAAa9O,KAAK+O,WAAa/O,KAAK8O,yBAGhEszD,sBAAc1zD,GACZ,OAAO1O,KAAK8N,UAAUE,aAAahO,KAAKw0G,kBAAkB9lG,EAAK/M,sBAOjE8yG,iCACE55G,IAAMwlE,EAAMrgE,KAAKq0G,KACX/zC,EAAMtgE,KAAKs0G,KAGjB,GAFAj0C,EAAI1+D,MAAQ3B,KAAK8O,WACjBwxD,EAAI3+D,MAAQ3B,KAAK+O,WACbsxD,EAAI4G,eAAiB3G,EAAI2G,aAA7B,CAGApsE,IAAM65G,EAAiBr0C,EAAI1+D,MAAQ0+D,EAAIuI,kBACjC+rC,EAAiBr0C,EAAI3+D,MAAQ2+D,EAAIsI,kBAEjCxZ,EADciR,EAAImI,YACD+qC,0BAA0BmB,EAAgBC,GACjE,QAAWp5G,IAAP6zD,EACF,OAAOA,EAAKiR,EAAIuI,kBAEhBtkE,QAAQkb,KAAK,0BAA2B6gD,EAAI1+D,MAAO2+D,EAAI3+D,sBAS3DizG,2BAAmBlxG,kBAAI,IAAIC,GACzB9I,IAAMwlE,EAAMrgE,KAAKq0G,KACX/zC,EAAMtgE,KAAKs0G,KACXO,EAAM70G,KAAKu0G,KACXxzC,EAAM/gE,KAAKm0G,KACXW,EAAM90G,KAAKo0G,KAEjB/zC,EAAI1+D,MAAQ3B,KAAK8O,WACjBwxD,EAAI3+D,MAAQ3B,KAAK+O,WACjBlU,IAAMw4G,EAAMrzG,KAAKy0G,wBAEjB1zC,EAAIL,WAAWL,EAAYC,GAAY9zD,iBAC3BjR,IAAR83G,GACFwB,EAAIlzG,MAAQ0xG,EACZyB,EAAIp0C,WAAWL,EAAYw0C,IAE3BC,EAAIp6E,KAAK2lC,GAEXy0C,EAAItoG,YAGJpQ,IAAIi2E,EAAKtR,EAAIq2B,IAAI0d,GAUjB,OATI,EAAIlvG,KAAKK,IAAIosE,GAAM,OACrByiC,EAAItnG,IAAI,EAAG,EAAG,GACd6kE,EAAKtR,EAAIq2B,IAAI0d,GACT,EAAIlvG,KAAKK,IAAIosE,GAAM,OACrByiC,EAAItnG,IAAI,EAAG,EAAG,GACd6kE,EAAKtR,EAAIq2B,IAAI0d,KAIVpxG,EAAEg3B,KAAKo6E,EAAIztD,IAAI0Z,EAAIhoB,eAAes5B,KAAM7lE,0BAGjDwwC,yBACE,OAAOh9C,KAAK8O,WAAa,IAAM9O,KAAK+O,yBAOtCs8B,iBACE,OAAO,IAAI6oE,GAAUl0G,KAAK8N,UAAW9N,KAAK2B,qBAG5CqiG,oBACE,MAAO,CACLl1F,WAAY9O,KAAK8O,WACjBC,WAAY/O,KAAK+O,WACjByb,UAAWxqB,KAAKwqB,qDCxItB,IAAMuqF,GAcJ,SAAsBjnG,EAAsBnM,kBAAQ,GAA9B3B,eAAA8N,EACpB9N,KAAK2B,MAAQA,EACb3B,KAAKugG,WAAazyF,EAAUyyF,WAC5BvgG,KAAKwgG,aAAe1yF,EAAU0yF,aAC9BxgG,KAAKmkE,UAAYr2D,EAAUq2D,UAC3BnkE,KAAKygG,WAAa3yF,EAAU2yF,WAC5BzgG,KAAK+oE,QAAUj7D,EAAUi7D,41BAO3B99D,GAAI4I,sBACF,OAAO7T,KAAK8N,UAAU+yF,WAAY7gG,KAAK8gG,cAEzC71F,GAAI61F,2BACF,OAAO9gG,KAAKugG,WAAWO,YAAa9gG,KAAK+gG,aAM3C91F,GAAI4L,qBACF,OAAO7W,KAAK8N,UAAUknG,cAAch1G,KAAK+gG,aAG3C91F,GAAI81F,0BACF,OAAO/gG,KAAKwgG,aAAaO,WAAY/gG,KAAK2B,QAE5CsJ,GAAI81F,wBAAY1lG,GACd2E,KAAKwgG,aAAaO,WAAY/gG,KAAK2B,OAAUtG,GAG/C4P,GAAIyI,0BACF,OAAO1T,KAAKwgG,aAAa9sF,WAAY1T,KAAK2B,QAE5CsJ,GAAIyI,wBAAYrY,GACd2E,KAAKwgG,aAAa9sF,WAAY1T,KAAK2B,OAAUtG,GAO/C4P,GAAI6e,yBACF,OAAO9pB,KAAKwgG,aAAa12E,UAAW9pB,KAAK2B,QAE3CsJ,GAAI6e,uBAAWzuB,GACb2E,KAAKwgG,aAAa12E,UAAW9pB,KAAK2B,OAAUtG,GAG9C4P,GAAI0I,uBACF,OAAO3T,KAAK0T,WAAa1T,KAAK8pB,UAAY,GAK5C7e,GAAIuI,0BACF,OAAOxT,KAAKugG,WAAW/sF,WAAYxT,KAAK+gG,aAM1C91F,GAAIwG,yBACF,OAAOzR,KAAKugG,WAAW3G,aAAa55F,KAAK+gG,aAM3C91F,GAAI6uF,uBACF,OAAO95F,KAAKugG,WAAWxG,WAAW/5F,KAAK+gG,aASzC91F,GAAIuG,qBACF,OAAOxR,KAAKwgG,aAAahvF,MAAOxR,KAAK2B,QAEvCsJ,GAAIuG,mBAAOnW,GACT2E,KAAKwgG,aAAahvF,MAAOxR,KAAK2B,OAAUtG,GAO1C4P,GAAIsG,sBACF,OAAOvR,KAAKwgG,aAAajH,UAAUv5F,KAAK2B,QAE1CsJ,GAAIsG,oBAAQlW,GACV2E,KAAKwgG,aAAalH,UAAUt5F,KAAK2B,MAAOtG,IAO1C4P,GAAIoG,uBACF,OAAOrR,KAAKwgG,aAAa/G,WAAWz5F,KAAK2B,QAE3CsJ,GAAIoG,qBAAShW,GACX2E,KAAKwgG,aAAahH,WAAWx5F,KAAK2B,MAAOtG,IAK3C4P,GAAIu9D,2BACF,OAAOxoE,KAAKygG,WAAWn2F,IAAItK,KAAKwgG,aAAaS,cAAejhG,KAAK2B,SAOnEsJ,GAAIqG,uBACF,OAAOtR,KAAKwoE,YAAYl3D,SAM1BrG,GAAI+d,sBACF,OAAOhpB,KAAKwoE,YAAYx/C,QAE1B/d,GAAIy2F,4BACF,OAAO1hG,KAAKwoE,YAAYk5B,cAE1Bz2F,GAAI22F,4BACF,OAAO5hG,KAAKwoE,YAAYo5B,cAE1B32F,GAAI+kG,iCACF,OAAOhwG,KAAKwoE,YAAYwnC,mBAE1B/kG,GAAI8kG,+BACF,OAAO/vG,KAAKwoE,YAAYunC,iBAE1B9kG,GAAIyvF,8BACF,OAAO16F,KAAKwoE,YAAYkyB,eAAiB16F,KAAK0T,YAEhDzI,GAAIulG,mCACF,OAAOxwG,KAAKwoE,YAAYgoC,oBAAsBxwG,KAAK0T,YAErDzI,GAAIylG,mCACF,OAAO1wG,KAAKwoE,YAAYkoC,oBAAsB1wG,KAAK0T,YAErDzI,GAAIs/F,sCACF,OAAOvqG,KAAKwoE,YAAY+hC,uBAAyBvqG,KAAK0T,YAExDzI,GAAIq/F,oCACF,OAAOtqG,KAAKwoE,YAAY8hC,qBAAuBtqG,KAAK0T,YAEtDzI,GAAIygG,gCACF,OAAO1rG,KAAKwoE,YAAYkjC,iBAAmB1rG,KAAK0T,YAKlDzI,GAAInF,iBAEF,IADA1J,IAAI0J,EAAI,EACCzJ,EAAI2D,KAAK0T,WAAYrX,GAAK2D,KAAK2T,UAAWtX,EACjDyJ,GAAK9F,KAAKmkE,UAAUr+D,EAAGzJ,GAEzB,OAAOyJ,EAAI9F,KAAK8pB,WAGlB7e,GAAIlF,iBAEF,IADA3J,IAAI2J,EAAI,EACC1J,EAAI2D,KAAK0T,WAAYrX,GAAK2D,KAAK2T,UAAWtX,EACjD0J,GAAK/F,KAAKmkE,UAAUp+D,EAAG1J,GAEzB,OAAO0J,EAAI/F,KAAK8pB,WAGlB7e,GAAIme,iBAEF,IADAhtB,IAAIgtB,EAAI,EACC/sB,EAAI2D,KAAK0T,WAAYrX,GAAK2D,KAAK2T,UAAWtX,EACjD+sB,GAAKppB,KAAKmkE,UAAU/6C,EAAG/sB,GAEzB,OAAO+sB,EAAIppB,KAAK8pB,wBAWlBhB,kBAAU/jB,EAAmCiP,GAC3CnZ,IAAM2N,EAAQxI,KAAK8pB,UACbtb,EAASxO,KAAK0T,WACdwW,EAAKlqB,KAAK8N,UAAUuzF,IACpB9+E,EAAM/T,EAAShG,EAErB,GAAIwL,GAAaA,EAAU4D,aAEzB,IADA/c,IAAM+c,EAAe5D,EAAU4D,aACtBvb,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9B6tB,EAAGvoB,MAAQtF,EACPub,EAAasS,IAAKnlB,EAASmlB,QAGjC,IAAK9tB,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9B6tB,EAAGvoB,MAAQtF,EACX0I,EAASmlB,iBAafg5E,yBAAiBhnG,EAAyBsS,GAKxC,sBALoC,mBAAa,GACjDtS,EAAOsS,EAAS,GAAMxO,KAAK8F,EAC3B5J,EAAOsS,EAAS,GAAMxO,KAAK+F,EAC3B7J,EAAOsS,EAAS,GAAMxO,KAAKopB,EAEpBltB,gBASTiW,qBACE,O3D/QuB,I2D+QhBnS,KAAKwoE,YAAYk5B,2BAO1BrvF,qBACExX,IAAM6mG,EAAe1hG,KAAKwoE,YAAYk5B,aACtC,O3DvRmB,I2DuRZA,G3DtRY,I2DsRgBA,gBAOrCnvF,iBACE,O3D/RmB,I2D+RZvS,KAAKwoE,YAAYk5B,2BAO1BjvF,iBACE,O3DtSmB,I2DsSZzS,KAAKwoE,YAAYk5B,2BAO1BC,gBACE9mG,IAAM+mG,EAAe5hG,KAAKwoE,YAAYo5B,aACtC,O3DvSiC,I2DwS/BA,G3DvS2B,I2DwS3BA,G3DvS2B,I2DwS3BA,gBAQJlvF,qBACE,GAAI1S,KAAK8N,UAAU+yF,WAAWvkG,OAAS,EACrC,OAAO0D,KAAK6T,OAAOnB,YAEnB7X,IAAM6mG,EAAe1hG,KAAKwoE,YAAYk5B,aACtC,O3DjUqB,I2DkUnBA,G3DjUe,I2DkUfA,G3DjUe,I2DkUfA,gBASNzvF,oBACE,OAAmC,IAA5BjS,KAAKwoE,YAAYx/C,qBAO1BrW,mBACE,O3DxVqB,I2DwVd3S,KAAKwoE,YAAYk5B,2BAO1BvuF,iBACE,O3D/VmB,I2D+VZnT,KAAKwoE,YAAYk5B,2BAO1BruF,wBACE,O3DnW0B,I2DmWnBrT,KAAKwoE,YAAYk5B,2BAG1Bt4B,+BACE,OAAOppE,KAAKwoE,YAAYY,oCAG1BC,0BACE,OAAOrpE,KAAKwoE,YAAYa,+BAO1Bx2D,mBACE,OAAO2iD,GAAc5sD,SAAS5I,KAAKuR,sBAOrCwB,mBACE,OAAO0iD,GAAc7sD,SAAS5I,KAAKuR,sBAOrC0B,kBACE,OAAOyiD,GAAa9sD,SAAS5I,KAAKuR,SAAWvR,KAAKmS,0BAGpD8iG,qBAAatzG,GACX,OAAO3B,KAAK+oE,QAAQz+D,IAAItK,KAAKmkE,UAAU0E,WAAYlnE,kBAGrDuzG,uBAEE,OAAOr2C,GAAK7+D,KAAKsR,QAAQoF,gBAAmB,kBAG9Co5F,yBAAiB7nG,GACf,OAAQA,GACN,KAAM,EACJ,OAAOjI,KAAKwoE,YAAYwnC,kBAC1B,KAAK,EACH,OAAOhwG,KAAKwoE,YAAYunC,gBAC1B,QACE,OAAO/vG,KAAKwoE,YAAYo5B,4BAI9B0O,4BAAoBr/F,GAClB7U,IAAIuF,EAAQ3B,KAAKwoE,YAAY8nC,mBAAmBr/F,GAIhD,YAHc1V,IAAVoG,IACFA,GAAS3B,KAAK0T,YAET/R,gBAGT0vG,yBAAiBpgG,GACf,OAAOjR,KAAKwoE,YAAY6oC,gBAAgBpgG,iBAG1CkkG,2BACE7wG,QAAQkb,KAAK,wCAKb,IAHA3kB,IAAMoO,EAAIjJ,KAAK8pB,UACTtb,EAASxO,KAAK0T,WACdmnC,EAAO,IAAIt+C,MAAM0M,GACd5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBw+C,EAAMx+C,GAAM2D,KAAKi1G,YAAYzmG,EAASnS,GAAG4U,SAE3C,OAAO4pC,gBAQTwvB,qBAAa+qC,GACXv6G,IAAMw6G,EAAYr1G,KAAK8N,UAAUE,aAAahO,KAAKsqG,sBAC7CgL,EAAct1G,KAAK8N,UAAUE,aAAaonG,EAAM7K,wBACtD,SAAI8K,IAAaC,IACRD,EAAUhrC,YAAYirC,iBAMjCC,mCACE16G,IAAM2vG,EAAUxqG,KAAKugG,WAAWvD,cAAeh9F,KAAK+gG,YAC9CkJ,EAASjqG,KAAKugG,WAAWpG,aAAcn6F,KAAK+gG,YAC5C55F,EAAYnH,KAAK2B,MAAQ,EAC/B,GAAIwF,EAAYqjG,EAAUP,EAAQ,CAChCpvG,IAAM26G,EAASx1G,KAAK8N,UAAU2sF,gBAAgBtzF,GAC9C,GAAInH,KAAKqqE,YAAYmrC,GACnB,OAAOA,OAEJ,GAAIruG,IAAcqjG,EAAUP,EAAQ,CACzCpvG,IAAM46G,EAAUz1G,KAAK8N,UAAU2sF,gBAAgB+P,GAC/C,GAAIxqG,KAAKqqE,YAAYorC,GACnB,OAAOA,iBAMbC,qCAA6BC,GAC3B96G,IAAM2vG,EAAUxqG,KAAKugG,WAAWvD,cAAeh9F,KAAK+gG,YAC9C6U,EAAY51G,KAAK2B,MAAQ,EAC/B,GAAIi0G,GAAapL,EAAS,CACxB3vG,IAAMg7G,EAASz6G,GAASu6G,EAAc31G,KAAK8N,UAAU2sF,mBAErD,GADAob,EAAOl0G,MAAQi0G,EACXC,EAAOxrC,YAAYrqE,MACrB,OAAO61G,OAEJ,GAAID,IAAcpL,EAAU,EAAG,CACpC3vG,IAAMovG,EAASjqG,KAAKugG,WAAWpG,aAAcn6F,KAAK+gG,YAC5C+U,EAAS16G,GAASu6G,EAAc31G,KAAK8N,UAAU2sF,mBAErD,GADAqb,EAAOn0G,MAAQ6oG,EAAUP,EAAS,EAC9B6L,EAAOzrC,YAAYrqE,MACrB,OAAO81G,iBAMbnS,oBACE,OAAO3jG,KAAKwoE,YAAYm7B,SAAS3jG,oBAGnCyoE,oBACE,OAAOzoE,KAAKwoE,YAAYC,yBAG1BT,4BACE,OAAOhoE,KAAKwoE,YAAYR,iBAAiBhoE,oBAG3Cg9C,uBAAe8mD,mBAAY,GACzB1nG,IAAIiO,EAAO,GAMX,OALIrK,KAAKsR,UAAYwyF,IAAWz5F,GAAQ,IAAMrK,KAAKsR,QAAU,UAC1C/V,IAAfyE,KAAKwR,QAAqBnH,GAAQrK,KAAKwR,OACvCxR,KAAKqR,UAAShH,GAAQ,IAAMrK,KAAKqR,SACjCrR,KAAK6W,QAAOxM,GAAQ,IAAMrK,KAAKyR,WACnCpH,GAAQ,IAAMrK,KAAKwT,yBAQrB63B,iBACE,OAAO,IAAI0pE,GAAa/0G,KAAK8N,UAAW9N,KAAK2B,qBAG/CqiG,oBACE,MAAO,CACLriG,MAAO3B,KAAK2B,MACZo/F,WAAY/gG,KAAK+gG,WACjBrtF,WAAY1T,KAAK0T,WACjBoW,UAAW9pB,KAAK8pB,UAEhBtY,MAAOxR,KAAKwR,MACZF,QAAStR,KAAKsR,QACdC,OAAQvR,KAAKuR,kDC7gBnB,IAAMwkG,GAmBJ,SAAsBjoG,EAA+BysF,EAAoCyb,GAAnEh2G,eAAA8N,EAA+B9N,uBAAAu6F,EAAoCv6F,qBAAAg2G,EACvFh2G,KAAKugG,WAAazyF,EAAUyyF,WAC5BvgG,KAAKwgG,aAAe1yF,EAAU0yF,aAC9BxgG,KAAKmkE,UAAYr2D,EAAUq2D,UAK3BnkE,KAAKm6F,aAAe6b,EAAkBzb,EAAoB,EAE1D1/F,IAAMo7G,EAAUj2G,KAAK8N,UAAU2sF,gBAAgBz6F,KAAKu6F,mBAC9C2b,EAAQl2G,KAAK8N,UAAU2sF,gBAAgBz6F,KAAKg2G,iBAClDh2G,KAAKm2G,qBAA4D56G,IAA1C06G,EAAQP,8BAC/B76G,IAAM26G,EAASU,EAAMX,0BACrBv1G,KAAKo2G,qBAA6B76G,IAAXi6G,EACvBx1G,KAAKq2G,yBAAiC96G,IAAXi6G,QAA6Dj6G,IAArCi6G,EAAOD,0BAC1Dv1G,KAAKs2G,SAAWJ,EAAM7rC,YAAY4rC,GAElCj2G,KAAKu2G,eAAiBv2G,KAAK8N,UAAU2sF,8GAKvCxvF,GAAI81F,0BACF,OAAO/gG,KAAKwgG,aAAaO,WAAY/gG,KAAKu6F,oBAE5CtvF,GAAIuI,0BACF,OAAOxT,KAAKugG,WAAW/sF,WAAYxT,KAAK+gG,aAM1C91F,GAAIwG,yBACF,OAAOzR,KAAKugG,WAAW3G,aAAa55F,KAAK+gG,0BAS3C5uF,qBAEE,OADAnS,KAAKu2G,eAAe50G,MAAQ3B,KAAKu6F,kBAC1Bv6F,KAAKu2G,eAAepkG,0BAO7BwvF,gBAEE,OADA3hG,KAAKu2G,eAAe50G,MAAQ3B,KAAKu6F,kBAC1Bv6F,KAAKu2G,eAAe5U,qBAO7BtvF,qBAEE,OADArS,KAAKu2G,eAAe50G,MAAQ3B,KAAKu6F,kBAC1Bv6F,KAAKu2G,eAAelkG,0BAG7Bw9F,2BAEE,OADA7vG,KAAKu2G,eAAe50G,MAAQ3B,KAAKu6F,kBAC1Bv6F,KAAKu2G,eAAe7U,2BAG7BoO,yBAAiB7nG,GAEf,OADAjI,KAAKu2G,eAAe50G,MAAQ3B,KAAKu6F,kBAC1Bv6F,KAAKu2G,eAAezG,gBAAgB7nG,iBAG7C0zF,4BAAoBh6F,EAAeqD,GAG7BhF,KAAKs2G,UACQ,IAAX30G,EACFA,EAAQ3B,KAAKm6F,aAAe,EACnBx4F,IAAU3B,KAAKm6F,eACxBx4F,EAAQ,KAGK,IAAXA,GAAiB3B,KAAKm2G,kBAAiBx0G,GAAS,GAChDA,IAAU3B,KAAKm6F,cAAiBn6F,KAAKq2G,sBAAqB10G,GAAS,IAIzE9G,IAEI27G,EAFEhc,EAAKx6F,KAAKu2G,eAIhB,OAHA/b,EAAG74F,MAAQ3B,KAAKu6F,kBAAoB54F,EAG5BqD,GACN,IAAK,QACHwxG,EAAShc,EAAGE,eACZ,MACF,IAAK,aACH8b,EAAShc,EAAGgW,oBACZ,MACF,IAAK,aACHgG,EAAShc,EAAGkW,oBACZ,MACF,QACE8F,EAAShc,EAAG8V,mBAAmBtrG,GAYnC,OAAOwxG,gBAST1tF,kBAAU/jB,EAAmCiP,GAC3ChU,KAAKonE,aAAY,SAAUozB,GACzBA,EAAG1xE,SAAS/jB,EAAUiP,oBAI1ByiG,mBAAWxtG,EAAWlE,EAA6CC,GAIjE,IAHAnK,IAAMC,EAAIkF,KAAKm6F,aACTj+F,EAAqB,IAAIK,MAAM0M,GAE5B5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAM2D,KAAK8N,UAAUE,aAAahO,KAAK27F,mBAAmBt/F,EAAG2I,IAEtED,EAASjF,MAAME,KAAM9D,GAErB,IAAK,IAAIuJ,EAAIwD,EAAGxD,EAAI3K,IAAK2K,EAAG,CAC1B,IAAKrJ,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,EAAI,GAAIsF,MAAQzF,EAAOG,GAAIsF,MAEpCzF,EAAO+M,EAAI,GAAItH,MAAQ3B,KAAK27F,mBAAmBl2F,EAAGT,GAClDD,EAASjF,MAAME,KAAM9D,kBASzBkrE,qBAAariE,GAKX,IAJAlK,IAAM2/F,EAAKx6F,KAAK8N,UAAU2sF,kBACpBxxF,EAAIjJ,KAAKm6F,aACTuc,EAAc12G,KAAKu6F,kBAEhBl+F,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBm+F,EAAG74F,MAAQ+0G,EAAcr6G,EACzB0I,EAASy1F,iBAIbx9C,yBACEniD,IAAMo7G,EAAUj2G,KAAK8N,UAAU2sF,gBAAgBz6F,KAAKu6F,mBAC9C2b,EAAQl2G,KAAK8N,UAAU2sF,gBAAgBz6F,KAAKg2G,iBAClD,OAAOC,EAAQj5D,gBAAkB,MAAQk5D,EAAMl5D,0DC3LnD,IAAM25D,GAUJ,SAAsB7oG,EAAsBnM,kBAAQ,GAA9B3B,eAAA8N,EACpB9N,KAAK2B,MAAQA,EACb3B,KAAKugG,WAAazyF,EAAUyyF,WAC5BvgG,KAAKwgG,aAAe1yF,EAAU0yF,oWAOhCv1F,GAAI4I,sBACF,OAAO7T,KAAK8N,UAAU+yF,WAAY7gG,KAAK8gG,cAMzC71F,GAAIyG,qBACF,OAAO1R,KAAK8N,UAAU8oG,cAAc52G,KAAKwT,aAG3CvI,GAAI61F,2BACF,OAAO9gG,KAAKugG,WAAWO,YAAa9gG,KAAK2B,QAE3CsJ,GAAI61F,yBAAazlG,GACf2E,KAAKugG,WAAWO,YAAa9gG,KAAK2B,OAAUtG,GAG9C4P,GAAIuI,0BACF,OAAOxT,KAAKugG,WAAW/sF,WAAYxT,KAAK2B,QAE1CsJ,GAAIuI,wBAAYnY,GACd2E,KAAKugG,WAAW/sF,WAAYxT,KAAK2B,OAAUtG,GAG7C4P,GAAI+xF,6BACF,OAAOh9F,KAAKugG,WAAWvD,cAAeh9F,KAAK2B,QAE7CsJ,GAAI+xF,2BAAe3hG,GACjB2E,KAAKugG,WAAWvD,cAAeh9F,KAAK2B,OAAUtG,GAOhD4P,GAAIkvF,4BACF,OAAOn6F,KAAKugG,WAAWpG,aAAcn6F,KAAK2B,QAE5CsJ,GAAIkvF,0BAAc9+F,GAChB2E,KAAKugG,WAAWpG,aAAcn6F,KAAK2B,OAAUtG,GAG/C4P,GAAI4rG,0BACF,OAAO72G,KAAKg9F,cAAgBh9F,KAAKm6F,aAAe,GAGlDlvF,GAAIyI,0BACF,OAAO1T,KAAKwgG,aAAa9sF,WAAY1T,KAAKg9F,gBAE5C/xF,GAAI0I,uBACF,OACE3T,KAAKwgG,aAAa9sF,WAAY1T,KAAK62G,YACnC72G,KAAKwgG,aAAa12E,UAAW9pB,KAAK62G,YAAe,GAOrD5rG,GAAI6e,yBACF,OAA0B,IAAtB9pB,KAAKm6F,aACA,EAEAn6F,KAAK2T,QAAU3T,KAAK0T,WAAa,GAU5CzI,GAAIwG,yBACF,OAAOzR,KAAKugG,WAAW3G,aAAa55F,KAAK2B,QAE3CsJ,GAAIwG,uBAAWpW,GACb2E,KAAKugG,WAAW5G,aAAa35F,KAAK2B,MAAOtG,IAO3C4P,GAAI6uF,uBACF,OAAO95F,KAAKugG,WAAWxG,WAAW/5F,KAAK2B,QAEzCsJ,GAAI6uF,qBAASz+F,GACX2E,KAAKugG,WAAW1G,WAAW75F,KAAK2B,MAAOtG,iBAWzCytB,kBAAU/jB,EAAmCiP,GAC3ChU,KAAKonE,aAAY,SAAUozB,GACzBA,EAAG1xE,SAAS/jB,EAAUiP,KACrBA,iBASLozD,qBAAariE,EAAsCiP,GACjDnZ,IAAM2N,EAAQxI,KAAKm6F,aACb3rF,EAASxO,KAAKg9F,cACdxC,EAAKx6F,KAAK8N,UAAUgpG,IACpBv0F,EAAM/T,EAAShG,EAErB,GAAIwL,GAAaA,EAAU/W,KAAM,CAC/BpC,IAAMgd,EAAkB7D,EAAU6D,gBAClC,GAAIA,EACF,IAAKzb,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9Bm+F,EAAG74F,MAAQtF,EACPwb,EAAgB2iF,IAClBz1F,EAASy1F,QAIb,IAAKp+F,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9Bm+F,EAAG74F,MAAQtF,EACX0I,EAASy1F,QAIb,IAAKp+F,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9Bm+F,EAAG74F,MAAQtF,EACX0I,EAASy1F,iBAWf0P,sBAAcjhG,EAAWlE,GACvBlK,IAAM2N,EAAQxI,KAAKm6F,aACb3rF,EAASxO,KAAKg9F,cACdz6E,EAAM/T,EAAShG,EACrB,KAAIA,EAAQS,GAAZ,CAGA,IAFApO,IAAMqB,EAAwB,IAAIK,MAAM0M,GAE/B5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAM2D,KAAK8N,UAAU2sF,gBAAgBjsF,EAASnS,GAEvD0I,EAASjF,MAAME,KAAM9D,GAErB,IAAKE,IAAIqJ,EAAI+I,EAASvF,EAAGxD,EAAI8c,IAAO9c,EAAG,CACrC,IAAKrJ,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAIsF,OAAS,EAEtBoD,EAASjF,MAAME,KAAM9D,mBAUzBmtG,qBAAatkG,EAAgCiP,GAkB3C,IAjBA5X,IAAIs6G,EAAc,EACdK,EAAa,EACX95G,EAAO+W,EAAYA,EAAU6D,qBAAkBtc,EAC/CuS,EAAY9N,KAAK0R,MAAM5D,UAEvBtF,EAAQxI,KAAKm6F,aACb3rF,EAASxO,KAAKg9F,cACdz6E,EAAM/T,EAAShG,EAEf60F,EAAMr9F,KAAK8N,UAAU2sF,kBACrB6C,EAAMt9F,KAAK8N,UAAU2sF,gBAAgBjsF,GAErC6xD,EAAMrgE,KAAK8N,UAAUE,eACrBsyD,EAAMtgE,KAAK8N,UAAUE,eAEvBgpG,GAAQ,EAEH36G,EAAImS,EAAS,EAAGnS,EAAIkmB,IAAOlmB,EAAG,CACrCghG,EAAI17F,MAAQ27F,EAAI37F,MAChB27F,EAAI37F,MAAQtF,EAEZxB,IAAMuvG,EAAU4M,EAAQ3Z,EAAI0S,gBAAkB1S,EAAIuE,aAC5CyI,EAAU/M,EAAIsE,aAEhBoV,IACFN,EAAcrZ,EAAI17F,MAClBq1G,GAAQ,GAEVD,EAAazZ,EAAI37F,M7D9NY,I6DgOzByoG,GAAmCA,IAAYC,GACjDhqC,EAAI1+D,MAAQ07F,EAAIiN,qBAChBhqC,EAAI3+D,MAAQ27F,EAAIiN,uBAablqC,GAAQC,GAAQD,EAAIgK,YAAY/J,MAClCrjE,GAAUA,EAAKogG,IAASpgG,EAAKqgG,MAE1BD,EAAI17F,MAAQ+0G,EAAc,GAE5B3xG,EAAS,IAAIgxG,GAAQjoG,EAAW4oG,EAAarZ,EAAI17F,QAEnD+0G,EAAcK,K7DtPa,I6DoOvB3M,GACE/M,EAAI17F,MAAQ+0G,EAAc,GAE5B3xG,EAAS,IAAIgxG,GAAQjoG,EAAW4oG,EAAarZ,EAAI17F,QAGrD+0G,EAAcK,GAgBdA,EAAaL,EAAc,GACzB12G,KAAK8N,UAAU2sF,gBAAgBic,GAAa3G,iBAE9ChrG,EAAS,IAAIgxG,GAAQjoG,EAAW4oG,EAAaK,kBAOnD/5D,yBAEE,MADW,IAAMh9C,KAAKyR,UAAY,IAAMzR,KAAKwT,yBAQ/C63B,iBACE,OAAO,IAAIsrE,GAAW32G,KAAK8N,UAAW9N,KAAK2B,qBAG7CqiG,oBACE,MAAO,CACLriG,MAAO3B,KAAK2B,MACZq7F,cAAeh9F,KAAKg9F,cACpB7C,aAAcn6F,KAAKm6F,aAEnB1oF,UAAWzR,KAAKyR,qDCzRtB,IAAMwlG,GAWJ,SAAsBnpG,EAAsBnM,kBAAQ,GAA9B3B,eAAA8N,EACpB9N,KAAK2B,MAAQA,EACb3B,KAAK+jG,WAAaj2F,EAAUi2F,WAC5B/jG,KAAKugG,WAAazyF,EAAUyyF,WAC5BvgG,KAAKwgG,aAAe1yF,EAAU0yF,wRAGhCv1F,GAAI49F,2BACF,OAAO7oG,KAAK+jG,WAAW8E,YAAa7oG,KAAK2B,QAE3CsJ,GAAI49F,yBAAaxtG,GACf2E,KAAK+jG,WAAW8E,YAAa7oG,KAAK2B,OAAUtG,GAG9C4P,GAAI69F,0BACF,OAAO9oG,KAAK+jG,WAAW+E,WAAY9oG,KAAK2B,QAE1CsJ,GAAI69F,wBAAYztG,GACd2E,KAAK+jG,WAAW+E,WAAY9oG,KAAK2B,OAAUtG,GAG7C4P,GAAI+xF,6BACF,OAAOh9F,KAAKugG,WAAWvD,cAAeh9F,KAAK6oG,cAE7C59F,GAAIyI,0BACF,OAAO1T,KAAKwgG,aAAa9sF,WAAY1T,KAAKg9F,gBAG5C/xF,GAAIisG,wBACF,OAAOl3G,KAAK6oG,YAAc7oG,KAAK8oG,WAAa,GAE9C79F,GAAI4rG,0BACF,OACE72G,KAAKugG,WAAWvD,cAAeh9F,KAAKk3G,UACpCl3G,KAAKugG,WAAWpG,aAAcn6F,KAAKk3G,UAAa,GAGpDjsG,GAAI0I,uBACF,OACE3T,KAAKwgG,aAAa9sF,WAAY1T,KAAK62G,YACnC72G,KAAKwgG,aAAa12E,UAAW9pB,KAAK62G,YAAe,GAQrD5rG,GAAIkvF,4BACF,OAAwB,IAApBn6F,KAAK8oG,WACA,EAEA9oG,KAAK62G,WAAa72G,KAAKg9F,cAAgB,GAQlD/xF,GAAI6e,yBACF,OAA0B,IAAtB9pB,KAAKm6F,aACA,EAEAn6F,KAAK2T,QAAU3T,KAAK0T,WAAa,gBAY5CoV,kBAAU/jB,EAAmCiP,GAC3ChU,KAAKomG,WAAU,SAAUhxD,GACvBA,EAAGtsB,SAAS/jB,EAAUiP,KACrBA,iBASLozD,qBAAariE,EAAsCiP,GACjDhU,KAAKomG,WAAU,SAAUhxD,GACvBA,EAAGgyB,YAAYriE,EAAUiP,KACxBA,iBASLq1F,qBAAatkG,EAAgCiP,GAC3C,GAAIA,GAAaA,EAAU8D,cAAe,CACxCjd,IAAMid,EAAgB9D,EAAU8D,cAEhC9X,KAAKomG,WAAU,SAAUhxD,GACnBt9B,EAAcs9B,IAChBA,EAAGi0D,YAAYtkG,EAAUiP,WAI7BhU,KAAKomG,WAAU,SAAUhxD,GACvBA,EAAGi0D,YAAYtkG,EAAUiP,oBAW/BoyF,mBAAWrhG,EAAoCiP,GAC7CnZ,IAAM2N,EAAQxI,KAAK8oG,WACbt6F,EAASxO,KAAK6oG,YACdzzD,EAAKp1C,KAAK8N,UAAUqpG,IACpB50F,EAAM/T,EAAShG,EAErB,GAAIwL,GAAaA,EAAU/W,KAAM,CAC/BpC,IAAMid,EAAgB9D,EAAU8D,cAChC,GAAIA,EACF,IAAK1b,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9B+4C,EAAGzzC,MAAQtF,EACPyb,EAAcs9B,IAChBrwC,EAASqwC,QAIb,IAAKh5C,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9B+4C,EAAGzzC,MAAQtF,EACX0I,EAASqwC,QAIb,IAAKh5C,IAAIC,EAAImS,EAAQnS,EAAIkmB,IAAOlmB,EAC9B+4C,EAAGzzC,MAAQtF,EACX0I,EAASqwC,iBAOf4H,yBAEE,MADa,IAAMh9C,KAAK2B,oBAQ1B0pC,iBACE,OAAO,IAAI4rE,GAAWj3G,KAAK8N,UAAW9N,KAAK2B,qBAG7CqiG,oBACE,MAAO,CACLriG,MAAO3B,KAAK2B,MACZknG,YAAa7oG,KAAK6oG,YAClBC,WAAY9oG,KAAK8oG,0DCvEjByF,GASJ,SAAalkG,EAAW+a,kBAAJ,mBAAW,IAR/BplB,aAA4B,CAC1Bo3G,UAAW,IAAI3hG,IAQfzV,KAAKwkD,KAAKn6C,EAAM+a,6CAGlBo/B,cAAMn6C,EAAc+a,GAClBplB,KAAKqK,KAAOA,EACZrK,KAAKolB,KAAOA,EACZplB,KAAK4pB,MAAQ,GACb5pB,KAAKrF,GAAK,GAEVqF,KAAKzC,K5D1IA,W4D0IkByC,K5DxIvB,sBAAkBzE,EAClB,qBAAiBA,G4DyIjByE,KAAKonF,OAAS,GACdpnF,KAAKq3G,UAAY,GAEjBr3G,KAAKs3G,aAAe,GACpBt3G,KAAK2rG,YAAc,GACnB3rG,KAAKqtG,WAAa,GAElBrtG,KAAK6gG,WAAa,GAClB7gG,KAAK08C,cAAWnhD,EAEhByE,KAAKqxB,OAAS,GACdrxB,KAAKu3G,MAAQ,GAEbv3G,KAAKmwE,gBAAa50E,EAElByE,KAAK2vE,UAAY,IAAIipB,GAAU,GAC/B54F,KAAK8rG,kBAAoB,IAAIlT,GAAU,GACvC54F,KAAKirG,cAAgB,IAAIrS,GAAU,GACnC54F,KAAKmkE,UAAY,IAAI80B,GAAU,GAC/Bj5F,KAAKwgG,aAAe,IAAInH,GAAa,GACrCr5F,KAAKugG,WAAa,IAAI7G,GAAW,GACjC15F,KAAK+jG,WAAa,IAAI/J,GAAW,GAEjCh6F,KAAK+oE,QAAU,IAAIymC,GAAQxvG,MAC3BA,KAAKygG,WAAa,IAAIwT,GAAWj0G,MAEjCA,KAAK4gG,cAAWrlG,EAChByE,KAAK+kE,iBAAcxpE,EAEnByE,KAAKyyD,aAAUl3D,EACfyE,KAAKw3G,aAAUj8G,EAEfyE,KAAKu2B,OAAS,IAAI5yB,EAClB3D,KAAKypC,YAAc,IAAI3I,EAEvB9gC,KAAK+hE,IAAM/hE,KAAKgiE,eAChBhiE,KAAKqhG,IAAMrhG,KAAKgO,eAChBhO,KAAK82G,IAAM92G,KAAKy6F,kBAChBz6F,KAAKm3G,IAAMn3G,KAAKg1G,iBAGlB/pG,GAAIjG,oBAAU,MAAO,0BAErB4pG,yBACE5uG,KAAKyyD,QAAUzyD,KAAKwuE,aACpBxuE,KAAK8pB,UAAY9pB,KAAKmkE,UAAU37D,MAChCxI,KAAKypC,YAAczpC,KAAKqmG,oBAAe9qG,EAAWyE,KAAKypC,aACvDzpC,KAAKu2B,OAASv2B,KAAKypC,YAAYwoC,UAAU,IAAItuE,GAC7C3D,KAAK+kE,YAAc,IAAItX,GAAYztD,KAAKmkE,UAAWnkE,KAAKypC,2BAG1DolE,yBAUE,IAAKzyG,IAAIiO,KATTrK,KAAKw3G,QAAUx3G,KAAKy3G,aACpBz3G,KAAK+pB,UAAY/pB,KAAK2vE,UAAUnnE,MAChCxI,KAAK4gG,SAAW,IAAIlI,GAAS14F,KAAK2vE,UAAW3vE,KAAKmkE,UAAU37D,OAE5DxI,KAAKs3G,aAAe,GACft3G,KAAK2rG,YAAYC,OACpB5rG,KAAK2rG,YAAYC,KAAO5rG,KAAKwuE,YAAW,IAGzBxuE,KAAK2rG,YACpB3rG,KAAKs3G,aAAc,KAAOjtG,GAASrK,KAAK2rG,YAAathG,GAAOghC,sBAMhE22B,sBAAcrgE,GACZ,OAAO,IAAIuyG,GAAUl0G,KAAM2B,iBAG7BqM,sBAAcrM,GACZ,OAAO,IAAI2+F,GAAUtgG,KAAM2B,iBAG7B84F,yBAAiB94F,GACf,OAAO,IAAIozG,GAAa/0G,KAAM2B,iBAGhCqzG,uBAAerzG,GACb,OAAO,IAAIg1G,GAAW32G,KAAM2B,iBAG9Bi1G,uBAAej1G,GACb,OAAO,IAAIs1G,GAAWj3G,KAAM2B,iBAK9B81G,sBAGE58G,IAAMoO,EAAIjJ,KAAK2vE,UAAUnnE,MACnBgvG,EAAU,IAAIjmD,GAAStoD,GACvBwpD,EAAUzyD,KAAKyyD,QAErB,GAAIA,EACF,GAAIA,EAAQ0B,WACVqjD,EAAQhmD,cACH,GAAIiB,EAAQ2B,aACjBojD,EAAQ3jD,gBAIR,IAFAh5D,IAAM0vB,EAAKvqB,KAAKgiE,eAEP3lE,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBkuB,EAAG5oB,MAAQtF,EACPo2D,EAAQ4B,MAAM9pC,EAAGzb,WAAYyb,EAAGxb,aAClCyoG,EAAQhqG,IAAI+c,EAAG5oB,YAKrB61G,EAAQhmD,SAGV,OAAOgmD,gBAGTE,8BAGE78G,IAAMoO,EAAIjJ,KAAK8rG,kBAAkBtjG,MAC3BmvG,EAAkB,IAAIpmD,GAAStoD,GAC/B8iG,EAAkB/rG,KAAKs3G,aAAaM,WAE1C,GAAI7L,EAAiB,CACnBlxG,IAAM0vB,EAAKvqB,KAAKgiE,eAChBz3C,EAAGolD,UAAY3vE,KAAK8rG,kBAEpB,IAAK1vG,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBkuB,EAAG5oB,MAAQtF,EACP0vG,EAAgB13C,MAAM9pC,EAAGzb,WAAYyb,EAAGxb,aAC1C4oG,EAAgBnqG,IAAI+c,EAAG5oB,YAI3Bg2G,EAAgBnmD,SAGlB,OAAOmmD,gBAGTE,0BAGEh9G,IAAMoO,EAAIjJ,KAAKirG,cAAcziG,MACvBsvG,EAAc,IAAIvmD,GAAStoD,GAC3BiiG,EAAclrG,KAAKs3G,aAAaS,OAEtC,GAAI7M,EAAa,CACfrwG,IAAM0vB,EAAKvqB,KAAKgiE,eAChBz3C,EAAGolD,UAAY3vE,KAAKirG,cAEpB,IAAK7uG,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBkuB,EAAG5oB,MAAQtF,EACP6uG,EAAY72C,MAAM9pC,EAAGzb,WAAYyb,EAAGxb,aACtC+oG,EAAYtqG,IAAI+c,EAAG5oB,YAIvBm2G,EAAYtmD,SAGd,OAAOsmD,gBAYTtpC,oBAAYx6D,GACVnZ,IAAMoO,EAAIjJ,KAAKmkE,UAAU37D,MAEzB,QAAkBjN,IAAdyY,EACF,OAAO,IAAIu9C,GAAStoD,GAAG,GAClB,GAAI+K,aAAqBu9C,GAC9B,OAAOv9C,EACF,IAAkB,IAAdA,EACT,OAAO,IAAIu9C,GAAStoD,GAAG,GAClB,GAAI+K,GAAaA,EAAU/W,KAAM,CACtCpC,IAAMm9G,EAAahkG,EAAUpM,OAC7B,GAAIowG,KAAch4G,KAAKs3G,aACrB,OAAOt3G,KAAKs3G,aAAcU,GAE1B,GAAmB,KAAfA,EACF,OAAO,IAAIzmD,GAAStoD,GAAG,GAEvBpO,IAAM43D,EAAU,IAAIlB,GAAStoD,GAK7B,OAJAjJ,KAAK8oB,UAAS,SAAUoB,GACtBuoC,EAAQjlD,IAAI0c,EAAGvoB,SACdqS,GACHhU,KAAKs3G,aAAcU,GAAevlD,EAC3BA,EAGN,OAAkB,IAAdz+C,EACF,IAAIu9C,GAAStoD,GAGf,IAAIsoD,GAAStoD,GAAG,iBASzBgvG,mCAA2BjkG,EAAuC0nC,GAChE7gD,IAAMkqE,EAAc/kE,KAAK+kE,YACnBtS,EAAUzyD,KAAKwuE,YAAW,GAC1BtkD,EAAKlqB,KAAKgO,eAEhB,OAAK+2D,GAEL/kE,KAAKwuE,WAAWx6D,GAAWsE,SAAQ,SAAU2K,GAC3CiH,EAAGvoB,MAAQshB,EACX8hD,EAAYrW,OAAOxkC,EAAGpkB,EAAGokB,EAAGnkB,EAAGmkB,EAAGd,EAAGsyB,GAAQpjC,SAAQ,SAAU+5C,GAC7DI,EAAQjlD,IAAI6kD,SAITI,GATkBA,gBAkB3BylD,+BAAuB57D,EAA0BZ,GAC/C7gD,IAAMqT,EAAIouC,EACJmW,EAAUzyD,KAAKwuE,YAAW,GAEhC,OAAKxuE,KAAK+kE,aAEV/kE,KAAK+kE,YAAYrW,OAAOxgD,EAAEpI,EAAGoI,EAAEnI,EAAGmI,EAAEkb,EAAGsyB,GAAQpjC,SAAQ,SAAU2K,GAC/DwvC,EAAQjlD,IAAIyV,MAGPwvC,GANuBA,gBAkBhC0lD,gCAAwBv7D,EAAgBlB,EAAgBi8C,EAAkBC,EAAkBC,GAC1Fh9F,IAAMu9G,EAAK,IAAI1gB,GAAe96C,EAAQ+6C,EAAUC,EAAUC,GAEpDxlB,EAAK+lC,EAAGxxB,kBACR39E,EAAIopE,EAAG/1E,OACPgP,EAAI8sG,EAAGp+E,OAAOq+E,oBACd5lD,EAAUzyD,KAAKwuE,YAAW,GAEhC,IAAKxuE,KAAK+kE,YAAa,OAAOtS,EAE9B,IAAKr2D,IAAIC,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAC1B2D,KAAK+kE,YAAYrW,OAAO2jB,EAAIh2E,GAAKg2E,EAAIh2E,EAAI,GAAKg2E,EAAIh2E,EAAI,GAAKiP,GAAGgN,SAAQ,SAAU2K,GAC9EwvC,EAAQjlD,IAAIyV,MAIhB,OAAOwvC,gBAQT6lD,+BAAuBtkG,GACrBnZ,IAAM09G,EAAmBv4G,KAAKmkE,UAAU8C,aAClCxU,EAAUzyD,KAAKwuE,YAAW,GAC1BgsB,EAAKx6F,KAAKy6F,kBAShB,OAPAz6F,KAAKwuE,WAAWx6D,GAAWsE,SAAQ,SAAU2K,GAC3Cu3E,EAAG74F,MAAQ42G,EAAkBt1F,GAC7B,IAAK7mB,IAAIi2D,EAAOmoC,EAAG9mF,WAAY2+C,GAAQmoC,EAAG7mF,UAAW0+C,EACnDI,EAAQjlD,IAAI6kD,MAITI,gBAKTlpC,uCAIAivF,wBACE,OAAOx4G,mBASTy4G,oBAAY1zG,EAAoCC,GAC9ChF,KAAK6gG,WAAWvoF,SAAQ,SAAUzE,QACnBtY,IAATyJ,GAAsB6O,EAAO6kG,kBAAoB1zG,GACnDD,EAAS8O,oBAWf+W,kBAAU7lB,EAAuCiP,GAC/CnZ,IACI28G,EADEjtF,EAAKvqB,KAAKgiE,eAUhB,GAPIhuD,GAAaA,EAAU/W,OACzBu6G,EAAUx3G,KAAKy3G,aACXz3G,KAAKw3G,SACPA,EAAQ5iD,aAAa50D,KAAKw3G,UAI1BA,EACFA,EAAQl/F,SAAQ,SAAU3W,GACxB4oB,EAAG5oB,MAAQA,EACXoD,EAASwlB,WAIX,IADA1vB,IAAMoO,EAAIjJ,KAAK2vE,UAAUnnE,MAChBnM,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBkuB,EAAG5oB,MAAQtF,EACX0I,EAASwlB,iBAWfzB,kBAAU/jB,EAAuCiP,GAC/C,GAAIA,GAAaA,EAAU/W,KACzB+C,KAAK6oB,WAAU,SAAUqnE,GACvBA,EAAGpnE,SAAS/jB,EAAUiP,KACrBA,QAIH,IAFAnZ,IAAMmzD,EAAKhuD,KAAKmkE,UAAU37D,MACpB0hB,EAAKlqB,KAAKgO,eACP3R,EAAI,EAAGA,EAAI2xD,IAAM3xD,EACxB6tB,EAAGvoB,MAAQtF,EACX0I,EAASmlB,iBAWfk9C,qBAAariE,EAA0CiP,GACrD,GAAIA,GAAaA,EAAU/W,KAAM,CAC/BpC,IAAM89G,EAAK34G,KAAK+jG,WAAWv7F,MACrB0nF,EAAKlwF,KAAK42G,gBACV7+F,EAAgB/D,EAAU+D,cAChC,GAAIA,EACF,IAAK3b,IAAIC,EAAI,EAAGA,EAAIs8G,IAAMt8G,EACxB6zF,EAAGvuF,MAAQtF,EACP0b,EAAcm4E,IAChBA,EAAG9oB,YAAYriE,EAAUiP,QAI7B,IAAK5X,IAAIC,EAAI,EAAGA,EAAIs8G,IAAMt8G,EACxB6zF,EAAGvuF,MAAQtF,EACX6zF,EAAG9oB,YAAYriE,EAAUiP,QAM7B,IAFAnZ,IAAMi5G,EAAK9zG,KAAKwgG,aAAah4F,MACvBgyF,EAAKx6F,KAAKy6F,kBACPp+F,EAAI,EAAGA,EAAIy3G,IAAMz3G,EACxBm+F,EAAG74F,MAAQtF,EACX0I,EAASy1F,iBAWf0P,sBAAcjhG,EAAWlE,GACvBlK,IAAMi5G,EAAK9zG,KAAKwgG,aAAah4F,MAC7B,KAAIsrG,EAAK7qG,GAAT,CAGA,IAFApO,IAAMqB,EAAwB,IAAIK,MAAM0M,GAE/B5M,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAM2D,KAAKy6F,gBAAgBp+F,GAEpC0I,EAASjF,MAAME,KAAM9D,GAErB,IAAKE,IAAIqJ,EAAIwD,EAAGxD,EAAIquG,IAAMruG,EAAG,CAC3B,IAAKrJ,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvBH,EAAOG,GAAIsF,OAAS,EAEtBoD,EAASjF,MAAME,KAAM9D,mBAUzBmtG,qBAAatkG,EAAqCiP,GAChD,GAAIA,GAAaA,EAAU+D,cAAe,CACxCld,IAAMkd,EAAgB/D,EAAU+D,cAEhC/X,KAAK6oB,WAAU,SAAUqnE,GACnBn4E,EAAcm4E,IAChBA,EAAGmZ,YAAYtkG,EAAUiP,WAI7BhU,KAAK6oB,WAAU,SAAUqnE,GACvBA,EAAGmZ,YAAYtkG,EAAUiP,oBAW/BoyF,mBAAWrhG,EAAwCiP,GACjD,GAAIA,GAAaA,EAAU/W,KACzB+C,KAAK6oB,WAAU,SAAUqnE,GACvBA,EAAGkW,UAAUrhG,EAAUiP,WAKzB,IAFAnZ,IAAM+9G,EAAK54G,KAAKugG,WAAW/3F,MACrB4sC,EAAKp1C,KAAKg1G,gBACP34G,EAAI,EAAGA,EAAIu8G,IAAMv8G,EACxB+4C,EAAGzzC,MAAQtF,EACX0I,EAASqwC,iBAWfvsB,mBAAW9jB,EAAwCiP,GACjDnZ,IAAMoO,EAAIjJ,KAAK+jG,WAAWv7F,MACpB0nF,EAAKlwF,KAAK42G,gBAEhB,GAAI5iG,GAAaA,EAAU/W,KAAM,CAC/BpC,IAAMkd,EAAgB/D,EAAU+D,cAChC,GAAIA,EACF,IAAK3b,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB6zF,EAAGvuF,MAAQtF,EACP0b,EAAcm4E,IAChBnrF,EAASmrF,QAIb,IAAK9zF,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB6zF,EAAGvuF,MAAQtF,EACX0I,EAASmrF,QAIb,IAAK9zF,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB6zF,EAAGvuF,MAAQtF,EACX0I,EAASmrF,iBAOf2oB,qBAAap9G,GACXZ,IAAMqT,EAAItS,OAAOC,OAAO,GAAIJ,GACxByS,EAAE2uF,cAAa3uF,EAAE2uF,YAAY/uF,UAAY9N,KAAKw4G,gBAElD39G,IAGI8/F,EACAtW,EAJEx/B,EAAO32C,EAAE22C,KACT4N,EAAUr3D,GAAS8S,EAAEukD,QAASzyD,KAAKyyD,SAKnCqmD,EAAqB,GACrB5uF,EAAKlqB,KAAKgO,eACV8b,EAAY2oC,EAAQ7mB,UAErBiZ,IAAQA,EAAK58C,WAChB6wG,EAAS7wG,SAAW,IAAInF,aAAyB,EAAZgnB,IAEjC+6B,IAAQA,EAAKt2C,QAAUL,EAAE2uF,cAC7Bic,EAASvqG,MAAQ,IAAIzL,aAAyB,EAAZgnB,GAClCu6D,EAAa9rE,GAAmBI,UAAUzK,EAAE2uF,cAEzCh4C,IAAQA,EAAK1Y,UAChB2sE,EAAS3sE,QAAU,IAAImjC,GAAW,IAAIxsE,aAAagnB,GAAY9pB,KAAKw4G,iBAEjE3zD,IAAQA,EAAKnJ,SAChBo9D,EAASp9D,OAAS,IAAI54C,aAAagnB,GACnC6wE,EAAgB,IAAIhG,GAAczmF,EAAE4uF,eAEjCj4C,IAAQA,EAAKljD,QAChBm3G,EAASn3G,MAAQ,IAAIkB,YAAYinB,IAG5B,4DAqBP,OAnBA2oC,EAAQn6C,kBAAS2K,EAAa5mB,GAC5BxB,IAAMmvD,EAAS,EAAJ3tD,EACX6tB,EAAGvoB,MAAQshB,EACPhb,GACFiiB,EAAGg5E,gBAAgBj7F,EAAU+hD,GAE3Bz7C,GACF81E,EAAW51E,iBAAiByb,EAAI3b,EAAOy7C,GAErC7d,IACFA,EAAQjwC,MAAQG,GAAM4mB,GAEpBy4B,IACFA,EAAQr/C,GAAMs+F,EAAc/F,WAAW1qE,IAErCvoB,IACFA,EAAOtF,GAAM4mB,MAGV61F,gBAGTC,qBAAat9G,GACXZ,IAAMqT,EAAItS,OAAOC,OAAO,GAAIJ,GACxByS,EAAE2uF,cAAa3uF,EAAE2uF,YAAY/uF,UAAY9N,KAAKw4G,gBAElD39G,IAQI8/F,EACAtW,EATEx/B,EAAO32C,EAAE22C,KACT2yD,EAAUp8G,GAAS8S,EAAEspG,QAASx3G,KAAKw3G,SACnCwB,EAAe59G,GAAS8S,EAAE8qG,aAAc,OACxCC,EAA2B,QAAjBD,EACVE,EAA4B,WAAjBF,EACXG,EAAY/9G,GAAS8S,EAAEirG,UAAW,IAClCC,EAAch+G,GAAS8S,EAAEkrG,YAAa,GAKtCC,EAAqB,GACrB9uF,EAAKvqB,KAAKgiE,eACZ9zD,EAAEyhE,YAAWplD,EAAGolD,UAAYzhE,EAAEyhE,WAClC90E,IAGIkvB,EAHEs2C,EAAMrgE,KAAKgO,eACXsyD,EAAMtgE,KAAKgO,eAGjB,GAAIirG,EAAS,CACXp+G,IAAMy+G,EAAiB/uF,EAAGolD,UAAUnlD,UACpCT,EAAY,EACZytF,EAAQl/F,SAAQ,SAAU3W,GACxBooB,GAAauvF,EAAgB33G,WAG/BooB,EAAYytF,EAAQ5rE,UAGjBiZ,IAAQA,EAAK58C,WAChBoxG,EAASxvD,UAAY,IAAI/mD,aAAyB,EAAZinB,GACtCsvF,EAAStvD,UAAY,IAAIjnD,aAAyB,EAAZinB,IAElC86B,IAAQA,EAAKt2C,QAAUL,EAAE2uF,cAC7Bwc,EAAS9qG,MAAQ,IAAIzL,aAAyB,EAAZinB,GAClCsvF,EAAS1qC,OAAS,IAAI7rE,aAAyB,EAAZinB,GACnCs6D,EAAa9rE,GAAmBI,UAAUzK,EAAE2uF,cAEzCh4C,IAAQA,EAAK1Y,UAChBktE,EAASltE,QAAU,IAAIujC,GAAW,IAAI5sE,aAAainB,GAAY/pB,KAAKw4G,eAAgBtqG,EAAEyhE,cAEnF9qB,GAAQA,EAAKnJ,QAAWu9D,GAAWp0D,EAAK58C,YAC3C0yF,EAAgB,IAAIhG,GAAczmF,EAAE4uF,eAEjCj4C,IAAQA,EAAKnJ,SAChB29D,EAAS39D,OAAS,IAAI54C,aAAainB,GAC/B7b,EAAEqrG,UACJF,EAASE,QAAU,IAAIz2G,aAAainB,KAIjC,IAGHtkB,EAAGukD,EAAIluD,EAAG0uB,EAAWgvF,EACrBC,sFAFAp9G,EAAI,EAIFg/F,EAAK,IAAI13F,EACT+1G,EAAc,IAAI/1G,EAClBg2G,EAAS,IAAIh2G,EA0GnB,OAxGA6zG,EAAQl/F,kBAAS3W,GAMf,GALAqoD,EAAS,EAAJ3tD,EACLkuB,EAAG5oB,MAAQA,EACX0+D,EAAI1+D,MAAQ4oB,EAAGzb,WACfwxD,EAAI3+D,MAAQ4oB,EAAGxb,WACfyb,EAAYD,EAAGC,UACXq/B,EACF,GAAIovD,GAAWzuF,EAAY,EAAG,CAC5B3vB,IAAM+5F,EAAa+F,EAAc/F,WAAWv0B,GAC5Co5C,EAAc7kB,EAAaukB,GAAa,GAAM3uF,GAE9CD,EAAGqqF,kBAAkB+E,GAEjBT,GACFM,EAAY,EAAIJ,EAAcxkB,EAC9B+kB,EAAO5gE,eAAeygE,GACtBG,EAAOzlG,SAMPwlG,EAAYh5C,WAAWJ,EAAYD,GAAYtnB,eAC7CnzC,KAAK3E,IAAI,GAAKu4G,EAAY,OAE5Bn5C,EAAI6iC,gBAAgBr5C,EAAWG,GAC/BsW,EAAI4iC,gBAAgBn5C,EAAWC,GAE3Bx/B,GAAa,IACf6wE,EAAGtrE,WAAWswC,EAAYs5C,GAAQ5uG,IAAI2uG,GAAatqF,QAAQy6B,EAAkBG,EAAK,GAClFqxC,EAAGtrE,WAAWuwC,EAAYq5C,GAAQtyD,IAAIqyD,GAAatqF,QAAQ26B,EAAkBC,EAAK,GAE9Ex/B,GAAa,IACf6wE,EAAG36B,WAAWL,EAAYs5C,GAAQ5uG,IAAI2uG,GAAatqF,QAAQy6B,EAAkBG,EAAK,GAClFqxC,EAAG36B,WAAWJ,EAAYq5C,GAAQtyD,IAAIqyD,GAAatqF,QAAQ26B,EAAkBC,EAAK,OAItFwvD,GAAaJ,EAAcD,GAAavkB,EACxC+kB,EAAO5gE,eAAeygE,GAEJ,IAAdhvF,GACF6wE,EAAGtrE,WAAWswC,EAAYs5C,GAAQvqF,QAAQy6B,EAAkBG,GAC5DqxC,EAAG36B,WAAWL,EAAYs5C,GAAQvqF,QAAQy6B,EAAkBG,EAAK,GACjEqxC,EAAGtrE,WAAWuwC,EAAYq5C,GAAQvqF,QAAQ26B,EAAkBC,GAC5DqxC,EAAG36B,WAAWJ,EAAYq5C,GAAQvqF,QAAQ26B,EAAkBC,EAAK,IAC1C,IAAdx/B,GACT61C,EAAI6iC,gBAAgBr5C,EAAWG,GAC/BqxC,EAAGtrE,WAAWswC,EAAYs5C,GAAQvqF,QAAQy6B,EAAkBG,EAAK,GACjEqxC,EAAG36B,WAAWL,EAAYs5C,GAAQvqF,QAAQy6B,EAAkBG,EAAK,GACjEsW,EAAI4iC,gBAAgBn5C,EAAWC,GAC/BqxC,EAAGtrE,WAAWuwC,EAAYq5C,GAAQvqF,QAAQ26B,EAAkBC,EAAK,GACjEqxC,EAAG36B,WAAWJ,EAAYq5C,GAAQvqF,QAAQ26B,EAAkBC,EAAK,KAGjEqW,EAAI6iC,gBAAgBr5C,EAAWG,GAC/BsW,EAAI4iC,gBAAgBn5C,EAAWC,UAInCqW,EAAI6iC,gBAAgBr5C,EAAWG,GAC/BsW,EAAI4iC,gBAAgBn5C,EAAWC,GAGnC,GAAIz7C,GAASogE,IACX0V,EAAWr1E,iBAAiBub,EAAI,EAAGhc,EAAOy7C,GAC1Cq6B,EAAWr1E,iBAAiBub,EAAI,EAAGokD,EAAQ3kB,GACvCivD,GAAWzuF,EAAY,GACzB,IAAK/kB,EAAI,EAAGA,EAAI+kB,IAAa/kB,EAE3B4xB,GAAW9oB,EAAOy7C,EADlBluD,EAAQ,EAAJ2J,EAAQukD,EACa,GACzB3yB,GAAWs3C,EAAQ3kB,EAAIluD,EAAG,GAIhC,GAAIqwC,GAAWA,EAAQjwC,QACrBiwC,EAAQjwC,MAAOG,GAAMsF,EACjBs3G,GAAWzuF,EAAY,GACzB,IAAK/kB,EAAI,EAAGA,EAAI+kB,IAAa/kB,EAC3B0mC,EAAQjwC,MAAOG,EAAIoJ,GAAM9D,EAI/B,GAAI+5C,IACFA,EAAQr/C,GAAMs+F,EAAc/F,WAAWv0B,GACnC44C,GAAWzuF,EAAY,GAEzB,IADAivF,EAAc/9D,EAAQr/C,GAAM88G,GAAaD,EAAW,EAAK,GAAM1uF,GAC1D/kB,EAAIyzG,EAAW,EAAI,EAAGzzG,EAAI+kB,IAAa/kB,EAC1Ci2C,EAAQr/C,EAAIoJ,GAAMg0G,EAIxB,GAAIF,IACFA,EAASl9G,GAAMs+F,EAAc/F,WAAWt0B,GACpC24C,GAAWzuF,EAAY,GAEzB,IADAivF,EAAcF,EAASl9G,GAAM88G,GAAaD,EAAW,EAAK,GAAM1uF,GAC3D/kB,EAAIyzG,EAAW,EAAI,EAAGzzG,EAAI+kB,IAAa/kB,EAC1C8zG,EAASl9G,EAAIoJ,GAAMg0G,EAIzBp9G,GAAK48G,EAAUzuF,EAAY,KAGtB6uF,gBAGTO,6BAAqBn+G,GAKnB,OAJAA,EAASG,OAAOC,OAAO,CACrB42D,QAASzyD,KAAKs3G,aAAaM,YAC1Bn8G,GAEIuE,KAAK64G,YAAYp9G,iBAG1Bo+G,6BAAqBp+G,GAMnB,OALAA,EAASG,OAAOC,OAAO,CACrB27G,QAASx3G,KAAK03G,qBACd/nC,UAAW3vE,KAAK8rG,mBACfrwG,GAEIuE,KAAK+4G,YAAYt9G,iBAG1Bq+G,yBAAiBr+G,GAKf,OAJAA,EAASG,OAAOC,OAAO,CACrB42D,QAASzyD,KAAKs3G,aAAaS,QAC1Bt8G,GAEIuE,KAAK64G,YAAYp9G,iBAG1Bs+G,yBAAiBt+G,GAMf,OALAA,EAASG,OAAOC,OAAO,CACrB27G,QAASx3G,KAAK63G,iBACdloC,UAAW3vE,KAAKirG,eACfxvG,GAEIuE,KAAK+4G,YAAYt9G,iBAW1B4qG,wBAAgBryF,EAAuB+tB,GACjCphB,IAAOtB,GAAII,KAAK,kBAEpBsiB,EAAMA,GAAO,IAAIjB,EAEjB1kC,IAAImrD,EAAQ7+C,EAAAA,EACR8+C,EAAQ9+C,EAAAA,EACR++C,EAAQ/+C,EAAAA,EAERg/C,GAAQh/C,EAAAA,EACRi/C,GAAQj/C,EAAAA,EACRk/C,GAAQl/C,EAAAA,EAqBZ,OAnBA1I,KAAK8oB,mBAASoB,GACZrvB,IAAMiL,EAAIokB,EAAGpkB,EACPC,EAAImkB,EAAGnkB,EACPqjB,EAAIc,EAAGd,EAETtjB,EAAIyhD,IAAMA,EAAOzhD,GACjBC,EAAIyhD,IAAMA,EAAOzhD,GACjBqjB,EAAIq+B,IAAMA,EAAOr+B,GAEjBtjB,EAAI4hD,IAAMA,EAAO5hD,GACjBC,EAAI4hD,IAAMA,EAAO5hD,GACjBqjB,EAAIw+B,IAAMA,EAAOx+B,KACpBpV,GAEH+tB,EAAI/gC,IAAIwM,IAAI+5C,EAAMC,EAAMC,GACxB1lB,EAAI9gC,IAAIuM,IAAIk6C,EAAMC,EAAMC,GAEpBjnC,IAAOtB,GAAIK,QAAQ,kBAEhBqiB,gBAQTi4E,0BAAkBhmG,GACZ2M,IAAOtB,GAAII,KAAK,oBAEpBrjB,IAAIC,EAAI,EACF+S,EAAS,IAAIypE,GAAO,EAAG74E,KAAK8pB,WAC5BiwD,EAAK3qE,EAAO7R,KAWlB,OATAyC,KAAK8oB,mBAASnrB,GACZo8E,EAAI19E,EAAI,GAAMsB,EAAEmI,EAChBi0E,EAAI19E,EAAI,GAAMsB,EAAEoI,EAChBg0E,EAAI19E,EAAI,GAAMsB,EAAEyrB,EAChB/sB,GAAK,IACJ2X,GAEC2M,IAAOtB,GAAIK,QAAQ,oBAEhB,IAAIo1E,GAAc1lF,iBAQ3B6qG,oBAAYjmG,GACV,OAAIA,EACKhU,KAAKqmG,eAAeryF,GAAWi+D,UAAU,IAAItuE,GAE7C3D,KAAKu2B,OAAO8U,sBAIvB6uE,qBACE,QAAwB3+G,IAApByE,KAAKm6G,WAA0B,CACjCt/G,IAAMspE,EAAYnkE,KAAKmkE,UACvBnkE,KAAKm6G,WACuB,IAA1B3iF,GAAS2sC,EAAUr+D,IAAsC,IAA1BwxB,GAAS6sC,EAAUr+D,IACxB,IAA1B0xB,GAAS2sC,EAAUp+D,IAAsC,IAA1BuxB,GAAS6sC,EAAUp+D,IACxB,IAA1ByxB,GAAS2sC,EAAU/6C,IAAsC,IAA1BkO,GAAS6sC,EAAU/6C,IAGlD+6C,EAAU37D,MAAQxI,KAAK+jG,WAAWv7F,OAAU,EAGhD,OAAOxI,KAAKm6G,yBAGdC,qBAAapmG,GACXnZ,IAAMw/G,EAAgB,GAChB7f,EAAKx6F,KAAKy6F,kBAShB,OAPAz6F,KAAK8oB,UAAS,SAAUoB,GACtBswE,EAAG74F,MAAQuoB,EAAG+8C,aACV/8C,EAAGvoB,QAAU64F,EAAGE,gBAClB2f,EAAI59G,KAAK+9F,EAAG0a,iBAEblhG,GAEIqmG,gBAGT9pC,wBAAgBv8D,GACd,GAAIA,GAAaA,EAAUpM,OAAQ,CACjC/M,IAAMg1B,EAAoB,GAI1B,OAHA7vB,KAAK8oB,UAAS,SAAUoB,GACtB2F,EAAQpzB,KAAKytB,EAAGvoB,SACfqS,GACI,IAAInR,YAAYgtB,GAGvB,OAAO7vB,KAAK64G,YADF,CAAEh0D,KAAM,CAAEljD,OAAO,KACAA,oBAS/B24G,2BAAmBtmG,GACjBnZ,IAAMmsG,EAAa,IAAIuT,IAOvB,OANAv6G,KAAKomG,WAAU,SAAUhxD,GACnBA,EAAG+kD,cACL6M,EAAWj8F,IAAIqqC,EAAG3jC,aAEnBuC,GAEIgzF,EAAWvuE,mBAKpB+hF,wBAAgBvyG,GACd7L,IAAIC,EAAI,EAER2D,KAAK8oB,UAAS,SAAUoB,GACtBA,EAAG+4E,kBAAkBh7F,EAAU5L,GAC/BA,GAAK,SACJd,GAEHyE,KAAKm6G,gBAAa5+G,gBAGpBk/G,2BACEz6G,KAAKqmG,oBAAe9qG,EAAWyE,KAAKypC,aACpCzpC,KAAKypC,YAAYwoC,UAAUjyE,KAAKu2B,QAChCv2B,KAAK+kE,YAAc,IAAItX,GAAYztD,KAAKmkE,UAAWnkE,KAAKypC,2BAQ1D3lB,mBACM9jB,KAAKqxB,SAAQrxB,KAAKqxB,OAAO/0B,OAAS,GAClC0D,KAAKu3G,QAAOv3G,KAAKu3G,MAAMj7G,OAAS,GAEpC0D,KAAK2vE,UAAU7rD,UACf9jB,KAAK8rG,kBAAkBhoF,UACvB9jB,KAAKirG,cAAcnnF,UACnB9jB,KAAKmkE,UAAUrgD,UACf9jB,KAAKwgG,aAAa18E,UAClB9jB,KAAKugG,WAAWz8E,UAChB9jB,KAAK+jG,WAAWjgF,iBAET9jB,KAAK2vE,iBACL3vE,KAAKmkE,iBACLnkE,KAAKwgG,oBACLxgG,KAAKugG,kBACLvgG,KAAK+jG,kBAEL/jG,KAAKqxB,cACLrxB,KAAKu3G,aAELv3G,KAAKw3G,eACLx3G,KAAKyyD,kDC/jChB53D,IAAM6/G,GAAS,IAAI55E,EAEb65E,GAAa,CACjB5tD,GAAgBP,GAAcQ,GAAeH,GAC7CI,GAAoBN,GAAqBN,GAAiBO,GAC1DS,GAAeD,GAAgBG,GAAgBC,IAGpCotD,GAAyB,CACpCC,YAAa,IACb91D,aAAc,EACdC,eAAgB,GAChBE,iBAAiB,EACjBD,WAAW,EACX6H,gBAAgB,EAChBguD,YAAa,GACbC,UAAW,EACXC,iBAAiB,EACjBC,YAAY,EACZ56F,UAAW,GAkBP66F,GAqBJ,SAAa7wG,EAAgB5O,6BAAT,wBAA4C,IAjBhEuE,iBAAc,IAAI8gC,EAClB9gC,gBAAuB,GACvBA,eAAY,EAGZA,oBAAuC,GAarCA,KAAKqK,KAAOA,EAEZrK,KAAK6N,WAAarS,GAAaC,EAAQm/G,IAEvCD,GAAWriG,kBAAQm+C,GACjB76D,OAAOsL,KAAKuvD,EAAE3K,QAAQxzC,kBAAQjO,GAC5BrK,EAAK6rD,eAAgB4K,EAAE/K,YAAYrhD,IAAU,MAE/CrK,EAAK6rD,eAAgB4K,EAAE/K,YAAY,SAAY,yEASnD1hB,mBAAW5mC,GACTpD,KAAKskD,WAAW7nD,KAAK2G,GAErBvI,IAAMilC,EAAY18B,EAAe08B,SAMjC,OALKA,EAAS2J,aACZ3J,EAASqL,qBAEXnrC,KAAKypC,YAAY+B,MAAM1L,EAAS2J,aAEzBzpC,mBAkBTm7G,iBAASlzG,EAAiCsG,EAA6B5M,EAAyCmuB,EAAgCzlB,GAW9IjO,IAAImB,EAVJ0K,EAAWhE,GAAmBgE,GAC9BsG,EAAQtK,GAAmBsK,GAEvBhS,MAAMC,QAAQmF,KAChBA,EAAQqB,GAAarB,EAAOsG,EAAS3L,SAEnCwzB,IACFA,EAAS7rB,GAAmB6rB,IAK5BvyB,OADahC,IAAXu0B,GAAyC,GAAjBA,EAAOxzB,OAC1B,UAAE2L,QAAUsG,QAAO5M,GAEnB,UAAEsG,QAAUsG,QAAO5M,SAAOmuB,GAGnCj1B,IAAMsxC,EAAU,IAAIilC,GAClBpxE,KAAMpE,OAAOC,OAAO,CAAEotB,OAAQjpB,KAAKo7G,eAAW/wG,GAAQ9M,IAElD89G,EAAa,IAAI5uB,GACrB7wF,OAAOC,OAAO,SAAEswC,GAAW5uC,IAQ7B,OANAyC,KAAKskD,WAAW7nD,KAAK4+G,GAErBX,GAAO72B,aAAa57E,GACpBjI,KAAKypC,YAAY+B,MAAMkvE,IACvB16G,KAAKo7G,WAAa,EAEXp7G,mBAcTs7G,mBAAWrzG,EAA4CsG,EAAuCmtC,EAAgBrxC,GAI5G,OAHAgiD,GAAgBN,cACd/rD,KAAM,UAAEiI,QAAUsG,SAAOmtC,OAAQrxC,IAE5BrK,mBAgBTu7G,sBAActzG,EAA4CsG,EAAuCmtC,EAAgBwR,EAA6CC,EAA6C9iD,GAIzM,OAHA4iD,GAAmBlB,cACjB/rD,KAAM,UAAEiI,QAAUsG,SAAOmtC,YAAQwR,YAAWC,OAAW9iD,IAElDrK,mBAgBTw7G,kBAAUvzG,EAA4CsG,EAAuCmtC,EAAgBwR,EAA6CC,EAA6C9iD,GAIrM,OAHA+iD,GAAerB,cACb/rD,KAAM,UAAEiI,QAAUsG,SAAOmtC,YAAQwR,YAAWC,OAAW9iD,IAElDrK,mBAeTy7G,qBAAa5xD,EAA6CE,EAA6Cx7C,EAAuCmtC,EAAgBrxC,GAI5J,OAHAwiD,GAAkBd,cAChB/rD,KAAM,WAAE6pD,YAAWE,QAAWx7C,SAAOmtC,OAAQrxC,IAExCrK,mBAeT07G,iBAAS7xD,EAA6CE,EAA6Cx7C,EAAuCmtC,EAAgBrxC,GAIxJ,OAHA2iD,GAAcjB,cACZ/rD,KAAM,WAAE6pD,YAAWE,QAAWx7C,SAAOmtC,OAAQrxC,IAExCrK,mBAeT27G,kBAAU9xD,EAA6CE,EAA6Cx7C,EAAuCmtC,EAAgBrxC,GAIzJ,OAHA0iD,GAAehB,cACb/rD,KAAM,WAAE6pD,YAAWE,QAAWx7C,SAAOmtC,OAAQrxC,IAExCrK,mBAgBT47G,gBAAQ3zG,EAA4CsG,EAAuCkqB,EAAcg0B,EAA8CC,EAA6CriD,GAIlM,OAHAmiD,GAAaT,cACX/rD,KAAM,UAAEiI,QAAUsG,OAAOkqB,aAAMg0B,YAAYC,OAAWriD,IAEjDrK,mBAgBT67G,uBAAe5zG,EAA4CsG,EAAuCkqB,EAAcg0B,EAA8CC,EAA6CriD,GAIzM,OAHAsiD,GAAoBZ,cAClB/rD,KAAM,UAAEiI,QAAUsG,OAAOkqB,aAAMg0B,YAAYC,OAAWriD,IAEjDrK,mBAgBT87G,wBAAgB7zG,EAA4CsG,EAAuCkqB,EAAcg0B,EAA8CC,EAA6CriD,GAI1M,OAHAuiD,GAAqBb,cACnB/rD,KAAM,UAAEiI,QAAUsG,OAAOkqB,aAAMg0B,YAAYC,OAAWriD,IAEjDrK,mBAcT+7G,iBAAS9zG,EAA4CsG,EAAuCkqB,EAAc60B,GAIxG,OAHAD,GAActB,cACZ/rD,KAAM,UAAEiI,QAAUsG,OAAOkqB,OAAM60B,IAE1BttD,mBAaTg8G,kBAAU/zG,EAA4CsG,EAAuClE,GAI3F,OAHAkjD,GAAexB,cACb/rD,KAAM,UAAEiI,QAAUsG,OAAOlE,IAEpBrK,mBAcTi8G,qBAAapyD,EAA6CE,EAA6Cx7C,EAAuC8R,EAAmBhW,GAK/J,OAJArK,KAAK6N,WAAWwS,UAAYA,EAC5BmtC,GAAkBzB,cAChB/rD,KAAM,WAAE6pD,YAAWE,QAAWx7C,OAAOlE,IAEhCrK,mBAMTk8G,kBAAUj0G,EAA4CsG,EAAuCkqB,EAAc60B,GAEzG,OADAhpD,QAAQkb,KAAK,sDACNxf,KAAK+7G,QAAQ9zG,EAAUsG,EAAOkqB,EAAM60B,iBAG7C6uD,oCACQC,EAAoB,GAQ1B,OANAzB,GAAWriG,kBAAQm+C,GACbz2D,EAAK6rD,eAAgB4K,EAAE/K,YAAY,UAAWpvD,QAChD8/G,EAAQ3/G,KAAKg6D,EAAErK,gBAAgBpsD,EAAMA,EAAK6N,gBAIvC7N,KAAKskD,WAAWlhC,OAAOg5F,iBAGhCt4F,8BACE9jB,KAAKskD,WAAWhsC,SAAQ,SAAUlV,GAChCA,EAAO0gB,aAET9jB,KAAKskD,WAAWhoD,OAAS,EAEzBq+G,GAAWriG,kBAAQm+C,GACjB76D,OAAOsL,KAAKuvD,EAAE3K,QAAQxzC,kBAAQjO,GAC5BrK,EAAK6rD,eAAgB4K,EAAE/K,YAAYrhD,IAAQ/N,OAAS,KAEtD0D,EAAK6rD,eAAgB4K,EAAE/K,YAAY,SAAUpvD,OAAS,MAI1D2O,GAAIsrB,sBAIF,OAHKv2B,KAAKy7F,UACRz7F,KAAKy7F,QAAUz7F,KAAKypC,YAAYwoC,UAAU,IAAItuE,IAEzC3D,KAAKy7F,SAGdxwF,GAAIjG,oBAAU,MAAO,sDClYjBq3G,eAQJ,WAAaj5G,EAAyBmwB,EAAgB93B,GAC/Cc,MAAMC,QAAQ4G,KACjBA,EAAS,CAAEA,IAGbgV,YAAMhV,EAAQmwB,EAAQ93B,GAEtBuE,KAAKgF,KAAO,SAEZhF,KAAK6N,WAAajS,OAAOC,OAAO,GAE7BmE,KAAK6N,WAAY,CAElBw1C,YAAa,KACbC,WAAY,KACZE,WAAY,KACZC,YAAa,KACbC,UAAW,OAIb1jD,KAAKoD,OAASA,EAEdpD,KAAKwkD,KAAK/oD,6GAGZ+oD,cAAM/oD,GACJ2c,YAAMosC,eAAK/oD,GAEXuE,KAAK2kD,qBAGPa,kBACExlD,KAAKskD,WAAW7nD,KAAKqD,MAAME,KAAKskD,WAAYtkD,KAAKoD,qBAGnDyiD,gBAAQ9gD,cACN/E,KAAKskD,WAAWhsC,kBAAQlV,GACtBpD,EAAKuzB,OAAOxoB,IAAI3H,GAChBA,EAAO+xC,cAAcn1C,EAAKolD,sBAE5BplD,KAAK8lD,cAAc9lD,KAAK0xC,SAExB3sC,QAnD+By9C,ICxB7BxoB,GAAS,IAAIn2B,EACbqgF,GAAe,IAAIa,EAmCzB,IAAeu3B,eA2Bb,WAAa/+G,EAAkB9B,EAAwC0oF,kBAAJ,IACjE/rE,YA7DJ,SAAiB7a,EAAkB4mF,GACjCtpF,IAYI0hH,EAZEC,EAAer4B,EAAI36C,WAAmBvhC,SAAS/L,MAC/CugH,EAAWt4B,EAAIxiF,MAAQwiF,EAAIxiF,MAAMzF,WAAQX,EAEzC0N,EAAI1L,EAAK0K,SAAU3L,OAAS,EAC5BxB,EAAI0hH,EAAYlgH,OAAS,EAEzBm8B,EAAOxvB,EAAInO,EAEX4hH,EAAe,IAAI55G,aAAoB,EAAP21B,GAChCkkF,EAAa,IAAI75G,aAAoB,EAAP21B,GAC9BmkF,EAAY,IAAI95G,aAAoB,EAAP21B,GAOnC,OAJIgkF,IACFF,EAAYv5G,GAAaiG,EAAIwzG,EAASngH,OAAQm8B,IAGzC,CACLxwB,SAAUy0G,EACVnuG,MAAOquG,EACPj7G,MAAO46G,EACPzsF,OAAQ6sF,EACRtyD,YAAa9sD,EAAK8sD,aAAevzB,GAAiB7tB,EAAGnO,GACrDqxC,QAAS5uC,EAAK4uC,SAqCRzkB,CAAQnqB,EAAM4mF,GAAM1oF,GA3B5BuE,oBAAgB,EA6BdnF,IAAM2hH,EAAer4B,EAAI36C,WAAmBvhC,SAAS/L,MAC/C2gH,EAAa14B,EAAI36C,WAAmB1Z,OAAO5zB,MAC3CugH,EAAWt4B,EAAIxiF,MAASwiF,EAAIxiF,MAAMzF,WAAoCX,EAE5EyE,KAAKw8G,YAAcA,EACnBx8G,KAAK68G,UAAYA,EACjB78G,KAAKy8G,SAAWA,EAEhBz8G,KAAK88G,cAAgBv/G,EAAK0K,SAAU3L,OAAS,EAC7C0D,KAAK+8G,iBAAmBP,EAAYlgH,OAAS,EAE7C0D,KAAKg9G,uBAAyB,IAAIl6G,aAAqC,EAAxB9C,KAAK+8G,kBACpD/8G,KAAKi9G,qBAAuB,IAAIn6G,aAAqC,EAAxB9C,KAAK+8G,kBAElDliH,IAAM2uC,EAAaxpC,KAAK8/B,SAAS0J,WAOjC,GANAxpC,KAAK08G,aAAelzE,EAAWvhC,SAAS/L,MACxC8D,KAAK48G,UAAYpzE,EAAWj7B,MAAMrS,MAClC8D,KAAK28G,WAAanzE,EAAW1Z,OAAO5zB,MAEpC8D,KAAKosF,cAAc7uF,GAEfk/G,EAAU,CACZ5hH,IAAM8G,EAAQ3B,KAAK8/B,SAAS+uC,WAC5B,IAAKltE,EAAqC,YAA5B0d,GAAI1X,MAAM,iBACxB3H,KAAKu8G,UAAY56G,EAAMzF,MACvB8D,KAAKk9G,uHAMT9wB,uBAAe7uF,EAAgC4/G,kBAAJ,oBAAkB,GAC3DtiH,IAEIoN,EAAUsG,EACViuG,EAAaK,EACbG,EAAwBC,EACxBP,EAAcE,EAAWD,EALvBnzE,EAAaxpC,KAAK8/B,SAAS0J,WAO3B4zE,EAAgBp9G,KAAKo9G,cAEvB7/G,EAAK0K,WACPA,EAAW1K,EAAK0K,SAChBu0G,EAAcx8G,KAAKw8G,YACnBE,EAAe18G,KAAK08G,aACpBM,EAAyBh9G,KAAKg9G,uBAC9BxzE,EAAWvhC,SAASyhC,aAAc,GAC9B0zE,GAAiBD,KACnBN,EAAY78G,KAAK68G,UACjBF,EAAa38G,KAAK28G,WAClBM,EAAuBj9G,KAAKi9G,qBAC5BzzE,EAAW1Z,OAAO4Z,aAAc,IAIhCnsC,EAAKgR,QACPA,EAAQhR,EAAKgR,MACbquG,EAAY58G,KAAK48G,UACjBpzE,EAAWj7B,MAAMm7B,aAAc,GAMjC,IAHA7uC,IAAMoO,EAAIjJ,KAAK88G,cACThiH,EAAIkF,KAAK+8G,iBAEN1gH,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BD,IAAIqJ,SAAGoiD,SACD/rD,EAAIO,EAAIvB,EAAI,EACZkvD,EAAS,EAAJ3tD,EAyBX,GAvBI4L,GAAY+0G,GAA0BN,GAAgBC,GAAcH,GAAeK,IACrFG,EAAuBxvG,IAAIgvG,GAC3BxiF,GAAOqjF,gBACLp1G,EAAU+hD,GAAM/hD,EAAU+hD,EAAK,GAAK/hD,EAAU+hD,EAAK,IAErDhqD,KAAKs9G,uBAAuBtjF,GAAQ39B,EAAG2tD,GACvCjC,GAA2B/tB,GAAOgsD,SACPg3B,GAE3BN,EAAalvG,IAAIwvG,EAAwBlhH,GAErCshH,GAAiBH,GACnBA,EAAqBzvG,IAAIqvG,GACzB34B,GAAaq5B,gBAAgBvjF,IAC7BguB,GAA2Bk8B,GAAa8B,SACbi3B,GAE3BN,EAAWnvG,IAAIyvG,EAAsBnhH,IAC5BqhH,GACTR,EAAWnvG,IAAIqvG,EAAW/gH,IAI1ByS,GAASquG,EACX,IAAKn3G,EAAI,EAAGA,EAAI3K,IAAK2K,EAGnBm3G,EAFA/0D,EAAI/rD,EAAI,EAAI2J,GAEK8I,EAAOy7C,GACxB4yD,EAAW/0D,EAAI,GAAMt5C,EAAOy7C,EAAK,GACjC4yD,EAAW/0D,EAAI,GAAMt5C,EAAOy7C,EAAK,iBAMzCkzD,qBACEriH,IAAM4hH,EAAWz8G,KAAKy8G,SAChBF,EAAYv8G,KAAKu8G,UAEvB,GAAKE,EAQL,IANA5hH,IAAMoO,EAAIjJ,KAAK88G,cACThiH,EAAIkF,KAAK+8G,iBAGTS,EAAS,GAFLf,EAASngH,OAAS,GAInBD,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAM4K,EAAIpJ,EAAImhH,EACRz5G,EAAI0B,EAAI+3G,EAEdjB,EAAU/uG,IAAIivG,EAAUh3G,GACxB,IAAKrJ,IAAI8R,EAAIzI,EAAGyI,EAAInK,IAAKmK,EAAGquG,EAAWruG,IAAO7R,EAAIvB,OAvJlB2xF,ICxChC9/E,GAAQ,IAAIhJ,EAEL85G,GAAwC7hH,OAAOC,OAAO,CACjEkpD,aAAc,GACbwiC,IAaGm2B,eAcJ,WAAangH,EAAwB9B,kBAAkD,IACrF2c,YAAM7a,EAAM9B,EAAQ,IAAIkiH,EAA0B,EAAGviH,GAASK,EAAOspD,aAAc,KAEnF/kD,KAAKosF,cAAc7uF,GAAM,6IAhB3B0N,EAAI88E,iCAAsB,OAAO01B,gBAmBjCH,gCAAwBtjF,EAAiB39B,GACvCxB,IAAMyQ,EAAItL,KAAK49G,QAASvhH,GACxBsQ,GAAMa,IAAIlC,EAAGA,EAAGA,GAChB0uB,EAAOrtB,MAAMA,iBAGfy/E,uBAAe7uF,EAAsC4/G,kBAAJ,IAC3C5/G,EAAKm+C,SAAQ17C,KAAK49G,QAAUrgH,EAAKm+C,QAErCtjC,YAAMg0E,wBAAc7uF,EAAM4/G,8CA7BKb,+uMCZnC,IAAeuB,eAGb,WAAaC,EAA0BvgH,EAAkB9B,kBAAoC,IAC3F2c,YAAM7a,EAAM9B,GAEZuE,KAAK2B,MAAQqB,GAAahD,KAAK+9G,UAAW/9G,KAAK2oF,eAC/C3oF,KAAKk9G,YACLl9G,KAAKyoF,UAAUzoF,KAAK2B,OAEpB3B,KAAKwoF,cAAc,CACjBw1B,QAAW,CAAEh5G,KAAM84G,EAAaziH,MAAO,QAGzC2E,KAAKosF,cAAc,CAAE/hC,YAAaxzB,GAAY72B,KAAKy4B,0KASrDxtB,EAAI09E,6BACF,OAAO3oF,KAAKy4B,KAAOz4B,KAAKi+G,aAG1BhzG,EAAI8yG,yBACF,OAAO/9G,KAAKy4B,KAAOz4B,KAAKk+G,gCAG1B11B,uBAAeh/C,GACb3uC,IAAMsjH,EAA2B,GACjC,IAAKtjH,IAAMwP,KAAQm/B,EAAY,CAC7B3uC,IAAM8C,EAAI6rC,EAAYn/B,GACtB8zG,EAAqB9zG,GAAS,CAC5BrF,KAAMrH,EAAEqH,KACR3J,MAAO,MAIX+c,YAAMowE,wBAAc21B,gBAGtBC,2BAAmBC,GACjB,OAAmB,EAAZA,EAAgBr+G,KAAKi+G,yBAG9B7xB,uBAAe7uF,GACTA,IAASA,EAAK0K,UAAY1K,EAAKssD,WAAatsD,EAAKwsD,YACnDxsD,EAAK0K,SAAWmuB,GAAqB74B,EAAKssD,UAAWtsD,EAAKwsD,YAG5DlvD,IAII8C,EAAG6lB,EAAG8tB,EAAUp1C,EAAO+M,EAAG5M,EAAGoJ,EAJ3BgzB,EAAOz4B,KAAKy4B,KACZwlF,EAAcj+G,KAAKi+G,YACnBz0E,EAAaxpC,KAAK8/B,SAAS0J,WAIjC,IAAK3uC,IAAMwP,KAAQ9M,EACjB,GAAa,UAAT8M,GAA6B,YAATA,EAAxB,CAEAmZ,EAAIjmB,EAAM8M,GAEVinC,GADA3zC,EAAI6rC,EAAYn/B,IACHinC,SACbp1C,EAAQyB,EAAEzB,MAEV,IAAKE,IAAIN,EAAI,EAAGA,EAAI28B,IAAQ38B,EAAG,CAE7BO,GADA4M,EAAInN,EAAIw1C,GACA2sE,EAER,IAAK7hH,IAAIyrD,EAAI,EAAGA,EAAIo2D,IAAep2D,EAAG,CACpCpiD,EAAIpJ,EAAKi1C,EAAWuW,EAEpB,IAAKzrD,IAAItB,EAAI,EAAGA,EAAIw2C,IAAYx2C,EAC9BoB,EAAOuJ,EAAI3K,GAAM0oB,EAAGva,EAAInO,IAK9B6C,EAAE+rC,aAAc,gBAIpB40E,uBASE,IARAzjH,IAAM49B,EAAOz4B,KAAKy4B,KACZulF,EAAUh+G,KAAKg+G,QACfC,EAAcj+G,KAAKi+G,YACnBM,EAAkBv+G,KAAKu+G,gBAGvBC,EADax+G,KAAK8/B,SAAS0J,WACLw0E,QAAQ9hH,MAE3BwH,EAAI,EAAGA,EAAI+0B,EAAM/0B,IACxB86G,EAAShxG,IAAIwwG,EAASt6G,EAAI66G,EAAkBN,gBAIhDf,qBAQE,IAPAriH,IAAM49B,EAAOz4B,KAAKy4B,KACZwlF,EAAcj+G,KAAKi+G,YACnBQ,EAAiBz+G,KAAKy+G,eACtBP,EAAqBl+G,KAAKk+G,mBAE1Bv8G,EAAQ3B,KAAK2B,MAEV+B,EAAI,EAAGA,EAAI+0B,EAAM/0B,IAAK,CAC7B7I,IAAMu0D,EAAK1rD,EAAIw6G,EACTQ,EAAKh7G,EAAIu6G,EAEft8G,EAAM6L,IAAIixG,EAAgBrvD,GAE1B,IAAKhzD,IAAI4U,EAAI,EAAGA,EAAIktG,IAAsBltG,EACxCrP,EAAOytD,EAAKp+C,IAAO0tG,8CAjHSjzD,ICR9BuyD,GAAU,IAAIl7G,aAAa,EAC9B,EAAK,GACL,GAAM,EACP,EAAK,EACL,GAAM,IAGF27G,GAAiB,IAAI77G,YAAY,CACrC,EAAG,EAAG,EACN,EAAG,EAAG,IAOF+7G,eACJ,WAAYphH,EAAkB9B,kBAAoC,IAChE2c,YAAM,KAAM7a,EAAM9B,yQAEpBwP,EAAI+yG,uBAAa,OAAOA,IACxB/yG,EAAIwzG,8BAAoB,OAAOA,IAC/BxzG,EAAIizG,kCAAwB,OAAO,GACnCjzG,EAAIgzG,2BAAiB,OAAO,GAC5BhzG,EAAIszG,+BAAqB,OAAO,6CARHV,ICAzBe,eAaJ,WAAarhH,EAAwB9B,kBAAoC,IACvE2c,YAAM7a,EAAM9B,GAbduE,iBAAa,EACbA,kBAAe,sBACfA,oBAAiB,sBAafA,KAAKurF,YAAY,CACfnxD,wBAA2B,CAAE/+B,MAAO,IAAIwI,GACxCgsC,MAAS,CAAEx0C,MAAO,KAGpB2E,KAAKwoF,cAAc,CACjB9sC,OAAU,CAAE12C,KAAM,IAAK3J,MAAO,QAGhC2E,KAAKosF,cAAc7uF,GACnByC,KAAKs+G,+GA1B0BK,ICRU/iH,OAAOC,OAAO,CACzDqpD,iBAAiB,GAChBu4D,QAgBGoB,GAUJ,SAAathH,EAAwB9B,GACnC,OAAK0jB,IAAuB1jB,GAAUA,EAAOypD,gBACpC,IAAIw4D,GAAqBngH,EAAM9B,GAE/B,IAAImjH,GAAqBrhH,EAAM9B,IAK5C+lB,GAAezW,IAAI,SAAU8zG,qpECStBhkH,IAAMikH,GAA+BljH,OAAOC,OAAO,CACxDk/G,UAAW,EACXC,iBAAiB,EACjB9qE,eAAe,EACf6uE,UAAW,GACX9D,YAAY,EACZxzB,kBAAkB,EAClBu3B,WAAY,GACXz3B,IAGG03B,GAA4BrjH,OAAOC,OAAO,CAC9Ck/G,UAAW,CAAElzB,QAAS,QACtBmzB,gBAAiB,CAAErzB,cAAc,GACjCz3C,cAAe,GACf6uE,UAAW,CAAEp3B,cAAc,GAC3BszB,WAAY,CAAEtzB,cAAc,GAC5BF,iBAAkB,GAClBu3B,WAAY,CAAEn3B,SAAS,IACtBH,IAWGw3B,eAiBJ,WAAa3hH,EAAkB9B,kBAAyC,IACtE2c,YAAM7a,EAAM9B,GAjBduE,oBAAiBi/G,GAIjBj/G,kBAAe,aACfA,oBAAgB,aAEhBA,cAAU,EAYRA,KAAKurF,YAAY,CACf9yD,KAAQ,CAAEp9B,MAAO2E,KAAK6N,WAAWktG,WACjC/hF,aAAgB,CAAE39B,MAAO,GACzBs0C,WAAc,CAAEt0C,MAAO,GACvB6b,IAAO,CAAE7b,MAAO,kJAtBpB4P,EAAI88E,iCAAsB,OAAO+2B,gBA0BjC91B,wBACE5wE,YAAM4wE,wBAENhpF,KAAKm/G,cAELtkH,IAAMC,EAAIkF,KAAKu4B,SACT8wD,EAAKrpF,KAAKwpF,kBACVF,EAAKtpF,KAAKypF,gBAEhB3uF,EAAE09B,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC5B9iC,EAAE4uC,aAAc,EAEhB2/C,EAAG7wD,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC7ByrD,EAAG3/C,aAAc,EAEjB4/C,EAAG9wD,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC7B0rD,EAAG5/C,aAAc,eAGnBy1E,uBACMn/G,KAAK49B,KAAK59B,KAAK49B,IAAI9Z,UACvB9jB,KAAK49B,IAjHT,SAA2BniC,GAazB,IAZAZ,IAZMq4C,EACAG,EAWAnlC,EAAIzS,GAAU,GAEd04B,EAAQ/4B,GAAS8S,EAAEimB,MAAO,KAC1BE,EAASj5B,GAAS8S,EAAEmmB,OAAQ,KAC5BkC,EAAS,CAAEpC,EAAQ,EAAGE,EAAS,GAC/BqnB,EAAS91C,KAAK5E,IAAImzB,EAAQ,EAAGE,EAAS,GACtChE,EAAQj1B,GAAS8S,EAAEmiB,MAAO,GAAKqrB,EAAS,IAAMA,EAEhD51C,EAAI,EACJC,EAAI,EACFxI,EAAO,IAAIoF,WAAWwxB,EAAQE,EAAS,GAEpCh4B,EAAI,EAAGk7B,EAAKh6B,EAAKjB,OAAQD,EAAIk7B,EAAIl7B,GAAK,EAAG,CAChDxB,IACMQ,EAAQ,EAAIkR,GAAWmvC,EAASrrB,EAAOqrB,GA1BzCxI,OAAAA,EACAG,OAAAA,EADAH,EAyBwB3c,EAAQ,GAAdzwB,EAxBlButC,EAwBqC9c,EAAQ,GAAxBxwB,EAvBpBH,KAAK2tC,KAAKL,EAAKA,EAAKG,EAAKA,KA0B9B91C,EAAMlB,GAAc,IAARhB,EACZkC,EAAMlB,EAAI,GAAc,IAARhB,EAChBkC,EAAMlB,EAAI,GAAc,IAARhB,EAChBkC,EAAMlB,EAAI,GAAc,IAARhB,IAEVyK,IAAMquB,IACVruB,EAAI,EACJC,KAIJlL,IAAM+iC,EAAM,IAAIwhF,EAAY7hH,EAAM42B,EAAOE,GAGzC,OAFAuJ,EAAI8L,aAAc,EAEX9L,EAkFMyhF,CAAiB,CAAEhvF,MAAOrwB,KAAK6N,WAAWmxG,0BAGvD9sF,oBAAYltB,GACVnK,IAAMk3B,EAAU3Z,YAAM8Z,qBAAWltB,GAcjC,OAZIhF,KAAK6N,WAAWmtG,kBAClBjpF,EAAQutF,oBAAsB,GAG5Bt/G,KAAK6N,WAAWotG,aAClBlpF,EAAQwtF,QAAU,GAGhBv/G,KAAK6N,WAAWkxG,UAAY,GAAK/+G,KAAK6N,WAAWkxG,WAAa,IAChEhtF,EAAQytF,UAAYx/G,KAAK6N,WAAWkxG,UAAU51F,YAAY,IAGrD4I,eAGTo6D,qBAAa5uF,GACPA,QAA4BhC,IAApBgC,EAAKyhH,aACfh/G,KAAKm/G,cACL5hH,EAAK2Z,IAAMlX,KAAK49B,KAGlBxlB,YAAM+zE,sBAAY5uF,gBAGpBumB,mBACE1L,YAAM0L,mBAEF9jB,KAAK49B,KAAK59B,KAAK49B,IAAI9Z,qDAlFD2nC,IAsF1BjqC,GAAezW,IAAI,QAASm0G,IC5H5B,IAAMO,eA4BJ,WAAanwF,EAAkBiE,EAAgB93B,GAC7C2c,YAAMkX,EAASiE,EAAQ93B,GAEvBuE,KAAKgF,KAAO,MAEZhF,KAAK6N,WAAajS,OAAOC,OAAO,CAE9B6jH,cAAe,CACb16G,KAAM,SACNm/C,SAAS,EACT9kD,QAAS,CACPhE,MAAS,QAASorF,MAAS,UAG/Bk5B,aAAc,CACZ36G,KAAM,SAAU49C,UAAW,EAAG3hD,IAAKyH,EAAAA,EAAU1H,KAAM0H,EAAAA,EAAUy7C,SAAS,GAExEy7D,aAAc,CACZ56G,KAAM,SAAU49C,UAAW,EAAG3hD,IAAKyH,EAAAA,EAAU1H,KAAM0H,EAAAA,EAAUy7C,SAAS,GAExE07D,aAAc,CACZ76G,KAAM,UAAWm/C,SAAS,GAE5B27D,QAAS,CACP96G,KAAM,SACNm/C,SAAS,EACT9kD,QAAS,CACP,GAAI,GACJk9C,OAAU,SACVD,MAAS,UAGbyjE,WAAY,CACV/6G,KAAM,SACN3F,QAAS,CACP,GAAI,GACJhE,MAAS,QACT,YAAa,YACb,YAAa,YACb2kH,UAAa,YACbvnF,KAAQ,SAGZijB,OAAQ,CACN12C,KAAM,SAAU49C,UAAW,EAAG3hD,IAAK,GAAMD,IAAK,KAAO4mF,SAAU,QAEjEj7E,MAAO,CACL3H,KAAM,SAAU49C,UAAW,EAAG3hD,IAAK,GAAMD,IAAK,MAEhD+jD,cAAc,EACdG,iBAAiB,EAEjB61D,UAAW,CACT/1G,KAAM,SAAU49C,UAAW,EAAG3hD,IAAK,IAAKD,IAAK,EAAGoC,QAAQ,GAE1D43G,gBAAiB,CACfh2G,KAAM,UAAW5B,QAAQ,GAE3B8sC,cAAe,CACblrC,KAAM,UAAWm/C,SAAS,GAE5B82D,WAAY,CACVj2G,KAAM,UAAW5B,QAAQ,GAE3B27G,UAAW,CACT/5G,KAAM,QAAS09C,KAAM,KAAOzhD,IAAK,EAAGD,IAAK,EAAGoC,QAAQ,GAEtDqkF,iBAAkB,CAChBziF,KAAM,UAAW5B,QAAQ,GAE3B47G,WAAY,CACVh6G,KAAM,QAAS09C,KAAM,KAAOzhD,IAAK,EAAGD,IAAK,EAAGoC,QAAQ,IAGrDpD,KAAK6N,WAAY,CAElBw1C,YAAa,CACXr+C,KAAM,SACNisB,OAAQ,QACR5xB,QAAS,CACP,GAAI,GACJhE,MAAS,QACTwsF,QAAW,UACXr8E,OAAU,aAMZ8jB,aAAmBw1D,IACrB9kF,KAAKsvB,aAAU/zB,EACfyE,KAAK48C,OAAS,IAAI86C,GAAepoE,KAEjCtvB,KAAKsvB,QAAUA,EACftvB,KAAK48C,YAASrhD,GAGhByE,KAAKwkD,KAAK/oD,6GAGZ+oD,cAAM/oD,GACJ,IAAIyS,EAAIzS,GAAU,GAClByS,EAAEm1C,YAAcjoD,GAAS8S,EAAEm1C,YAAa,WACxCn1C,EAAEs1C,WAAapoD,GAAS8S,EAAEs1C,WAAY,UAEtCxjD,KAAK0/G,cAAgBtkH,GAAS8S,EAAEwxG,cAAe,SAC/C1/G,KAAK2/G,aAAevkH,GAAS8S,EAAEyxG,aAAc,GAC7C3/G,KAAK4/G,aAAexkH,GAAS8S,EAAE0xG,aAAcl3G,EAAAA,GAC7C1I,KAAK6/G,aAAezkH,GAAS8S,EAAE2xG,cAAc,GAC7C7/G,KAAK8/G,QAAU1kH,GAAS8S,EAAE4xG,QAAS,SACnC9/G,KAAK07C,OAAStgD,GAAS8S,EAAEwtC,OAAQ,IACjC17C,KAAK2M,MAAQvR,GAAS8S,EAAEvB,MAAO,GAE/B3M,KAAK+6G,UAAY3/G,GAAS8S,EAAE6sG,UAAW,GACvC/6G,KAAKg7G,gBAAkB5/G,GAAS8S,EAAE8sG,iBAAiB,GACnDh7G,KAAKkwC,cAAgB90C,GAAS8S,EAAEgiC,eAAe,GAC/ClwC,KAAKi7G,WAAa7/G,GAAS8S,EAAE+sG,YAAY,GACzCj7G,KAAK++G,UAAY3jH,GAAS8S,EAAE6wG,UAAW,IACvC/+G,KAAKynF,iBAAmBrsF,GAAS8S,EAAEu5E,kBAAkB,GACrDznF,KAAKg/G,WAAa5jH,GAAS8S,EAAE8wG,WAAY,GAEzC5mG,YAAMosC,eAAKt2C,GAEXlO,KAAK2kD,qBAGPkB,gBAAQ9gD,cACN/E,KAAKskD,WAAWhsC,kBAAQlV,GACtBpD,EAAKuzB,OAAOxoB,IAAI3H,MAElBpD,KAAK8lD,cAAc9lD,KAAK0xC,SAExB3sC,iBAGFygD,kBACE,IAAIy6D,EAA+B,GAEnC,GAAIjgH,KAAK48C,OAAQ,CACf,IACI+iE,EAAcC,EADdhjE,EAAS58C,KAAK48C,OAGS,UAAvB58C,KAAK0/G,eACPC,EAAe/iE,EAAO0pC,iBAAiBtmF,KAAK2/G,cAC5CC,EAAehjE,EAAO0pC,iBAAiBtmF,KAAK4/G,gBAE5CD,EAAe3/G,KAAK2/G,aACpBC,EAAe5/G,KAAK4/G,cAEtBhjE,EAAOk7C,UAAU6nB,EAAcC,EAAc5/G,KAAK6/G,cAElDjkH,OAAOC,OAAOokH,EAAS,CACrBh4G,SAAU20C,EAAOgqC,kBACjBr4E,MAAOquC,EAAOiqC,aAAa7mF,KAAKmlD,oBAEb,WAAjBnlD,KAAK8/G,SACPlkH,OAAOC,OAAOokH,EAAS,CACrBvkE,OAAQkB,EAAOmqC,YAAY/mF,KAAK07C,OAAQ17C,KAAK2M,OAC7Cw/B,QAASyQ,EAAOkqC,uBAGf,CACL,IAAIx3D,EAAUtvB,KAAKsvB,QACnB1zB,OAAOC,OAAOokH,EAAS,CACrBh4G,SAAWqnB,EAAoByrB,cAC/BxsC,MAAQ+gB,EAAoB80D,SAASpkF,KAAKmlD,oBAEvB,WAAjBnlD,KAAK8/G,SACPlkH,OAAOC,OAAOokH,EAAS,CACrBvkE,OAASpsB,EAAoBsc,QAAQ5rC,KAAK07C,OAAQ17C,KAAK2M,OACvDw/B,QAAU7c,EAAoBi1D,eAKf,WAAjBvkF,KAAK8/G,QACP9/G,KAAKkgH,UAAY,IAAIrB,GACnBoB,EACAjgH,KAAKolD,gBAAgB,CACnBL,aAAc/kD,KAAK+kD,aACnBG,gBAAiBllD,KAAKklD,gBACtBkpC,cAAc,KAIlBpuF,KAAKkgH,UAAY,IAAIhB,GACnBe,EACAjgH,KAAKolD,gBAAgB,CACnB21D,UAAW/6G,KAAK+6G,UAChBC,gBAAiBh7G,KAAKg7G,gBACtB9qE,cAAelwC,KAAKkwC,cACpB+qE,WAAYj7G,KAAKi7G,WACjB8D,UAAW/+G,KAAK++G,UAChBt3B,iBAAkBznF,KAAKynF,iBACvBu3B,WAAYh/G,KAAKg/G,cAKvBh/G,KAAKskD,WAAW7nD,KAAKuD,KAAKkgH,wBAG5BjvF,gBAAQ4zB,GACN,kBAD4B,IACG,IAA3B7kD,KAAKskD,WAAWhoD,OAApB,CAEAzB,IAAMolH,EAA+B,GAEjCp7D,EAAKt2C,QACHvO,KAAK48C,OACPhhD,OAAOC,OAAOokH,EAAS,CACrB1xG,MAAOvO,KAAK48C,OAAOiqC,aACjB7mF,KAAKmlD,oBAITvpD,OAAOC,OAAOokH,EAAS,CACrB1xG,MAAQvO,KAAKsvB,QAAoB80D,SAC/BpkF,KAAKmlD,qBAMQ,WAAjBnlD,KAAK8/G,UAAyBj7D,EAAKnJ,QAAUmJ,EAAKl4C,SAChD3M,KAAK48C,OACPhhD,OAAOC,OAAOokH,EAAS,CACrBvkE,OAAQ17C,KAAK48C,OAAOmqC,YAClB/mF,KAAK07C,OAAQ17C,KAAK2M,SAItB/Q,OAAOC,OAAOokH,EAAS,CACrBvkE,OAAS17C,KAAKsvB,QAAoBsc,QAChC5rC,KAAK07C,OAAQ17C,KAAK2M,UAMzB3M,KAAKkgH,UAAmC9zB,cAAc6zB,iBAGzD9qE,uBAAe15C,EAA8CopD,EAA0BV,GA8DrF,sBA9DiF,IAE7E1oD,QAAmCF,IAAzBE,EAAOikH,eACjB1/G,KAAK48C,kBAAkBkoC,KAEE,UAAvB9kF,KAAK0/G,eACoB,UAAzBjkH,EAAOikH,eAET1/G,KAAK2/G,aAAe3/G,KAAK48C,OAAO8pC,iBAC9B1mF,KAAK2/G,cAEP3/G,KAAK4/G,aAAe5/G,KAAK48C,OAAO8pC,iBAC9B1mF,KAAK4/G,eAEyB,UAAvB5/G,KAAK0/G,eACoB,UAAzBjkH,EAAOikH,gBAEhB1/G,KAAK2/G,aAAe3/G,KAAK48C,OAAO0pC,iBAC9BtmF,KAAK2/G,cAEP3/G,KAAK4/G,aAAe5/G,KAAK48C,OAAO0pC,iBAC9BtmF,KAAK4/G,eAIT5/G,KAAK0/G,cAAgBjkH,EAAOikH,eAG1BjkH,QAAgCF,IAAtBE,EAAOskH,aACO,WAAtBtkH,EAAOskH,WACT//G,KAAK07C,OAAS,GAEd17C,KAAK07C,OAASyK,WAAW1qD,EAAOskH,YAElCl7D,EAAKnJ,QAAS,EACO,WAAjB17C,KAAK8/G,SACH3gG,KAAsBnf,KAAKklD,kBAE/Bf,GAAU,IAIV1oD,QAA4BF,IAAlBE,EAAOigD,SACnBmJ,EAAKnJ,QAAS,EACO,WAAjB17C,KAAK8/G,SACH3gG,KAAsBnf,KAAKklD,kBAE/Bf,GAAU,IAIV1oD,QAA2BF,IAAjBE,EAAOkR,QACnBk4C,EAAKl4C,OAAQ,EACQ,WAAjB3M,KAAK8/G,SACH3gG,KAAsBnf,KAAKklD,kBAE/Bf,GAAU,IAId/rC,YAAM+8B,wBAAc15C,EAAQopD,EAAMV,GAE3BnkD,SA5UqBwiD,y7FCpChC3nD,IAAMslH,GAAc,IAAIv9G,YAAY,CAClC,EAAG,EAAG,EACN,EAAG,EAAG,IAGFw9G,GAAU,IAAIt9G,aAAa,CAC/B,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,IAcQu9G,GAA+BzkH,OAAOC,OAAO,CACxD6F,OAAQ,UACR+lF,kBAAkB,GACjBF,IAGU+4B,GAA4B1kH,OAAOC,OAAO,CACrD6F,OAAQ,CAAEimF,cAAc,EAAME,SAAS,IACtCH,IAKG64B,eAsBJ,WAAahjH,EAAuB9B,GAClC2c,YAAM,CACJnQ,SAAU1K,EAAK0K,SACftG,MAAOw+G,GACPh0E,QAAS5uC,EAAK4uC,SACb1wC,GA1BLuE,oBAAiBsgH,GAIjBtgH,wBAAoB,EACpBA,mBAAe,EACfA,kBAAe,aACfA,oBAAiB,aAqBR,uCAED49B,EAAM,IAAIwhF,EAAYoB,EAAWrsF,EAAOE,GAC9CuJ,EAAI6iF,OAAQ,EACZzgH,KAAK49B,IAAMA,EAIX,IAFA/iC,IAAMoO,EAAIu3G,EAAUlkH,OACdq+C,EAAc,IAAIh4C,WAAWsG,GAC1B5M,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAAG,CAC7BxB,IAAM4K,EAAIpJ,EAAI,EACds+C,EAAat+C,GAAMoJ,GAAK,GAAK,IAC7Bk1C,EAAat+C,EAAI,GAAMoJ,GAAK,EAAI,IAChCk1C,EAAat+C,EAAI,GAAU,IAAJoJ,EAGzB5K,IAAM6lH,EAAa,IAAItB,EAAYzkE,EAAaxmB,EAAOE,GACvDqsF,EAAWD,OAAQ,EACnBC,EAAW55E,UAAYC,EACvB25E,EAAW15E,UAAYD,EACvB/mC,KAAK0gH,WAAaA,EAElB1gH,KAAKurF,YAAY,CACfr0E,IAAO,CAAE7b,MAAOuiC,GAChB+iF,WAAc,CAAEtlH,MAAOqlH,GACvBE,QAAW,CAAEvlH,MAAO,IAAI8+B,EAAQhG,EAAOE,MAGzCr0B,KAAK8/B,SAASoJ,aAAa,KAAM,IAAID,EAAgBm3E,GAAS,8IAtDhEn1G,EAAI88E,iCAAsB,OAAOs4B,gBAyDjCnuF,oBAAYltB,GACVnK,IAAMk3B,EAAU3Z,YAAM8Z,qBAAWltB,GAC3BtD,EAAS1B,KAAK6N,WAAWnM,OAa/B,OAXIA,EAAO8F,WAAW,WACpBuqB,EAAQ8uF,oBAAsB,EAC1Bn/G,EAAOyG,SAAS,WAClB4pB,EAAQ+uF,eAAiB,EAChBp/G,EAAOyG,SAAS,aACzB4pB,EAAQgvF,iBAAmB,EAClBr/G,EAAOyG,SAAS,cACzB4pB,EAAQivF,gBAAkB,IAIvBjvF,eAGTkvF,yBACEpmH,IAAM+iC,EAAM59B,KAAK49B,IACXl8B,EAAS1B,KAAK6N,WAAWnM,OAE3BA,EAAO8F,WAAW,UACpBo2B,EAAIkJ,UAAYC,EAChBnJ,EAAIoJ,UAAYD,GACI,WAAXrlC,GACTk8B,EAAIkJ,UAAYa,EAChB/J,EAAIoJ,UAAYW,IAEhB/J,EAAIkJ,UAAYC,EAChBnJ,EAAIoJ,UAAYD,GAGlBnJ,EAAI8L,aAAc,EAClB1pC,KAAK0gH,WAAWh3E,aAAc,eAGhCs/C,wBACE5wE,YAAM4wE,wBACNhpF,KAAKihH,gBAELpmH,IAAMC,EAAIkF,KAAKu4B,SACfz9B,EAAE09B,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC5B9iC,EAAEutC,SAAW64E,EACbpmH,EAAE4uC,aAAc,EAEhB7uC,IAAMwuF,EAAKrpF,KAAKwpF,kBAChBH,EAAG7wD,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC7ByrD,EAAGhhD,SAAW64E,EACd73B,EAAG3/C,aAAc,EAEjB7uC,IAAMyuF,EAAKtpF,KAAKypF,gBAChBH,EAAG9wD,SAASthB,IAAI7b,MAAQ2E,KAAK49B,IAC7B0rD,EAAG9wD,SAASmoF,WAAWtlH,MAAQ2E,KAAK0gH,WACpCp3B,EAAGjhD,SAAW64E,EACd53B,EAAG5/C,aAAc,eAGnByiD,qBAAa5uF,GACPA,QAAwBhC,IAAhBgC,EAAKmE,SACf1B,KAAKihH,gBACL1jH,EAAK2Z,IAAMlX,KAAK49B,KAGlBxlB,YAAM+zE,sBAAY5uF,8CA3HIkuD,ICzCpB01D,GAUJ,SAAavkE,EAAgBnhD,GAC3BZ,IAAMqT,EAAIzS,GAAU,GAEpBuE,KAAK4/F,UAAYxkG,GAAS8S,EAAE0xF,UAAW,KACvC5/F,KAAKohH,aAAehmH,GAAS8S,EAAEkzG,aAAc,WAC7CphH,KAAKiI,SAAW7M,GAAS8S,EAAEjG,SAAU,IACrCjI,KAAK0/G,cAAgBtkH,GAAS8S,EAAEwxG,cAAe,SAC/C1/G,KAAK2/G,aAAevkH,GAAS8S,EAAEyxG,cAAej3G,EAAAA,GAC9C1I,KAAK4/G,aAAexkH,GAAS8S,EAAE0xG,aAAcl3G,EAAAA,GAC7C1I,KAAKwM,UAAYpR,GAAS8S,EAAE1B,WAAW,GAEvCxM,KAAK48C,OAASA,gBAGhBykE,mCAA2BC,GACzBzmH,IAOI0mH,EAPEp+B,EAAMnjF,KAAK4/F,UACXl8F,EAAI1D,KAAK48C,OACT9hD,EAAI4I,EAAEs2B,OAENk2D,GAAK,IAAIvsF,GAAUoqG,sBAAsBjzG,GAAIqoF,GAC7Cq+B,GAAK,IAAI79G,GAAU89G,mBAAmB3mH,GAAIqoF,GAWhD,OAPEo+B,EADU,MAARp+B,EACGz/E,EAAEuvE,GACU,MAARkQ,EACJz/E,EAAEwvE,GAEFxvE,EAAEyvE,GAGFvtE,KAAK+d,QAAS29F,EAAQpxB,IAAOqxB,EAAK,KAAQ,GAAKC,iBAGxD95F,iBAASjsB,GACPA,EAASA,GAAU,GAEnBZ,IAIIqT,EAJExK,EAAI1D,KAAK48C,OACTp5B,EAAI9f,EAAEnG,KACNzC,EAAI4I,EAAEs2B,OASZ,SAAS9xB,EAAKw5G,GACZ,OAAO97G,KAAK+d,MAAO+9F,EAAS,KAAQxzG,EAAI,IAG1C,SAASvM,EAAOmE,EAAWC,EAAWqjB,EAAW/sB,GAC/C,OAA0C,GAAlC+sB,EAAI1lB,EAAEwvE,GAAKxvE,EAAEuvE,GAAKltE,EAAIrC,EAAEuvE,GAAKntE,GAASzJ,EAV9C6R,EADwB,eAAtBlO,KAAKohH,aACHphH,KAAKqhH,0BAA0BrhH,KAAKiI,UAEpCjI,KAAKiI,SAWXpN,IAGIs5B,EAAOE,EACPvuB,EACAC,EACAqjB,EANEnhB,EAAW,IAAInF,aAAa,IAC5B2qG,EAAM,IAAI9pG,EAMZg+G,EAAK,EACLC,EAAK,EACLC,EAAK,EACL5uC,EAAKvvE,EAAEuvE,GACPC,EAAKxvE,EAAEwvE,GACPC,EAAKzvE,EAAEyvE,GAEX,SAAS2uC,EAAQh8G,EAAWC,EAAWqjB,EAAW5a,GAChDi/F,EAAIjgG,IAAI1H,EAAGC,EAAGqjB,GAAGqhB,aAAa3vC,GAAGs0B,QAAQnnB,EAAiBuG,GAGrC,MAAnBxO,KAAK4/F,WACP95F,EAAIoC,EAAIxE,EAAEuvE,IACVltE,EAAIrC,EAAEwvE,GAAK,EACX9pD,EAAI1lB,EAAEyvE,GAAK,EAEXh/C,EAAQzwB,EAAEyvE,GACV9+C,EAAS3wB,EAAEwvE,GAGXD,GADA0uC,EAAK77G,GACK,EAEVg8G,EAAOh8G,EAAG,EAAG,EAAG,GAChBg8G,EAAOh8G,EAAGC,EAAG,EAAG,GAChB+7G,EAAOh8G,EAAG,EAAGsjB,EAAG,GAChB04F,EAAOh8G,EAAGC,EAAGqjB,EAAG,IACY,MAAnBppB,KAAK4/F,WACd95F,EAAIpC,EAAEuvE,GAAK,EACXltE,EAAImC,EAAIxE,EAAEwvE,IACV9pD,EAAI1lB,EAAEyvE,GAAK,EAEXh/C,EAAQzwB,EAAEyvE,GACV9+C,EAAS3wB,EAAEuvE,GAGXC,GADA0uC,EAAK77G,GACK,EAEV+7G,EAAO,EAAG/7G,EAAG,EAAG,GAChB+7G,EAAOh8G,EAAGC,EAAG,EAAG,GAChB+7G,EAAO,EAAG/7G,EAAGqjB,EAAG,GAChB04F,EAAOh8G,EAAGC,EAAGqjB,EAAG,IACY,MAAnBppB,KAAK4/F,YACd95F,EAAIpC,EAAEuvE,GAAK,EACXltE,EAAIrC,EAAEwvE,GAAK,EACX9pD,EAAIlhB,EAAIxE,EAAEyvE,IAEVh/C,EAAQzwB,EAAEuvE,GACV5+C,EAAS3wB,EAAEwvE,GAGXC,GADA0uC,EAAKz4F,GACK,EAEV04F,EAAO,EAAG,EAAG14F,EAAG,GAChB04F,EAAO,EAAG/7G,EAAGqjB,EAAG,GAChB04F,EAAOh8G,EAAG,EAAGsjB,EAAG,GAChB04F,EAAOh8G,EAAGC,EAAGqjB,EAAG,IAGlBhtB,IAKI2lH,EAAMC,EALN3lH,EAAI,EACJoJ,EAAI,EACF+6G,EAAY,IAAI79G,WAAmBwxB,EAAgBE,EAAS,GAC5D4tF,EAAe,IAAIn/G,aAAqBqxB,EAAgBE,GAGnC,UAAvBr0B,KAAK0/G,eACPqC,EAAOr+G,EAAE4iF,iBAAiBtmF,KAAK2/G,cAC/BqC,EAAOt+G,EAAE4iF,iBAAiBtmF,KAAK4/G,gBAE/BmC,EAAO/hH,KAAK2/G,aACZqC,EAAOhiH,KAAK4/G,cAGd/kH,IAAMu6C,EAAKx5C,OAAOC,OAAO,GAAIJ,EAAOohG,YAAa,CAAEjgD,OAAQl5C,IACvD1D,KAAKwM,YACP4oC,EAAGvoC,OAAS,CAAE,EAAG,IAEnBhS,IAIaoG,EAJPojF,EAAa9rE,GAAmBI,UAAUy8B,GAC1CrE,EAAM,IAAIjuC,aAAa,GACvB6J,EAAQ03E,EAAWp2E,WAErBjN,EAAM,EAAQ45F,EAAO,EACzB,GAAI56F,KAAKwM,UAAW,CAClBxL,EAAO0H,EAAAA,EACPzH,GAAOyH,EAAAA,EACP,IAAKtM,IAAIizD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAC3B,IAAKjzD,IAAIgzD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAC3B,IAAKhzD,IAAIkzD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAAI,CAC/Bz0D,IACMwqD,EAAM7hC,EADA7hB,EAAMytD,EAAIC,EAAIC,EAAI,GAAK,GAE/BjK,EAAMrkD,IAAKA,EAAMqkD,GACjBA,EAAMpkD,IAAKA,EAAMokD,GAI3Bu1C,EAAO35F,EAAMD,EAGf,IAAK5E,IAAIizD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAC3B,IAAKjzD,IAAIgzD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAC3B,IAAKhzD,IAAIkzD,EAAKuyD,EAAIvyD,EAAK6jB,IAAM7jB,EAAI,CAC/Bz0D,IAAMooB,EAAMthB,EAAMytD,EAAIC,EAAIC,EAAI,GAAK,EAC/BjK,EAAM7hC,EAAGP,GACTjjB,KAAKwM,YACP64C,GAAOA,EAAMrkD,GAAO45F,GAGtBvW,EAAW/1E,aAAa3B,EAAM04C,GAAMtU,GACpCyvE,EAAWnkH,GAAMuJ,KAAK+d,MAAiB,IAAXotB,EAAK,IACjCyvE,EAAWnkH,EAAI,GAAMuJ,KAAK+d,MAAiB,IAAXotB,EAAK,IACrCyvE,EAAWnkH,EAAI,GAAMuJ,KAAK+d,MAAiB,IAAXotB,EAAK,IACrCyvE,EAAWnkH,EAAI,GAAOgpD,EAAM08D,GAAQ18D,EAAM28D,EAAQ,IAAM,EAExDC,EAAcx8G,GAAMwd,IAElBxd,EACFpJ,GAAK,EAKXxB,IAAMsxC,EAAU,IAAImmC,GAAY2vC,EAAcv+G,GAE9C,MAAO,UAAEuE,YAAUu4G,QAAWrsF,SAAOE,UAAQ8X,ICzKjD,IAAM+1E,eAgBJ,WAAatlE,EAAgBrpB,EAAgB93B,GAC3C2c,YAAMwkC,EAAQrpB,EAAQ93B,GAEtBuE,KAAKgF,KAAO,QAEZhF,KAAK6N,WAAajS,OAAOC,OAAO,CAE9B6F,OAAQ,CACNsD,KAAM,SACN5B,QAAQ,EACR/D,QAAS,CACPigG,QAAW,UACX6iB,OAAU,SACV,gBAAiB,gBACjB,kBAAmB,kBACnB,iBAAkB,mBAGtBf,aAAc,CACZp8G,KAAM,SACNm/C,SAAS,EACT9kD,QAAS,CACP+iH,QAAW,UAAWC,WAAc,eAGxCp6G,SAAU,CACRjD,KAAM,QACN09C,KAAM,GACNzhD,IAAK,IACLD,IAAK,EACLmjD,SAAS,GAEXy7C,UAAW,CACT56F,KAAM,SACNm/C,SAAS,EACT9kD,QAAS,CACPyG,EAAK,IAAKC,EAAK,IAAKqjB,EAAK,MAG7Bs2F,cAAe,CACb16G,KAAM,SACNm/C,SAAS,EACT9kD,QAAS,CACPhE,MAAS,QAASorF,MAAS,UAG/Bk5B,aAAc,CACZ36G,KAAM,SAAU49C,UAAW,EAAG3hD,IAAKyH,EAAAA,EAAU1H,KAAM0H,EAAAA,EAAUy7C,SAAS,GAExEy7D,aAAc,CACZ56G,KAAM,SAAU49C,UAAW,EAAG3hD,IAAKyH,EAAAA,EAAU1H,KAAM0H,EAAAA,EAAUy7C,SAAS,GAExE33C,UAAW,CACTxH,KAAM,UAAWm/C,SAAS,IAG3BnkD,KAAK6N,WAAY,CAElBi1C,WAAY,KACZC,KAAM,KACNI,UAAW,KACX9iC,UAAW,KACXgjC,YAAa,KAEbM,UAAW,KACXC,UAAW,KACXC,QAAS,OAIX7jD,KAAK48C,OAASA,EAEd58C,KAAKwkD,KAAK/oD,6GAGZ+oD,cAAM/oD,GACJZ,IAAM6I,EAAI1D,KAAK48C,OACT1uC,EAAIzS,GAAU,GACpByS,EAAEu1C,YAAcroD,GAAS8S,EAAEu1C,YAAa,CAAE//C,EAAE1C,IAAK0C,EAAEzC,MACnDiN,EAAEm1C,YAAcjoD,GAAS8S,EAAEm1C,YAAa,SACxCn1C,EAAEo1C,WAAaloD,GAAS8S,EAAEo1C,WAAY,YAEtCtjD,KAAKqjD,YAAc,QACnBrjD,KAAK4/F,UAAYxkG,GAAS8S,EAAE0xF,UAAW,KACvC5/F,KAAK0B,OAAStG,GAAS8S,EAAExM,OAAQ,iBACjC1B,KAAKohH,aAAehmH,GAAS8S,EAAEkzG,aAAc,WAC7CphH,KAAKiI,SAAW7M,GAAS8S,EAAEjG,SAAU,IACrCjI,KAAK0/G,cAAgBtkH,GAAS8S,EAAEwxG,cAAe,SAC/C1/G,KAAK2/G,aAAevkH,GAAS8S,EAAEyxG,cAAej3G,EAAAA,GAC9C1I,KAAK4/G,aAAexkH,GAAS8S,EAAE0xG,aAAcl3G,EAAAA,GAC7C1I,KAAKwM,UAAYpR,GAAS8S,EAAE1B,WAAW,GAEvC4L,YAAMosC,eAAKt2C,GAEXlO,KAAK2kD,qBAGPkB,gBAAQ9gD,cACN/E,KAAKskD,WAAWhsC,kBAAQlV,GACtBpD,EAAKuzB,OAAOxoB,IAAI3H,MAElBpD,KAAK8lD,cAAc9lD,KAAK0xC,SAExB3sC,iBAGFygD,kBACE3qD,IAAMynH,EAAc,IAAInB,GAAYnhH,KAAK48C,OAAQ,CAC/CwkE,aAAcphH,KAAKohH,aACnBn5G,SAAUjI,KAAKiI,SACf23F,UAAW5/F,KAAK4/F,UAChB8f,cAAe1/G,KAAK0/G,cACpBC,aAAc3/G,KAAK2/G,aACnBC,aAAc5/G,KAAK4/G,aACnBpzG,UAAWxM,KAAKwM,YAGZ+1G,EAAc,IAAIhC,GACtB+B,EAAY56F,QAAQ,CAAEm1E,YAAa78F,KAAKmlD,mBACxCnlD,KAAKolD,gBAAgB,CACnB1jD,OAAQ1B,KAAK0B,UAIjB1B,KAAKskD,WAAW7nD,KAAK8lH,OA5IS//D,ICrBlC,SAASggE,GAAgBx9G,GACvBqa,GAAI1X,iDAAiD3C,cCRhDnK,IAAM4nH,GAA2B,CACtCp4G,KAAM,eACNua,OAAQ,IAaK89F,GAkBb,SAAsBj8F,EAAchrB,kBAAqC,IAAnDuE,WAAAymB,EAdtBzmB,aAA0B,CACxB2iH,cAAe,IAAIltG,GACnB8Q,YAAa,IAAI9Q,GACjBmwC,SAAU,IAAInwC,IAYdzV,KAAK6N,WAAarS,GAAaC,EAAQuE,KAAK+nF,mBAC5C/nF,KAAKoL,KAAOC,sEARdJ,GAAI88E,iCAAsB,OAAO06B,IAajCx3G,GAAIZ,oBAAU,OAAOrK,KAAK6N,WAAWxD,mBAErCu4G,mBAAWvnH,GAIT,OAHA2E,KAAK6N,WAAW+W,OAASvpB,EACzB2E,KAAKuV,QAAQotG,cAAc3qG,SAAS3c,GAE7B2E,mBAGT6iH,iBAASxnH,GAIP,OAHA2E,KAAK6N,WAAWxD,KAAOhP,EACvB2E,KAAKuV,QAAQgR,YAAYvO,SAAS3c,GAE3B2E,mBAGT8jB,mBACE9jB,KAAKuV,QAAQqwC,SAAS5tC,qDCvDnBnd,IAAMioH,GAAyClnH,OAAOC,OAAO,CAClE61C,SAAS,GACR+wE,IAWGM,eAcJ,WAAat8F,EAAc0oE,EAAsB1zF,EAAgEoiG,kBAAb,IAClGzlF,YAAMqO,EAAO7qB,OAAOC,OAAO,CAAEwO,KAAM8kF,EAAKnqF,MAAQvJ,IAD+DuE,YAAA69F,EAG/G79F,KAAKuV,QAAU3Z,OAAOC,OAAO,CAC3BmnH,kBAAmB,IAAIvtG,GACvBwtG,kBAAmB,IAAIxtG,IACtBzV,KAAKuV,SAERvV,KAAKkjH,kBAAkB/zB,8LAnBzBlkF,EAAI88E,iCAAsB,OAAO+6B,IAsBjC73G,EAAIymC,uBAAa,OAAO1xC,KAAK6N,WAAW6jC,SAMxCzmC,EAAIjG,oBAAU,MAAO,8BAErBm+G,mBACE,OAAOnjH,KAAKmvF,KAAKnqF,kBAGnBk+G,2BAAmB/zB,GACjBnvF,KAAKojH,yBACLpjH,KAAKmvF,KAAOA,EAEZnvF,KAAKymB,MAAM29B,MAAM5zB,OAAOxwB,KAAKmvF,KAAK/qC,OAClCpkD,KAAK8nF,gCAGPs7B,kCACMpjH,KAAKmvF,OACPnvF,KAAKymB,MAAM29B,MAAM1zB,SAAS1wB,KAAKmvF,KAAK/qC,OACpCpkD,KAAKmvF,KAAKrrE,wBAIdA,mBACM9jB,KAAK69F,QAAU79F,KAAK69F,OAAOwlB,kBAAkBrjH,MAC/CA,KAAK69F,OAAOylB,qBAAqBtjH,OAEjCA,KAAKojH,yBACLpjH,KAAKuV,QAAQqwC,SAAS5tC,yBAS1B8tC,uBAAezqD,GAKb,OAJA2E,KAAK6N,WAAW6jC,QAAUr2C,EAC1B2E,KAAK8nF,mBACL9nF,KAAKuV,QAAQytG,kBAAkBhrG,SAAShY,KAAK6N,WAAW6jC,SAEjD1xC,kBAGTk0F,yBACE,OAAIl0F,KAAK69F,OACA79F,KAAK69F,OAAOhwF,WAAW6jC,SAAW1xC,KAAK6N,WAAW6jC,QAElD1xC,KAAK6N,WAAW6jC,qBAQ3B6xE,4BACE,OAAOvjH,KAAK8lD,eAAe9lD,KAAK6N,WAAW6jC,sBAG7Co2C,4BACE9nF,KAAKmvF,KAAKrpC,cAAc9lD,KAAKk0F,8BAW/BjjE,gBAAQ4zB,GAGN,OAFC7kD,KAAKmvF,KAAal+D,OAAO4zB,GAEnB7kD,kBAGT2kD,eAAOlpD,GAGL,OAFAuE,KAAKmvF,KAAKxqC,MAAMlpD,GAETuE,kBAQTwjH,sBAAc57G,GACZ/M,IAAMs0F,EAAYnvF,KAAKmvF,KAMvB,OAJIA,EAAKq0B,cACPr0B,EAAKq0B,aAAa57G,GAGb5H,kBAQTm1C,uBAAe15C,GAMb,OALAuE,KAAKmvF,KAAKh6C,cAAc15C,GACxBuE,KAAKuV,QAAQ0tG,kBAAkBjrG,SAC7BhY,KAAKmvF,KAAK/oC,iBAGLpmD,kBAOTomD,yBACE,OAAOpmD,KAAKmvF,KAAK/oC,6BAQnB3B,kBAAUppD,GAGR,OAFA2E,KAAKmvF,KAAK1qC,SAASppD,GAEZ2E,gDA/JyB0iH,ICR9B1mC,GAAK,IAAIn4E,EACT4/G,GAAK,IAAI9/G,EAEF+/G,GAA6B,CACxCr5G,KAAM,GACNua,OAAQ,GACR8sB,SAAS,GAkBIiyE,GAmCb,SAAsBl9F,EAAuBhf,EAAahM,kBAAuC,IAA3EuE,WAAAymB,EAAuBzmB,YAAAyH,EA/BpCzH,aAA4B,CACnC4jH,oBAAqB,IAAInuG,GACzBouG,sBAAuB,IAAIpuG,GAC3ButG,kBAAmB,IAAIvtG,GACvBo+E,cAAe,IAAIp+E,GACnBktG,cAAe,IAAIltG,GACnB8Q,YAAa,IAAI9Q,GACjBmwC,SAAU,IAAInwC,IAShBzV,cAAoC,GACpCA,oBAA+B,GAE/BA,YAAS,IAAI6D,EACb7D,cAAW,IAAI2D,EACf3D,gBAAa,IAAIgE,EACjBhE,WAAQ,IAAI2D,EAAQ,EAAG,EAAG,GAC1B3D,eAAY,IAAI6D,EASd7D,KAAK6N,WAAarS,GAAaC,EAAQuE,KAAK+nF,mBAC5C/nF,KAAKoL,KAAOC,KACZrL,KAAKuzB,OAAS9M,EAAM8M,OAEpBvzB,KAAKu4C,SAAW,IAAIg8C,GAAkBv0F,0HAzBxCiL,GAAI88E,iCAAuB,OAAO27B,IA8BlCz4G,GAAIZ,oBAAU,OAAOrK,KAAK6N,WAAWxD,MACrCY,GAAI2Z,sBAAY,OAAO5kB,KAAK6N,WAAW+W,QACvC3Z,GAAIymC,uBAAa,OAAO1xC,KAAK6N,WAAW6jC,sBAYxCsM,qBAAa9vC,GAQX,OAPI3R,MAAMC,QAAQ0R,GAChBlO,KAAKiI,SAASzE,UAAU0K,GAExBlO,KAAKiI,SAASyyB,KAAKxsB,GAErBlO,KAAKyvC,eAEEzvC,mBAcT8jH,qBAAax4G,GACX,GAAI/O,MAAMC,QAAQ8O,GAChB,GAAiB,IAAbA,EAAEhP,OAAc,CAClBzB,IAAM0M,GAAI,IAAIw8G,GAAQvgH,UAAU8H,GAChCtL,KAAK4qC,WAAWo5E,aAAaz8G,QAE7BvH,KAAK4qC,WAAWpnC,UAAU8H,QAEnBA,aAAay4G,EACtB/jH,KAAK4qC,WAAWo5E,aAAa14G,GAE7BtL,KAAK4qC,WAAWlQ,KAAKpvB,GAIvB,OAFAtL,KAAKyvC,eAEEzvC,mBAaTikH,kBAAUjzG,GAIR,OAHAhR,KAAK2M,MAAMa,IAAIwD,EAAGA,EAAGA,GACrBhR,KAAKyvC,eAEEzvC,mBAaTkkH,sBAAcppH,GAIZ,OAHAkF,KAAKs5C,UAAU5e,KAAK5/B,GACpBkF,KAAKyvC,eAEEzvC,mBAGTyvC,wBACE50C,IAAMmH,EAAIhC,KAAKmkH,uBAAuBV,IACtCzjH,KAAKg6B,OAAOqjF,iBAAiBr7G,EAAE8D,GAAI9D,EAAE+D,GAAI/D,EAAEonB,GAE3C4yD,GAAG/hC,2BAA2Bj6C,KAAK4qC,YACnC5qC,KAAKg6B,OAAOuf,YAAYyiC,IAExBA,GAAGooC,UAAUpkH,KAAK2M,MAAM7G,EAAG9F,KAAK2M,MAAM5G,EAAG/F,KAAK2M,MAAMyc,GACpDppB,KAAKg6B,OAAOuf,YAAYyiC,IAExBnhF,IAAMqT,EAAIlO,KAAKiI,SACf+zE,GAAGqhC,gBAAgBnvG,EAAEpI,EAAI9D,EAAE8D,EAAGoI,EAAEnI,EAAI/D,EAAE+D,EAAGmI,EAAEkb,EAAIpnB,EAAEonB,GACjDppB,KAAKg6B,OAAOuf,YAAYyiC,IAExBh8E,KAAKg6B,OAAOuf,YAAYv5C,KAAKs5C,WAE7Bt5C,KAAKqkH,+BAELrkH,KAAKymB,MAAM8M,OAAOyX,oBAElBhrC,KAAKuV,QAAQs+E,cAAc77E,SAAShY,KAAKg6B,sBAM3CqqF,mDACErkH,KAAKskH,SAAShsG,kBAAQ62E,GACpBA,EAAKh6C,cAAc,CAAEnb,OAAQh6B,EAAKg6B,0BAatCuqF,uBAAet8G,EAAmBmrF,EAA6B33F,GAC7DZ,IAAM2pH,EAAa,IAAIrxB,GAAWnzF,KAAMiI,EAAUmrF,EAAS33F,GAG3D,OAFAuE,KAAKykH,eAAehoH,KAAK+nH,GAElBA,gBAQTE,wBAAgB3/G,GACd/E,KAAKykH,eAAet2G,QAAQmK,QAAQvT,iBAQtC4/G,0BAAkBH,GAChB3pH,IAAMooB,EAAMjjB,KAAKykH,eAAen8G,QAAQk8G,IAC3B,IAATvhG,IACFjjB,KAAKykH,eAAejjE,OAAOv+B,EAAK,GAChCuhG,EAAW1gG,yBAQf8gG,gCACE5kH,KAAK0kH,yBAAeF,UAAcA,EAAW1gG,aAC7C9jB,KAAKykH,eAAenoH,OAAS,gBAWrBuoH,4BAAoB7/G,EAAcyC,EAAahM,EAAaqpH,mBAAS,GAC7EjqH,IAAMqT,EAAIzS,GAAU,GACdw1C,EAAKjxC,KAAKymB,MAAM2/B,gBACtBl4C,EAAE8rB,OAASh6B,KAAKg6B,OAAOqR,QACvBn9B,EAAEjJ,QAAUiJ,EAAEjJ,SAAWgsC,EAAGhsC,QAC5BiJ,EAAEg3C,gBAAkB9pD,GAAS8S,EAAEg3C,iBAAkBjU,EAAG8zE,UACpD72G,EAAEu/E,UAAYryF,GAAS8S,EAAEu/E,UAAWx8C,EAAG+zE,eACvC92G,EAAEwjC,QAAUt2C,GAAS8S,EAAEwjC,SAAS,GAEhC72C,IAAMmR,EAAKpQ,OAAOC,OAAO,GAAIqS,EAAG,CAAEwjC,QAAS1xC,KAAK6N,WAAW6jC,SAAWxjC,EAAEwjC,UAClEy9C,WH1P0BnqF,EAAcyC,EAAa8rB,EAAgB93B,GAG7E,IAAIwpH,EAEJ,GAJItkG,IAAOtB,GAAII,KAAK,sBAAwBza,GAIxCyC,aAAkB8mG,IAGpB,KAFA0W,EAAY9jG,GAAuB7W,IAAItF,IAIrC,YADAw9G,GAAex9G,QAGZ,GAAIyC,aAAkBi8E,GAC3B,GAAa,YAAT1+E,EACFigH,EAAY93B,OACP,CAAA,GAAa,QAATnoF,EAIT,YADAw9G,GAAex9G,GAFfigH,EAAYxF,QAKT,GAAIh4G,aAAkBq9E,GAC3B,GAAa,YAAT9/E,EACFigH,EAAY93B,QACP,GAAa,QAATnoF,EACTigH,EAAYxF,OACP,CAAA,GAAa,UAATz6G,EAIT,YADAw9G,GAAex9G,GAFfigH,EAAY/C,QAKT,GAAIz6G,aAAkByzG,GAC3B+J,EAAY5I,GACZ50G,EAASA,EAAO00G,oBACX,CAAA,GAAa,WAATn3G,EAIT,YADAqa,GAAI1X,MAAM,8BAAgCF,EAAS,YAFnDw9G,EAAY5I,GAMdxhH,IAAMs0F,EAAO,IAAI81B,EAAUx9G,EAAQ8rB,EAAQ93B,GAI3C,OAFIklB,IAAOtB,GAAIK,QAAQ,sBAAwB1a,GAExCmqF,EG4MQ+1B,CAAmBlgH,EAAMyC,EAAQzH,KAAKuzB,OAAQvnB,GACrDijF,EAAW,IAAI8zB,GAAsB/iH,KAAKymB,MAAO0oE,EAAMjhF,EAAGlO,MAMhE,OAJK8kH,IACH9kH,KAAKskH,SAAS7nH,KAAKwyF,GACnBjvF,KAAKuV,QAAQquG,oBAAoB5rG,SAASi3E,IAErCA,gBAKTk2B,iCAAyB/hH,EAAa3H,GACpC,OAAOuE,KAAK6kH,mBAAmBh9G,KAAK7H,KAAM,SAAUoD,EAAQ3H,iBAG9D4nH,2BAAmBl0B,GACjB,OAAwC,IAAjCnvF,KAAKskH,SAASh8G,QAAQ6mF,iBAQ/BH,4BAAoBjqF,GAClB/E,KAAKskH,SAASn2G,QAAQmK,QAAQvT,iBAQhCu+G,8BAAsBn0B,GACpBt0F,IAAMooB,EAAMjjB,KAAKskH,SAASh8G,QAAQ6mF,IACrB,IAATlsE,IACFjjB,KAAKskH,SAAS9iE,OAAOv+B,EAAK,GAC1BksE,EAAKrrE,UACL9jB,KAAKuV,QAAQsuG,sBAAsB7rG,SAASm3E,kBAIhDr1C,+BAAuB+K,GACrB7kD,KAAKskH,SAAShsG,kBAAQ62E,UAAQA,EAAKl+D,OAAO4zB,MAC1C7kD,KAAKymB,MAAM8M,OAAOuG,8BAOpBsrF,oCACEplH,KAAKgvF,6BAAmBG,UAAQA,EAAKrrE,2BAGvCA,mBACE9jB,KAAK4kH,uBACL5kH,KAAKolH,kCAEEplH,KAAKykH,sBACLzkH,KAAKskH,SAEZtkH,KAAKuV,QAAQqwC,SAAS5tC,yBAQxB8tC,uBAAezqD,GAQb,OAPA2E,KAAK6N,WAAW6jC,QAAUr2C,EAE1B2E,KAAKgvF,6BAAoBG,UAAgCA,EAAKrH,sBAC9D9nF,KAAK0kH,yBAAgBF,UAA2BA,EAAW18B,sBAE3D9nF,KAAKuV,QAAQytG,kBAAkBhrG,SAAS3c,GAEjC2E,mBAGT4iH,mBAAWvnH,GAIT,OAHA2E,KAAK6N,WAAW+W,OAASvpB,EACzB2E,KAAKuV,QAAQotG,cAAc3qG,SAAS3c,GAE7B2E,mBAGT6iH,iBAASxnH,GAIP,OAHA2E,KAAK6N,WAAWxD,KAAOhP,EACvB2E,KAAKuV,QAAQgR,YAAYvO,SAAS3c,GAE3B2E,mBAMTkmF,2EACE,SAAOlmF,MAAKqlH,4BAAuB9lH,GACxB8rC,QAAQZ,aAAazqC,KAAKg6B,sBAMvCi4C,8EACE,SAAOjyE,MAAKmkH,+BAA0B5kH,GAC3B8rC,QAAQZ,aAAazqC,KAAKg6B,sBAGvCsrF,4EACE,OAAOtlH,KAAKymB,MAAM8+F,iBAAcvlH,MAAKkmF,eAAU3mF,kBAOjD8lH,sFACE,OAAO,IAAIvkF,gBAGbqjF,yFACE,OAAOnkH,KAAKqlH,sBAAsBpzC,UAAU,IAAItuE,iBAQlD0tF,kBAAU1yC,GACR3+C,KAAKymB,MAAMqpE,kBAAkBluC,SAC3B5hD,KAAKiyE,YACLjyE,KAAKslH,UACLlqH,GAASujD,EAAU,kDCjZnB6mE,GACJ,SAAsB3qE,kBAAY,IAAZ76C,UAAA66C,EAIpB,IAFAhgD,IAAMoO,EAAI4xC,EAAKv+C,OAEND,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CACdw+C,EAAMx+C,GACdkZ,QAAQqwC,SAAS76C,IAAI/K,KAAKylH,QAASzlH,kDAI3CylH,iBAAShkF,GACP5mC,IAAMooB,EAAMjjB,KAAK66C,KAAKvyC,QAAQm5B,IAEjB,IAATxe,GACFjjB,KAAK66C,KAAK2G,OAAOv+B,EAAK,IAI1BhY,GAAI+rG,qBACF,OAAOh3G,KAAK66C,KAAKv+C,OAAS,EAAI0D,KAAK66C,KAAK,QAAKt/C,gBAG/C+c,iBAASnP,GAGP,OAFAnJ,KAAK66C,KAAKviC,QAAQnP,GAEXnJ,mBAGT8jB,mBACE,OAAO9jB,KAAKsY,kBAASmpB,UAAQA,EAAI3d,2DC5B/B4hG,8JACJvwE,uBAAe15C,GACb,OAAOuE,KAAKsY,kBAAS62E,UAASA,EAAKh6C,cAAc15C,mBAGnDqqD,uBAAezqD,GACb,OAAO2E,KAAKsY,kBAAS62E,UAASA,EAAKrpC,cAAczqD,mBAGnDmoH,sBAAc57G,GACZ,OAAO5H,KAAKsY,kBAAS62E,UAASA,EAAKq0B,aAAa57G,mBAGlD68C,kBAAUl2C,GACR,OAAOvO,KAAKsY,kBAAS62E,UAASA,EAAK1qC,SAASl2C,mBAG9C0iB,gBAAQ4zB,GACN,OAAO7kD,KAAKsY,kBAAS62E,UAASA,EAAKl+D,OAAO4zB,mBAG5CF,eAAOlpD,GACL,OAAOuE,KAAKsY,kBAAS62E,UAASA,EAAKxqC,MAAMlpD,mBAG3CqoB,iBAASroB,GACP,OAAOuE,KAAKsY,kBAAS62E,UAASA,EAAKrrE,iBA1BA0hG,ICkB1BG,GAAqC/pH,OAAOC,OAAO,CAC9D+pH,YAAa,EACbC,eAAgB,GAChBC,uBAAwB,GACxBC,uBAAwB,EACxBC,YAAa,OACbC,iBAAkB,UAClBC,aAAc,GACbzD,IAaG0D,eAWJ,WAAa1/F,EAAuB+B,EAAwB/sB,6BAA+C,IACzG2c,YAAMqO,EAAO7qB,OAAOC,OAAO,CAAEwO,KAAMme,EAAWne,MAAQ5O,IADpBuE,gBAAAwoB,EAGlCxoB,KAAKuV,QAAU3Z,OAAOC,OAAOmE,KAAKuV,QAAS,CACzC6wG,aAAc,IAAI3wG,GAClB4wG,cAAe,IAAI5wG,GACnBwa,aAAc,IAAIxa,GAClBwtG,kBAAmB,IAAIxtG,KAKzB+S,EAAWjT,QAAQ6wG,aAAar7G,cAAK1O,GACnC2D,EAAKuV,QAAQ6wG,aAAapuG,SAAS3b,MAGrCmsB,EAAWjT,QAAQ8wG,cAAct7G,cAAKu7G,GACpCtmH,EAAKuV,QAAQ8wG,cAAcruG,SAASsuG,MAGtC99F,EAAWjT,QAAQ0a,aAAallB,cAAK9B,GACnCjJ,EAAKuV,QAAQ0a,aAAajY,SAAS/O,WAKT1N,IAAxBE,EAAOyqH,cACTlmH,KAAKumH,SAAS9qH,EAAOyqH,+KAnCzBj7G,EAAI88E,iCAAuB,OAAO49B,IA2ClC16G,EAAIjG,oBAAU,MAAO,0BAOrBuhH,kBAAUlqH,GACR2D,KAAKwoB,WAAW+9F,SAASlqH,gBAQ3B84C,uBAAe15C,kBAAwC,IACrDuE,KAAKwoB,WAAW2sB,cAAc15C,GAC9BuE,KAAKuV,QAAQ0tG,kBAAkBjrG,SAASvc,gBAG1CqoB,mBACE9jB,KAAKwoB,WAAW1E,UAChB1L,YAAM0L,8DArEsB4+F,IC5CX8D,GAQnB,SAAsBn8G,EAAuB+a,GAAvBplB,UAAAqK,EAAuBrK,UAAAolB,EAP7CplB,iBAAc,GACdA,WAAQ,GACRA,WAAQ,GAERA,gBAAa,EACbA,eAAY,+BAIZiL,GAAIjG,oBAAU,MAAO,uDCFjByhH,GAmBJ,SAAaC,EAAgCC,GAG3CvqH,IAAIioE,EASAC,EARJ,GAdFtkE,OAAI,IAAI64E,GAAO,EAAG,GAClB74E,OAAI,IAAI64E,GAAO,EAAG,GAClB74E,OAAI,IAAI64E,GAAO,EAAG,GAClB74E,OAAI,IAAI64E,GAAO,EAAG,GAClB74E,QAAK,IAAI64E,GAAO,EAAG,GACnB74E,OAAI,IAAI64E,GAAO,EAAG,GAEV74E,SAAM,IAAI64E,GAAO,EAAG,GACpB74E,OAAI,IAAI64E,GAAO,EAAG,GAMpB6tC,aAAkBnY,GACpBlqC,EAAKqiD,EAAO58F,cACP,CAAA,KAAI48F,aAAkB5jH,cAG3B,OAFAuhE,EAAKqiD,EAAOpqH,OAAS,EAMvB,GAAIqqH,aAAkBpY,GACpBjqC,EAAKqiD,EAAO78F,cACP,CAAA,KAAI68F,aAAkB7jH,cAG3B,OAFAwhE,EAAKqiD,EAAOrqH,OAAS,EAKvBzB,IAAMoO,EAAIrD,KAAK5E,IAAIqjE,EAAIC,GAEjBsiD,EAAU,IAAI/tC,GAAO,EAAG5vE,GACxB49G,EAAU,IAAIhuC,GAAO,EAAG5vE,GAE9BjJ,KAAK8mH,SAAW,IAAIjuC,GAAO5vE,EAAG,GAC9BjJ,KAAK+mH,SAAW,IAAIluC,GAAO5vE,EAAG,GAE9BjJ,KAAKgnH,qBAAuB,IAAInjH,EAEhC7D,KAAKgC,EAAEzE,KAAKiQ,IAAI,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAI3CxN,KAAKinH,WAAWP,EAAQE,EAAS39G,GAAG,GACpCjJ,KAAKinH,WAAWN,EAAQE,EAAS59G,GAAG,GAIpCjJ,KAAKknH,WAAWN,EAASC,iBAG3BK,oBAAYN,EAAiBC,OvEyDJ39G,EAAcpC,EACjC8C,EACAu9G,EACArqC,EACAxwE,EACA86G,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAY2BnjB,EAC3BojB,EuExFJloH,KAAKmoH,MAAQ7sC,GAASsrC,GACtB5mH,KAAKooH,MAAQ9sC,GAASurC,GAEtBrrC,GAAQorC,EAAS5mH,KAAKmoH,OACtB3sC,GAAQqrC,EAAS7mH,KAAKooH,OAEtBztF,GAAU36B,KAAK8mH,SAAUF,GACzBjsF,GAAU36B,KAAK+mH,SAAUF,GAEzBrtC,GAAYx5E,KAAK4J,EAAG5J,KAAK+mH,SAAU/mH,KAAK8mH,UAExChrC,GAAI97E,KAAK4J,EAAG5J,KAAKo6D,EAAGp6D,KAAKs7D,EAAGt7D,KAAKi3D,GvE6CV/tD,EuE3CblJ,KAAKi3D,EvE2CsBnwD,EuE3CnB9G,KAAKqoH,GvE4CnBz+G,EAAIV,EAAK3L,KACT4pH,EAAOrgH,EAAGvJ,KACVu/E,EAAKlzE,EAAE,GACP0C,EAAK1C,EAAE,GACPw9G,EAAKx9G,EAAE,GACPy9G,EAAKz9G,EAAE,GACP09G,EAAK19G,EAAE,GAEP29G,EAAKD,EAAKxqC,EACV0qC,EAAMF,EAAKF,EACXK,EAAM79G,EAAE,GACR89G,EAAM99G,EAAE,GACR+9G,EAAMF,EAAMC,EACZE,EAAMh+G,EAAE,GACRi+G,EAAMJ,EAAMG,EACZE,EAAMl+G,EAAE,GAGRq+G,EAAM,GAAOV,EAAKj7G,EAAKk7G,EAAMH,EAAKM,EAAMr7G,EAAKu7G,EAAMR,GAFnDU,EAAMD,EAAMJ,GAEkDN,GAD9DY,EAAMF,EAAMF,GAC6D9qC,GAC/EqqC,EAAK,IAAMrqC,EAAKxwE,EAAK86G,EAAKC,GAAMY,EAChCd,EAAK,KAAOO,EAAMp7G,EAAKs7G,EAAMP,GAAMY,EACnCd,EAAK,MAAQO,EAAMN,EAAKQ,EAAM9qC,GAAMmrC,EACpCd,EAAK,KAAOM,EAAMn7G,EAAK86G,EAAKU,GAAOG,EACnCd,EAAK,IAAMG,EAAKh7G,EAAK07G,GAAOC,EAC5Bd,EAAK,KAAOK,EAAMK,GAAOI,EACzBd,EAAK,MAAQM,EAAMJ,EAAKvqC,EAAKgrC,GAAOG,EACpCd,EAAK,KAAOG,EAAKD,EAAKU,GAAOE,EAC7Bd,EAAK,IAAMI,EAAKI,GAAOM,EuEtErBjuC,GAAYh6E,KAAKglG,EAAGhlG,KAAKs7D,EAAGt7D,KAAKqoH,IvEyEFvjB,EuEvET9kG,KAAKglG,GvEwEvBkjB,EAAKpjB,EAAEvnG,MACH,GAAK2qH,EAAG,GAAKA,EAAG,GACxBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACnBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACnBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACnBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GACnBA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GuE9Ea,IAC1BvnG,IAAOtB,GAAIC,IAAI,+BAEnB06D,GAAYh6E,KAAK+wC,IAAK/wC,KAAKgC,EAAGhC,KAAKqoH,IACnCruC,GAAYh6E,KAAKglG,EAAGhlG,KAAKs7D,EAAGt7D,KAAK+wC,MAKnCl2C,IAAMytH,EAAgB,IAAIzvC,GAAO,EAAE,GAC7B0vC,EAAQ,IAAI1vC,GAAO,EAAE,GACrB2vC,EAAQ,IAAI3vC,GAAO,EAAE,GAErBxxB,EAAM,IAAIwxB,GAAO,EAAE,GACnB4vC,EAAO,IAAI5vC,GAAO,EAAE,GACpB9tE,EAAM,IAAI8tE,GAAO,EAAE,GAEnBmsB,EAAIhlG,KAAKglG,EAAEznG,KACXmrH,EAAK1oH,KAAKmoH,MACVQ,EAAK3oH,KAAKooH,MAEhB/gE,EAAI9pD,KAAKiQ,IAAI,CAAE,EAAG,EAAG,GAAIk7G,EAAG,GACb,EAAG,EAAG,GAAIA,EAAG,GACb,EAAG,EAAG,GAAIA,EAAG,GACb,EAAG,EAAG,EAAG,IAExBD,EAAKlrH,KAAKiQ,IAAI,CAAEw3F,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,EAClBA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,EAClBA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,EAClB,EAAG,EAAG,EAAG,IAEzBj6F,EAAIxN,KAAKiQ,IAAI,CAAE,EAAG,EAAG,EAAGm7G,EAAG,GACZ,EAAG,EAAG,EAAGA,EAAG,GACZ,EAAG,EAAG,EAAGA,EAAG,GACZ,EAAG,EAAG,EAAG,IAExBhuF,GAAU4tF,EAAMlhE,GAChBmyB,GAAY8uC,EAAcG,EAAKF,GAC/B5tF,GAAU6tF,EAAMF,GAChB9uC,GAAY+uC,EAAMx9G,EAAIy9G,GAEtB7tF,GAAU2tF,EAAcC,GACxBvoH,KAAKgnH,qBAAqBhhC,SAAWsiC,EAAc/qH,mBAIrD0pH,oBAAYziD,EAA+Bp1D,EAAgBnG,EAAW2/G,GACpExsH,IAAIC,EAAI,EACF09E,EAAK3qE,EAAO7R,KAEdyE,EAAI,EACJwhB,EAAQ,EAAJva,EAMR,GAJI2/G,IACFplG,EAAQ,EAAJva,EACJjH,EAAI,GAEFwiE,aAAiB+pC,GACnB/pC,EAAM17C,UAAS,SAAUnrB,GACnBtB,EAAImnB,IACNu2D,EAAI19E,EAAI,GAAMsB,EAAEmI,EAChBi0E,EAAI19E,EAAI,GAAMsB,EAAEoI,EAChBg0E,EAAI19E,EAAI,GAAMsB,EAAEyrB,EACZw/F,IAAO7uC,EAAI19E,EAAI,GAAM,GAEzBA,GAAK2F,WAGJ,GAAIwiE,aAAiB1hE,aAC1B,KAAOzG,EAAImnB,EAAGnnB,GAAK2F,EACb3F,EAAImnB,IACNu2D,EAAI19E,GAAMmoE,EAAOnoE,GACjB09E,EAAI19E,EAAI,GAAMmoE,EAAOnoE,EAAI,GACzB09E,EAAI19E,EAAI,GAAMmoE,EAAOnoE,EAAI,GACrBusH,IAAO7uC,EAAI19E,EAAI,GAAM,SAI7BgjB,GAAIG,KAAK,gDAIb85B,mBAAWkrB,GAGTpoE,IAAI6M,EACJ,GAAIu7D,aAAiB+pC,GACnBtlG,EAAIu7D,EAAM16C,cACL,CAAA,KAAI06C,aAAiB1hE,cAG1B,OAFAmG,EAAIu7D,EAAMloE,OAAS,EAKrBzB,IAAMuU,EAAS,IAAIypE,GAAO,EAAG5vE,GACvB4/G,EAAU,IAAIhwC,GAAO5vE,EAAE,GAI7BjJ,KAAKinH,WAAWziD,EAAOp1D,EAAQnG,GAAG,GAIlCpO,IAAMy+C,EAAYt5C,KAAKgnH,qBACjB8B,EAAMxvE,EAAUg9C,cACtB,IAAKwyB,EACH,OAAOA,EAKTjuH,IAAM4tH,EAAO,IAAI5vC,GAAO,EAAE,GAC1B4vC,EAAKlrH,KAAO+7C,EAAU0sC,kBvElKAz8E,EAAWK,EAAWqsD,GAiB9C,IAhBA75D,IAAIC,EAAI,EACJoJ,EAAI,EACJ3J,EAAI,EACJ29E,EAAK,EACLC,EAAK,EACLC,EAAK,EACLovC,EAAM,EACNnvC,EAAK,EACHV,EAAQtvE,EAAEkvE,KACVG,EAAQrvE,EAAEmvE,KACViwC,EAAQ/yD,EAAE6iB,KACVQ,EAAK1vE,EAAErM,KACPu8E,EAAK7jB,EAAE14D,KACPw8E,EAAKxwE,EAAEhM,KACTm6B,EAAM,EAEHr7B,EAAI48E,EAAOQ,GAAMP,EAAO78E,IAC7B,IAAK0sH,EAAM,EAAGtjH,EAAI,EAAGA,EAAIujH,EAAOpvC,IAAMmvC,IAAOtjH,IAAK,CAIhD,IAHAk0E,EAAKovC,EACLrvC,EAAKD,EACL/hD,EAAM,EACD57B,EAAI,EAAGA,EAAIo9E,EAAOQ,IAAMC,GAAMqvC,EAAOltH,IACxC47B,GAAO4hD,EAAGI,GAAMI,EAAGH,GAErBI,EAAGH,GAAMliD,GuE0IXyhB,CAAS0vE,EAAQz5G,EAAOq5G,GAExBrsH,IAAIC,EAAI,EACF09E,EAAK8uC,EAAQtrH,KACnB,GAAIinE,aAAiB+pC,GAAW,CAC5B/pC,EAAM17C,UAAS,SAAUnrB,GACvBA,EAAEmI,EAAIi0E,EAAI19E,GACVsB,EAAEoI,EAAIg0E,EAAI19E,EAAI,GACdsB,EAAEyrB,EAAI2wD,EAAI19E,EAAI,GACdA,GAAK,KAKPxB,IAAMouH,EAAiB,IAAIplH,EAC3BolH,EAAezuF,WAAW8e,GAE1Bz+C,IAAMwyG,EAAa7oC,EAAM6oC,WAEzB,IAAKjxG,IAAI4O,KAAOqiG,EAAY,CAE1B,GAAIA,EAAWh5F,eAAerJ,GACbqiG,EAAWriG,GAEjB46F,SAASttF,SAAQ,SAASotF,GAEjCA,EAAKD,WAAWntF,SAAQ,SAAS4wG,GAE/BA,EAAI3vE,YAAYD,GAChB4vE,EAAI/vE,SAAS8vE,eAMlB,GAAIzkD,aAAiB1hE,aAG1B,IADAjI,IAAMsuH,EAAS,EAAJlgH,EACJ5M,EAAI8sH,EAAI9sH,GAAK,EAElBmoE,EAAOnoE,GAAM09E,EAAI19E,GACjBmoE,EAAOnoE,EAAI,GAAM09E,EAAI19E,EAAI,GACzBmoE,EAAOnoE,EAAI,GAAM09E,EAAI19E,EAAI,QAI3BgjB,GAAIG,KAAK,iCAGX,OAAOxf,KAAKgnH,sBChPTnsH,IAAMuuH,GAAoC,CAC/C1mE,KAAM,EACNljD,QAAS,GACT/E,MAAO,EACP8nB,IAAK,EACL8mG,gBAAiB,GACjBC,gBAAiB,EACjB18G,KAAM,OACN6pB,UAAW,WAeP8yF,GAqBJ,SAAaC,EAAkB/tH,6BAA8C,IApB7EuE,aAAmC,CACjCypH,eAAgB,IAAIh0G,GACpBi0G,cAAe,IAAIj0G,IAMbzV,WAAO,EACPA,mBAAgB,EAChBA,kBAAe,EACfA,kBAAe,EAUrBwpH,EAAKj0G,QAAQ8wG,cAAct7G,cAAKu7G,GAC1BA,IAAWtmH,GACbA,EAAKq/C,UAENr/C,MAEHnF,IAAMoO,EAAI7N,GAASouH,EAAKG,WAAY,GAEpC3pH,KAAKwpH,KAAOA,EACZxpH,KAAK6N,WAAarS,GAAaC,EAAQ2tH,IACvCppH,KAAK6N,WAAW0U,IAAM3c,KAAK5E,IAAI5F,GAASK,EAAO8mB,IAAKtZ,EAAI,GAAIA,EAAI,GAChEjJ,KAAK6N,WAAW60C,KAAOtnD,GAASK,EAAOinD,KAAM98C,KAAKyvB,MAAMpsB,EAAI,GAAK,MAEjEjJ,KAAK4pH,cAAgB5pH,KAAK6N,WAAWpT,MACrCuF,KAAK6pH,WAA2C,WAA9B7pH,KAAK6N,WAAW4oB,UAAyB,UAAYz2B,KAAK6N,WAAW4oB,UAEvF+yF,EAAKj0G,QAAQ0a,aAAallB,cAAK9B,GAC7BjJ,EAAK6N,WAAW0U,IAAM3c,KAAK5E,IAAI5F,GAAS4E,EAAK6N,WAAW0U,IAAKtZ,EAAI,GAAIA,EAAI,KACxEjJ,MAEHA,KAAK8pH,SAAW9pH,KAAK8pH,SAASv8G,KAAKvN,wCAGrCiL,GAAI8+G,yBAAe,OAAO/pH,KAAKgqH,mBAM/B70E,uBAAe15C,kBAA8C,IAC3DM,GAAaiE,KAAK6N,WAAYpS,QAELF,IAArBE,EAAOg7B,WAAyD,WAA9Bz2B,KAAK6N,WAAW4oB,YACpDz2B,KAAK6pH,WAAa7pH,KAAK6N,WAAW4oB,yBAItCqzF,oBACE,GAAK9pH,KAAKgqH,KAAV,CAEAhqH,KAAKiqH,aAAervH,OAAO2P,YAAY1K,MACvChF,IAAMqvH,EAAKlqH,KAAKiqH,aAAejqH,KAAKmqH,cAC9BznE,EAAO1iD,KAAK6N,WAAWw7G,gBAAkBrpH,KAAK6N,WAAWy7G,gBAAkB,EAC3E9pH,EAAUQ,KAAK6N,WAAWrO,QAAUkjD,EACpC8mE,EAAOxpH,KAAKwpH,KAElB,GAAIA,GAAQA,EAAKG,aAAeH,EAAKY,YAAcF,GAAM1qH,EACvD,GAAIQ,KAAK6N,WAAWw7G,gBAOlB,GANIrpH,KAAKqqH,aAAerqH,KAAK6N,WAAWy7G,kBACtCtpH,KAAKqqH,aAAe,GAEI,IAAtBrqH,KAAKqqH,eACPrqH,KAAK4pH,cAAgB5pH,KAAKsqH,qBAExBd,EAAKe,SAASvqH,KAAK4pH,eAAgB,CACrC5pH,KAAKqqH,cAAgB,EACrBxvH,IAAMqR,EAAIlM,KAAKqqH,cAAgBrqH,KAAK6N,WAAWy7G,gBAAkB,KACtCtpH,KAAK4pH,0CAChCJ,EAAKgB,qBACHnuH,EAAGouH,EAAIC,EAAKC,EAAMz+G,EAAGlM,KAAK6N,WAAWw7G,iBAEvCrpH,KAAKmqH,cAAgBnqH,KAAKiqH,kBAE1BT,EAAKoB,UAAU5qH,KAAK4pH,mBAEjB,CACL/uH,IAAMwB,EAAI2D,KAAK6qH,QACXrB,EAAKe,SAASluH,IAChBmtH,EAAKjD,SAASlqH,GACd2D,KAAKmqH,cAAgBnqH,KAAKiqH,cAE1BT,EAAKoB,UAAUvuH,GAKrBzB,OAAOmP,sBAAsB/J,KAAK8pH,yBAGpCe,iBACEhwH,IACIwB,EADE6R,EAAIlO,KAAK6N,WA+Cf,QA3CExR,EADsB,YAApB2D,KAAK6pH,WACH7pH,KAAKwpH,KAAKsB,aAAe58G,EAAEw0C,KAE3B1iD,KAAKwpH,KAAKsB,aAAe58G,EAAEw0C,MAGzBx0C,EAAEqU,KAAOlmB,EAAI6R,EAAEzT,SACD,WAAhByT,EAAEuoB,YACoB,YAApBz2B,KAAK6pH,WACP7pH,KAAK6pH,WAAa,WAElB7pH,KAAK6pH,WAAa,WAIP,SAAX37G,EAAEtB,MACJ5M,KAAKq/C,QAGHhjD,EADkB,YAAhB6R,EAAEuoB,UACAvoB,EAAEqU,IACmB,aAAhBrU,EAAEuoB,WAGa,YAApBz2B,KAAK6pH,WAFL37G,EAAEzT,MAKAyT,EAAEqU,KAIc,YAApBviB,KAAK6pH,YACPxtH,EAAI6R,EAAEzT,MACFyT,EAAEm7G,kBACJhtH,EAAIuJ,KAAK5E,IAAIkN,EAAEqU,IAAKlmB,EAAI6R,EAAEw0C,SAG5BrmD,EAAI6R,EAAEqU,IACFrU,EAAEm7G,kBACJhtH,EAAIuJ,KAAK3E,IAAIiN,EAAEzT,MAAO4B,EAAI6R,EAAEw0C,SAM7BrmD,gBAGTiuH,6BACEzvH,IAEI4vH,EAAIC,EAAKC,EAFPz8G,EAAIlO,KAAK6N,WACTxR,EAAI2D,KAAK6qH,QAaf,MAVwB,YAApB7qH,KAAK6pH,YACPY,EAAK7kH,KAAK3E,IAAIiN,EAAEzT,MAAO4B,EAAI6R,EAAEw0C,MAC7BgoE,EAAM9kH,KAAK3E,IAAIiN,EAAEzT,MAAO4B,EAAI,EAAI6R,EAAEw0C,MAClCioE,EAAO/kH,KAAK3E,IAAIiN,EAAEzT,MAAO4B,EAAI,EAAI6R,EAAEw0C,QAEnC+nE,EAAK7kH,KAAK5E,IAAIkN,EAAEqU,IAAKlmB,EAAI6R,EAAEw0C,MAC3BgoE,EAAM9kH,KAAK5E,IAAIkN,EAAEqU,IAAKlmB,EAAI,EAAI6R,EAAEw0C,MAChCioE,EAAO/kH,KAAK5E,IAAIkN,EAAEqU,IAAKlmB,EAAI,EAAI6R,EAAEw0C,OAG5B,CAACrmD,EAAGouH,EAAIC,EAAKC,iBAOtBhrE,kBACM3/C,KAAKgqH,KACPhqH,KAAKq/C,QAELr/C,KAAK+qH,qBAQTA,gBACE,IAAK/qH,KAAKgqH,KAAM,CACVhqH,KAAKwpH,KAAKlD,SAAWtmH,MACvBA,KAAKwpH,KAAKwB,UAAUhrH,MAEtBA,KAAKqqH,aAAe,EAEpBxvH,IAAMqT,EAAIlO,KAAK6N,WACTo9G,EAAQjrH,KAAKwpH,KAAKsB,aAIpBzuH,EAAIuJ,KAAKyvB,KAAK41F,EAAQ/8G,EAAEw0C,MAAQx0C,EAAEw0C,KAElB,YAAhBx0C,EAAEuoB,WAA2Bw0F,GAAS/8G,EAAEqU,IAC1ClmB,EAAI6R,EAAEzT,MACmB,aAAhByT,EAAEuoB,WAA4Bw0F,GAAS/8G,EAAEzT,QAClD4B,EAAI6R,EAAEqU,KAGRviB,KAAKwpH,KAAKjD,SAASlqH,GAEnB2D,KAAKgqH,MAAO,EACZhqH,KAAK8pH,WACL9pH,KAAKuV,QAAQk0G,eAAezxG,0BAQhCqnC,iBACEr/C,KAAKgqH,MAAO,EACZhqH,KAAKuV,QAAQm0G,cAAc1xG,yBAO7BrM,gBACE3L,KAAKq/C,QACLr/C,KAAKwpH,KAAKjD,SAASvmH,KAAK6N,WAAWpT,iDCpFvC,IAAMywH,GAiDJ,SAAaC,EAAkBr9G,EAAsBrS,6BAAwC,IAhD7FuE,aAA6B,CAC3BiwB,aAAc,IAAIxa,GAClB2wG,aAAc,IAAI3wG,GAClB4wG,cAAe,IAAI5wG,IAuBrBzV,gBAA4C,GAC5CA,eAAsC,GACtCA,cAA+C,GAC/CA,eAAY,GACZA,oBAAiB,EASTA,iBAAc,EACdA,oBAAiB,EACjBA,gBAAY,EAQlBA,KAAKorH,UAAYhwH,GAASK,EAAO2vH,UAAW,GAC5CprH,KAAKqrH,WAAajwH,GAASK,EAAO4vH,WAAY,GAC9CrrH,KAAKsrH,UAAYlwH,GAASK,EAAO6vH,WAAW,GAC5CtrH,KAAKurH,UAAYnwH,GAASK,EAAO8vH,WAAW,GAC5CvrH,KAAKwrH,kBAAoBpwH,GAASK,EAAO+vH,mBAAmB,GAC5DxrH,KAAKyrH,UAAYrwH,GAASK,EAAOgwH,WAAW,GAE5CzrH,KAAKqK,KAAO8gH,EAASlsH,QAAQ,WAAY,IACzCe,KAAKmrH,SAAWA,EAEhBnrH,KAAKgU,UAAY,IAAIsB,GACnBla,GAASK,EAAOkb,KAAM,8BAGxB3W,KAAKgU,UAAUuB,QAAQC,cAAczK,gBACnC/K,EAAK0rH,iBAAmB1rH,EAAK8N,UAAUyiE,eAAevwE,EAAKgU,WAC3DhU,EAAK2rH,cACL3rH,EAAK4rH,qBACL5rH,EAAKumH,SAASvmH,EAAK4pH,oFAOvB3+G,GAAI0+G,0BACF,OAAO3pH,KAAK6rH,aAMd5gH,GAAI6/G,4BACF,OAAO9qH,KAAK4pH,4BAGdhrE,eAAO9wC,GACL9N,KAAK8rH,aAAah+G,GAClB9N,KAAK+rH,kBACL/rH,KAAKgrH,UAAU,IAAIzB,GAAiBvpH,qBAGtC+rH,0CAEAD,sBAAch+G,GACZ9N,KAAK8N,UAAYA,EACjB9N,KAAK8pB,UAAYhc,EAAUgc,UAE3B9pB,KAAKgsH,gBAAkBhsH,KAAKisH,YAC1B,IAAI32G,GAAU,8BAEhBtV,KAAKksH,mBACLlsH,KAAKmsH,uBAELnsH,KAAK0rH,iBAAmB1rH,KAAKisH,YAAYjsH,KAAKgU,WAC9ChU,KAAK2rH,cACL3rH,KAAK4rH,qBACL5rH,KAAKumH,SAASvmH,KAAK4pH,6BAGrBgC,yCACM5rH,KAAK8N,UAAUosG,aACjBl6G,KAAKosH,cAAgB,IAAItpH,aAAa9C,KAAKqsH,iBAC3CrsH,KAAKssH,wBACItsH,KAAKusH,WAAW,IACzBvsH,KAAKosH,cAAgB,IAAItpH,aAAa9C,KAAKusH,WAAW,IACtDvsH,KAAKssH,wBAELtsH,KAAK4qH,UAAU,qBAAS5qH,EAAK4rH,sCAIjCO,gCAEEnsH,KAAKqsH,gBAAkBrsH,KAAK8N,UAAU+qG,YAD5B,CAAEh0D,KAAM,CAAE58C,UAAU,KACuBA,uBAGvDu7G,sBAAc57G,GAEZ,OADA5H,KAAKgU,UAAU0B,UAAU9N,GAClB5H,mBAGTisH,qBAAaj4G,GACX5X,IAAIC,EAAI,EACFY,EAAO+W,EAAU/W,KACjB4yB,EAAoB,GAS1B,OAPI5yB,GACF+C,KAAK8N,UAAUgb,mBAAUoB,GACnBjtB,EAAKitB,IAAK2F,EAAQpzB,KAAKJ,GAC3BA,GAAK,KAIFwzB,gBAGTy8F,gCACEzxH,IAAMoO,EAAmC,EAA/BjJ,KAAK0rH,iBAAiBpvH,OAEhC0D,KAAK4mH,QAAU,IAAI9jH,aAAamG,GAChCjJ,KAAK6mH,QAAU,IAAI/jH,aAAamG,GAKhC,IAHApO,IAAMkL,EAAI/F,KAAKosH,cACTvF,EAAU7mH,KAAK6mH,QAEZxqH,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAAG,CAC7BxB,IAAM4K,EAAqC,EAAjCzF,KAAK0rH,iBAAkBrvH,EAAI,GAErCwqH,EAASxqH,EAAI,GAAM0J,EAAGN,EAAI,GAC1BohH,EAASxqH,EAAI,GAAM0J,EAAGN,EAAI,GAC1BohH,EAASxqH,EAAI,GAAM0J,EAAGN,EAAI,kBAI9BymH,4BACE7sG,GAAI1X,MAAM,6DAGZgkH,uBACE3rH,KAAKusH,WAAa,GAClBvsH,KAAKwsH,UAAY,GACjBxsH,KAAKysH,SAAW,GAChBzsH,KAAK0sH,UAAY,GACjB1sH,KAAK2sH,eAAiB,EACtB3sH,KAAKosH,cAAgB,IAAItpH,aAAa,iBAGxCqyC,uBAAe15C,kBAAwC,IACrDW,IAAIwwH,GAAa,OAEQrxH,IAArBE,EAAO6vH,WAA2B7vH,EAAO6vH,YAActrH,KAAKsrH,YAC9DtrH,KAAKsrH,UAAY7vH,EAAO6vH,UACxBsB,GAAa,QAGkBrxH,IAA7BE,EAAO+vH,mBAAmC/vH,EAAO+vH,oBAAsBxrH,KAAKwrH,oBAC9ExrH,KAAKwrH,kBAAoB/vH,EAAO+vH,kBAChCoB,GAAa,QAGUrxH,IAArBE,EAAO8vH,WAA2B9vH,EAAO8vH,YAAcvrH,KAAKurH,YAC9DvrH,KAAKurH,UAAY9vH,EAAO8vH,UACxBqB,GAAa,QAGUrxH,IAArBE,EAAOgwH,WAA2BhwH,EAAOgwH,YAAczrH,KAAKyrH,YAC9DzrH,KAAKyrH,UAAYhwH,EAAOgwH,UACxBmB,GAAa,GAGf5sH,KAAKorH,UAAYhwH,GAASK,EAAO2vH,UAAWprH,KAAKorH,WACjDprH,KAAKqrH,WAAajwH,GAASK,EAAO4vH,WAAYrrH,KAAKqrH,YAE/CuB,IACF5sH,KAAK2rH,cACL3rH,KAAKumH,SAASvmH,KAAK4pH,8BASvBW,kBAAUluH,cACR,OAAIE,MAAMC,QAAQH,GACTA,EAAE+kD,gBAAM37C,WAAOzF,EAAKusH,WAAW9mH,QAE7BzF,KAAKusH,WAAWlwH,iBAS7BkqH,kBAAUlqH,EAAW0I,cACnB,YAAUxJ,IAANc,IAEJ2D,KAAKoqH,YAAa,GAIP,IAAP/tH,GAAY2D,KAAKusH,WAAYlwH,IAC/B2D,KAAK6sH,iBAAiBxwH,GAClB0I,GAAUA,KAEd/E,KAAK4qH,UAAUvuH,cACb2D,EAAK6sH,iBAAiBxwH,GAClB0I,GAAUA,QAZU/E,mBAmB9B8sH,sBAAczwH,EAAWouH,EAAYC,EAAaC,EAAcz+G,EAAWlH,GACzEnK,IAEIuU,EAFE29G,EAAK/sH,KAAKusH,WAIdn9G,EADW,WAATpK,EArUR,SAA4BhD,EAAgBozC,EAAiB43E,EAAkBC,EAAmB/gH,GAIhG,IAHArR,IAAMC,EAAIkH,EAAE1F,OACN8S,EAAS,IAAItM,aAAahI,GAEvBoyH,EAAK,EAAGA,EAAKpyH,EAAGoyH,GAAM,EAAG,CAChCryH,IAAMy3D,EAAK46D,EAAK,EACV36D,EAAK26D,EAAK,EAChB99G,EAAQ89G,GAAOrhH,GAAOohH,EAAMC,GAAMF,EAAKE,GAAM93E,EAAI83E,GAAMlrH,EAAGkrH,GAAMhhH,EAAG,GACnEkD,EAAQkjD,GAAOzmD,GAAOohH,EAAM36D,GAAM06D,EAAK16D,GAAMld,EAAIkd,GAAMtwD,EAAGswD,GAAMpmD,EAAG,GACnEkD,EAAQmjD,GAAO1mD,GAAOohH,EAAM16D,GAAMy6D,EAAKz6D,GAAMnd,EAAImd,GAAMvwD,EAAGuwD,GAAMrmD,EAAG,GAGrE,OAAOkD,EA0TM+9G,CAAkBJ,EAAI1wH,GAAK0wH,EAAItC,GAAMsC,EAAIrC,GAAOqC,EAAIpC,GAAQz+G,GAvT3E,SAA0BlK,EAAgBozC,EAAiBlpC,GAIzD,IAHArR,IAAMC,EAAIkH,EAAE1F,OACN8S,EAAS,IAAItM,aAAahI,GAEvBoyH,EAAK,EAAGA,EAAKpyH,EAAGoyH,GAAM,EAAG,CAChCryH,IAAMy3D,EAAK46D,EAAK,EACV36D,EAAK26D,EAAK,EAChB99G,EAAQ89G,GAAOxhH,GAAK0pC,EAAI83E,GAAMlrH,EAAGkrH,GAAMhhH,GACvCkD,EAAQkjD,GAAO5mD,GAAK0pC,EAAIkd,GAAMtwD,EAAGswD,GAAMpmD,GACvCkD,EAAQmjD,GAAO7mD,GAAK0pC,EAAImd,GAAMvwD,EAAGuwD,GAAMrmD,GAGzC,OAAOkD,EA6SMg+G,CAAgBL,EAAI1wH,GAAK0wH,EAAItC,GAAMv+G,GAG9ClM,KAAK8N,UAAU0sG,eAAeprG,GAC9BpP,KAAK4pH,cAAgBvtH,EACrB2D,KAAKuV,QAAQ6wG,aAAapuG,SAAS3b,iBAarCmuH,8BAAsBnuH,EAAWouH,EAAYC,EAAaC,EAAcz+G,EAAWlH,EAAuCD,cACxH,QAAUxJ,IAANc,EAAiB,OAAO2D,KAE5BnF,IAAMkyH,EAAK/sH,KAAKusH,WACVc,EAAkB,GAiBxB,OAfKN,EAAIpC,IAAQ0C,EAAM5wH,KAAKkuH,GACvBoC,EAAIrC,IAAO2C,EAAM5wH,KAAKiuH,GACtBqC,EAAItC,IAAM4C,EAAM5wH,KAAKguH,GACrBsC,EAAI1wH,IAAKgxH,EAAM5wH,KAAKJ,GAErBgxH,EAAM/wH,OACR0D,KAAK4qH,UAAUyC,cACbrtH,EAAK8sH,aAAazwH,EAAGouH,EAAIC,EAAKC,EAAMz+G,EAAGlH,GACnCD,GAAUA,QAGhB/E,KAAK8sH,aAAazwH,EAAGouH,EAAIC,EAAKC,EAAMz+G,EAAGlH,GACnCD,GAAUA,KAGT/E,mBAQT4qH,mBAAWvuH,EAAoB0I,cACzBxI,MAAMC,QAAQH,GAChBA,EAAEic,kBAAQ7S,GACHzF,EAAKwsH,UAAU/mH,IAAOzF,EAAKusH,WAAW9mH,KACzCzF,EAAKwsH,UAAU/mH,IAAK,EACpBzF,EAAKstH,WAAW7nH,qBACPzF,EAAKwsH,UAAU/mH,UAKvBzF,KAAKwsH,UAAUnwH,IAAO2D,KAAKusH,WAAWlwH,KACzC2D,KAAKwsH,UAAUnwH,IAAK,EACpB2D,KAAKstH,WAAWjxH,qBACP2D,EAAKwsH,UAAUnwH,GAClB0I,GAAUA,sBAYtBuoH,oBAAYjxH,EAAW0I,GACrBsa,GAAI1X,MAAM,wCAAyCtL,EAAG0I,iBAGxD8nH,0BAAkBxwH,GACZ2D,KAAKutH,UACPjpH,QAAQqD,MAAM,oCAIL,IAAPtL,EACE2D,KAAKqsH,iBACPrsH,KAAK8N,UAAU0sG,eAAex6G,KAAKqsH,iBAGrCrsH,KAAK8N,UAAU0sG,eAAex6G,KAAKusH,WAAYlwH,IAGjD2D,KAAK8N,UAAU0a,WAAa,CAC1Bne,KAAMrK,KAAKmrH,SACXF,MAAO5uH,GAGT2D,KAAK4pH,cAAgBvtH,EACrB2D,KAAKoqH,YAAa,EAClBpqH,KAAKuV,QAAQ6wG,aAAapuG,SAAS3b,kBAGrCmxH,sBAAc1nH,GAMZ,IALAjL,IAAMoO,EAAmC,EAA/BjJ,KAAK0rH,iBAAiBpvH,OAE1BsqH,EAAU5mH,KAAK4mH,QACfC,EAAU7mH,KAAK6mH,QAEZxqH,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAAG,CAC7BxB,IAAM4K,EAAqC,EAAjCzF,KAAK0rH,iBAAkBrvH,EAAI,GAErCuqH,EAASvqH,EAAI,GAAMyJ,EAAGL,EAAI,GAC1BmhH,EAASvqH,EAAI,GAAMyJ,EAAGL,EAAI,GAC1BmhH,EAASvqH,EAAI,GAAMyJ,EAAGL,EAAI,GAIjB,IAAIghH,GAAcG,EAASC,GACnCvtE,UAAUxzC,iBAGf2nH,kBAAUpxH,EAAW0lC,EAAwB3yB,EAAsBu6G,GAGjE,GAFA3pH,KAAK0tH,eAAe/D,GAEhB5nF,EAAK,CACP,GAAI/hC,KAAKgsH,gBAAgB1vH,OAAS,GAAK0D,KAAKsrH,UAAW,CACrDzwH,IAAM8yH,EAAO,CAAE5rF,EAAK,GAAKA,EAAK,GAAKA,EAAK,IAClC6rF,EAvdd,SAAwB/9F,EAAsBzgB,EAAqB2yB,GACjE,MAAO,CACLnM,GAAaxmB,EAAQ2yB,EAAK,GAAK,EAAG,EAAGlS,GACrC+F,GAAaxmB,EAAQ2yB,EAAK,GAAK,EAAG,EAAGlS,GACrC+F,GAAaxmB,EAAQ2yB,EAAK,GAAK,EAAG,EAAGlS,IAmdhBg+F,CAAc7tH,KAAKgsH,gBAAiB58G,EAAQu+G,IAjiBrE,SAAoBv+G,EAAqBmsE,EAAgBx5C,GACvD,GAAiB,IAAbA,EAAK,IAA0B,IAAbA,EAAK,IAA0B,IAAbA,EAAK,GAiB7C,IAbAlnC,IAAMoO,EAAImG,EAAO9S,OAEXisD,EAAKxmB,EAAK,GACVymB,EAAKzmB,EAAK,GACV0mB,EAAK1mB,EAAK,GAKVszC,GAJKkG,EAAM,GAIAhzB,EAAKA,EAAK,EACrB+sB,GAJKiG,EAAM,GAIA/yB,EAAKA,EAAK,EACrB+sB,GAJKgG,EAAM,GAIA9yB,EAAKA,EAAK,EAElBpsD,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAC1B+S,EAAQ/S,EAAI,IAAO+S,EAAQ/S,EAAI,GAAMg5E,GAAM9sB,EAC3Cn5C,EAAQ/S,EAAI,IAAO+S,EAAQ/S,EAAI,GAAMi5E,GAAM9sB,EAC3Cp5C,EAAQ/S,EAAI,IAAO+S,EAAQ/S,EAAI,GAAMk5E,GAAM9sB,EA6gBvC6iE,CAAUl8G,EAAQw+G,EAAUD,GAG9B,GAAI3tH,KAAKwrH,kBAAmB,CAC1B3wH,IAAM0gF,EApdd,SAAqBnsE,GACnB,MAAO,CACLuoB,GAAUvoB,EAAQ,EAAG,GACrBuoB,GAAUvoB,EAAQ,EAAG,GACrBuoB,GAAUvoB,EAAQ,EAAG,IAgdJ0+G,CAAW1+G,IA9ehC,SAA4BtJ,EAAgBi8B,EAAwBw5C,GAClE,GAAiB,IAAbx5C,EAAK,IAA0B,IAAbA,EAAK,IAA0B,IAAbA,EAAK,GAA7C,CAKA,IADAlnC,IAAMoO,EAAInD,EAAExJ,OACHD,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAC1B,IAAKD,IAAIqJ,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B5K,IAAMsZ,GAAKrO,EAAGzJ,EAAIoJ,GAAM81E,EAAM91E,IAAOs8B,EAAS,EAAJt8B,EAAQA,GAC9CG,KAAKK,IAAIkO,GAAK,KAChBrO,EAAGzJ,EAAIoJ,IAAOs8B,EAAS,EAAJt8B,EAAQA,GAAMG,KAAK+d,MAAMxP,MAqe5Cq3G,CAAkBp8G,EAAQ2yB,EAAKw5C,GAG7Bv7E,KAAKurH,WAjhBf,SAAoBzlH,EAAgBi8B,GAClC,GAAiB,IAAbA,EAAK,IAA0B,IAAbA,EAAK,IAA0B,IAAbA,EAAK,GAA7C,CASA,IAFAlnC,IAAMoO,EAAInD,EAAExJ,OAEHD,EAAI,EAAGA,EAAI4M,EAAG5M,GAAK,EAC1B,IAAKD,IAAIqJ,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B5K,IAAM0yC,EAAOznC,EAAGzJ,EAAIoJ,GAAMK,EAAGzJ,EAAI,EAAIoJ,GAErC,GAAIG,KAAKK,IAAIsnC,GAAQ,GAAMxL,EAAS,EAAJt8B,EAAQA,GACtC,GAAI8nC,EAAO,EACT,IAAKnxC,IAAIonB,EAAI,EAAGA,EAAI,IAAKA,EACvB1d,EAAGzJ,EAAImnB,IAAOue,EAAS,EAAJt8B,EAAQ+d,QAG7B,IAAKpnB,IAAIonB,EAAI,EAAGA,EAAI,IAAKA,EACvB1d,EAAGzJ,EAAImnB,IAAOue,EAAS,EAAJt8B,EAAQ+d,KA6f/B+nG,CAAUn8G,EAAQ2yB,GAIlB/hC,KAAK0rH,iBAAiBpvH,OAAS,GAAK0D,KAAK4mH,SAAW5mH,KAAKyrH,WAC3DzrH,KAAKwtH,aAAap+G,GAGpBpP,KAAKusH,WAAYlwH,GAAM+S,EACvBpP,KAAKysH,SAAUpwH,GAAM0lC,EACrB/hC,KAAK2sH,gBAAkB,gBAGzBe,wBAAgBzkH,GACVA,IAAMjJ,KAAK6rH,cACb7rH,KAAK6rH,YAAc5iH,EACnBjJ,KAAKuV,QAAQ0a,aAAajY,SAAS/O,kBAQvC6a,mBACE9jB,KAAK2rH,cACL3rH,KAAKutH,WAAY,EACbvtH,KAAKsmH,QAAQtmH,KAAKsmH,OAAO36G,qBAO/Bq/G,mBAAW1E,GACTtmH,KAAKsmH,OAASA,EACdtmH,KAAKuV,QAAQ8wG,cAAcruG,SAASsuG,iBAQtCyH,sBAAc1xH,GACZ,OAAO2D,KAAKqrH,WAAahvH,EAAI2D,KAAKorH,oDC9lBtC,IAAM4C,eAQJ,WAAa38F,EAAgBvjB,EAAsBrS,GACjDZ,IAAMqT,EAAIzS,GAAU,GACpByS,EAAEm9G,WAAajwH,GAAS8S,EAAEm9G,WAAYh6F,EAAOg6F,YAC7Cn9G,EAAEk9G,UAAYhwH,GAAS8S,EAAEk9G,UAAW/5F,EAAO+5F,WAE3ChzG,YAAM,GAAItK,EAAWI,GAErBlO,KAAKqK,KAAOgnB,EAAOhnB,KACnBrK,KAAKolB,KAAOiM,EAAOjM,KAEnBplB,KAAKqxB,OAASA,EAAO48F,YACrBjuH,KAAKu3G,MAAQlmF,EAAOkmF,MAEpBv3G,KAAK4+C,MAAM9wC,gIAGb7C,EAAIjG,oBAAU,MAAO,sBAErBknH,4BAC8B,kBAAxBlsH,KAAK8N,UAAU9I,KACjBhF,KAAKmkG,YAAcnkG,KAAK8N,UAAUyiE,iBAElCvwE,KAAKmkG,iBAAc5oG,eAIvB+xH,oBAAYjxH,EAAW0I,GACrB3I,IAAIgT,EACE67G,EAAQjrH,KAAKqxB,OAAQh1B,GAE3B,GAAI2D,KAAKmkG,YAAa,CACpBtpG,IAAMg1B,EAAU7vB,KAAKmkG,YACfrpG,EAAI+0B,EAAQvzB,OAElB8S,EAAS,IAAItM,aAAiB,EAAJhI,GAE1B,IAAKsB,IAAIqJ,EAAI,EAAGA,EAAI3K,IAAK2K,EAAG,CAC1B5K,IAAMovD,EAAS,EAAJxkD,EACL60F,EAAsB,EAAfzqE,EAASpqB,GAEtB2J,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,GACjClrF,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,GACjClrF,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,SAGnClrF,EAAS,IAAItM,aAAamoH,GAG5BpwH,IAAMknC,EAAM/hC,KAAKu3G,MAAOl7G,GAClBstH,EAAa3pH,KAAKqxB,OAAO/0B,OAE/B0D,KAAKytH,SAASpxH,EAAG0lC,EAAK3yB,EAAQu6G,GAEN,mBAAb5kH,GACTA,iBAIJgnH,2BACM/rH,KAAKqxB,QACPrxB,KAAK0tH,eAAe1tH,KAAKqxB,OAAO/0B,mDApEP4uH,ICFzBgD,eAGJ,WAAa/C,EAAkBr9G,EAAsBrS,GACnD2c,YAAM,GAAItK,EAAWrS,GACrBuE,KAAK4+C,MAAM9wC,gIAGb7C,EAAIjG,oBAAU,MAAO,yBAErBknH,4BACMlsH,KAAK8N,UAAU2kD,SAAWzyD,KAAK8N,UAAU2kD,QAAQ7mB,UAAY5rC,KAAK8N,UAAUq2D,UAAU37D,MACxFxI,KAAKmkG,YAAcnkG,KAAK8N,UAAUyiE,iBAElCvwE,KAAKmkG,iBAAc5oG,eAIvB+xH,oBAAYjxH,EAAW0I,GACrB3I,IAAIgT,EACEtB,EAAY9N,KAAK8N,UACjBm9G,EAAQn9G,EAAUujB,OAAQh1B,GAEhC,GAAI2D,KAAKmkG,YAAa,CACpBtpG,IAAMg1B,EAAU7vB,KAAKmkG,YACfrpG,EAAI+0B,EAAQvzB,OAElB8S,EAAS,IAAItM,aAAiB,EAAJhI,GAE1B,IAAKsB,IAAIqJ,EAAI,EAAGA,EAAI3K,IAAK2K,EAAG,CAC1B5K,IAAMovD,EAAS,EAAJxkD,EACL60F,EAAsB,EAAfzqE,EAASpqB,GAEtB2J,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,GACjClrF,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,GACjClrF,EAAQ66C,EAAK,GAAMghE,EAAO3wB,EAAO,SAGnClrF,EAAS,IAAItM,aAAamoH,GAG5BpwH,IAAMknC,EAAMj0B,EAAUypG,MAAOl7G,GACvBstH,EAAa77G,EAAUujB,OAAO/0B,OAEpC0D,KAAKytH,SAASpxH,EAAG0lC,EAAK3yB,EAAQu6G,GAEN,mBAAb5kH,GACTA,iBAIJgnH,2BACE/rH,KAAK0tH,eAAe1tH,KAAK8N,UAAUujB,OAAO/0B,mDApDZ4uH,ICC5BiD,eAGJ,WAAahD,EAAkBr9G,EAAsBrS,GACnD2c,YAAM+yG,EAAUr9G,EAAWrS,GAC3BuE,KAAK4+C,MAAM9wC,gIAGb7C,EAAIjG,oBAAU,MAAO,sBAErBknH,4BACErxH,IAAMspG,EAAc,GAEpB,GAA4B,kBAAxBnkG,KAAK8N,UAAU9I,KAA0B,CAO3C,IANAnK,IAAMg1B,EAAU7vB,KAAK8N,UAAUyiE,iBACzBtnE,EAAI4mB,EAAQvzB,OAEd4R,EAAI2hB,EAAS,GACb9rB,EAAI8rB,EAAS,GAERxzB,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAMyQ,EAAIukB,EAASxzB,GAEf0H,EAAI,EAAIuH,IACV64F,EAAY1nG,KAAK,CAAEyR,EAAGnK,EAAI,IAC1BmK,EAAI5C,GAGNvH,EAAIuH,EAGN64F,EAAY1nG,KAAK,CAAEyR,EAAGnK,EAAI,SAE1BogG,EAAY1nG,KAAK,CAAE,EAAGuD,KAAK8pB,YAG7B9pB,KAAKmkG,YAAcA,eAGrBmpB,oBAAYjxH,EAAW0I,cAGfqpH,EAAU,IAAIzpG,eAEdxnB,EAAM2jB,GAAqButG,YAAYruH,KAAKmrH,SAAU9uH,GACtDZ,EAASqlB,GAAqBwtG,eAAetuH,KAAKmrH,SAAUnrH,KAAKmkG,aAEvEiqB,EAAQhxH,KAAK,OAAQD,GAAK,GAC1BixH,EAAQrpG,aAAe,cACvBqpG,EAAQG,iBACN,eAAgB,qCAGlBH,EAAQtvG,iBAAiB,mBACvBjkB,IAAM2zH,EAAcJ,EAAQvpG,SAC5B,GAAK2pG,EAAL,CAKA3zH,IAAM8uH,EAAa,IAAIjnH,WAAW8rH,EAAa,EAAG,GAAI,GAEhDzsF,EAAM,IAAIj/B,aAAa0rH,EAAa,EAAO,GAC3Cp/G,EAAS,IAAItM,aAAa0rH,EAAa,IAE7CxuH,EAAKytH,SAASpxH,EAAG0lC,EAAK3yB,EAAQu6G,GACN,mBAAb5kH,GACTA,SAXAsa,GAAI1X,gCAAgCxK,UAarC,GAEHixH,EAAQppG,KAAKvpB,gBAGfswH,sCACQqC,EAAU,IAAIzpG,eAEdxnB,EAAM2jB,GAAqB2tG,YAAYzuH,KAAKmrH,UAElDiD,EAAQhxH,KAAK,MAAOD,GAAK,GACzBixH,EAAQtvG,iBAAiB,mBACvB9e,EAAK0tH,eAAe3kH,SAASqlH,EAAQvpG,cACpC,GACHupG,EAAQppG,kDAnFmBkmG,ICCzBwD,eAIJ,WAAaC,EAAkC7gH,EAAsBrS,GACnE2c,YAAM,GAAItK,EAAWrS,GACrBuE,KAAK2uH,gBAAkBA,EACvB3uH,KAAK4+C,MAAM9wC,gIAGb7C,EAAIjG,oBAAU,MAAO,wBAErBknH,4BACErxH,IAAMspG,EAAc,GAEpB,GAA4B,kBAAxBnkG,KAAK8N,UAAU9I,KAA0B,CAO3C,IANAnK,IAAMg1B,EAAU7vB,KAAK8N,UAAUyiE,iBACzBtnE,EAAI4mB,EAAQvzB,OAEd4R,EAAI2hB,EAAS,GACb9rB,EAAI8rB,EAAS,GAERxzB,EAAI,EAAGA,EAAI4M,IAAK5M,EAAG,CAC1BxB,IAAMyQ,EAAIukB,EAASxzB,GAEf0H,EAAI,EAAIuH,IACV64F,EAAY1nG,KAAK,CAAEyR,EAAGnK,EAAI,IAC1BmK,EAAI5C,GAGNvH,EAAIuH,EAGN64F,EAAY1nG,KAAK,CAAEyR,EAAGnK,EAAI,SAE1BogG,EAAY1nG,KAAK,CAAE,EAAGuD,KAAK8pB,YAG7B9pB,KAAKmkG,YAAcA,eAGrBmpB,oBAAYjxH,EAAW0I,cACrB/E,KAAK2uH,0BACFtyH,EAAW0lC,EAAwB3yB,EAAsBu6G,GACxD3pH,EAAKytH,SAASpxH,EAAG0lC,EAAK3yB,EAAQu6G,GACN,mBAAb5kH,GACTA,MAED1I,EAAG2D,KAAKmkG,0BAGf4nB,sCACE/rH,KAAK2uH,0BAAiBnmH,UAAkBxI,EAAK0tH,eAAellH,iDApD/B0iH,ICwBjC3c,GAAU3pG,UAAU+hG,QAAU,SAA2B3yF,GAEvD,OAAO,IAAI46G,GAAc5uH,KAAMgU,IAMjC,IAAM46G,eAQJ,WAAa9gH,EAAsBkG,GACjCoE,aAEApY,KAAK8N,UAAYA,EACjB9N,KAAKgU,UAAYA,EAEjBhU,KAAKu2B,OAAS,IAAI5yB,EAClB3D,KAAKypC,YAAc,IAAI3I,EAEvB9gC,KAAK+hE,IAAM/hE,KAAKgiE,eAChBhiE,KAAKqhG,IAAMrhG,KAAKgO,eAChBhO,KAAK82G,IAAM92G,KAAKy6F,kBAChBz6F,KAAKm3G,IAAMn3G,KAAKg1G,gBAEZh1G,KAAKgU,WACPhU,KAAKgU,UAAUuB,QAAQC,cAAczK,IAAI/K,KAAK6uH,QAAS7uH,MAGzDA,KAAK8N,UAAUyH,QAAQ6hG,UAAUrsG,IAAI/K,KAAK6uH,QAAS7uH,MAEnDA,KAAK6uH,wyBAGPrqE,kBAEAv5C,EAAIjG,oBAAU,MAAO,iBAErBiG,EAAIZ,oBAAU,OAAOrK,KAAK8N,UAAUzD,MACpCY,EAAIma,oBAAU,OAAOplB,KAAK8N,UAAUsX,MACpCna,EAAI2e,qBAAW,OAAO5pB,KAAK8N,UAAU8b,OACrC3e,EAAItQ,kBAAQ,OAAOqF,KAAK8N,UAAUnT,IAClCsQ,EAAI1N,oBAAgB,OAAOyC,KAAK8N,UAAUvQ,MAC1C0N,EAAI0gG,2BAAiB,OAAO3rG,KAAK8N,UAAU69F,aAC3C1gG,EAAIoiG,0BAAyC,OAAOrtG,KAAK8N,UAAUu/F,YACnEpiG,EAAI41F,0BAA0B,OAAO7gG,KAAK8N,UAAU+yF,YACpD51F,EAAIyxC,wBAAkC,OAAO18C,KAAK8N,UAAU4uC,UAC5DzxC,EAAIomB,sBAAY,OAAOrxB,KAAK8N,UAAUujB,QACtCpmB,EAAIssG,qBAAW,OAAOv3G,KAAK8N,UAAUypG,OACrCtsG,EAAIklE,0BAAsC,OAAOnwE,KAAK8N,UAAUqiE,YAChEllE,EAAI0kE,yBAAe,OAAO3vE,KAAK8N,UAAU6hE,WACzC1kE,EAAI6gG,iCAAuB,OAAO9rG,KAAK8N,UAAUg+F,mBACjD7gG,EAAIggG,6BAA8B,OAAOjrG,KAAK8N,UAAUm9F,eACxDhgG,EAAIk5D,yBAA0B,OAAOnkE,KAAK8N,UAAUq2D,WACpDl5D,EAAIu1F,4BAAgC,OAAOxgG,KAAK8N,UAAU0yF,cAC1Dv1F,EAAIs1F,0BAA4B,OAAOvgG,KAAK8N,UAAUyyF,YACtDt1F,EAAI84F,0BAA4B,OAAO/jG,KAAK8N,UAAUi2F,YACtD94F,EAAI89D,uBAAsB,OAAO/oE,KAAK8N,UAAUi7D,SAChD99D,EAAIw1F,0BAA4B,OAAOzgG,KAAK8N,UAAU2yF,YACtDx1F,EAAI21F,wBAAkC,OAAO5gG,KAAK8N,UAAU8yF,UAC5D31F,EAAI85D,2BAAwC,OAAO/kE,KAAK8N,UAAUi3D,aAElE95D,EAAIkvG,0BAAgB,OAAOn6G,KAAK8N,UAAUqsG,YAC1ClvG,EAAIkvG,wBAAY9+G,GAAS2E,KAAK8N,UAAUqsG,WAAa9+G,eAOrDwzH,mBACMluG,IAAOtB,GAAII,KAAK,yBAEpBzf,KAAKs3G,aAAe,GACpBz8G,IAAMiT,EAAY9N,KAAK8N,UAEvB,GAAI9N,KAAKgU,UAAUiE,kBACfnK,IAAc9N,MAAQ8N,EAAU2kD,SAAW3kD,EAAU0pG,QACvD,CAIA,IAAKp7G,IAAIiO,KAHTrK,KAAKyyD,QAAU3kD,EAAU2kD,QAAQpnB,QACjCrrC,KAAKw3G,QAAU1pG,EAAU0pG,QAAQnsE,QAEhBrrC,KAAK2rG,YAAa,CACjC9wG,IAAM43D,EAAUzyD,KAAK2rG,YAAathG,GAClCrK,KAAKs3G,aAAc,KAAOjtG,GAASooD,EAAQpnB,QAG7CrrC,KAAK8pB,UAAYhc,EAAUgc,UAC3B9pB,KAAK+pB,UAAYjc,EAAUic,UAE3B/pB,KAAKypC,YAAY/O,KAAK5sB,EAAU27B,aAChCzpC,KAAKu2B,OAAOmE,KAAK5sB,EAAUyoB,aACtB,GAAIv2B,KAAKgU,UAAUkE,mBACtBpK,IAAc9N,MAAQ8N,EAAU2kD,SAAW3kD,EAAU0pG,QACvD,CAIA,IAAKp7G,IAAIiO,KAHTrK,KAAKyyD,QAAU,IAAIlB,GAASzjD,EAAUgc,WACtC9pB,KAAKw3G,QAAU,IAAIjmD,GAASzjD,EAAUic,WAErB/pB,KAAK2rG,YACpB3rG,KAAKs3G,aAAc,KAAOjtG,GAAS,IAAIknD,GAASzjD,EAAUgc,WAG5D9pB,KAAK8pB,UAAY,EACjB9pB,KAAK+pB,UAAY,EAEjB/pB,KAAKypC,YAAYkC,YACjB3rC,KAAKu2B,OAAO/oB,IAAI,EAAG,EAAG,OACjB,CAQL,IAAKpR,IAAIiO,KAPTrK,KAAKyyD,QAAUzyD,KAAKwuE,WAAWxuE,KAAKgU,WAAW,GAC3ClG,EAAU2kD,UACZzyD,KAAKyyD,QAAUzyD,KAAKyyD,QAAQmC,aAAa9mD,EAAU2kD,UAGrDzyD,KAAKw3G,QAAUx3G,KAAKy3G,aAEHz3G,KAAK2rG,YAAa,CACjC9wG,IAAM43D,EAAUzyD,KAAK2rG,YAAathG,GAClCrK,KAAKs3G,aAAc,KAAOjtG,GAASooD,EAAQsC,iBAAiB/0D,KAAKyyD,SAGnEzyD,KAAK8pB,UAAY9pB,KAAKyyD,QAAQ7mB,UAC9B5rC,KAAK+pB,UAAY/pB,KAAKw3G,QAAQ5rE,UAE9B5rC,KAAKypC,YAAczpC,KAAKqmG,iBACxBrmG,KAAKu2B,OAASv2B,KAAKypC,YAAYwoC,UAAU,IAAItuE,GAG3Cgd,IAAOtB,GAAIK,QAAQ,yBAEvB1f,KAAKuV,QAAQ6hG,UAAUp/F,wBAKzBwrG,sBAAcxvG,GACZhU,KAAKgU,UAAYA,EAEjBhU,KAAK6uH,uBAGPtlG,sBAAcvV,GACZnZ,IAAMi0H,EAAqB,GAEvB96G,GAAaA,EAAUpM,QACzBknH,EAASryH,KAAKuX,EAAUpM,QAG1B/M,IAAMk0H,EAAkB/uH,KAAK8N,UAAUyb,eACnCwlG,GAAmBA,EAAgBnnH,QACrCknH,EAASryH,KAAKsyH,EAAgBnnH,QAG5B5H,KAAKgU,WAAahU,KAAKgU,UAAUpM,QACnCknH,EAASryH,KAAKuD,KAAKgU,UAAUpM,QAG/BxL,IAAIua,EAAO,GAKX,OAJIm4G,EAASxyH,OAAS,IACpBqa,EAAO,KAAKm4G,EAAS1sH,KAAK,mBAGrB,IAAIkT,GAAUqB,gBAGvB6hG,wBACE,OAAOx4G,KAAK8N,UAAU0qG,4BAKxB5tF,kBAAU7lB,EAAsCiP,GAC9ChU,KAAK8N,UAAU8c,SAAS7lB,EAAU/E,KAAKupB,aAAavV,iBAGtD8U,kBAAU/jB,EAAsCiP,GAC9CnZ,IAAMqvB,EAAKlqB,KAAKgO,eACVykD,EAAUzyD,KAAKwuE,WAAWx6D,GAC1B/K,EAAIjJ,KAAKmkE,UAAU37D,MAEzB,GAAIiqD,EAAQ7mB,UAAY3iC,EACtBwpD,EAAQn6C,SAAQ,SAAU3W,GACxBuoB,EAAGvoB,MAAQA,EACXoD,EAASmlB,WAGX,IAAK9tB,IAAIC,EAAI,EAAGA,EAAI4M,IAAK5M,EACvB6tB,EAAGvoB,MAAQtF,EACX0I,EAASmlB,gBAKfk9C,qBAAariE,EAAyCiP,GACpDhU,KAAK8N,UAAUs5D,YAAYriE,EAAU/E,KAAKupB,aAAavV,iBAQzDk2F,sBAAcjhG,EAAWlE,GACvBT,QAAQqD,MAAM,6DAGhBy+F,mBAAWrhG,EAAuCiP,GAChDhU,KAAK8N,UAAUs4F,UAAUrhG,EAAU/E,KAAKupB,aAAavV,iBAGvD6U,mBAAW9jB,EAAuCiP,GAChDhU,KAAK8N,UAAU+a,UAAU9jB,EAAU/E,KAAKupB,aAAavV,iBAKvDw6D,oBAAYx6D,EAAwCg7G,mBAAa,GAC/D5yH,IAAIq2D,EAAUzyD,KAAK8N,UAAU0gE,WAAWx6D,GAKxC,OAJKg7G,GAAchvH,KAAKyyD,UACtBA,EAAUA,EAAQsC,iBAAiB/0D,KAAKyyD,UAGnCA,eAKT8d,wBAAgBv8D,GACd,OAAOhU,KAAK8N,UAAUyiE,eAAevwE,KAAKupB,aAAavV,iBAGzDymG,2BACE,OAAOz6G,KAAK8N,UAAU2sG,+BAKxB32F,mBACM9jB,KAAKgU,WACPhU,KAAKgU,UAAUuB,QAAQC,cAAcob,OAAO5wB,KAAK6uH,QAAS7uH,MAG5DA,KAAK8N,UAAUyH,QAAQ6hG,UAAUxmF,OAAO5wB,KAAK6uH,QAAS7uH,aAE/CA,KAAK8N,iBAEL9N,KAAKyyD,eACLzyD,KAAKw3G,eAELx3G,KAAK8pB,iBACL9pB,KAAK+pB,qDAtPYwkF,IClCtB0gB,GAAY,CAChB,CAAC,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GACxE,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5E,EAAE,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GACzE,EAAE,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACtE,EAAE,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GACxE,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1E,EAAE,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GACxE,EAAE,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACzE,EAAE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACxE,EAAE,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACzE,EAAE,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACxE,EAAE,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACpE,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7E,EAAE,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACrE,EAAE,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GACrE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GACzE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GACxE,EAAE,GAAI,GAAI,GAAI,EAAG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"}